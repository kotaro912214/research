excute 13:47:49.123493 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.128481 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:47:49.131474 line       556                     i = i_j[0]
excute 13:47:49.135464 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:49.139451 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.142475 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 0)
excute 13:47:49.146467 line       556                     i = i_j[0]
excute 13:47:49.149459 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:49.153446 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.157405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:47:49.160427 line       556                     i = i_j[0]
excute 13:47:49.164417 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:49.168374 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.171397 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:47:49.175387 line       556                     i = i_j[0]
excute 13:47:49.178381 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:49.182368 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.186327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:47:49.189352 line       556                     i = i_j[0]
excute 13:47:49.193309 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:49.196332 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.200321 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:47:49.204280 line       556                     i = i_j[0]
excute 13:47:49.209267 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:49.212258 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.216247 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 1)
excute 13:47:49.220236 line       556                     i = i_j[0]
excute 13:47:49.224227 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:49.227218 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.231207 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 2)
excute 13:47:49.235197 line       556                     i = i_j[0]
excute 13:47:49.239186 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:49.243175 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.247165 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:49.251154 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:49.255153 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:49.260131 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.264118 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:49.267111 line       556                     i = i_j[0]
excute 13:47:49.271101 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:49.275090 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.279080 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:49.284065 line       556                     i = i_j[0]
excute 13:47:49.288053 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:49.293042 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.297039 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:47:49.301021 line       556                     i = i_j[0]
excute 13:47:49.307003 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:49.311990 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.315978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:47:49.319969 line       556                     i = i_j[0]
excute 13:47:49.323959 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:49.331953 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.340916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:49.345898 line       556                     i = i_j[0]
excute 13:47:49.351886 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:49.355883 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.360861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:49.364850 line       556                     i = i_j[0]
excute 13:47:49.368839 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:49.372828 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.377831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 1)
excute 13:47:49.381803 line       556                     i = i_j[0]
excute 13:47:49.387787 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:49.394771 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.399755 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 2)
excute 13:47:49.403744 line       556                     i = i_j[0]
excute 13:47:49.408734 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:49.415714 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:49.419702 line       555                 for i_j in i_j_list:
excute 13:47:49.424688 line       581             self.write_matrix(
excute 13:47:49.428681 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:49.432668 line       583                 result_file_path,
excute 13:47:49.436656 line       584                 mode='a'
excute 13:47:49.443640 line       488         for t in time_steps:
excute Modified var:.. t = 120
excute 13:47:49.450619 line       489             if (t != self.TIME + 1):
excute 13:47:49.455606 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:49.459596 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:49.466576 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:49.471563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:49.478547 line       494                         if (i == j):
excute 13:47:49.484530 line       495                             continue
excute 13:47:49.489516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:49.495501 line       494                         if (i == j):
excute 13:47:49.500487 line       496                         i_j_list.append((
excute 13:47:49.506470 line       497                             i, j,
excute 13:47:49.515446 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.526424 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:47:49.532402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:49.542375 line       494                         if (i == j):
excute 13:47:49.549356 line       496                         i_j_list.append((
excute 13:47:49.555340 line       497                             i, j,
excute 13:47:49.562320 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.567307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:47:49.573292 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:49.581271 line       494                         if (i == j):
excute 13:47:49.587255 line       496                         i_j_list.append((
excute 13:47:49.594236 line       497                             i, j,
excute 13:47:49.599222 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.604208 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1)]
excute 13:47:49.611191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:49.627147 line       494                         if (i == j):
excute 13:47:49.636123 line       496                         i_j_list.append((
excute 13:47:49.640114 line       497                             i, j,
excute 13:47:49.645100 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.651086 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0)]
excute 13:47:49.657067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:49.663051 line       494                         if (i == j):
excute 13:47:49.668040 line       496                         i_j_list.append((
excute 13:47:49.672027 line       497                             i, j,
excute 13:47:49.676016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.680006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1)]
excute 13:47:49.683996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:49.689981 line       494                         if (i == j):
excute 13:47:49.694966 line       496                         i_j_list.append((
excute 13:47:49.699953 line       497                             i, j,
excute 13:47:49.704942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.711921 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1)]
excute 13:47:49.719900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:49.729873 line       494                         if (i == j):
excute 13:47:49.738849 line       496                         i_j_list.append((
excute 13:47:49.744834 line       497                             i, j,
excute 13:47:49.748823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.754808 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0)]
excute 13:47:49.761788 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:49.766774 line       494                         if (i == j):
excute 13:47:49.772759 line       496                         i_j_list.append((
excute 13:47:49.775751 line       497                             i, j,
excute 13:47:49.778744 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.782732 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:47:49.790709 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:49.794702 line       494                         if (i == j):
excute 13:47:49.797692 line       496                         i_j_list.append((
excute 13:47:49.801681 line       497                             i, j,
excute 13:47:49.805671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.808663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2)]
excute 13:47:49.811655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:49.815644 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:49.818637 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:49.824621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:49.831602 line       494                         if (i == j):
excute 13:47:49.836587 line       496                         i_j_list.append((
excute 13:47:49.840576 line       497                             i, j,
excute 13:47:49.844568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.848557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0)]
excute 13:47:49.852544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:49.857532 line       494                         if (i == j):
excute 13:47:49.862518 line       495                             continue
excute 13:47:49.866507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:49.870498 line       494                         if (i == j):
excute 13:47:49.875485 line       496                         i_j_list.append((
excute 13:47:49.879474 line       497                             i, j,
excute 13:47:49.883462 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.889449 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:47:49.896427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:49.904408 line       494                         if (i == j):
excute 13:47:49.908411 line       496                         i_j_list.append((
excute 13:47:49.911388 line       497                             i, j,
excute 13:47:49.915378 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.919367 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1)]
excute 13:47:49.923355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:49.928343 line       494                         if (i == j):
excute 13:47:49.933328 line       496                         i_j_list.append((
excute 13:47:49.937320 line       497                             i, j,
excute 13:47:49.942304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.945299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0)]
excute 13:47:49.950283 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:49.955275 line       494                         if (i == j):
excute 13:47:49.959260 line       496                         i_j_list.append((
excute 13:47:49.962252 line       497                             i, j,
excute 13:47:49.966242 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:49.970230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1)]
excute 13:47:49.975217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:49.979208 line       494                         if (i == j):
excute 13:47:49.986189 line       496                         i_j_list.append((
excute 13:47:49.992172 line       497                             i, j,
excute 13:47:49.997158 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.003142 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1)]
excute 13:47:50.009126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:50.014112 line       494                         if (i == j):
excute 13:47:50.019103 line       496                         i_j_list.append((
excute 13:47:50.024086 line       497                             i, j,
excute 13:47:50.028077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.034061 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0)]
excute 13:47:50.037052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:50.041043 line       494                         if (i == j):
excute 13:47:50.045031 line       496                         i_j_list.append((
excute 13:47:50.048021 line       497                             i, j,
excute 13:47:50.051014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.055005 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:47:50.058994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:50.064977 line       494                         if (i == j):
excute 13:47:50.070962 line       496                         i_j_list.append((
excute 13:47:50.074950 line       497                             i, j,
excute 13:47:50.078940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.082929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2)]
excute 13:47:50.088913 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:50.093901 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:50.097897 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:50.102875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:50.106866 line       494                         if (i == j):
excute 13:47:50.110856 line       496                         i_j_list.append((
excute 13:47:50.114878 line       497                             i, j,
excute 13:47:50.117867 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.122822 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0)]
excute 13:47:50.126812 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:50.131797 line       494                         if (i == j):
excute 13:47:50.141775 line       496                         i_j_list.append((
excute 13:47:50.147764 line       497                             i, j,
excute 13:47:50.151746 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.157731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0)]
excute 13:47:50.163713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:50.172690 line       494                         if (i == j):
excute 13:47:50.182689 line       495                             continue
excute 13:47:50.187648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:50.191638 line       494                         if (i == j):
excute 13:47:50.195628 line       496                         i_j_list.append((
excute 13:47:50.201612 line       497                             i, j,
excute 13:47:50.208593 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.214577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1)]
excute 13:47:50.218568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:50.222556 line       494                         if (i == j):
excute 13:47:50.226545 line       496                         i_j_list.append((
excute 13:47:50.229537 line       497                             i, j,
excute 13:47:50.233527 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.236518 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0)]
excute 13:47:50.240509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:50.245495 line       494                         if (i == j):
excute 13:47:50.249486 line       496                         i_j_list.append((
excute 13:47:50.253475 line       497                             i, j,
excute 13:47:50.257464 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.260481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1)]
excute 13:47:50.265442 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:50.269431 line       494                         if (i == j):
excute 13:47:50.273421 line       496                         i_j_list.append((
excute 13:47:50.277410 line       497                             i, j,
excute 13:47:50.281430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.284421 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1)]
excute 13:47:50.287416 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:50.291391 line       494                         if (i == j):
excute 13:47:50.295363 line       496                         i_j_list.append((
excute 13:47:50.299352 line       497                             i, j,
excute 13:47:50.302344 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.306333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0)]
excute 13:47:50.310322 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:50.314314 line       494                         if (i == j):
excute 13:47:50.318300 line       496                         i_j_list.append((
excute 13:47:50.322300 line       497                             i, j,
excute 13:47:50.326280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.334258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:47:50.340241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:50.345229 line       494                         if (i == j):
excute 13:47:50.349217 line       496                         i_j_list.append((
excute 13:47:50.354203 line       497                             i, j,
excute 13:47:50.358194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.361187 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2)]
excute 13:47:50.365176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:50.370164 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:50.374150 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:50.377145 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:50.381133 line       494                         if (i == j):
excute 13:47:50.387116 line       496                         i_j_list.append((
excute 13:47:50.390109 line       497                             i, j,
excute 13:47:50.393100 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.397090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0)]
excute 13:47:50.400082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:50.405068 line       494                         if (i == j):
excute 13:47:50.408062 line       496                         i_j_list.append((
excute 13:47:50.412052 line       497                             i, j,
excute 13:47:50.415043 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.419031 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:47:50.423022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:50.426012 line       494                         if (i == j):
excute 13:47:50.430002 line       496                         i_j_list.append((
excute 13:47:50.433992 line       497                             i, j,
excute 13:47:50.437014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.440007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:47:50.443988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:50.448952 line       494                         if (i == j):
excute 13:47:50.452942 line       495                             continue
excute 13:47:50.455962 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:50.459941 line       494                         if (i == j):
excute 13:47:50.465907 line       496                         i_j_list.append((
excute 13:47:50.470891 line       497                             i, j,
excute 13:47:50.473885 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.477874 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:47:50.481864 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:50.485853 line       494                         if (i == j):
excute 13:47:50.489843 line       496                         i_j_list.append((
excute 13:47:50.493831 line       497                             i, j,
excute 13:47:50.496824 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.500813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1)]
excute 13:47:50.504833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:50.508792 line       494                         if (i == j):
excute 13:47:50.512784 line       496                         i_j_list.append((
excute 13:47:50.515803 line       497                             i, j,
excute 13:47:50.519762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.522785 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1)]
excute 13:47:50.525776 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:50.529736 line       494                         if (i == j):
excute 13:47:50.533759 line       496                         i_j_list.append((
excute 13:47:50.536748 line       497                             i, j,
excute 13:47:50.539739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.543728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0)]
excute 13:47:50.546720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:50.551709 line       494                         if (i == j):
excute 13:47:50.556673 line       496                         i_j_list.append((
excute 13:47:50.559687 line       497                             i, j,
excute 13:47:50.562677 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.566670 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:50.569663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:50.573618 line       494                         if (i == j):
excute 13:47:50.577642 line       496                         i_j_list.append((
excute 13:47:50.580630 line       497                             i, j,
excute 13:47:50.583621 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.586615 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2)]
excute 13:47:50.590606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:50.593598 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:50.597586 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:50.600576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:50.604534 line       494                         if (i == j):
excute 13:47:50.607557 line       496                         i_j_list.append((
excute 13:47:50.611547 line       497                             i, j,
excute 13:47:50.614507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.618499 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0)]
excute 13:47:50.621490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:50.626478 line       494                         if (i == j):
excute 13:47:50.630467 line       496                         i_j_list.append((
excute 13:47:50.634457 line       497                             i, j,
excute 13:47:50.637448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.641437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:47:50.644429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:50.649416 line       494                         if (i == j):
excute 13:47:50.655399 line       496                         i_j_list.append((
excute 13:47:50.659388 line       497                             i, j,
excute 13:47:50.666370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.669363 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:47:50.676342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:50.680333 line       494                         if (i == j):
excute 13:47:50.684322 line       496                         i_j_list.append((
excute 13:47:50.687344 line       497                             i, j,
excute 13:47:50.690336 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.694294 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1)]
excute 13:47:50.697321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:50.701282 line       494                         if (i == j):
excute 13:47:50.705266 line       495                             continue
excute 13:47:50.708288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:50.712253 line       494                         if (i == j):
excute 13:47:50.716237 line       496                         i_j_list.append((
excute 13:47:50.719259 line       497                             i, j,
excute 13:47:50.722251 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.726243 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1)]
excute 13:47:50.729200 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:50.733191 line       494                         if (i == j):
excute 13:47:50.737180 line       496                         i_j_list.append((
excute 13:47:50.740171 line       497                             i, j,
excute 13:47:50.744161 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.748150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1)]
excute 13:47:50.755133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:50.761117 line       494                         if (i == j):
excute 13:47:50.768100 line       496                         i_j_list.append((
excute 13:47:50.775079 line       497                             i, j,
excute 13:47:50.779067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.782061 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0)]
excute 13:47:50.786050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:50.790040 line       494                         if (i == j):
excute 13:47:50.794029 line       496                         i_j_list.append((
excute 13:47:50.798019 line       497                             i, j,
excute 13:47:50.801011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.804002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:47:50.807992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:50.811981 line       494                         if (i == j):
excute 13:47:50.815973 line       496                         i_j_list.append((
excute 13:47:50.819960 line       497                             i, j,
excute 13:47:50.822952 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.826941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2)]
excute 13:47:50.830931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:50.834919 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:50.837912 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:50.841901 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:50.845890 line       494                         if (i == j):
excute 13:47:50.849880 line       496                         i_j_list.append((
excute 13:47:50.853870 line       497                             i, j,
excute 13:47:50.858855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.861848 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0)]
excute 13:47:50.865837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:50.869827 line       494                         if (i == j):
excute 13:47:50.873816 line       496                         i_j_list.append((
excute 13:47:50.877805 line       497                             i, j,
excute 13:47:50.881795 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.885783 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:47:50.888776 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:50.892766 line       494                         if (i == j):
excute 13:47:50.896755 line       496                         i_j_list.append((
excute 13:47:50.899747 line       497                             i, j,
excute 13:47:50.903736 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.907725 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:47:50.910718 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:50.914708 line       494                         if (i == j):
excute 13:47:50.918698 line       496                         i_j_list.append((
excute 13:47:50.922685 line       497                             i, j,
excute 13:47:50.926673 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.929666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1)]
excute 13:47:50.932658 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:50.936649 line       494                         if (i == j):
excute 13:47:50.941634 line       496                         i_j_list.append((
excute 13:47:50.944626 line       497                             i, j,
excute 13:47:50.949615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.952604 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0)]
excute 13:47:50.956595 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:50.960583 line       494                         if (i == j):
excute 13:47:50.966569 line       495                             continue
excute 13:47:50.969560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:50.973549 line       494                         if (i == j):
excute 13:47:50.977569 line       496                         i_j_list.append((
excute 13:47:50.980560 line       497                             i, j,
excute 13:47:50.984553 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:50.987541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1)]
excute 13:47:50.990533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:50.994523 line       494                         if (i == j):
excute 13:47:50.998483 line       496                         i_j_list.append((
excute 13:47:51.001504 line       497                             i, j,
excute 13:47:51.005464 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.008457 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0)]
excute 13:47:51.012448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:51.015468 line       494                         if (i == j):
excute 13:47:51.019457 line       496                         i_j_list.append((
excute 13:47:51.022449 line       497                             i, j,
excute 13:47:51.026438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.029432 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:47:51.032425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:51.036411 line       494                         if (i == j):
excute 13:47:51.040371 line       496                         i_j_list.append((
excute 13:47:51.043392 line       497                             i, j,
excute 13:47:51.046385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.050374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2)]
excute 13:47:51.053369 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:51.057355 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:51.061314 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:51.065303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:51.069327 line       494                         if (i == j):
excute 13:47:51.073282 line       496                         i_j_list.append((
excute 13:47:51.077272 line       497                             i, j,
excute 13:47:51.080264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.084256 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0)]
excute 13:47:51.088242 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:51.091265 line       494                         if (i == j):
excute 13:47:51.095256 line       496                         i_j_list.append((
excute 13:47:51.099214 line       497                             i, j,
excute 13:47:51.102205 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.106195 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:47:51.109186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:51.114172 line       494                         if (i == j):
excute 13:47:51.117166 line       496                         i_j_list.append((
excute 13:47:51.120158 line       497                             i, j,
excute 13:47:51.124147 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.128139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:47:51.131158 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:51.135149 line       494                         if (i == j):
excute 13:47:51.139137 line       496                         i_j_list.append((
excute 13:47:51.142132 line       497                             i, j,
excute 13:47:51.146118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.149112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1)]
excute 13:47:51.152105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:51.156093 line       494                         if (i == j):
excute 13:47:51.160050 line       496                         i_j_list.append((
excute 13:47:51.164040 line       497                             i, j,
excute 13:47:51.168031 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.172049 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0)]
excute 13:47:51.175041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:51.179007 line       494                         if (i == j):
excute 13:47:51.182992 line       496                         i_j_list.append((
excute 13:47:51.186011 line       497                             i, j,
excute 13:47:51.189969 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.192993 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1)]
excute 13:47:51.195984 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:51.199978 line       494                         if (i == j):
excute 13:47:51.203932 line       495                             continue
excute 13:47:51.206956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:51.210944 line       494                         if (i == j):
excute 13:47:51.213937 line       496                         i_j_list.append((
excute 13:47:51.217926 line       497                             i, j,
excute 13:47:51.220920 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.223913 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0)]
excute 13:47:51.227900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:51.230891 line       494                         if (i == j):
excute 13:47:51.234882 line       496                         i_j_list.append((
excute 13:47:51.237872 line       497                             i, j,
excute 13:47:51.241862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.244856 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:47:51.248814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:51.252836 line       494                         if (i == j):
excute 13:47:51.256793 line       496                         i_j_list.append((
excute 13:47:51.260815 line       497                             i, j,
excute 13:47:51.263806 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.267762 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2)]
excute 13:47:51.272749 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:51.276740 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:51.279731 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:51.283720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:51.287709 line       494                         if (i == j):
excute 13:47:51.291699 line       496                         i_j_list.append((
excute 13:47:51.295688 line       497                             i, j,
excute 13:47:51.298680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.301672 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0)]
excute 13:47:51.305661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:51.309651 line       494                         if (i == j):
excute 13:47:51.313639 line       496                         i_j_list.append((
excute 13:47:51.317630 line       497                             i, j,
excute 13:47:51.320621 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.324609 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:47:51.336579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:51.343560 line       494                         if (i == j):
excute 13:47:51.353532 line       496                         i_j_list.append((
excute 13:47:51.361511 line       497                             i, j,
excute 13:47:51.365501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.371485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:47:51.377472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:51.386444 line       494                         if (i == j):
excute 13:47:51.391431 line       496                         i_j_list.append((
excute 13:47:51.397416 line       497                             i, j,
excute 13:47:51.406395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.409383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1)]
excute 13:47:51.413372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:51.422354 line       494                         if (i == j):
excute 13:47:51.427370 line       496                         i_j_list.append((
excute 13:47:51.431325 line       497                             i, j,
excute 13:47:51.440333 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.444290 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0)]
excute 13:47:51.451271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:51.461245 line       494                         if (i == j):
excute 13:47:51.469223 line       496                         i_j_list.append((
excute 13:47:51.477202 line       497                             i, j,
excute 13:47:51.485182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.492161 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1)]
excute 13:47:51.500140 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:51.506125 line       494                         if (i == j):
excute 13:47:51.514103 line       496                         i_j_list.append((
excute 13:47:51.521083 line       497                             i, j,
excute 13:47:51.529063 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.537042 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1)]
excute 13:47:51.542030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:51.548012 line       494                         if (i == j):
excute 13:47:51.555992 line       495                             continue
excute 13:47:51.563970 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:51.569954 line       494                         if (i == j):
excute 13:47:51.577932 line       496                         i_j_list.append((
excute 13:47:51.586909 line       497                             i, j,
excute 13:47:51.594887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.601869 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0)]
excute 13:47:51.606854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:51.612839 line       494                         if (i == j):
excute 13:47:51.618823 line       496                         i_j_list.append((
excute 13:47:51.624807 line       497                             i, j,
excute 13:47:51.630790 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.637775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2)]
excute 13:47:51.644754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:51.651735 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:51.659714 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:51.667692 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:51.674673 line       494                         if (i == j):
excute 13:47:51.681656 line       496                         i_j_list.append((
excute 13:47:51.689633 line       497                             i, j,
excute 13:47:51.696615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.701602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0)]
excute 13:47:51.709580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:51.718557 line       494                         if (i == j):
excute 13:47:51.725539 line       496                         i_j_list.append((
excute 13:47:51.734513 line       497                             i, j,
excute 13:47:51.743489 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.752466 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:47:51.760445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:51.769421 line       494                         if (i == j):
excute 13:47:51.776402 line       496                         i_j_list.append((
excute 13:47:51.784381 line       497                             i, j,
excute 13:47:51.788370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.793356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:47:51.797346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:51.801335 line       494                         if (i == j):
excute 13:47:51.804327 line       496                         i_j_list.append((
excute 13:47:51.808317 line       497                             i, j,
excute 13:47:51.811308 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.814300 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1)]
excute 13:47:51.818290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:51.822279 line       494                         if (i == j):
excute 13:47:51.826270 line       496                         i_j_list.append((
excute 13:47:51.829260 line       497                             i, j,
excute 13:47:51.832252 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.836242 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0)]
excute 13:47:51.839265 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:51.843224 line       494                         if (i == j):
excute 13:47:51.847213 line       496                         i_j_list.append((
excute 13:47:51.850236 line       497                             i, j,
excute 13:47:51.853229 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.857217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1)]
excute 13:47:51.860210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:51.864166 line       494                         if (i == j):
excute 13:47:51.868157 line       496                         i_j_list.append((
excute 13:47:51.871179 line       497                             i, j,
excute 13:47:51.875139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.879128 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1)]
excute 13:47:51.883118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:51.887120 line       494                         if (i == j):
excute 13:47:51.891120 line       496                         i_j_list.append((
excute 13:47:51.895085 line       497                             i, j,
excute 13:47:51.899075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.903065 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0)]
excute 13:47:51.907053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:51.911042 line       494                         if (i == j):
excute 13:47:51.915032 line       495                             continue
excute 13:47:51.920018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:51.923045 line       494                         if (i == j):
excute 13:47:51.927030 line       496                         i_j_list.append((
excute 13:47:51.931001 line       497                             i, j,
excute 13:47:51.934015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.937004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 2)]
excute 13:47:51.940995 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:51.944959 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:51.948942 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:51.953929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:51.957953 line       494                         if (i == j):
excute 13:47:51.961906 line       496                         i_j_list.append((
excute 13:47:51.968888 line       497                             i, j,
excute 13:47:51.971910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.975903 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 0, 0)]
excute 13:47:51.979890 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:51.983849 line       494                         if (i == j):
excute 13:47:51.987837 line       496                         i_j_list.append((
excute 13:47:51.990859 line       497                             i, j,
excute 13:47:51.994852 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:51.998838 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 0, 0), (9, 1, 0, 0)]
excute 13:47:52.002831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:52.006787 line       494                         if (i == j):
excute 13:47:52.010786 line       496                         i_j_list.append((
excute 13:47:52.013801 line       497                             i, j,
excute 13:47:52.017788 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:52.020779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0)]
excute 13:47:52.024769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:52.027761 line       494                         if (i == j):
excute 13:47:52.031750 line       496                         i_j_list.append((
excute 13:47:52.035741 line       497                             i, j,
excute 13:47:52.038733 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:52.041724 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 1)]
excute 13:47:52.045717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:52.049672 line       494                         if (i == j):
excute 13:47:52.053667 line       496                         i_j_list.append((
excute 13:47:52.057651 line       497                             i, j,
excute 13:47:52.060643 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:52.064632 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 1), (9, 4, 0, 0)]
excute 13:47:52.068622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:52.072612 line       494                         if (i == j):
excute 13:47:52.076600 line       496                         i_j_list.append((
excute 13:47:52.080590 line       497                             i, j,
excute 13:47:52.083582 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:52.087571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 1), (9, 4, 0, 0), (9, 5, 0, 1)]
excute 13:47:52.091561 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:52.095551 line       494                         if (i == j):
excute 13:47:52.100536 line       496                         i_j_list.append((
excute 13:47:52.103559 line       497                             i, j,
excute 13:47:52.106553 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:52.110543 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 1), (9, 4, 0, 0), (9, 5, 0, 1), (9, 6, 0, 1)]
excute 13:47:52.113531 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:52.117525 line       494                         if (i == j):
excute 13:47:52.121480 line       496                         i_j_list.append((
excute 13:47:52.124502 line       497                             i, j,
excute 13:47:52.128492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:52.131484 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 1), (9, 4, 0, 0), (9, 5, 0, 1), (9, 6, 0, 1), (9, 7, 0, 0)]
excute 13:47:52.135474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:52.139463 line       494                         if (i == j):
excute 13:47:52.143422 line       496                         i_j_list.append((
excute 13:47:52.146445 line       497                             i, j,
excute 13:47:52.150433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:52.153425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 1), (2, 6, 1, 1), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 2), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 1), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 2), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 1), (9, 4, 0, 0), (9, 5, 0, 1), (9, 6, 0, 1), (9, 7, 0, 0), (9, 8, 0, 0)]
excute 13:47:52.157418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:52.161398 line       494                         if (i == j):
excute 13:47:52.165363 line       495                             continue
excute 13:47:52.168386 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:52.172343 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:52.175366 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 4, -2, 0), (7, 8, -2, 0), (7, 3, -2, 1), (7, 5, -2, 1), (7, 6, -2, 1), (7, 9, -2, 2), (0, 1, -1, 0), (0, 2, -1, 0), (0, 4, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 3, -1, 1), (0, 5, -1, 1), (0, 6, -1, 1), (0, 9, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 4, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 4, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 4, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 4, 0, 0), (8, 7, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 4, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0), (1, 3, 0, 1), (1, 5, 0, 1), (1, 6, 0, 1), (4, 3, 0, 1), (4, 5, 0, 1), (4, 6, 0, 1), (5, 3, 0, 1), (5, 6, 0, 1), (6, 3, 0, 1), (6, 5, 0, 1), (8, 3, 0, 1), (8, 5, 0, 1), (8, 6, 0, 1), (9, 3, 0, 1), (9, 5, 0, 1), (9, 6, 0, 1), (1, 9, 0, 2), (4, 9, 0, 2), (5, 9, 0, 2), (6, 9, 0, 2), (8, 9, 0, 2), (2, 0, 1, 0), (2, 1, 1, 0), (2, 4, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 3, 1, 1), (2, 5, 1, 1), (2, 6, 1, 1), (2, 9, 1, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 5, 10, 1), (3, 6, 10, 1), (3, 9, 10, 2)]
excute 13:47:52.178360 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:52.182349 line       505                     if (self.RELOCATE):
excute 13:47:52.186339 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:52.190296 line       505                     if (self.RELOCATE):
excute 13:47:52.193318 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:52.197304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:47:52.201270 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:52.206268 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:52.210243 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.214242 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:47:52.217254 line       556                     i = i_j[0]
excute 13:47:52.222210 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:52.225233 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.229206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:47:52.232214 line       556                     i = i_j[0]
excute 13:47:52.236174 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:52.239196 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.243171 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:47:52.246181 line       556                     i = i_j[0]
excute 13:47:52.250173 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:52.254157 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.258115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:47:52.262103 line       556                     i = i_j[0]
excute 13:47:52.265126 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:52.269109 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.272108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 1)
excute 13:47:52.277082 line       556                     i = i_j[0]
excute 13:47:52.280086 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:52.284076 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.288068 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 1)
excute 13:47:52.291057 line       556                     i = i_j[0]
excute 13:47:52.295016 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:52.298040 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.301997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 1)
excute 13:47:52.308012 line       556                     i = i_j[0]
excute 13:47:52.311972 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:52.314993 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.318952 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 2)
excute 13:47:52.322941 line       556                     i = i_j[0]
excute 13:47:52.330919 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:52.337901 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.341891 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 129
excute 13:47:52.345880 line       560                         if (t_tmp > self.TIME):
excute 13:47:52.350871 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:52.357879 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:52.360871 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 154
excute 13:47:52.364863 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:52.368820 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:47:52.373805 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:52.377808 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:52.381784 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.386802 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:47:52.390791 line       556                     i = i_j[0]
excute 13:47:52.394789 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:52.397772 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.401730 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:47:52.406717 line       556                     i = i_j[0]
excute 13:47:52.411705 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:52.415694 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.419687 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:47:52.423673 line       556                     i = i_j[0]
excute 13:47:52.427663 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:52.432648 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.435671 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:47:52.439660 line       556                     i = i_j[0]
excute 13:47:52.443618 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:52.447609 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.451599 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 1)
excute 13:47:52.456585 line       556                     i = i_j[0]
excute 13:47:52.460575 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:52.463566 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.468554 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 1)
excute 13:47:52.471575 line       556                     i = i_j[0]
excute 13:47:52.475566 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:52.478556 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.482545 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 1)
excute 13:47:52.486502 line       556                     i = i_j[0]
excute 13:47:52.493485 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:52.497475 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.505453 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 2)
excute 13:47:52.513431 line       556                     i = i_j[0]
excute 13:47:52.519416 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:52.523408 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.526429 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:47:52.530419 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:52.533409 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:52.537401 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.541390 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:47:52.544379 line       556                     i = i_j[0]
excute 13:47:52.548373 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:52.552328 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.556318 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:47:52.559339 line       556                     i = i_j[0]
excute 13:47:52.566304 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:52.569316 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.573272 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:47:52.577260 line       556                     i = i_j[0]
excute 13:47:52.580287 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:52.584264 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.587265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:47:52.591223 line       556                     i = i_j[0]
excute 13:47:52.595214 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:52.598204 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.603192 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:47:52.610198 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:52.616157 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:52.620146 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.624138 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:47:52.627159 line       556                     i = i_j[0]
excute 13:47:52.631135 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:52.635138 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.639096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:47:52.642118 line       556                     i = i_j[0]
excute 13:47:52.646078 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:52.649103 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.653059 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:47:52.657048 line       556                     i = i_j[0]
excute 13:47:52.660074 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:52.664060 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.668052 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:47:52.672009 line       556                     i = i_j[0]
excute 13:47:52.676000 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:52.679020 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.682979 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:47:52.686002 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:52.689964 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:52.693981 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.697938 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:47:52.701955 line       556                     i = i_j[0]
excute 13:47:52.704953 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:52.708945 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.712899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:47:52.717888 line       556                     i = i_j[0]
excute 13:47:52.721876 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:52.725863 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.731848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:47:52.734841 line       556                     i = i_j[0]
excute 13:47:52.738830 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:52.742820 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.746809 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:47:52.749800 line       556                     i = i_j[0]
excute 13:47:52.753789 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:52.758777 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.762798 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:47:52.766754 line       556                     i = i_j[0]
excute 13:47:52.769745 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:52.773736 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.778725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:47:52.781715 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:52.785705 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:52.789694 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.793683 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:47:52.797673 line       556                     i = i_j[0]
excute 13:47:52.801663 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:52.804654 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.808644 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:47:52.811636 line       556                     i = i_j[0]
excute 13:47:52.815625 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:52.820643 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.824599 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:47:52.828589 line       556                     i = i_j[0]
excute 13:47:52.831583 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:52.835571 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.839562 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:47:52.843550 line       556                     i = i_j[0]
excute 13:47:52.847541 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:52.850532 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.855531 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:47:52.859507 line       556                     i = i_j[0]
excute 13:47:52.862499 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:52.866489 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.870476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:47:52.873470 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:52.878456 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:52.882447 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.886436 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:47:52.890425 line       556                     i = i_j[0]
excute 13:47:52.894415 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:52.897406 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.901394 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:47:52.905384 line       556                     i = i_j[0]
excute 13:47:52.908378 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:52.912366 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.916357 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:47:52.919348 line       556                     i = i_j[0]
excute 13:47:52.924332 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:52.928324 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.932312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:47:52.938296 line       556                     i = i_j[0]
excute 13:47:52.941287 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:52.945278 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.951263 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 0, 0)
excute 13:47:52.955252 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:52.959241 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:52.963234 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.967219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 0, 0)
excute 13:47:52.970211 line       556                     i = i_j[0]
excute 13:47:52.975199 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:52.978190 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.982179 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 0, 0)
excute 13:47:52.985170 line       556                     i = i_j[0]
excute 13:47:52.989160 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:52.992152 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:52.996142 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 0, 0)
excute 13:47:53.000130 line       556                     i = i_j[0]
excute 13:47:53.003121 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:53.007113 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.012101 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 0, 0)
excute 13:47:53.015092 line       556                     i = i_j[0]
excute 13:47:53.019081 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:53.023070 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.028057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 0, 0)
excute 13:47:53.032048 line       556                     i = i_j[0]
excute 13:47:53.035037 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:53.039027 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.042019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 1)
excute 13:47:53.046009 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:53.049998 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:53.054002 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.057976 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:47:53.060969 line       560                         if (t_tmp > self.TIME):
excute 13:47:53.064957 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:53.067950 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:53.070941 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:53.074931 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:47:53.077953 line       569                                     available_vhecles[i][t],
excute 13:47:53.081944 line       570                                     available_vhecles[j][t_tmp],
excute 13:47:53.084934 line       571                                     self.S_capacities[j],
excute 13:47:53.088924 line       572                                     demands[t][i][j],
excute 13:47:53.091916 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = -8
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 120
calc_contract     13:47:53.094908 call       352     def caluculate_contract(
calc_contract     13:47:53.097901 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:47:53.098868 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:47:53.099865 line       362         if (available_vhecles_start >= demand):
calc_contract     13:47:53.100864 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:47:53.100864 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:47:53.101860 line       385         return [can_contract, rsf, rse]
calc_contract     13:47:53.102857 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. can_contract = 1
excute Modified var:.. rsf_tmp = 0
excute 13:47:53.103888 line       575                                 rsf += rsf_tmp
excute 13:47:53.107844 line       576                                 rse += rse_tmp
excute 13:47:53.110868 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 1
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 120
move_cars     Starting var:.. t_tmp = 129
move_cars     Starting var:.. can_contract = 1
move_cars     13:47:53.114824 call       388     def move_cars(
move_cars     13:47:53.118815 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:47:53.119812 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:47:53.120810 line       399         return available_vhecles
move_cars     13:47:53.121807 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:47:53.124799 line       579                                 success += can_contract
excute Modified var:.. success = 47
excute 13:47:53.129784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 1)
excute 13:47:53.133786 line       556                     i = i_j[0]
excute 13:47:53.137796 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:53.141783 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.145742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 1)
excute 13:47:53.148764 line       556                     i = i_j[0]
excute 13:47:53.152723 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:53.155745 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.159738 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 1)
excute 13:47:53.163693 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:53.166717 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:53.170709 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.174668 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 1)
excute 13:47:53.177688 line       556                     i = i_j[0]
excute 13:47:53.181677 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:53.185636 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.189625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 1)
excute 13:47:53.193614 line       556                     i = i_j[0]
excute 13:47:53.198600 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:53.201593 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.205582 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 1)
excute 13:47:53.209572 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:53.213562 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:53.217552 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.220542 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 1)
excute 13:47:53.224532 line       556                     i = i_j[0]
excute 13:47:53.228519 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:53.232510 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.237498 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 1)
excute 13:47:53.240489 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:53.244478 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:53.249474 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.253455 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 1)
excute 13:47:53.257443 line       556                     i = i_j[0]
excute 13:47:53.262429 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:53.265423 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.269412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 1)
excute 13:47:53.272404 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:53.276409 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:53.280413 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.284370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 1)
excute 13:47:53.287363 line       556                     i = i_j[0]
excute 13:47:53.291352 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:53.294344 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.298334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 1)
excute 13:47:53.302323 line       556                     i = i_j[0]
excute 13:47:53.306314 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:53.309304 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.313293 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 135
excute 13:47:53.316285 line       560                         if (t_tmp > self.TIME):
excute 13:47:53.320279 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:53.324263 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:53.331249 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 155
excute 13:47:53.341221 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:53.346206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 0, 1)
excute 13:47:53.349231 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:53.355183 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:53.359177 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.363161 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 0, 1)
excute 13:47:53.366184 line       556                     i = i_j[0]
excute 13:47:53.371140 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:53.374162 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.378154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 0, 1)
excute 13:47:53.382140 line       556                     i = i_j[0]
excute 13:47:53.387129 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:53.390089 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.395076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 2)
excute 13:47:53.398067 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:53.403055 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:53.407043 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.411065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 2)
excute 13:47:53.414023 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:53.422003 line       557                     j = i_j[1]
excute 13:47:53.429981 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.432973 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 2)
excute 13:47:53.440954 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:53.444942 line       557                     j = i_j[1]
excute 13:47:53.450928 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.454916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 2)
excute 13:47:53.457908 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:53.462894 line       557                     j = i_j[1]
excute 13:47:53.468897 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.471870 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 2)
excute 13:47:53.475860 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:53.479850 line       557                     j = i_j[1]
excute 13:47:53.483839 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.487857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:47:53.490849 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:53.494841 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:53.498828 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.503784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 0)
excute 13:47:53.506779 line       556                     i = i_j[0]
excute 13:47:53.511764 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:53.515751 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.523731 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:47:53.529715 line       556                     i = i_j[0]
excute 13:47:53.533704 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:53.540689 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.545673 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:47:53.549663 line       556                     i = i_j[0]
excute 13:47:53.553651 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:53.557642 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.561631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:47:53.564621 line       556                     i = i_j[0]
excute 13:47:53.568612 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:53.572600 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.576591 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 1)
excute 13:47:53.579582 line       556                     i = i_j[0]
excute 13:47:53.583573 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:53.586563 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.590554 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 1)
excute 13:47:53.593544 line       556                     i = i_j[0]
excute 13:47:53.597535 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:53.600525 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.604523 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 1)
excute 13:47:53.607507 line       556                     i = i_j[0]
excute 13:47:53.611497 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:53.614487 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.621470 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 2)
excute 13:47:53.624492 line       556                     i = i_j[0]
excute 13:47:53.628451 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:53.631473 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.635431 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 126
excute 13:47:53.639452 line       560                         if (t_tmp > self.TIME):
excute 13:47:53.643427 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:53.648399 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:53.651390 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 156
excute 13:47:53.655380 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:53.659369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:53.663358 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:53.678387 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:53.682383 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.685376 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:47:53.689365 line       556                     i = i_j[0]
excute 13:47:53.693354 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:53.697343 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.701333 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:53.705322 line       556                     i = i_j[0]
excute 13:47:53.709312 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:53.712303 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.717289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:47:53.720315 line       556                     i = i_j[0]
excute 13:47:53.724271 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:53.728260 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.732249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:53.736239 line       556                     i = i_j[0]
excute 13:47:53.742221 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:53.749203 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.753194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:53.757214 line       556                     i = i_j[0]
excute 13:47:53.761203 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:53.765166 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.768184 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 1)
excute 13:47:53.772176 line       556                     i = i_j[0]
excute 13:47:53.776132 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:53.779155 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.783148 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 129
excute 13:47:53.786136 line       560                         if (t_tmp > self.TIME):
excute 13:47:53.790095 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:53.793117 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:53.797095 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 157
excute 13:47:53.800098 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:53.804066 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 1)
excute 13:47:53.807082 line       556                     i = i_j[0]
excute 13:47:53.811069 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:53.815027 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.818050 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 2)
excute 13:47:53.822041 line       556                     i = i_j[0]
excute 13:47:53.826031 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:53.829022 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:53.832980 line       555                 for i_j in i_j_list:
excute 13:47:53.836004 line       581             self.write_matrix(
excute 13:47:53.839961 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:53.842955 line       583                 result_file_path,
excute 13:47:53.846943 line       584                 mode='a'
excute 13:47:53.853924 line       488         for t in time_steps:
excute Modified var:.. t = 121
excute 13:47:53.857914 line       489             if (t != self.TIME + 1):
excute 13:47:53.861902 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:53.867885 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:53.874868 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:53.880852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:53.886836 line       494                         if (i == j):
excute 13:47:53.890825 line       495                             continue
excute 13:47:53.893817 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:53.899800 line       494                         if (i == j):
excute 13:47:53.903789 line       496                         i_j_list.append((
excute 13:47:53.907779 line       497                             i, j,
excute 13:47:53.913765 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:53.916756 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1)]
excute 13:47:53.924770 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:53.930721 line       494                         if (i == j):
excute 13:47:53.936731 line       496                         i_j_list.append((
excute 13:47:53.940691 line       497                             i, j,
excute 13:47:53.946676 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:53.954656 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0)]
excute 13:47:53.958645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:53.964628 line       494                         if (i == j):
excute 13:47:53.968617 line       496                         i_j_list.append((
excute 13:47:53.972606 line       497                             i, j,
excute 13:47:53.976595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:53.982579 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1)]
excute 13:47:53.985572 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:53.991559 line       494                         if (i == j):
excute 13:47:53.997540 line       496                         i_j_list.append((
excute 13:47:54.004523 line       497                             i, j,
excute 13:47:54.009507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.012499 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0)]
excute 13:47:54.016489 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:54.021475 line       494                         if (i == j):
excute 13:47:54.025465 line       496                         i_j_list.append((
excute 13:47:54.028456 line       497                             i, j,
excute 13:47:54.031448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.035439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:47:54.038430 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:54.042419 line       494                         if (i == j):
excute 13:47:54.046413 line       496                         i_j_list.append((
excute 13:47:54.049400 line       497                             i, j,
excute 13:47:54.053403 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.056382 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0)]
excute 13:47:54.060373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:54.064361 line       494                         if (i == j):
excute 13:47:54.068350 line       496                         i_j_list.append((
excute 13:47:54.071343 line       497                             i, j,
excute 13:47:54.075332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.078323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:47:54.081315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:54.085305 line       494                         if (i == j):
excute 13:47:54.089294 line       496                         i_j_list.append((
excute 13:47:54.092286 line       497                             i, j,
excute 13:47:54.095309 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.098301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:47:54.102265 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:54.105283 line       494                         if (i == j):
excute 13:47:54.109241 line       496                         i_j_list.append((
excute 13:47:54.112264 line       497                             i, j,
excute 13:47:54.116221 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.119214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:47:54.123204 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:54.126195 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:54.130185 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:54.133176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:54.137165 line       494                         if (i == j):
excute 13:47:54.141155 line       496                         i_j_list.append((
excute 13:47:54.144147 line       497                             i, j,
excute 13:47:54.147139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.151128 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0)]
excute 13:47:54.155119 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:54.160106 line       494                         if (i == j):
excute 13:47:54.165092 line       495                             continue
excute 13:47:54.169081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:54.172074 line       494                         if (i == j):
excute 13:47:54.176062 line       496                         i_j_list.append((
excute 13:47:54.180051 line       497                             i, j,
excute 13:47:54.183044 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.187033 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:47:54.190025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:54.194014 line       494                         if (i == j):
excute 13:47:54.199001 line       496                         i_j_list.append((
excute 13:47:54.201993 line       497                             i, j,
excute 13:47:54.205016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.208008 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1)]
excute 13:47:54.211966 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:54.214989 line       494                         if (i == j):
excute 13:47:54.218948 line       496                         i_j_list.append((
excute 13:47:54.221973 line       497                             i, j,
excute 13:47:54.225930 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.228952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0)]
excute 13:47:54.231944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:54.235904 line       494                         if (i == j):
excute 13:47:54.239893 line       496                         i_j_list.append((
excute 13:47:54.242884 line       497                             i, j,
excute 13:47:54.245910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.249870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:47:54.252888 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:54.256854 line       494                         if (i == j):
excute 13:47:54.260836 line       496                         i_j_list.append((
excute 13:47:54.263859 line       497                             i, j,
excute 13:47:54.268851 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.271838 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:47:54.275796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:54.279786 line       494                         if (i == j):
excute 13:47:54.283806 line       496                         i_j_list.append((
excute 13:47:54.286797 line       497                             i, j,
excute 13:47:54.289792 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.293781 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:47:54.296771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:54.300761 line       494                         if (i == j):
excute 13:47:54.303752 line       496                         i_j_list.append((
excute 13:47:54.307742 line       497                             i, j,
excute 13:47:54.310737 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.313726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:47:54.317683 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:54.320707 line       494                         if (i == j):
excute 13:47:54.324667 line       496                         i_j_list.append((
excute 13:47:54.330650 line       497                             i, j,
excute 13:47:54.336635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.340654 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:47:54.343646 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:54.347634 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:54.351593 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:54.355615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:54.359603 line       494                         if (i == j):
excute 13:47:54.363565 line       496                         i_j_list.append((
excute 13:47:54.366588 line       497                             i, j,
excute 13:47:54.371575 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.375561 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0)]
excute 13:47:54.378555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:54.382513 line       494                         if (i == j):
excute 13:47:54.386499 line       496                         i_j_list.append((
excute 13:47:54.390488 line       497                             i, j,
excute 13:47:54.393482 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.397470 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1)]
excute 13:47:54.401462 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:54.405449 line       494                         if (i == j):
excute 13:47:54.410436 line       495                             continue
excute 13:47:54.413427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:54.417417 line       494                         if (i == j):
excute 13:47:54.420410 line       496                         i_j_list.append((
excute 13:47:54.424400 line       497                             i, j,
excute 13:47:54.427392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.431381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1)]
excute 13:47:54.435370 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:54.439360 line       494                         if (i == j):
excute 13:47:54.443349 line       496                         i_j_list.append((
excute 13:47:54.448338 line       497                             i, j,
excute 13:47:54.452324 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.456344 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0)]
excute 13:47:54.459306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:54.463296 line       494                         if (i == j):
excute 13:47:54.467285 line       496                         i_j_list.append((
excute 13:47:54.471275 line       497                             i, j,
excute 13:47:54.476263 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.479253 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0)]
excute 13:47:54.483242 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:54.489225 line       494                         if (i == j):
excute 13:47:54.496206 line       496                         i_j_list.append((
excute 13:47:54.500195 line       497                             i, j,
excute 13:47:54.503187 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.511166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0)]
excute 13:47:54.514159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:54.518149 line       494                         if (i == j):
excute 13:47:54.522138 line       496                         i_j_list.append((
excute 13:47:54.525130 line       497                             i, j,
excute 13:47:54.528121 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.531113 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0)]
excute 13:47:54.535102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:54.538095 line       494                         if (i == j):
excute 13:47:54.542084 line       496                         i_j_list.append((
excute 13:47:54.545076 line       497                             i, j,
excute 13:47:54.548068 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.552058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0)]
excute 13:47:54.556047 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:54.559069 line       494                         if (i == j):
excute 13:47:54.563059 line       496                         i_j_list.append((
excute 13:47:54.567026 line       497                             i, j,
excute 13:47:54.570043 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.573036 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0)]
excute 13:47:54.577987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:54.581987 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:54.584969 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:54.588957 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:54.591950 line       494                         if (i == j):
excute 13:47:54.595939 line       496                         i_j_list.append((
excute 13:47:54.598931 line       497                             i, j,
excute 13:47:54.601923 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.604915 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0)]
excute 13:47:54.608904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:54.611896 line       494                         if (i == j):
excute 13:47:54.615886 line       496                         i_j_list.append((
excute 13:47:54.619887 line       497                             i, j,
excute 13:47:54.622867 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.625859 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1)]
excute 13:47:54.628851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:54.632840 line       494                         if (i == j):
excute 13:47:54.636830 line       496                         i_j_list.append((
excute 13:47:54.640819 line       497                             i, j,
excute 13:47:54.643811 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.646803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0)]
excute 13:47:54.649795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:54.653785 line       494                         if (i == j):
excute 13:47:54.657774 line       495                             continue
excute 13:47:54.660766 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:54.664755 line       494                         if (i == j):
excute 13:47:54.668745 line       496                         i_j_list.append((
excute 13:47:54.671736 line       497                             i, j,
excute 13:47:54.674728 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.678719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:47:54.682708 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:54.686697 line       494                         if (i == j):
excute 13:47:54.689689 line       496                         i_j_list.append((
excute 13:47:54.692681 line       497                             i, j,
excute 13:47:54.696670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.700660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:47:54.704654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:54.707642 line       494                         if (i == j):
excute 13:47:54.711631 line       496                         i_j_list.append((
excute 13:47:54.715620 line       497                             i, j,
excute 13:47:54.718612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.722602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:47:54.725594 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:54.729583 line       494                         if (i == j):
excute 13:47:54.733574 line       496                         i_j_list.append((
excute 13:47:54.739555 line       497                             i, j,
excute 13:47:54.746537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.752520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:47:54.756544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:54.761498 line       494                         if (i == j):
excute 13:47:54.764489 line       496                         i_j_list.append((
excute 13:47:54.767480 line       497                             i, j,
excute 13:47:54.771469 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.774461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:54.777454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:54.782441 line       494                         if (i == j):
excute 13:47:54.786430 line       496                         i_j_list.append((
excute 13:47:54.789422 line       497                             i, j,
excute 13:47:54.793412 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.796403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:47:54.799395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:54.803385 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:54.806376 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:54.810367 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:54.813358 line       494                         if (i == j):
excute 13:47:54.817348 line       496                         i_j_list.append((
excute 13:47:54.820340 line       497                             i, j,
excute 13:47:54.824329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.827320 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0)]
excute 13:47:54.831310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:54.834334 line       494                         if (i == j):
excute 13:47:54.838323 line       496                         i_j_list.append((
excute 13:47:54.841317 line       497                             i, j,
excute 13:47:54.845306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.848296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1)]
excute 13:47:54.852254 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:54.856245 line       494                         if (i == j):
excute 13:47:54.860235 line       496                         i_j_list.append((
excute 13:47:54.863256 line       497                             i, j,
excute 13:47:54.866248 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.869240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0)]
excute 13:47:54.873232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:54.876224 line       494                         if (i == j):
excute 13:47:54.880211 line       496                         i_j_list.append((
excute 13:47:54.885168 line       497                             i, j,
excute 13:47:54.888189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.892147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1)]
excute 13:47:54.895171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:54.899154 line       494                         if (i == j):
excute 13:47:54.902152 line       495                             continue
excute 13:47:54.906144 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:54.909104 line       494                         if (i == j):
excute 13:47:54.913093 line       496                         i_j_list.append((
excute 13:47:54.917083 line       497                             i, j,
excute 13:47:54.921072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.924064 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0)]
excute 13:47:54.928053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:54.932043 line       494                         if (i == j):
excute 13:47:54.936037 line       496                         i_j_list.append((
excute 13:47:54.940020 line       497                             i, j,
excute 13:47:54.943013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.948000 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:47:54.950990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:54.956011 line       494                         if (i == j):
excute 13:47:54.959985 line       496                         i_j_list.append((
excute 13:47:54.963956 line       497                             i, j,
excute 13:47:54.969971 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.973961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:47:54.976954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:54.980947 line       494                         if (i == j):
excute 13:47:54.985898 line       496                         i_j_list.append((
excute 13:47:54.989888 line       497                             i, j,
excute 13:47:54.993877 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:54.997867 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:47:55.000858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:55.004846 line       494                         if (i == j):
excute 13:47:55.009840 line       496                         i_j_list.append((
excute 13:47:55.012856 line       497                             i, j,
excute 13:47:55.015850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.019840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0)]
excute 13:47:55.022830 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:55.028803 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:55.032795 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:55.036786 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:55.039776 line       494                         if (i == j):
excute 13:47:55.043767 line       496                         i_j_list.append((
excute 13:47:55.046757 line       497                             i, j,
excute 13:47:55.049749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.053740 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0)]
excute 13:47:55.056730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:55.060721 line       494                         if (i == j):
excute 13:47:55.064709 line       496                         i_j_list.append((
excute 13:47:55.067702 line       497                             i, j,
excute 13:47:55.071691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.074682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1)]
excute 13:47:55.078673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:55.081664 line       494                         if (i == j):
excute 13:47:55.085654 line       496                         i_j_list.append((
excute 13:47:55.090642 line       497                             i, j,
excute 13:47:55.094629 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.097623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0)]
excute 13:47:55.100614 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:55.104604 line       494                         if (i == j):
excute 13:47:55.108593 line       496                         i_j_list.append((
excute 13:47:55.112583 line       497                             i, j,
excute 13:47:55.115574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.119563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1)]
excute 13:47:55.123553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:55.127544 line       494                         if (i == j):
excute 13:47:55.131533 line       496                         i_j_list.append((
excute 13:47:55.134524 line       497                             i, j,
excute 13:47:55.138543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.141504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0)]
excute 13:47:55.145494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:55.149484 line       494                         if (i == j):
excute 13:47:55.153474 line       495                             continue
excute 13:47:55.156464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:55.160453 line       494                         if (i == j):
excute 13:47:55.163446 line       496                         i_j_list.append((
excute 13:47:55.166437 line       497                             i, j,
excute 13:47:55.170429 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.173419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:47:55.176411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:55.180400 line       494                         if (i == j):
excute 13:47:55.184390 line       496                         i_j_list.append((
excute 13:47:55.188379 line       497                             i, j,
excute 13:47:55.193365 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.196390 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:47:55.200348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:55.204336 line       494                         if (i == j):
excute 13:47:55.208325 line       496                         i_j_list.append((
excute 13:47:55.215332 line       497                             i, j,
excute 13:47:55.218298 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.226277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:47:55.229268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:55.233290 line       494                         if (i == j):
excute 13:47:55.237247 line       496                         i_j_list.append((
excute 13:47:55.240270 line       497                             i, j,
excute 13:47:55.244263 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.247254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:47:55.250244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:55.254234 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:55.258223 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:55.262184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:55.265175 line       494                         if (i == j):
excute 13:47:55.269164 line       496                         i_j_list.append((
excute 13:47:55.273151 line       497                             i, j,
excute 13:47:55.277144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.280134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0)]
excute 13:47:55.284124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:55.288112 line       494                         if (i == j):
excute 13:47:55.293100 line       496                         i_j_list.append((
excute 13:47:55.297119 line       497                             i, j,
excute 13:47:55.303072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.307061 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1)]
excute 13:47:55.311050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:55.314074 line       494                         if (i == j):
excute 13:47:55.318063 line       496                         i_j_list.append((
excute 13:47:55.322053 line       497                             i, j,
excute 13:47:55.327011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.331995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0)]
excute 13:47:55.340972 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:55.345967 line       494                         if (i == j):
excute 13:47:55.348981 line       496                         i_j_list.append((
excute 13:47:55.352975 line       497                             i, j,
excute 13:47:55.357924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.360919 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1)]
excute 13:47:55.363910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:55.368929 line       494                         if (i == j):
excute 13:47:55.372890 line       496                         i_j_list.append((
excute 13:47:55.375908 line       497                             i, j,
excute 13:47:55.379899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.382891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0)]
excute 13:47:55.387845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:55.390870 line       494                         if (i == j):
excute 13:47:55.395824 line       496                         i_j_list.append((
excute 13:47:55.399848 line       497                             i, j,
excute 13:47:55.402836 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.406829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0)]
excute 13:47:55.409817 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:55.413777 line       494                         if (i == j):
excute 13:47:55.417767 line       495                             continue
excute 13:47:55.420788 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:55.423781 line       494                         if (i == j):
excute 13:47:55.427772 line       496                         i_j_list.append((
excute 13:47:55.431759 line       497                             i, j,
excute 13:47:55.434751 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.437743 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:47:55.441733 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:55.445724 line       494                         if (i == j):
excute 13:47:55.449680 line       496                         i_j_list.append((
excute 13:47:55.455665 line       497                             i, j,
excute 13:47:55.458657 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.462647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:47:55.465639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:55.470626 line       494                         if (i == j):
excute 13:47:55.474614 line       496                         i_j_list.append((
excute 13:47:55.478602 line       497                             i, j,
excute 13:47:55.481626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.484617 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:47:55.488583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:55.492565 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:55.495556 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:55.500546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:55.504534 line       494                         if (i == j):
excute 13:47:55.508523 line       496                         i_j_list.append((
excute 13:47:55.512545 line       497                             i, j,
excute 13:47:55.515537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.519524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0)]
excute 13:47:55.522518 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:55.526507 line       494                         if (i == j):
excute 13:47:55.530495 line       496                         i_j_list.append((
excute 13:47:55.533487 line       497                             i, j,
excute 13:47:55.537477 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.540468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1)]
excute 13:47:55.544427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:55.547457 line       494                         if (i == j):
excute 13:47:55.551441 line       496                         i_j_list.append((
excute 13:47:55.555431 line       497                             i, j,
excute 13:47:55.558423 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.562410 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0)]
excute 13:47:55.565402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:55.569392 line       494                         if (i == j):
excute 13:47:55.573381 line       496                         i_j_list.append((
excute 13:47:55.577339 line       497                             i, j,
excute 13:47:55.580362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.583353 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1)]
excute 13:47:55.587311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:55.590337 line       494                         if (i == j):
excute 13:47:55.594324 line       496                         i_j_list.append((
excute 13:47:55.598315 line       497                             i, j,
excute 13:47:55.602304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.606261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0)]
excute 13:47:55.609285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:55.613244 line       494                         if (i == j):
excute 13:47:55.616265 line       496                         i_j_list.append((
excute 13:47:55.620256 line       497                             i, j,
excute 13:47:55.623247 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.627239 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:47:55.630199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:55.635187 line       494                         if (i == j):
excute 13:47:55.638175 line       496                         i_j_list.append((
excute 13:47:55.642166 line       497                             i, j,
excute 13:47:55.646156 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.649148 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0)]
excute 13:47:55.653137 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:55.657126 line       494                         if (i == j):
excute 13:47:55.661117 line       495                             continue
excute 13:47:55.664138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:55.668096 line       494                         if (i == j):
excute 13:47:55.671119 line       496                         i_j_list.append((
excute 13:47:55.675089 line       497                             i, j,
excute 13:47:55.678101 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.682059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:47:55.685082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:55.689046 line       494                         if (i == j):
excute 13:47:55.693031 line       496                         i_j_list.append((
excute 13:47:55.696053 line       497                             i, j,
excute 13:47:55.700041 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.704001 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:47:55.707990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:55.711979 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:55.715970 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:55.719958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:55.722983 line       494                         if (i == j):
excute 13:47:55.726971 line       496                         i_j_list.append((
excute 13:47:55.730927 line       497                             i, j,
excute 13:47:55.733919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.737909 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0)]
excute 13:47:55.740901 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:55.744890 line       494                         if (i == j):
excute 13:47:55.748880 line       496                         i_j_list.append((
excute 13:47:55.751902 line       497                             i, j,
excute 13:47:55.755892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.759883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1)]
excute 13:47:55.762875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:55.766863 line       494                         if (i == j):
excute 13:47:55.770822 line       496                         i_j_list.append((
excute 13:47:55.773845 line       497                             i, j,
excute 13:47:55.777834 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.780826 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0)]
excute 13:47:55.784815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:55.788783 line       494                         if (i == j):
excute 13:47:55.791797 line       496                         i_j_list.append((
excute 13:47:55.795786 line       497                             i, j,
excute 13:47:55.798777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.802742 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1)]
excute 13:47:55.806729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:55.810723 line       494                         if (i == j):
excute 13:47:55.814709 line       496                         i_j_list.append((
excute 13:47:55.818727 line       497                             i, j,
excute 13:47:55.822682 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.825705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0)]
excute 13:47:55.829664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:55.832689 line       494                         if (i == j):
excute 13:47:55.836681 line       496                         i_j_list.append((
excute 13:47:55.840668 line       497                             i, j,
excute 13:47:55.843666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.846655 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:47:55.850641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:55.853637 line       494                         if (i == j):
excute 13:47:55.858589 line       496                         i_j_list.append((
excute 13:47:55.861579 line       497                             i, j,
excute 13:47:55.865585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.868596 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:47:55.871590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:55.875578 line       494                         if (i == j):
excute 13:47:55.879570 line       496                         i_j_list.append((
excute 13:47:55.882560 line       497                             i, j,
excute 13:47:55.886547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.889540 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:47:55.893530 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:55.897493 line       494                         if (i == j):
excute 13:47:55.901482 line       495                             continue
excute 13:47:55.904499 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:55.909451 line       494                         if (i == j):
excute 13:47:55.912478 line       496                         i_j_list.append((
excute 13:47:55.916470 line       497                             i, j,
excute 13:47:55.919461 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.923444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:47:55.926438 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:55.930433 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:47:55.934421 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:55.938373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:55.941404 line       494                         if (i == j):
excute 13:47:55.945391 line       496                         i_j_list.append((
excute 13:47:55.952367 line       497                             i, j,
excute 13:47:55.957325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.961313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0)]
excute 13:47:55.964305 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:55.969291 line       494                         if (i == j):
excute 13:47:55.973282 line       496                         i_j_list.append((
excute 13:47:55.976305 line       497                             i, j,
excute 13:47:55.980292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:55.983284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 1)]
excute 13:47:55.987251 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:55.991233 line       494                         if (i == j):
excute 13:47:55.994257 line       496                         i_j_list.append((
excute 13:47:55.998245 line       497                             i, j,
excute 13:47:56.001237 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:56.005195 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 1), (9, 2, 0, 0)]
excute 13:47:56.008218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:56.013174 line       494                         if (i == j):
excute 13:47:56.017165 line       496                         i_j_list.append((
excute 13:47:56.020156 line       497                             i, j,
excute 13:47:56.024180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:56.028165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 1), (9, 2, 0, 0), (9, 3, 0, 1)]
excute 13:47:56.031157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:56.035114 line       494                         if (i == j):
excute 13:47:56.039104 line       496                         i_j_list.append((
excute 13:47:56.042129 line       497                             i, j,
excute 13:47:56.046087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:56.049113 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 1), (9, 2, 0, 0), (9, 3, 0, 1), (9, 4, 0, 0)]
excute 13:47:56.052105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:56.057057 line       494                         if (i == j):
excute 13:47:56.061046 line       496                         i_j_list.append((
excute 13:47:56.064073 line       497                             i, j,
excute 13:47:56.067067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:56.071018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 1), (9, 2, 0, 0), (9, 3, 0, 1), (9, 4, 0, 0), (9, 5, 0, 0)]
excute 13:47:56.075009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:56.078997 line       494                         if (i == j):
excute 13:47:56.082987 line       496                         i_j_list.append((
excute 13:47:56.085981 line       497                             i, j,
excute 13:47:56.089970 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:56.093958 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 1), (9, 2, 0, 0), (9, 3, 0, 1), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0)]
excute 13:47:56.096949 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:56.104927 line       494                         if (i == j):
excute 13:47:56.113905 line       496                         i_j_list.append((
excute 13:47:56.120911 line       497                             i, j,
excute 13:47:56.123877 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:56.128888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 1), (9, 2, 0, 0), (9, 3, 0, 1), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0)]
excute 13:47:56.132888 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:56.136844 line       494                         if (i == j):
excute 13:47:56.140833 line       496                         i_j_list.append((
excute 13:47:56.143856 line       497                             i, j,
excute 13:47:56.147845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:56.150836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 1, 1, 1), (2, 3, 1, 1), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 1), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 1), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 1), (9, 2, 0, 0), (9, 3, 0, 1), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0)]
excute 13:47:56.154827 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:56.158787 line       494                         if (i == j):
excute 13:47:56.162787 line       495                             continue
excute 13:47:56.165767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:56.169756 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:47:56.173746 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 2, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (7, 1, -2, 1), (7, 3, -2, 1), (0, 2, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (0, 1, -1, 1), (0, 3, -1, 1), (4, 0, 0, 0), (4, 2, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 2, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 2, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (8, 0, 0, 0), (8, 2, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 2, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0), (4, 1, 0, 1), (4, 3, 0, 1), (5, 1, 0, 1), (5, 3, 0, 1), (6, 1, 0, 1), (6, 3, 0, 1), (8, 1, 0, 1), (8, 3, 0, 1), (9, 1, 0, 1), (9, 3, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 1, 0), (2, 4, 1, 0), (2, 5, 1, 0), (2, 6, 1, 0), (2, 7, 1, 0), (2, 8, 1, 0), (2, 9, 1, 0), (1, 3, 1, 1), (2, 1, 1, 1), (2, 3, 1, 1), (3, 0, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (3, 1, 10, 1)]
excute 13:47:56.176737 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:47:56.181723 line       505                     if (self.RELOCATE):
excute 13:47:56.185714 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:47:56.189702 line       505                     if (self.RELOCATE):
excute 13:47:56.193693 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:47:56.198677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:47:56.201669 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:47:56.209648 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:56.216631 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.221616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:47:56.224608 line       556                     i = i_j[0]
excute 13:47:56.228599 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:56.232587 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.235610 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:47:56.239600 line       556                     i = i_j[0]
excute 13:47:56.242591 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:56.246580 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.250539 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:47:56.253531 line       556                     i = i_j[0]
excute 13:47:56.258518 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:56.261511 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.266497 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:47:56.269489 line       556                     i = i_j[0]
excute 13:47:56.274476 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:56.277497 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.281490 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:47:56.285477 line       556                     i = i_j[0]
excute 13:47:56.288468 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:56.292459 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.296417 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:47:56.299439 line       556                     i = i_j[0]
excute 13:47:56.303398 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:56.306422 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.310410 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 1)
excute 13:47:56.313403 line       556                     i = i_j[0]
excute 13:47:56.319357 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:56.324342 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.338306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 1)
excute 13:47:56.345285 line       556                     i = i_j[0]
excute 13:47:56.350275 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:56.357259 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.362246 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:47:56.366231 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:47:56.374210 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:56.384184 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.390167 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:47:56.396149 line       556                     i = i_j[0]
excute 13:47:56.401139 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:56.406124 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.411111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:47:56.418123 line       556                     i = i_j[0]
excute 13:47:56.425073 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:56.429062 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.433051 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:47:56.437041 line       556                     i = i_j[0]
excute 13:47:56.442028 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:56.445019 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.451004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:47:56.459979 line       556                     i = i_j[0]
excute 13:47:56.474940 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:56.481921 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.488902 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:47:56.494887 line       556                     i = i_j[0]
excute 13:47:56.503863 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:56.510845 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.516835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:47:56.525803 line       556                     i = i_j[0]
excute 13:47:56.533784 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:56.539765 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.545750 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 1)
excute 13:47:56.550737 line       556                     i = i_j[0]
excute 13:47:56.556721 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:56.563701 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.569685 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 1)
excute 13:47:56.576668 line       556                     i = i_j[0]
excute 13:47:56.582651 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:56.587638 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.596616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:47:56.602597 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:56.609580 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:56.615564 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.621547 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:47:56.628529 line       556                     i = i_j[0]
excute 13:47:56.635510 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:56.641493 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.648476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:47:56.654459 line       556                     i = i_j[0]
excute 13:47:56.661441 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:56.666427 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.675403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:47:56.681387 line       556                     i = i_j[0]
excute 13:47:56.688369 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:56.695352 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.703329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:47:56.710310 line       556                     i = i_j[0]
excute 13:47:56.718288 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:56.724272 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.730258 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:47:56.737238 line       556                     i = i_j[0]
excute 13:47:56.744219 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:56.751200 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.761174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:47:56.769152 line       556                     i = i_j[0]
excute 13:47:56.776134 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:56.783115 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.788102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:47:56.791093 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:56.795084 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:56.799072 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.803064 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:47:56.806053 line       556                     i = i_j[0]
excute 13:47:56.810044 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:56.813035 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.817025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:47:56.821014 line       556                     i = i_j[0]
excute 13:47:56.825036 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:56.828026 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.832018 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:47:56.835973 line       556                     i = i_j[0]
excute 13:47:56.839964 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:56.843954 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.847943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:47:56.851932 line       556                     i = i_j[0]
excute 13:47:56.855921 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:56.859912 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.862903 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:47:56.866892 line       556                     i = i_j[0]
excute 13:47:56.870882 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:56.874870 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.878860 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:47:56.881852 line       556                     i = i_j[0]
excute 13:47:56.886841 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:56.889831 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.893820 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:47:56.897809 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:56.901799 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:56.905788 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.909789 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:47:56.913767 line       556                     i = i_j[0]
excute 13:47:56.917757 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:56.920748 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.924738 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:47:56.928727 line       556                     i = i_j[0]
excute 13:47:56.932716 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:56.937703 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.940694 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:47:56.944684 line       556                     i = i_j[0]
excute 13:47:56.949672 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:56.955656 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.959644 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:47:56.963634 line       556                     i = i_j[0]
excute 13:47:56.966626 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:56.970615 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.975603 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:47:56.978593 line       556                     i = i_j[0]
excute 13:47:56.982583 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:56.986572 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:56.990562 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:47:56.994551 line       556                     i = i_j[0]
excute 13:47:56.998541 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:57.002529 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.006518 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:47:57.010509 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:57.014498 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:57.018487 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.022477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:47:57.026466 line       556                     i = i_j[0]
excute 13:47:57.030456 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:57.033447 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.038434 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:47:57.042422 line       556                     i = i_j[0]
excute 13:47:57.046411 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:57.050402 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.054393 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:47:57.058381 line       556                     i = i_j[0]
excute 13:47:57.062368 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:57.068353 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.072344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:47:57.075335 line       556                     i = i_j[0]
excute 13:47:57.079325 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:57.083314 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.087302 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:47:57.091293 line       556                     i = i_j[0]
excute 13:47:57.095287 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:57.098274 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.102264 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:47:57.105255 line       556                     i = i_j[0]
excute 13:47:57.109244 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:57.113234 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.117223 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 0, 0)
excute 13:47:57.120215 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:57.124205 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:57.128193 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.132184 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 0, 0)
excute 13:47:57.137170 line       556                     i = i_j[0]
excute 13:47:57.142156 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:57.146144 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.150134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 0, 0)
excute 13:47:57.153128 line       556                     i = i_j[0]
excute 13:47:57.158114 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:57.161104 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.165093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 0, 0)
excute 13:47:57.169084 line       556                     i = i_j[0]
excute 13:47:57.173074 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:57.176066 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.180055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 0, 0)
excute 13:47:57.184045 line       556                     i = i_j[0]
excute 13:47:57.189032 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:57.192024 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.196012 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 0, 0)
excute 13:47:57.200002 line       556                     i = i_j[0]
excute 13:47:57.203991 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:57.207981 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.211976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 0, 0)
excute 13:47:57.215960 line       556                     i = i_j[0]
excute 13:47:57.219949 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:57.222941 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.226930 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 1)
excute 13:47:57.231915 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:47:57.236903 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:57.240894 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.244882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 1)
excute 13:47:57.248871 line       556                     i = i_j[0]
excute 13:47:57.252864 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:57.256849 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.260848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 1)
excute 13:47:57.263832 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:47:57.267821 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:57.271810 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.276796 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 1)
excute 13:47:57.279787 line       556                     i = i_j[0]
excute 13:47:57.283777 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:57.286769 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.290759 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 1)
excute 13:47:57.294750 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:47:57.297740 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:57.301730 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.305718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 1)
excute 13:47:57.308711 line       556                     i = i_j[0]
excute 13:47:57.312700 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:57.316690 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.319682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 1)
excute 13:47:57.323670 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:47:57.329656 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:57.336636 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.341622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 1)
excute 13:47:57.344649 line       556                     i = i_j[0]
excute 13:47:57.350600 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:57.354587 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.358578 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 0, 1)
excute 13:47:57.362567 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:47:57.366557 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:57.370545 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.375532 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:47:57.379521 line       560                         if (t_tmp > self.TIME):
excute 13:47:57.383510 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:57.388513 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:57.391490 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:57.395479 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:47:57.398471 line       569                                     available_vhecles[i][t],
excute 13:47:57.402461 line       570                                     available_vhecles[j][t_tmp],
excute 13:47:57.406450 line       571                                     self.S_capacities[j],
excute 13:47:57.409442 line       572                                     demands[t][i][j],
excute 13:47:57.412434 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 121
calc_contract     13:47:57.416423 call       352     def caluculate_contract(
calc_contract     13:47:57.419419 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:47:57.420413 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:47:57.420413 line       362         if (available_vhecles_start >= demand):
calc_contract     13:47:57.421411 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:47:57.422408 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:47:57.422408 line       385         return [can_contract, rsf, rse]
calc_contract     13:47:57.423406 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:47:57.424412 line       575                                 rsf += rsf_tmp
excute 13:47:57.427393 line       576                                 rse += rse_tmp
excute 13:47:57.431383 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 1
move_cars     Starting var:.. t = 121
move_cars     Starting var:.. t_tmp = 129
move_cars     Starting var:.. can_contract = 1
move_cars     13:47:57.434374 call       388     def move_cars(
move_cars     13:47:57.438365 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:47:57.440359 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:47:57.441357 line       399         return available_vhecles
move_cars     13:47:57.443349 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:57.445347 line       579                                 success += can_contract
excute Modified var:.. success = 48
excute 13:47:57.452327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 0, 1)
excute 13:47:57.457315 line       556                     i = i_j[0]
excute 13:47:57.461307 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:57.465293 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.469283 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:47:57.473271 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:57.477261 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:57.480253 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.485239 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:47:57.489228 line       556                     i = i_j[0]
excute 13:47:57.492221 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:57.496210 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.500200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:47:57.504188 line       556                     i = i_j[0]
excute 13:47:57.508178 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:57.512167 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.516156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:47:57.519147 line       556                     i = i_j[0]
excute 13:47:57.523138 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:57.526129 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.530119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:47:57.534107 line       556                     i = i_j[0]
excute 13:47:57.537101 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:57.541089 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.544082 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:47:57.548071 line       556                     i = i_j[0]
excute 13:47:57.552062 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:57.557047 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.560038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:47:57.564028 line       556                     i = i_j[0]
excute 13:47:57.568019 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:57.571009 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.574999 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:47:57.578987 line       556                     i = i_j[0]
excute 13:47:57.582012 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:57.586000 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.588992 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 1, 0)
excute 13:47:57.592983 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:57.596940 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:57.599962 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.603954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 1, 0)
excute 13:47:57.607911 line       556                     i = i_j[0]
excute 13:47:57.610934 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:57.614923 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.617914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 1, 0)
excute 13:47:57.621906 line       556                     i = i_j[0]
excute 13:47:57.625896 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:57.628885 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.632845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 1, 0)
excute 13:47:57.636864 line       556                     i = i_j[0]
excute 13:47:57.640824 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:57.643845 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.647804 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 1, 0)
excute 13:47:57.650826 line       556                     i = i_j[0]
excute 13:47:57.655782 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:57.660769 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.664761 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 1, 0)
excute 13:47:57.667752 line       556                     i = i_j[0]
excute 13:47:57.671740 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:57.675730 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.679720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 1, 0)
excute 13:47:57.683707 line       556                     i = i_j[0]
excute 13:47:57.686731 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:57.690720 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.693713 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 1)
excute 13:47:57.697701 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:47:57.701661 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:57.706648 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.710638 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 1, 1)
excute 13:47:57.714625 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:47:57.718614 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:57.721608 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.726594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 1, 1)
excute 13:47:57.729586 line       556                     i = i_j[0]
excute 13:47:57.735569 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:47:57.741553 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.746541 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 128
excute 13:47:57.750528 line       560                         if (t_tmp > self.TIME):
excute 13:47:57.757544 line       563                             if (available_vhecles[i][t] == 0):
excute 13:47:57.762529 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:47:57.766518 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:47:57.769509 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:47:57.773468 line       569                                     available_vhecles[i][t],
excute 13:47:57.776492 line       570                                     available_vhecles[j][t_tmp],
excute 13:47:57.779483 line       571                                     self.S_capacities[j],
excute 13:47:57.783473 line       572                                     demands[t][i][j],
excute 13:47:57.786464 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = -8
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 121
calc_contract     13:47:57.789458 call       352     def caluculate_contract(
calc_contract     13:47:57.793447 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:47:57.793447 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:47:57.794443 line       362         if (available_vhecles_start >= demand):
calc_contract     13:47:57.795409 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:47:57.795409 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:47:57.796408 line       385         return [can_contract, rsf, rse]
calc_contract     13:47:57.797405 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:47:57.798403 line       575                                 rsf += rsf_tmp
excute 13:47:57.801424 line       576                                 rse += rse_tmp
excute 13:47:57.805416 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 2
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 121
move_cars     Starting var:.. t_tmp = 128
move_cars     Starting var:.. can_contract = 1
move_cars     13:47:57.808407 call       388     def move_cars(
move_cars     13:47:57.812366 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:47:57.814361 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:47:57.815388 line       399         return available_vhecles
move_cars     13:47:57.816386 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -7, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:57.819345 line       579                                 success += can_contract
excute Modified var:.. success = 49
excute 13:47:57.823367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:47:57.827356 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:47:57.831330 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:47:57.835302 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.839292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:47:57.843281 line       556                     i = i_j[0]
excute 13:47:57.847270 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:47:57.850293 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.854284 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:47:57.858240 line       556                     i = i_j[0]
excute 13:47:57.863229 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:47:57.867218 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.871208 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:47:57.874199 line       556                     i = i_j[0]
excute 13:47:57.878189 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:47:57.882179 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.886166 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:47:57.890156 line       556                     i = i_j[0]
excute 13:47:57.893180 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:47:57.897169 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.900160 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:47:57.904151 line       556                     i = i_j[0]
excute 13:47:57.908112 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:47:57.911131 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.915103 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:47:57.918112 line       556                     i = i_j[0]
excute 13:47:57.922102 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:47:57.926060 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.929085 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:47:57.933060 line       556                     i = i_j[0]
excute 13:47:57.936065 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:47:57.940054 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.944022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 1)
excute 13:47:57.948001 line       556                     i = i_j[0]
excute 13:47:57.952987 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:47:57.956976 line       558                     if (i != j and demands[t][i][j]):
excute 13:47:57.960967 line       555                 for i_j in i_j_list:
excute 13:47:57.967951 line       581             self.write_matrix(
excute 13:47:57.972967 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:47:57.976956 line       583                 result_file_path,
excute 13:47:57.979948 line       584                 mode='a'
excute 13:47:57.986897 line       488         for t in time_steps:
excute Modified var:.. t = 122
excute 13:47:57.991916 line       489             if (t != self.TIME + 1):
excute 13:47:57.998866 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:47:58.004882 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:47:58.011830 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:58.015855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:58.019809 line       494                         if (i == j):
excute 13:47:58.023800 line       495                             continue
excute 13:47:58.027791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:58.033804 line       494                         if (i == j):
excute 13:47:58.037762 line       496                         i_j_list.append((
excute 13:47:58.040753 line       497                             i, j,
excute 13:47:58.045740 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.051724 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1)]
excute 13:47:58.065722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:58.074663 line       494                         if (i == j):
excute 13:47:58.078654 line       496                         i_j_list.append((
excute 13:47:58.081643 line       497                             i, j,
excute 13:47:58.087661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.091621 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0)]
excute 13:47:58.097637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:58.101600 line       494                         if (i == j):
excute 13:47:58.105580 line       496                         i_j_list.append((
excute 13:47:58.109569 line       497                             i, j,
excute 13:47:58.113558 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.119575 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0)]
excute 13:47:58.123532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:58.130516 line       494                         if (i == j):
excute 13:47:58.138558 line       496                         i_j_list.append((
excute 13:47:58.142481 line       497                             i, j,
excute 13:47:58.145504 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.148498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0)]
excute 13:47:58.152467 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:58.156445 line       494                         if (i == j):
excute 13:47:58.160444 line       496                         i_j_list.append((
excute 13:47:58.163456 line       497                             i, j,
excute 13:47:58.166448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.170407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:47:58.174395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:58.178387 line       494                         if (i == j):
excute 13:47:58.182376 line       496                         i_j_list.append((
excute 13:47:58.186364 line       497                             i, j,
excute 13:47:58.190354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.193346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0)]
excute 13:47:58.197336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:58.201325 line       494                         if (i == j):
excute 13:47:58.205314 line       496                         i_j_list.append((
excute 13:47:58.208337 line       497                             i, j,
excute 13:47:58.212294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.215319 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:47:58.218310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:58.222270 line       494                         if (i == j):
excute 13:47:58.226258 line       496                         i_j_list.append((
excute 13:47:58.229280 line       497                             i, j,
excute 13:47:58.233241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.237227 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:47:58.241216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:58.246238 line       494                         if (i == j):
excute 13:47:58.249227 line       496                         i_j_list.append((
excute 13:47:58.253217 line       497                             i, j,
excute 13:47:58.256208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.260200 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:47:58.263191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:58.267158 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:47:58.270171 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:58.275128 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:58.279117 line       494                         if (i == j):
excute 13:47:58.283107 line       496                         i_j_list.append((
excute 13:47:58.288124 line       497                             i, j,
excute 13:47:58.292082 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.296101 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0)]
excute 13:47:58.300060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:58.305046 line       494                         if (i == j):
excute 13:47:58.309037 line       495                             continue
excute 13:47:58.313027 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:58.318043 line       494                         if (i == j):
excute 13:47:58.322002 line       496                         i_j_list.append((
excute 13:47:58.327987 line       497                             i, j,
excute 13:47:58.336962 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.344953 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:47:58.347932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:58.354917 line       494                         if (i == j):
excute 13:47:58.360897 line       496                         i_j_list.append((
excute 13:47:58.363889 line       497                             i, j,
excute 13:47:58.368907 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.373863 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:47:58.380845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:58.384834 line       494                         if (i == j):
excute 13:47:58.391814 line       496                         i_j_list.append((
excute 13:47:58.394837 line       497                             i, j,
excute 13:47:58.398828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.401819 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:47:58.405778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:58.408802 line       494                         if (i == j):
excute 13:47:58.412790 line       496                         i_j_list.append((
excute 13:47:58.415781 line       497                             i, j,
excute 13:47:58.419774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.422764 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:47:58.425755 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:58.429748 line       494                         if (i == j):
excute 13:47:58.433703 line       496                         i_j_list.append((
excute 13:47:58.436726 line       497                             i, j,
excute 13:47:58.440684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.443677 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:47:58.448663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:58.452652 line       494                         if (i == j):
excute 13:47:58.457638 line       496                         i_j_list.append((
excute 13:47:58.461630 line       497                             i, j,
excute 13:47:58.464651 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.468641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:47:58.471632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:58.475591 line       494                         if (i == j):
excute 13:47:58.480610 line       496                         i_j_list.append((
excute 13:47:58.483602 line       497                             i, j,
excute 13:47:58.486594 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.490583 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:47:58.493574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:58.497534 line       494                         if (i == j):
excute 13:47:58.501554 line       496                         i_j_list.append((
excute 13:47:58.504545 line       497                             i, j,
excute 13:47:58.507539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.511494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:47:58.515517 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:58.518509 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:47:58.522497 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:58.525488 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:58.529478 line       494                         if (i == j):
excute 13:47:58.532474 line       496                         i_j_list.append((
excute 13:47:58.536466 line       497                             i, j,
excute 13:47:58.539453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.542449 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:47:58.546409 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:58.549431 line       494                         if (i == j):
excute 13:47:58.553415 line       496                         i_j_list.append((
excute 13:47:58.557408 line       497                             i, j,
excute 13:47:58.560402 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.564390 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1)]
excute 13:47:58.567381 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:58.571336 line       494                         if (i == j):
excute 13:47:58.575326 line       495                             continue
excute 13:47:58.578352 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:58.582308 line       494                         if (i == j):
excute 13:47:58.587294 line       496                         i_j_list.append((
excute 13:47:58.590286 line       497                             i, j,
excute 13:47:58.594275 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.598262 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0)]
excute 13:47:58.605245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:58.609234 line       494                         if (i == j):
excute 13:47:58.613255 line       496                         i_j_list.append((
excute 13:47:58.616214 line       497                             i, j,
excute 13:47:58.620235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.623228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:47:58.627218 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:58.630210 line       494                         if (i == j):
excute 13:47:58.635165 line       496                         i_j_list.append((
excute 13:47:58.638188 line       497                             i, j,
excute 13:47:58.641179 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.645137 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:47:58.648160 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:58.652120 line       494                         if (i == j):
excute 13:47:58.656110 line       496                         i_j_list.append((
excute 13:47:58.659133 line       497                             i, j,
excute 13:47:58.663089 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.666082 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:47:58.670072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:58.674061 line       494                         if (i == j):
excute 13:47:58.678051 line       496                         i_j_list.append((
excute 13:47:58.682040 line       497                             i, j,
excute 13:47:58.687027 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.693009 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:47:58.696998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:58.700990 line       494                         if (i == j):
excute 13:47:58.704977 line       496                         i_j_list.append((
excute 13:47:58.708968 line       497                             i, j,
excute 13:47:58.712959 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.715949 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:47:58.719939 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:58.723928 line       494                         if (i == j):
excute 13:47:58.727916 line       496                         i_j_list.append((
excute 13:47:58.731906 line       497                             i, j,
excute 13:47:58.737922 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.740881 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:47:58.744872 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:58.749858 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:47:58.752851 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:58.758867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:58.761856 line       494                         if (i == j):
excute 13:47:58.765848 line       496                         i_j_list.append((
excute 13:47:58.768838 line       497                             i, j,
excute 13:47:58.772828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.775818 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0)]
excute 13:47:58.778813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:58.782801 line       494                         if (i == j):
excute 13:47:58.787756 line       496                         i_j_list.append((
excute 13:47:58.791745 line       497                             i, j,
excute 13:47:58.794739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.798728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1)]
excute 13:47:58.801720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:58.805722 line       494                         if (i == j):
excute 13:47:58.809698 line       496                         i_j_list.append((
excute 13:47:58.812720 line       497                             i, j,
excute 13:47:58.816710 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.819702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0)]
excute 13:47:58.823692 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:58.827650 line       494                         if (i == j):
excute 13:47:58.830675 line       495                             continue
excute 13:47:58.834631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:58.837655 line       494                         if (i == j):
excute 13:47:58.840645 line       496                         i_j_list.append((
excute 13:47:58.844637 line       497                             i, j,
excute 13:47:58.847628 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.850621 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:47:58.854595 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:58.858567 line       494                         if (i == j):
excute 13:47:58.861591 line       496                         i_j_list.append((
excute 13:47:58.865555 line       497                             i, j,
excute 13:47:58.868572 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.871563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:47:58.875539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:58.878545 line       494                         if (i == j):
excute 13:47:58.882536 line       496                         i_j_list.append((
excute 13:47:58.886523 line       497                             i, j,
excute 13:47:58.891480 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.895469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:47:58.898461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:58.902450 line       494                         if (i == j):
excute 13:47:58.906440 line       496                         i_j_list.append((
excute 13:47:58.909432 line       497                             i, j,
excute 13:47:58.913452 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.916443 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:47:58.920432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:58.923424 line       494                         if (i == j):
excute 13:47:58.927415 line       496                         i_j_list.append((
excute 13:47:58.930407 line       497                             i, j,
excute 13:47:58.934395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.937386 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:47:58.940380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:58.944369 line       494                         if (i == j):
excute 13:47:58.951352 line       496                         i_j_list.append((
excute 13:47:58.956305 line       497                             i, j,
excute 13:47:58.960296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.963288 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:47:58.967278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:58.970269 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:47:58.974259 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:58.979244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:58.982235 line       494                         if (i == j):
excute 13:47:58.986227 line       496                         i_j_list.append((
excute 13:47:58.990216 line       497                             i, j,
excute 13:47:58.995234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:58.998225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0)]
excute 13:47:59.002216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:59.005174 line       494                         if (i == j):
excute 13:47:59.010163 line       496                         i_j_list.append((
excute 13:47:59.013186 line       497                             i, j,
excute 13:47:59.017143 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.020166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1)]
excute 13:47:59.023158 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:59.027124 line       494                         if (i == j):
excute 13:47:59.031107 line       496                         i_j_list.append((
excute 13:47:59.034130 line       497                             i, j,
excute 13:47:59.038086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.041111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0)]
excute 13:47:59.044101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:59.048060 line       494                         if (i == j):
excute 13:47:59.052050 line       496                         i_j_list.append((
excute 13:47:59.056038 line       497                             i, j,
excute 13:47:59.059064 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.062054 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0)]
excute 13:47:59.066012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:59.069037 line       494                         if (i == j):
excute 13:47:59.073025 line       495                             continue
excute 13:47:59.077015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:59.080006 line       494                         if (i == j):
excute 13:47:59.083966 line       496                         i_j_list.append((
excute 13:47:59.086987 line       497                             i, j,
excute 13:47:59.089981 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.093969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0)]
excute 13:47:59.097960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:59.101917 line       494                         if (i == j):
excute 13:47:59.105906 line       496                         i_j_list.append((
excute 13:47:59.108930 line       497                             i, j,
excute 13:47:59.111920 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.115911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:47:59.130544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:59.134531 line       494                         if (i == j):
excute 13:47:59.138520 line       496                         i_j_list.append((
excute 13:47:59.142510 line       497                             i, j,
excute 13:47:59.146499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.149491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:47:59.153481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:59.157470 line       494                         if (i == j):
excute 13:47:59.161459 line       496                         i_j_list.append((
excute 13:47:59.164451 line       497                             i, j,
excute 13:47:59.168442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.171432 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0)]
excute 13:47:59.174424 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:59.178415 line       494                         if (i == j):
excute 13:47:59.182403 line       496                         i_j_list.append((
excute 13:47:59.185395 line       497                             i, j,
excute 13:47:59.189384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.192377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0)]
excute 13:47:59.195369 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:59.201353 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:47:59.204344 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:59.208345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:59.211326 line       494                         if (i == j):
excute 13:47:59.215315 line       496                         i_j_list.append((
excute 13:47:59.218307 line       497                             i, j,
excute 13:47:59.221299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.225288 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0)]
excute 13:47:59.228280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:59.232276 line       494                         if (i == j):
excute 13:47:59.236259 line       496                         i_j_list.append((
excute 13:47:59.239251 line       497                             i, j,
excute 13:47:59.242243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.246233 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1)]
excute 13:47:59.249224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:59.253214 line       494                         if (i == j):
excute 13:47:59.257203 line       496                         i_j_list.append((
excute 13:47:59.260195 line       497                             i, j,
excute 13:47:59.264185 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.267178 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0)]
excute 13:47:59.271166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:59.275156 line       494                         if (i == j):
excute 13:47:59.279146 line       496                         i_j_list.append((
excute 13:47:59.283135 line       497                             i, j,
excute 13:47:59.287124 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.290116 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:47:59.294105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:59.298103 line       494                         if (i == j):
excute 13:47:59.303082 line       496                         i_j_list.append((
excute 13:47:59.307098 line       497                             i, j,
excute 13:47:59.310097 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.313090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:47:59.317075 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:59.321035 line       494                         if (i == j):
excute 13:47:59.325024 line       495                             continue
excute 13:47:59.333998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:59.338987 line       494                         if (i == j):
excute 13:47:59.343972 line       496                         i_j_list.append((
excute 13:47:59.346995 line       497                             i, j,
excute 13:47:59.350985 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.354975 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:47:59.357969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:59.361956 line       494                         if (i == j):
excute 13:47:59.365947 line       496                         i_j_list.append((
excute 13:47:59.369937 line       497                             i, j,
excute 13:47:59.373893 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.376915 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:47:59.379907 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:59.384878 line       494                         if (i == j):
excute 13:47:59.388854 line       496                         i_j_list.append((
excute 13:47:59.391875 line       497                             i, j,
excute 13:47:59.395833 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.398857 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:47:59.401848 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:59.406836 line       494                         if (i == j):
excute 13:47:59.410825 line       496                         i_j_list.append((
excute 13:47:59.414797 line       497                             i, j,
excute 13:47:59.417806 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.420798 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:47:59.424756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:59.428747 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:47:59.432736 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:59.436738 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:59.439747 line       494                         if (i == j):
excute 13:47:59.443739 line       496                         i_j_list.append((
excute 13:47:59.447695 line       497                             i, j,
excute 13:47:59.451684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.455673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0)]
excute 13:47:59.458665 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:59.465647 line       494                         if (i == j):
excute 13:47:59.471631 line       496                         i_j_list.append((
excute 13:47:59.475622 line       497                             i, j,
excute 13:47:59.481603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.485592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1)]
excute 13:47:59.490580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:59.497561 line       494                         if (i == j):
excute 13:47:59.504543 line       496                         i_j_list.append((
excute 13:47:59.511526 line       497                             i, j,
excute 13:47:59.515515 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.518507 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0)]
excute 13:47:59.522496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:59.527497 line       494                         if (i == j):
excute 13:47:59.530475 line       496                         i_j_list.append((
excute 13:47:59.534464 line       497                             i, j,
excute 13:47:59.537456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.541445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:47:59.545435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:59.549423 line       494                         if (i == j):
excute 13:47:59.553413 line       496                         i_j_list.append((
excute 13:47:59.557400 line       497                             i, j,
excute 13:47:59.560393 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.564382 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:47:59.571363 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:59.579343 line       494                         if (i == j):
excute 13:47:59.584329 line       496                         i_j_list.append((
excute 13:47:59.591324 line       497                             i, j,
excute 13:47:59.594302 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.598291 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0)]
excute 13:47:59.601283 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:59.605274 line       494                         if (i == j):
excute 13:47:59.608265 line       495                             continue
excute 13:47:59.613285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:59.619235 line       494                         if (i == j):
excute 13:47:59.623225 line       496                         i_j_list.append((
excute 13:47:59.626217 line       497                             i, j,
excute 13:47:59.630206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.633198 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:47:59.637187 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:59.641177 line       494                         if (i == j):
excute 13:47:59.644168 line       496                         i_j_list.append((
excute 13:47:59.648158 line       497                             i, j,
excute 13:47:59.651150 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.654142 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:47:59.658132 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:59.662121 line       494                         if (i == j):
excute 13:47:59.665112 line       496                         i_j_list.append((
excute 13:47:59.669116 line       497                             i, j,
excute 13:47:59.672094 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.675086 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:47:59.679075 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:59.683065 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:47:59.686057 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:47:59.690047 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:59.693038 line       494                         if (i == j):
excute 13:47:59.697027 line       496                         i_j_list.append((
excute 13:47:59.701018 line       497                             i, j,
excute 13:47:59.704010 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.707999 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:47:59.712987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:59.717972 line       494                         if (i == j):
excute 13:47:59.720963 line       496                         i_j_list.append((
excute 13:47:59.725959 line       497                             i, j,
excute 13:47:59.729942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.733936 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1)]
excute 13:47:59.736921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:59.740911 line       494                         if (i == j):
excute 13:47:59.745898 line       496                         i_j_list.append((
excute 13:47:59.748890 line       497                             i, j,
excute 13:47:59.752880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.755870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0)]
excute 13:47:59.759859 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:59.763852 line       494                         if (i == j):
excute 13:47:59.767841 line       496                         i_j_list.append((
excute 13:47:59.770832 line       497                             i, j,
excute 13:47:59.774821 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.777813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:47:59.781802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:47:59.786789 line       494                         if (i == j):
excute 13:47:59.790777 line       496                         i_j_list.append((
excute 13:47:59.793771 line       497                             i, j,
excute 13:47:59.796763 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.800752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:47:59.804739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:47:59.808730 line       494                         if (i == j):
excute 13:47:59.812720 line       496                         i_j_list.append((
excute 13:47:59.818706 line       497                             i, j,
excute 13:47:59.822694 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.825686 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:47:59.829674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:47:59.833674 line       494                         if (i == j):
excute 13:47:59.837654 line       496                         i_j_list.append((
excute 13:47:59.840646 line       497                             i, j,
excute 13:47:59.844635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.847627 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:47:59.851616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:47:59.855606 line       494                         if (i == j):
excute 13:47:59.859595 line       495                             continue
excute 13:47:59.863584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:47:59.867573 line       494                         if (i == j):
excute 13:47:59.871563 line       496                         i_j_list.append((
excute 13:47:59.875552 line       497                             i, j,
excute 13:47:59.879541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.883530 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:47:59.887519 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:47:59.890512 line       494                         if (i == j):
excute 13:47:59.894502 line       496                         i_j_list.append((
excute 13:47:59.898491 line       497                             i, j,
excute 13:47:59.901483 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.905471 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:47:59.908464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:47:59.912454 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:47:59.916443 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:47:59.921429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:47:59.925419 line       494                         if (i == j):
excute 13:47:59.929409 line       496                         i_j_list.append((
excute 13:47:59.932399 line       497                             i, j,
excute 13:47:59.936391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.939381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:47:59.942372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:47:59.947360 line       494                         if (i == j):
excute 13:47:59.952347 line       496                         i_j_list.append((
excute 13:47:59.956334 line       497                             i, j,
excute 13:47:59.960325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.963315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1)]
excute 13:47:59.966308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:47:59.970297 line       494                         if (i == j):
excute 13:47:59.974290 line       496                         i_j_list.append((
excute 13:47:59.977278 line       497                             i, j,
excute 13:47:59.981267 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:47:59.984260 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0)]
excute 13:47:59.987252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:47:59.991241 line       494                         if (i == j):
excute 13:47:59.995231 line       496                         i_j_list.append((
excute 13:47:59.998222 line       497                             i, j,
excute 13:48:00.007199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.014181 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:48:00.019169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:00.026151 line       494                         if (i == j):
excute 13:48:00.030140 line       496                         i_j_list.append((
excute 13:48:00.033131 line       497                             i, j,
excute 13:48:00.036123 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.040112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:48:00.044101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:00.048092 line       494                         if (i == j):
excute 13:48:00.052081 line       496                         i_j_list.append((
excute 13:48:00.056071 line       497                             i, j,
excute 13:48:00.059062 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.063051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:48:00.067040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:00.071030 line       494                         if (i == j):
excute 13:48:00.076017 line       496                         i_j_list.append((
excute 13:48:00.079008 line       497                             i, j,
excute 13:48:00.082000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.085989 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:48:00.089977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:00.093967 line       494                         if (i == j):
excute 13:48:00.096961 line       496                         i_j_list.append((
excute 13:48:00.100950 line       497                             i, j,
excute 13:48:00.103942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.107931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:00.110923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:00.114912 line       494                         if (i == j):
excute 13:48:00.119900 line       495                             continue
excute 13:48:00.123887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:00.128876 line       494                         if (i == j):
excute 13:48:00.132865 line       496                         i_j_list.append((
excute 13:48:00.136854 line       497                             i, j,
excute 13:48:00.139845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.143835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:00.147824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:00.151814 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:00.155803 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:00.158796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:00.162784 line       494                         if (i == j):
excute 13:48:00.166774 line       496                         i_j_list.append((
excute 13:48:00.170763 line       497                             i, j,
excute 13:48:00.174752 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.177744 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0)]
excute 13:48:00.181732 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:00.185721 line       494                         if (i == j):
excute 13:48:00.189713 line       496                         i_j_list.append((
excute 13:48:00.193702 line       497                             i, j,
excute 13:48:00.197691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.200683 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1)]
excute 13:48:00.204672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:00.208662 line       494                         if (i == j):
excute 13:48:00.212652 line       496                         i_j_list.append((
excute 13:48:00.215644 line       497                             i, j,
excute 13:48:00.219632 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.223622 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0)]
excute 13:48:00.226614 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:00.231600 line       494                         if (i == j):
excute 13:48:00.235589 line       496                         i_j_list.append((
excute 13:48:00.238581 line       497                             i, j,
excute 13:48:00.242573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.245562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:48:00.248554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:00.252544 line       494                         if (i == j):
excute 13:48:00.256532 line       496                         i_j_list.append((
excute 13:48:00.260522 line       497                             i, j,
excute 13:48:00.263514 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.267504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:48:00.270495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:00.274485 line       494                         if (i == j):
excute 13:48:00.278473 line       496                         i_j_list.append((
excute 13:48:00.282462 line       497                             i, j,
excute 13:48:00.285455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.289444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:48:00.292435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:00.296426 line       494                         if (i == j):
excute 13:48:00.299417 line       496                         i_j_list.append((
excute 13:48:00.303406 line       497                             i, j,
excute 13:48:00.306398 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.309390 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:48:00.313384 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:00.317369 line       494                         if (i == j):
excute 13:48:00.321392 line       496                         i_j_list.append((
excute 13:48:00.324385 line       497                             i, j,
excute 13:48:00.332332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.342303 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:48:00.350281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:00.357264 line       494                         if (i == j):
excute 13:48:00.365243 line       496                         i_j_list.append((
excute 13:48:00.372223 line       497                             i, j,
excute 13:48:00.376213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:00.379204 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 1), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 1), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:48:00.383193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:00.387185 line       494                         if (i == j):
excute 13:48:00.391171 line       495                             continue
excute 13:48:00.395161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:00.398153 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:00.402142 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (7, 0, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 1, -1, 1), (7, 1, -1, 1), (4, 0, 0, 0), (4, 2, 0, 0), (4, 3, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (8, 0, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (4, 1, 0, 1), (5, 1, 0, 1), (6, 1, 0, 1), (8, 1, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (9, 0, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (9, 1, 1, 1), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (2, 1, 2, 1), (3, 0, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (3, 1, 10, 1)]
excute 13:48:00.405135 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:00.409123 line       505                     if (self.RELOCATE):
excute 13:48:00.413113 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:00.416105 line       505                     if (self.RELOCATE):
excute 13:48:00.420095 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:00.424084 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:00.427076 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:00.432065 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:00.436067 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.442038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 0)
excute 13:48:00.445028 line       556                     i = i_j[0]
excute 13:48:00.450017 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:00.454019 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.457993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:00.460985 line       556                     i = i_j[0]
excute 13:48:00.464975 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:00.467967 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.471956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:00.474948 line       556                     i = i_j[0]
excute 13:48:00.478937 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:00.481929 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.485918 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:00.490247 line       556                     i = i_j[0]
excute 13:48:00.494240 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:00.497263 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.501241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:00.504243 line       556                     i = i_j[0]
excute 13:48:00.509200 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:00.512222 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.516180 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:00.520177 line       556                     i = i_j[0]
excute 13:48:00.523195 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:00.527187 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.531140 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:00.534173 line       556                     i = i_j[0]
excute 13:48:00.538160 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:00.541150 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.547100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:00.551088 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:00.556076 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:00.560065 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.564054 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:00.567046 line       556                     i = i_j[0]
excute 13:48:00.571035 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:00.575054 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.579024 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:48:00.582035 line       556                     i = i_j[0]
excute 13:48:00.585998 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:00.589985 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.593978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:00.597963 line       556                     i = i_j[0]
excute 13:48:00.600955 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:00.604944 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.608935 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:00.615129 line       556                     i = i_j[0]
excute 13:48:00.618978 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:00.622969 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.626934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:00.629949 line       556                     i = i_j[0]
excute 13:48:00.633913 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:00.637896 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.640920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:00.644909 line       556                     i = i_j[0]
excute 13:48:00.649881 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:00.652858 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.657845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:00.661834 line       556                     i = i_j[0]
excute 13:48:00.665824 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:00.669811 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.672837 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 1)
excute 13:48:00.676824 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:00.680782 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:00.683804 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.687794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 1)
excute 13:48:00.691784 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:00.694780 line       557                     j = i_j[1]
excute 13:48:00.698765 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.702755 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:48:00.705746 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:00.709704 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:00.713697 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.718682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:48:00.725662 line       556                     i = i_j[0]
excute 13:48:00.729653 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:00.733677 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.737672 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 0)
excute 13:48:00.740657 line       556                     i = i_j[0]
excute 13:48:00.744613 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:00.748603 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.753589 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:48:00.757576 line       556                     i = i_j[0]
excute 13:48:00.761566 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:00.764559 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.768549 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:48:00.771540 line       556                     i = i_j[0]
excute 13:48:00.775529 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:00.779548 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.783508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:48:00.786530 line       556                     i = i_j[0]
excute 13:48:00.790490 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:00.793516 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.797472 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 0)
excute 13:48:00.800463 line       556                     i = i_j[0]
excute 13:48:00.804452 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:00.808442 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.813428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:48:00.816420 line       556                     i = i_j[0]
excute 13:48:00.821408 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:00.824429 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.828418 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:48:00.831410 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:00.835400 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:00.839364 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.843348 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:48:00.846373 line       556                     i = i_j[0]
excute 13:48:00.850360 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:00.855317 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.859306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:48:00.863295 line       556                     i = i_j[0]
excute 13:48:00.867284 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:00.871274 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.875264 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:48:00.878256 line       556                     i = i_j[0]
excute 13:48:00.882245 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:00.886234 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.890222 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:48:00.893215 line       556                     i = i_j[0]
excute 13:48:00.898202 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:00.901194 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.905195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:48:00.909172 line       556                     i = i_j[0]
excute 13:48:00.913171 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:00.916184 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.920173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:48:00.924163 line       556                     i = i_j[0]
excute 13:48:00.928120 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:00.931144 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.935102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:48:00.939123 line       556                     i = i_j[0]
excute 13:48:00.943095 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:00.946103 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.952057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:48:00.959070 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:00.964026 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:00.970054 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.975002 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:48:00.978986 line       556                     i = i_j[0]
excute 13:48:00.982976 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:00.986965 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:00.990984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:48:00.994974 line       556                     i = i_j[0]
excute 13:48:00.998936 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:01.001954 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.005944 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:48:01.009933 line       556                     i = i_j[0]
excute 13:48:01.013891 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:01.016914 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.020905 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:48:01.024894 line       556                     i = i_j[0]
excute 13:48:01.028852 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:01.031844 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.036830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:48:01.039853 line       556                     i = i_j[0]
excute 13:48:01.043812 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:01.046835 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.050792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:48:01.053816 line       556                     i = i_j[0]
excute 13:48:01.058773 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:01.062794 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.066751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:48:01.069773 line       556                     i = i_j[0]
excute 13:48:01.073763 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:01.077753 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.081717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:01.084734 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:01.088724 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:01.091714 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.095704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:01.099684 line       556                     i = i_j[0]
excute 13:48:01.102684 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:01.106675 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.110645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:48:01.113659 line       556                     i = i_j[0]
excute 13:48:01.117615 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:01.120637 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.124596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:01.127589 line       556                     i = i_j[0]
excute 13:48:01.132576 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:01.135597 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.139586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:01.143578 line       556                     i = i_j[0]
excute 13:48:01.147534 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:01.150557 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.154516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:01.157538 line       556                     i = i_j[0]
excute 13:48:01.162493 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:01.166514 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.170472 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:01.174461 line       556                     i = i_j[0]
excute 13:48:01.178451 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:01.182440 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.186429 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:01.194409 line       556                     i = i_j[0]
excute 13:48:01.198401 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:01.201391 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.205380 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 1)
excute 13:48:01.209371 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:01.213358 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:01.217349 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.221338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 1)
excute 13:48:01.225327 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:01.230313 line       557                     j = i_j[1]
excute 13:48:01.234304 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.237296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 1)
excute 13:48:01.241284 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:01.245275 line       557                     j = i_j[1]
excute 13:48:01.249261 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.253252 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 1)
excute 13:48:01.257242 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:01.261232 line       557                     j = i_j[1]
excute 13:48:01.267215 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.270205 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:48:01.274197 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:01.282174 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:01.289179 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.297134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:48:01.302145 line       556                     i = i_j[0]
excute 13:48:01.306125 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:01.309133 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.313123 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:48:01.316115 line       556                     i = i_j[0]
excute 13:48:01.320104 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:01.325060 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.336043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:48:01.347003 line       556                     i = i_j[0]
excute 13:48:01.352985 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:01.359967 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.368943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:48:01.375924 line       556                     i = i_j[0]
excute 13:48:01.381907 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:01.386895 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.391881 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:48:01.395871 line       556                     i = i_j[0]
excute 13:48:01.400857 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:01.408837 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.413822 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:48:01.420835 line       556                     i = i_j[0]
excute 13:48:01.425791 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:01.429779 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.439786 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:48:01.449728 line       556                     i = i_j[0]
excute 13:48:01.456740 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:01.463689 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.473664 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:48:01.481641 line       556                     i = i_j[0]
excute 13:48:01.488623 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:01.496601 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.504581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:48:01.510563 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:01.517553 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:01.523532 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.530511 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:48:01.537490 line       556                     i = i_j[0]
excute 13:48:01.544473 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:01.551455 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.557438 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:48:01.565417 line       556                     i = i_j[0]
excute 13:48:01.572398 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:01.580377 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.586361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:48:01.591347 line       556                     i = i_j[0]
excute 13:48:01.597331 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:01.604313 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.611295 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:48:01.618277 line       556                     i = i_j[0]
excute 13:48:01.625264 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:01.633235 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.640218 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:48:01.646203 line       556                     i = i_j[0]
excute 13:48:01.655178 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:01.660163 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.667145 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:48:01.675124 line       556                     i = i_j[0]
excute 13:48:01.684101 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:01.692078 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.699060 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:48:01.707038 line       556                     i = i_j[0]
excute 13:48:01.716016 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:01.721001 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.727982 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 1)
excute 13:48:01.735962 line       556                     i = i_j[0]
excute 13:48:01.742942 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:01.749923 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.758900 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 130
excute 13:48:01.764883 line       560                         if (t_tmp > self.TIME):
excute 13:48:01.772864 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:01.779844 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:01.788819 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 158
excute 13:48:01.794806 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:01.799792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:01.803780 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:01.806771 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:01.811759 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.815748 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:48:01.819737 line       556                     i = i_j[0]
excute 13:48:01.823727 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:01.826718 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.830708 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:01.834697 line       556                     i = i_j[0]
excute 13:48:01.838687 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:01.841679 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.846287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:01.850278 line       556                     i = i_j[0]
excute 13:48:01.853270 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:01.857259 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.861249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:01.864240 line       556                     i = i_j[0]
excute 13:48:01.868230 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:01.871222 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.875212 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:01.878204 line       556                     i = i_j[0]
excute 13:48:01.882193 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:01.886184 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.890172 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:01.893163 line       556                     i = i_j[0]
excute 13:48:01.897169 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:01.901142 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.904134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:01.908125 line       556                     i = i_j[0]
excute 13:48:01.914140 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:01.918096 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.923096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:48:01.927075 line       556                     i = i_j[0]
excute 13:48:01.932094 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:01.936077 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.939072 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:48:01.943065 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:01.948018 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:01.953006 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.957996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:48:01.968962 line       556                     i = i_j[0]
excute 13:48:01.976939 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:01.980929 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:01.986913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:48:01.992898 line       556                     i = i_j[0]
excute 13:48:01.998881 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:02.002873 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:02.006863 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:48:02.010851 line       556                     i = i_j[0]
excute 13:48:02.015836 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:02.019827 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:02.026808 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:48:02.032790 line       556                     i = i_j[0]
excute 13:48:02.037778 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:02.042764 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:02.048749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:48:02.053735 line       556                     i = i_j[0]
excute 13:48:02.058723 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:02.064705 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:02.069694 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:48:02.076673 line       556                     i = i_j[0]
excute 13:48:02.080662 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:02.083654 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:02.087643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:48:02.091634 line       556                     i = i_j[0]
excute 13:48:02.095623 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:02.099613 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:02.102604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 1)
excute 13:48:02.106594 line       556                     i = i_j[0]
excute 13:48:02.110584 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:02.113575 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:02.117565 line       555                 for i_j in i_j_list:
excute 13:48:02.120586 line       581             self.write_matrix(
excute 13:48:02.123581 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:02.127570 line       583                 result_file_path,
excute 13:48:02.130561 line       584                 mode='a'
excute 13:48:02.137513 line       488         for t in time_steps:
excute Modified var:.. t = 123
excute 13:48:02.142531 line       489             if (t != self.TIME + 1):
excute 13:48:02.149479 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:02.155462 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:02.159451 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:02.163441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:02.167431 line       494                         if (i == j):
excute 13:48:02.171423 line       495                             continue
excute 13:48:02.176408 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:02.180396 line       494                         if (i == j):
excute 13:48:02.184386 line       496                         i_j_list.append((
excute 13:48:02.189374 line       497                             i, j,
excute 13:48:02.207324 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.225276 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:48:02.233255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:02.240236 line       494                         if (i == j):
excute 13:48:02.247217 line       496                         i_j_list.append((
excute 13:48:02.254199 line       497                             i, j,
excute 13:48:02.260182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.267165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:48:02.272152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:02.279133 line       494                         if (i == j):
excute 13:48:02.285117 line       496                         i_j_list.append((
excute 13:48:02.290102 line       497                             i, j,
excute 13:48:02.296088 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.302075 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2)]
excute 13:48:02.308056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:02.312045 line       494                         if (i == j):
excute 13:48:02.316033 line       496                         i_j_list.append((
excute 13:48:02.320022 line       497                             i, j,
excute 13:48:02.327005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.338973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1)]
excute 13:48:02.344958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:02.350950 line       494                         if (i == j):
excute 13:48:02.354930 line       496                         i_j_list.append((
excute 13:48:02.359916 line       497                             i, j,
excute 13:48:02.362907 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.365899 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0)]
excute 13:48:02.369889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:02.373879 line       494                         if (i == j):
excute 13:48:02.377868 line       496                         i_j_list.append((
excute 13:48:02.381857 line       497                             i, j,
excute 13:48:02.385847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.388839 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0)]
excute 13:48:02.392828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:02.396818 line       494                         if (i == j):
excute 13:48:02.399810 line       496                         i_j_list.append((
excute 13:48:02.403833 line       497                             i, j,
excute 13:48:02.409783 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.412806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:48:02.415797 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:02.419775 line       494                         if (i == j):
excute 13:48:02.423757 line       496                         i_j_list.append((
excute 13:48:02.426771 line       497                             i, j,
excute 13:48:02.430759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.433750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1)]
excute 13:48:02.436742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:02.443694 line       494                         if (i == j):
excute 13:48:02.451672 line       496                         i_j_list.append((
excute 13:48:02.457659 line       497                             i, j,
excute 13:48:02.460648 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.468643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0)]
excute 13:48:02.471648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:02.476628 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:02.479628 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:02.483617 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:02.486611 line       494                         if (i == j):
excute 13:48:02.490574 line       496                         i_j_list.append((
excute 13:48:02.494555 line       497                             i, j,
excute 13:48:02.497548 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.500539 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0)]
excute 13:48:02.504529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:02.508521 line       494                         if (i == j):
excute 13:48:02.513505 line       495                             continue
excute 13:48:02.516497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:02.520486 line       494                         if (i == j):
excute 13:48:02.523478 line       496                         i_j_list.append((
excute 13:48:02.527467 line       497                             i, j,
excute 13:48:02.530459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.533451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:48:02.536444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:02.540433 line       494                         if (i == j):
excute 13:48:02.544422 line       496                         i_j_list.append((
excute 13:48:02.547414 line       497                             i, j,
excute 13:48:02.550406 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.553398 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2)]
excute 13:48:02.557388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:02.561378 line       494                         if (i == j):
excute 13:48:02.567362 line       496                         i_j_list.append((
excute 13:48:02.571354 line       497                             i, j,
excute 13:48:02.577335 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.581325 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1)]
excute 13:48:02.585317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:02.589339 line       494                         if (i == j):
excute 13:48:02.596285 line       496                         i_j_list.append((
excute 13:48:02.600275 line       497                             i, j,
excute 13:48:02.606291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.612274 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0)]
excute 13:48:02.616233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:02.620220 line       494                         if (i == j):
excute 13:48:02.624209 line       496                         i_j_list.append((
excute 13:48:02.627201 line       497                             i, j,
excute 13:48:02.630193 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.634182 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:48:02.638171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:02.641195 line       494                         if (i == j):
excute 13:48:02.645154 line       496                         i_j_list.append((
excute 13:48:02.648176 line       497                             i, j,
excute 13:48:02.652135 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.656132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:48:02.659147 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:02.663106 line       494                         if (i == j):
excute 13:48:02.667126 line       496                         i_j_list.append((
excute 13:48:02.671122 line       497                             i, j,
excute 13:48:02.674111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.677102 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1)]
excute 13:48:02.681068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:02.684081 line       494                         if (i == j):
excute 13:48:02.688043 line       496                         i_j_list.append((
excute 13:48:02.691030 line       497                             i, j,
excute 13:48:02.695019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.699010 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0)]
excute 13:48:02.702032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:02.706024 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:02.710009 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:02.714003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:02.718959 line       494                         if (i == j):
excute 13:48:02.722976 line       496                         i_j_list.append((
excute 13:48:02.726955 line       497                             i, j,
excute 13:48:02.732918 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.735910 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:48:02.738934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:02.742923 line       494                         if (i == j):
excute 13:48:02.746887 line       496                         i_j_list.append((
excute 13:48:02.749905 line       497                             i, j,
excute 13:48:02.753897 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.756889 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:48:02.760876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:02.764834 line       494                         if (i == j):
excute 13:48:02.767859 line       495                             continue
excute 13:48:02.771815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:02.774839 line       494                         if (i == j):
excute 13:48:02.778796 line       496                         i_j_list.append((
excute 13:48:02.781819 line       497                             i, j,
excute 13:48:02.784812 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.788770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2)]
excute 13:48:02.791792 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:02.795750 line       494                         if (i == j):
excute 13:48:02.798776 line       496                         i_j_list.append((
excute 13:48:02.802733 line       497                             i, j,
excute 13:48:02.805756 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.808747 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1)]
excute 13:48:02.811742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:02.815729 line       494                         if (i == j):
excute 13:48:02.820687 line       496                         i_j_list.append((
excute 13:48:02.824706 line       497                             i, j,
excute 13:48:02.827696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.830695 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0)]
excute 13:48:02.837663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:02.841629 line       494                         if (i == j):
excute 13:48:02.846614 line       496                         i_j_list.append((
excute 13:48:02.850604 line       497                             i, j,
excute 13:48:02.853598 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.857587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:48:02.861574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:02.864566 line       494                         if (i == j):
excute 13:48:02.868555 line       496                         i_j_list.append((
excute 13:48:02.871548 line       497                             i, j,
excute 13:48:02.875537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.878529 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:02.881521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:02.885510 line       494                         if (i == j):
excute 13:48:02.889534 line       496                         i_j_list.append((
excute 13:48:02.893521 line       497                             i, j,
excute 13:48:02.896513 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.899506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1)]
excute 13:48:02.903495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:02.907453 line       494                         if (i == j):
excute 13:48:02.910475 line       496                         i_j_list.append((
excute 13:48:02.914465 line       497                             i, j,
excute 13:48:02.917457 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.921416 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0)]
excute 13:48:02.925404 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:02.929394 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:02.932386 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:02.936407 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:02.939398 line       494                         if (i == j):
excute 13:48:02.943387 line       496                         i_j_list.append((
excute 13:48:02.947347 line       497                             i, j,
excute 13:48:02.951367 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.955356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0)]
excute 13:48:02.958347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:02.962337 line       494                         if (i == j):
excute 13:48:02.966295 line       496                         i_j_list.append((
excute 13:48:02.969321 line       497                             i, j,
excute 13:48:02.973308 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.977265 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:48:02.981287 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:02.985245 line       494                         if (i == j):
excute 13:48:02.988270 line       496                         i_j_list.append((
excute 13:48:02.992227 line       497                             i, j,
excute 13:48:02.995249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:02.998241 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:48:03.002198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:03.005222 line       494                         if (i == j):
excute 13:48:03.009214 line       495                             continue
excute 13:48:03.013169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:03.016161 line       494                         if (i == j):
excute 13:48:03.020151 line       496                         i_j_list.append((
excute 13:48:03.023143 line       497                             i, j,
excute 13:48:03.027131 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.030124 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1)]
excute 13:48:03.033116 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:03.037105 line       494                         if (i == j):
excute 13:48:03.041096 line       496                         i_j_list.append((
excute 13:48:03.044120 line       497                             i, j,
excute 13:48:03.048077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.051099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0)]
excute 13:48:03.054091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:03.058081 line       494                         if (i == j):
excute 13:48:03.062039 line       496                         i_j_list.append((
excute 13:48:03.065065 line       497                             i, j,
excute 13:48:03.068057 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.072043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:48:03.076004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:03.079992 line       494                         if (i == j):
excute 13:48:03.083015 line       496                         i_j_list.append((
excute 13:48:03.086980 line       497                             i, j,
excute 13:48:03.089995 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.092987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:48:03.096980 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:03.100935 line       494                         if (i == j):
excute 13:48:03.103959 line       496                         i_j_list.append((
excute 13:48:03.107951 line       497                             i, j,
excute 13:48:03.110939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.113931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1)]
excute 13:48:03.117890 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:03.120915 line       494                         if (i == j):
excute 13:48:03.124872 line       496                         i_j_list.append((
excute 13:48:03.129859 line       497                             i, j,
excute 13:48:03.133848 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.136841 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0)]
excute 13:48:03.140828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:03.143852 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:03.147844 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:03.151807 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:03.154822 line       494                         if (i == j):
excute 13:48:03.158781 line       496                         i_j_list.append((
excute 13:48:03.161803 line       497                             i, j,
excute 13:48:03.165762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.168787 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0)]
excute 13:48:03.171779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:03.175735 line       494                         if (i == j):
excute 13:48:03.179730 line       496                         i_j_list.append((
excute 13:48:03.182748 line       497                             i, j,
excute 13:48:03.186719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.189729 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0)]
excute 13:48:03.192723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:03.196680 line       494                         if (i == j):
excute 13:48:03.200667 line       496                         i_j_list.append((
excute 13:48:03.204658 line       497                             i, j,
excute 13:48:03.209288 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.212314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0)]
excute 13:48:03.216304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:03.220276 line       494                         if (i == j):
excute 13:48:03.223285 line       496                         i_j_list.append((
excute 13:48:03.227275 line       497                             i, j,
excute 13:48:03.231235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.234224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2)]
excute 13:48:03.238214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:03.241205 line       494                         if (i == j):
excute 13:48:03.245194 line       495                             continue
excute 13:48:03.249184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:03.252176 line       494                         if (i == j):
excute 13:48:03.256165 line       496                         i_j_list.append((
excute 13:48:03.260187 line       497                             i, j,
excute 13:48:03.263178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.266170 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0)]
excute 13:48:03.270162 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:03.274143 line       494                         if (i == j):
excute 13:48:03.278142 line       496                         i_j_list.append((
excute 13:48:03.282097 line       497                             i, j,
excute 13:48:03.285121 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.288111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0)]
excute 13:48:03.292071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:03.295093 line       494                         if (i == j):
excute 13:48:03.299051 line       496                         i_j_list.append((
excute 13:48:03.302077 line       497                             i, j,
excute 13:48:03.306063 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.310055 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0)]
excute 13:48:03.313044 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:03.317008 line       494                         if (i == j):
excute 13:48:03.320993 line       496                         i_j_list.append((
excute 13:48:03.324982 line       497                             i, j,
excute 13:48:03.329972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.338979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1)]
excute 13:48:03.343931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:03.346923 line       494                         if (i == j):
excute 13:48:03.350913 line       496                         i_j_list.append((
excute 13:48:03.354901 line       497                             i, j,
excute 13:48:03.358891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.361883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0)]
excute 13:48:03.364875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:03.368864 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:03.372854 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:03.376844 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:03.379867 line       494                         if (i == j):
excute 13:48:03.384855 line       496                         i_j_list.append((
excute 13:48:03.387813 line       497                             i, j,
excute 13:48:03.390806 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.394812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0)]
excute 13:48:03.397788 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:03.401779 line       494                         if (i == j):
excute 13:48:03.405766 line       496                         i_j_list.append((
excute 13:48:03.408757 line       497                             i, j,
excute 13:48:03.411749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.415739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:48:03.418730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:03.421723 line       494                         if (i == j):
excute 13:48:03.425712 line       496                         i_j_list.append((
excute 13:48:03.429702 line       497                             i, j,
excute 13:48:03.432693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.436684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:48:03.440673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:03.443664 line       494                         if (i == j):
excute 13:48:03.447655 line       496                         i_j_list.append((
excute 13:48:03.451644 line       497                             i, j,
excute 13:48:03.455633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.459637 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2)]
excute 13:48:03.462614 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:03.466603 line       494                         if (i == j):
excute 13:48:03.470593 line       496                         i_j_list.append((
excute 13:48:03.473585 line       497                             i, j,
excute 13:48:03.476576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.480567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1)]
excute 13:48:03.484555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:03.488545 line       494                         if (i == j):
excute 13:48:03.492535 line       495                             continue
excute 13:48:03.495526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:03.498517 line       494                         if (i == j):
excute 13:48:03.502508 line       496                         i_j_list.append((
excute 13:48:03.505499 line       497                             i, j,
excute 13:48:03.509490 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.513478 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0)]
excute 13:48:03.516470 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:03.520462 line       494                         if (i == j):
excute 13:48:03.523451 line       496                         i_j_list.append((
excute 13:48:03.527441 line       497                             i, j,
excute 13:48:03.530433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.533424 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:48:03.536416 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:03.541405 line       494                         if (i == j):
excute 13:48:03.545393 line       496                         i_j_list.append((
excute 13:48:03.548384 line       497                             i, j,
excute 13:48:03.552373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.556369 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1)]
excute 13:48:03.559355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:03.563345 line       494                         if (i == j):
excute 13:48:03.567348 line       496                         i_j_list.append((
excute 13:48:03.570357 line       497                             i, j,
excute 13:48:03.573352 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.577339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0)]
excute 13:48:03.580331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:03.584289 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:03.587312 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:03.591279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:03.594293 line       494                         if (i == j):
excute 13:48:03.598282 line       496                         i_j_list.append((
excute 13:48:03.601275 line       497                             i, j,
excute 13:48:03.605268 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.608259 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0)]
excute 13:48:03.612213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:03.615238 line       494                         if (i == j):
excute 13:48:03.619227 line       496                         i_j_list.append((
excute 13:48:03.623185 line       497                             i, j,
excute 13:48:03.626209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.629203 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:48:03.633190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:03.637148 line       494                         if (i == j):
excute 13:48:03.641139 line       496                         i_j_list.append((
excute 13:48:03.650114 line       497                             i, j,
excute 13:48:03.658091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.664112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:48:03.668066 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:03.676043 line       494                         if (i == j):
excute 13:48:03.680062 line       496                         i_j_list.append((
excute 13:48:03.683024 line       497                             i, j,
excute 13:48:03.687013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.690006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2)]
excute 13:48:03.692998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:03.696987 line       494                         if (i == j):
excute 13:48:03.700976 line       496                         i_j_list.append((
excute 13:48:03.704966 line       497                             i, j,
excute 13:48:03.708956 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.711946 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1)]
excute 13:48:03.715937 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:03.718960 line       494                         if (i == j):
excute 13:48:03.723917 line       496                         i_j_list.append((
excute 13:48:03.726909 line       497                             i, j,
excute 13:48:03.730896 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.734888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0)]
excute 13:48:03.737880 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:03.742866 line       494                         if (i == j):
excute 13:48:03.748849 line       495                             continue
excute 13:48:03.752869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:03.756862 line       494                         if (i == j):
excute 13:48:03.760818 line       496                         i_j_list.append((
excute 13:48:03.763840 line       497                             i, j,
excute 13:48:03.767799 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.770821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:48:03.773813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:03.777803 line       494                         if (i == j):
excute 13:48:03.781761 line       496                         i_j_list.append((
excute 13:48:03.784788 line       497                             i, j,
excute 13:48:03.788776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.791774 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1)]
excute 13:48:03.794762 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:03.798752 line       494                         if (i == j):
excute 13:48:03.802740 line       496                         i_j_list.append((
excute 13:48:03.806732 line       497                             i, j,
excute 13:48:03.809725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.813680 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0)]
excute 13:48:03.816667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:03.823659 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:03.826641 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:03.834622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:03.841601 line       494                         if (i == j):
excute 13:48:03.845590 line       496                         i_j_list.append((
excute 13:48:03.849580 line       497                             i, j,
excute 13:48:03.853570 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.857557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:48:03.860550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:03.864539 line       494                         if (i == j):
excute 13:48:03.868529 line       496                         i_j_list.append((
excute 13:48:03.871551 line       497                             i, j,
excute 13:48:03.874543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.878533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:48:03.881525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:03.885486 line       494                         if (i == j):
excute 13:48:03.889472 line       496                         i_j_list.append((
excute 13:48:03.892465 line       497                             i, j,
excute 13:48:03.896453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.899446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:03.902438 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:03.906427 line       494                         if (i == j):
excute 13:48:03.910416 line       496                         i_j_list.append((
excute 13:48:03.913408 line       497                             i, j,
excute 13:48:03.917398 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.920390 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2)]
excute 13:48:03.923382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:03.927371 line       494                         if (i == j):
excute 13:48:03.931360 line       496                         i_j_list.append((
excute 13:48:03.934352 line       497                             i, j,
excute 13:48:03.937344 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.941333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1)]
excute 13:48:03.944326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:03.950313 line       494                         if (i == j):
excute 13:48:03.956296 line       496                         i_j_list.append((
excute 13:48:03.960315 line       497                             i, j,
excute 13:48:03.966272 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.971270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0)]
excute 13:48:03.975245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:03.979233 line       494                         if (i == j):
excute 13:48:03.983226 line       496                         i_j_list.append((
excute 13:48:03.987211 line       497                             i, j,
excute 13:48:03.990203 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:03.994193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:48:03.997184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:04.001176 line       494                         if (i == j):
excute 13:48:04.005163 line       495                             continue
excute 13:48:04.008155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:04.012144 line       494                         if (i == j):
excute 13:48:04.016134 line       496                         i_j_list.append((
excute 13:48:04.019126 line       497                             i, j,
excute 13:48:04.022118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.026107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1)]
excute 13:48:04.029099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:04.033091 line       494                         if (i == j):
excute 13:48:04.037079 line       496                         i_j_list.append((
excute 13:48:04.040070 line       497                             i, j,
excute 13:48:04.043062 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.047052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0)]
excute 13:48:04.050043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:04.054035 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:04.059019 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:04.063009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:04.066999 line       494                         if (i == j):
excute 13:48:04.071004 line       496                         i_j_list.append((
excute 13:48:04.073979 line       497                             i, j,
excute 13:48:04.077968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.080960 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:04.083952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:04.087942 line       494                         if (i == j):
excute 13:48:04.091931 line       496                         i_j_list.append((
excute 13:48:04.094959 line       497                             i, j,
excute 13:48:04.097946 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.101937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:48:04.104928 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:04.108919 line       494                         if (i == j):
excute 13:48:04.112908 line       496                         i_j_list.append((
excute 13:48:04.116865 line       497                             i, j,
excute 13:48:04.119888 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.122880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:04.126873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:04.130829 line       494                         if (i == j):
excute 13:48:04.134849 line       496                         i_j_list.append((
excute 13:48:04.138838 line       497                             i, j,
excute 13:48:04.141829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.144822 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2)]
excute 13:48:04.148810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:04.152798 line       494                         if (i == j):
excute 13:48:04.156759 line       496                         i_j_list.append((
excute 13:48:04.160751 line       497                             i, j,
excute 13:48:04.163739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.167728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1)]
excute 13:48:04.170754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:04.174711 line       494                         if (i == j):
excute 13:48:04.178731 line       496                         i_j_list.append((
excute 13:48:04.182724 line       497                             i, j,
excute 13:48:04.185712 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.189702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0)]
excute 13:48:04.192695 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:04.196684 line       494                         if (i == j):
excute 13:48:04.200672 line       496                         i_j_list.append((
excute 13:48:04.204661 line       497                             i, j,
excute 13:48:04.208623 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.211611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:48:04.214603 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:04.218592 line       494                         if (i == j):
excute 13:48:04.222582 line       496                         i_j_list.append((
excute 13:48:04.225574 line       497                             i, j,
excute 13:48:04.229563 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.232555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:04.236545 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:04.239536 line       494                         if (i == j):
excute 13:48:04.243525 line       495                             continue
excute 13:48:04.246518 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:04.250507 line       494                         if (i == j):
excute 13:48:04.254497 line       496                         i_j_list.append((
excute 13:48:04.259484 line       497                             i, j,
excute 13:48:04.263473 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.266464 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:04.270453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:04.274443 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:04.278469 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:04.282423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:04.285446 line       494                         if (i == j):
excute 13:48:04.289435 line       496                         i_j_list.append((
excute 13:48:04.293393 line       497                             i, j,
excute 13:48:04.296417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.299410 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0)]
excute 13:48:04.303374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:04.306391 line       494                         if (i == j):
excute 13:48:04.310383 line       496                         i_j_list.append((
excute 13:48:04.314369 line       497                             i, j,
excute 13:48:04.317361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.320352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:48:04.324344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:04.332291 line       494                         if (i == j):
excute 13:48:04.339271 line       496                         i_j_list.append((
excute 13:48:04.345286 line       497                             i, j,
excute 13:48:04.348278 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.352268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:48:04.356231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:04.361214 line       494                         if (i == j):
excute 13:48:04.366199 line       496                         i_j_list.append((
excute 13:48:04.370220 line       497                             i, j,
excute 13:48:04.373182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.377200 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 2)]
excute 13:48:04.380193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:04.385181 line       494                         if (i == j):
excute 13:48:04.389138 line       496                         i_j_list.append((
excute 13:48:04.393154 line       497                             i, j,
excute 13:48:04.396118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.399110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 2), (9, 4, 1, 1)]
excute 13:48:04.403099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:04.407089 line       494                         if (i == j):
excute 13:48:04.411078 line       496                         i_j_list.append((
excute 13:48:04.415069 line       497                             i, j,
excute 13:48:04.418091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.421083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 2), (9, 4, 1, 1), (9, 5, 1, 0)]
excute 13:48:04.425072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:04.429031 line       494                         if (i == j):
excute 13:48:04.433021 line       496                         i_j_list.append((
excute 13:48:04.436043 line       497                             i, j,
excute 13:48:04.440001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.443028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 2), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:48:04.446016 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:04.450972 line       494                         if (i == j):
excute 13:48:04.454961 line       496                         i_j_list.append((
excute 13:48:04.458950 line       497                             i, j,
excute 13:48:04.461977 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.465931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 2), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:48:04.469921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:04.473910 line       494                         if (i == j):
excute 13:48:04.477900 line       496                         i_j_list.append((
excute 13:48:04.481889 line       497                             i, j,
excute 13:48:04.485913 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:04.488901 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 2), (0, 4, -1, 1), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 2), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 2), (2, 4, 2, 1), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 1), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 0), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 3, 0, 2), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 8, 0, 1), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 2), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 2), (6, 4, 0, 1), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 2), (7, 4, -1, 1), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 2), (8, 4, 0, 1), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 2), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 1)]
excute 13:48:04.492890 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:04.496850 line       494                         if (i == j):
excute 13:48:04.500839 line       495                             continue
excute 13:48:04.503862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:04.507820 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:04.511817 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 9, -1, 0), (0, 4, -1, 1), (0, 8, -1, 1), (7, 4, -1, 1), (7, 8, -1, 1), (0, 3, -1, 2), (7, 3, -1, 2), (4, 0, 0, 0), (4, 1, 0, 0), (4, 2, 0, 0), (4, 5, 0, 0), (4, 6, 0, 0), (4, 7, 0, 0), (4, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (4, 8, 0, 1), (5, 4, 0, 1), (5, 8, 0, 1), (6, 4, 0, 1), (6, 8, 0, 1), (8, 4, 0, 1), (4, 3, 0, 2), (5, 3, 0, 2), (6, 3, 0, 2), (8, 3, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (1, 4, 1, 1), (1, 8, 1, 1), (9, 4, 1, 1), (9, 8, 1, 1), (1, 3, 1, 2), (9, 3, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 9, 2, 0), (2, 4, 2, 1), (2, 8, 2, 1), (2, 3, 2, 2), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 9, 10, 0), (3, 4, 10, 1), (3, 8, 10, 1)]
excute 13:48:04.514835 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:04.518791 line       505                     if (self.RELOCATE):
excute 13:48:04.522781 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:04.525802 line       505                     if (self.RELOCATE):
excute 13:48:04.529762 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:04.532784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:48:04.536773 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:04.540764 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:04.544722 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.547745 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:04.551733 line       556                     i = i_j[0]
excute 13:48:04.555692 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:04.558683 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.562673 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:04.566662 line       556                     i = i_j[0]
excute 13:48:04.578762 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:04.582772 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.586754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:04.589764 line       556                     i = i_j[0]
excute 13:48:04.593722 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:04.596744 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.600708 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:04.603725 line       556                     i = i_j[0]
excute 13:48:04.607719 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:04.611706 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.615662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:04.618687 line       556                     i = i_j[0]
excute 13:48:04.622645 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:04.625667 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.629658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:04.633647 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:04.637605 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:04.641626 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.645588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:04.648606 line       556                     i = i_j[0]
excute 13:48:04.652565 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:04.656585 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.660543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:04.663566 line       556                     i = i_j[0]
excute 13:48:04.667556 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:04.671545 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.677498 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:04.680521 line       556                     i = i_j[0]
excute 13:48:04.684480 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:04.687502 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.691478 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:04.695449 line       556                     i = i_j[0]
excute 13:48:04.700437 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:04.704425 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.708415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:04.713402 line       556                     i = i_j[0]
excute 13:48:04.718391 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:04.721382 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.725370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 1)
excute 13:48:04.729359 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:04.733347 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:04.737337 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.741326 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 1)
excute 13:48:04.744318 line       556                     i = i_j[0]
excute 13:48:04.748307 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:04.752297 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.756286 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 1)
excute 13:48:04.759278 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:04.763267 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:04.767257 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.771248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 1)
excute 13:48:04.774238 line       556                     i = i_j[0]
excute 13:48:04.779228 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:04.782218 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.787217 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 141
excute 13:48:04.793187 line       560                         if (t_tmp > self.TIME):
excute 13:48:04.797178 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:04.801168 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:04.804158 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 159
excute 13:48:04.808149 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:04.813135 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 2)
excute 13:48:04.816158 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:04.820147 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:04.824136 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.828126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 2)
excute 13:48:04.832085 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:04.835107 line       557                     j = i_j[1]
excute 13:48:04.839097 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.843056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 0, 0)
excute 13:48:04.846079 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:04.850035 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:04.854060 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.858048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 0, 0)
excute 13:48:04.861039 line       556                     i = i_j[0]
excute 13:48:04.865027 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:04.869019 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.872975 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 0, 0)
excute 13:48:04.875998 line       556                     i = i_j[0]
excute 13:48:04.880953 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:04.883945 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.887934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 0, 0)
excute 13:48:04.890926 line       556                     i = i_j[0]
excute 13:48:04.894915 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:04.897907 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.901896 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 0, 0)
excute 13:48:04.905887 line       556                     i = i_j[0]
excute 13:48:04.908878 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:04.912867 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.916857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 0, 0)
excute 13:48:04.919849 line       556                     i = i_j[0]
excute 13:48:04.923838 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:04.926830 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.930820 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 0, 0)
excute 13:48:04.933812 line       556                     i = i_j[0]
excute 13:48:04.937802 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:04.940793 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.944782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:48:04.948773 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:04.952792 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:04.957782 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.960771 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:48:04.964762 line       556                     i = i_j[0]
excute 13:48:04.968752 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:04.971711 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.978693 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:48:04.985674 line       556                     i = i_j[0]
excute 13:48:04.989695 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:04.993685 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:04.997673 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:48:05.000664 line       556                     i = i_j[0]
excute 13:48:05.004623 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:05.007646 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.011636 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:48:05.015625 line       556                     i = i_j[0]
excute 13:48:05.019590 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:05.022607 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.026565 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:48:05.029588 line       556                     i = i_j[0]
excute 13:48:05.033545 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:05.037536 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.040528 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:48:05.044517 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:05.048507 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:05.052497 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.057495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:48:05.060475 line       556                     i = i_j[0]
excute 13:48:05.064464 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:05.068453 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.073441 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:48:05.076432 line       556                     i = i_j[0]
excute 13:48:05.080421 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:05.084412 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.089430 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:48:05.092420 line       556                     i = i_j[0]
excute 13:48:05.096409 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:05.100399 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.104356 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:48:05.107380 line       556                     i = i_j[0]
excute 13:48:05.111339 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:05.114360 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.118319 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:48:05.121343 line       556                     i = i_j[0]
excute 13:48:05.125331 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:05.129289 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.132314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:05.136302 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:05.140294 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:05.144250 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.148273 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:05.152229 line       556                     i = i_j[0]
excute 13:48:05.156219 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:05.160209 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.164198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:05.167189 line       556                     i = i_j[0]
excute 13:48:05.171179 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:05.175168 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.179158 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:05.182150 line       556                     i = i_j[0]
excute 13:48:05.187136 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:05.192153 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.196111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:05.199104 line       556                     i = i_j[0]
excute 13:48:05.203093 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:05.207082 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.211072 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:05.215061 line       556                     i = i_j[0]
excute 13:48:05.220049 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:05.223040 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.227029 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:05.231019 line       556                     i = i_j[0]
excute 13:48:05.235007 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:05.238998 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.242987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 0, 1)
excute 13:48:05.246976 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:05.250965 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:05.255950 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.258943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 1)
excute 13:48:05.262933 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:05.266923 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:05.270911 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.274900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 1)
excute 13:48:05.277893 line       556                     i = i_j[0]
excute 13:48:05.281883 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:05.284874 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.288864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 1)
excute 13:48:05.293851 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:05.297841 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:05.301828 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.304821 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 139
excute 13:48:05.308810 line       560                         if (t_tmp > self.TIME):
excute 13:48:05.312834 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:05.315823 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:05.319782 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 160
excute 13:48:05.322804 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:05.328758 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 1)
excute 13:48:05.335741 line       556                     i = i_j[0]
excute 13:48:05.342721 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:05.346742 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.350732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 1)
excute 13:48:05.354718 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:05.359676 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:05.363665 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.367654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 0, 2)
excute 13:48:05.371643 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:05.376631 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:05.380620 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.385605 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 128
excute 13:48:05.388597 line       560                         if (t_tmp > self.TIME):
excute 13:48:05.392585 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:05.396576 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:05.400565 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:05.403557 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:05.407546 line       569                                     available_vhecles[i][t],
excute 13:48:05.410538 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:05.413530 line       571                                     self.S_capacities[j],
excute 13:48:05.417519 line       572                                     demands[t][i][j],
excute 13:48:05.420511 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = -7
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 2
calc_contract     Starting var:.. t = 123
calc_contract     13:48:05.424502 call       352     def caluculate_contract(
calc_contract     13:48:05.427492 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:05.427492 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:05.428489 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:05.429488 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:05.430484 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 2
calc_contract     13:48:05.430484 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:05.431481 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [2, 0, 0]
excute Modified var:.. can_contract = 2
excute 13:48:05.432479 line       575                                 rsf += rsf_tmp
excute 13:48:05.436469 line       576                                 rse += rse_tmp
excute 13:48:05.439460 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 4
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 123
move_cars     Starting var:.. t_tmp = 128
move_cars     Starting var:.. can_contract = 2
move_cars     13:48:05.443449 call       388     def move_cars(
move_cars     13:48:05.447438 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:05.449435 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:48:05.450430 line       399         return available_vhecles
move_cars     13:48:05.451429 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -5, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:05.454420 line       579                                 success += can_contract
excute Modified var:.. success = 51
excute 13:48:05.458442 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 2)
excute 13:48:05.463397 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:05.470377 line       557                     j = i_j[1]
excute 13:48:05.474400 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.478356 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 2)
excute 13:48:05.482348 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:05.486336 line       557                     j = i_j[1]
excute 13:48:05.491321 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.494313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 2)
excute 13:48:05.499333 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:05.503322 line       557                     j = i_j[1]
excute 13:48:05.507279 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.511271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:48:05.515257 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:05.519247 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:05.522238 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.526228 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:48:05.530217 line       556                     i = i_j[0]
excute 13:48:05.534207 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:05.537198 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.545177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:48:05.548170 line       556                     i = i_j[0]
excute 13:48:05.552160 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:05.560138 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.564127 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:48:05.567120 line       556                     i = i_j[0]
excute 13:48:05.572106 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:05.576095 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.579086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:48:05.583084 line       556                     i = i_j[0]
excute 13:48:05.586067 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:05.590057 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.593048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:48:05.597038 line       556                     i = i_j[0]
excute 13:48:05.601032 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:05.605019 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.609008 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:48:05.612996 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:05.616999 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:05.619978 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.624966 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:48:05.628954 line       556                     i = i_j[0]
excute 13:48:05.632944 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:05.636933 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.640922 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:48:05.643914 line       556                     i = i_j[0]
excute 13:48:05.649915 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:05.652889 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.657876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:48:05.661866 line       556                     i = i_j[0]
excute 13:48:05.664891 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:05.668883 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.672844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:48:05.675860 line       556                     i = i_j[0]
excute 13:48:05.679820 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:05.682842 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.686831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:48:05.690822 line       556                     i = i_j[0]
excute 13:48:05.693811 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:05.697802 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.701762 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 1)
excute 13:48:05.705781 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:05.709768 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:05.714753 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.717747 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 1)
excute 13:48:05.721738 line       556                     i = i_j[0]
excute 13:48:05.725727 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:05.728686 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.733676 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 1)
excute 13:48:05.736667 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:05.741652 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:05.745642 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.749645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 1)
excute 13:48:05.752625 line       556                     i = i_j[0]
excute 13:48:05.757611 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:05.760633 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.764601 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 2)
excute 13:48:05.767616 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:05.771604 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:05.775585 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.779552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 2)
excute 13:48:05.782574 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:05.786565 line       557                     j = i_j[1]
excute 13:48:05.790535 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.794512 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:05.797505 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:05.801494 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:05.806482 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.811466 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:05.814489 line       556                     i = i_j[0]
excute 13:48:05.818479 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:05.822467 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.826427 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:05.829419 line       556                     i = i_j[0]
excute 13:48:05.834406 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:05.837398 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.841387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:05.845376 line       556                     i = i_j[0]
excute 13:48:05.849366 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:05.853355 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.858343 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:05.861333 line       556                     i = i_j[0]
excute 13:48:05.865323 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:05.869312 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.874297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:05.877291 line       556                     i = i_j[0]
excute 13:48:05.881280 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:05.885268 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.889257 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 1)
excute 13:48:05.892249 line       556                     i = i_j[0]
excute 13:48:05.896246 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:05.899230 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.903226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:48:05.906211 line       556                     i = i_j[0]
excute 13:48:05.912209 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:05.915190 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.919180 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 2)
excute 13:48:05.923169 line       556                     i = i_j[0]
excute 13:48:05.927157 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:05.931147 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.938604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:48:05.941634 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:05.945622 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:05.951574 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.955563 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:48:05.958586 line       556                     i = i_j[0]
excute 13:48:05.962575 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:05.966536 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.970532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:48:05.973545 line       556                     i = i_j[0]
excute 13:48:05.977536 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:05.981497 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:05.986479 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:48:05.989471 line       556                     i = i_j[0]
excute 13:48:05.993461 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:05.996453 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:06.000442 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:48:06.003434 line       556                     i = i_j[0]
excute 13:48:06.007423 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:06.011412 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:06.017397 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:48:06.024385 line       556                     i = i_j[0]
excute 13:48:06.029365 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:06.032359 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:06.040348 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:48:06.044350 line       556                     i = i_j[0]
excute 13:48:06.048340 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:06.052337 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:06.056294 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 1)
excute 13:48:06.059316 line       556                     i = i_j[0]
excute 13:48:06.063305 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:06.067266 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:06.070255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 1)
excute 13:48:06.074245 line       556                     i = i_j[0]
excute 13:48:06.078234 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:06.081226 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:06.085215 line       555                 for i_j in i_j_list:
excute 13:48:06.088207 line       581             self.write_matrix(
excute 13:48:06.092197 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:06.095188 line       583                 result_file_path,
excute 13:48:06.098181 line       584                 mode='a'
excute 13:48:06.105165 line       488         for t in time_steps:
excute Modified var:.. t = 124
excute 13:48:06.109152 line       489             if (t != self.TIME + 1):
excute 13:48:06.113141 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:06.117131 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:06.124145 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:06.128103 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:06.132092 line       494                         if (i == j):
excute 13:48:06.137079 line       495                             continue
excute 13:48:06.144059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:06.149076 line       494                         if (i == j):
excute 13:48:06.153037 line       496                         i_j_list.append((
excute 13:48:06.157027 line       497                             i, j,
excute 13:48:06.163008 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.166001 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:48:06.176982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:06.183952 line       494                         if (i == j):
excute 13:48:06.191937 line       496                         i_j_list.append((
excute 13:48:06.197948 line       497                             i, j,
excute 13:48:06.204895 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.208885 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:48:06.214870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:06.218892 line       494                         if (i == j):
excute 13:48:06.224845 line       496                         i_j_list.append((
excute 13:48:06.228834 line       497                             i, j,
excute 13:48:06.234816 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.239803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0)]
excute 13:48:06.244790 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:06.250775 line       494                         if (i == j):
excute 13:48:06.255766 line       496                         i_j_list.append((
excute 13:48:06.261752 line       497                             i, j,
excute 13:48:06.264738 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.273713 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0)]
excute 13:48:06.277703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:06.285681 line       494                         if (i == j):
excute 13:48:06.289671 line       496                         i_j_list.append((
excute 13:48:06.292661 line       497                             i, j,
excute 13:48:06.296650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.302636 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:48:06.312610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:06.334551 line       494                         if (i == j):
excute 13:48:06.351504 line       496                         i_j_list.append((
excute 13:48:06.365467 line       497                             i, j,
excute 13:48:06.378435 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.385417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0)]
excute 13:48:06.395387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:06.406358 line       494                         if (i == j):
excute 13:48:06.414337 line       496                         i_j_list.append((
excute 13:48:06.420322 line       497                             i, j,
excute 13:48:06.426304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.434291 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:48:06.443259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:06.450241 line       494                         if (i == j):
excute 13:48:06.459216 line       496                         i_j_list.append((
excute 13:48:06.462208 line       497                             i, j,
excute 13:48:06.466198 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.470187 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:48:06.474178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:06.480162 line       494                         if (i == j):
excute 13:48:06.487142 line       496                         i_j_list.append((
excute 13:48:06.497116 line       497                             i, j,
excute 13:48:06.507089 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.515067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:48:06.523045 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:06.531025 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:06.539004 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:06.545984 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:06.552966 line       494                         if (i == j):
excute 13:48:06.560945 line       496                         i_j_list.append((
excute 13:48:06.565930 line       497                             i, j,
excute 13:48:06.573911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.578895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0)]
excute 13:48:06.584880 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:06.591862 line       494                         if (i == j):
excute 13:48:06.599841 line       495                             continue
excute 13:48:06.606820 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:06.612805 line       494                         if (i == j):
excute 13:48:06.621781 line       496                         i_j_list.append((
excute 13:48:06.626769 line       497                             i, j,
excute 13:48:06.634747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.642726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:48:06.648709 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:06.655692 line       494                         if (i == j):
excute 13:48:06.663669 line       496                         i_j_list.append((
excute 13:48:06.670651 line       497                             i, j,
excute 13:48:06.678630 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.684613 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:48:06.691595 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:06.698576 line       494                         if (i == j):
excute 13:48:06.704560 line       496                         i_j_list.append((
excute 13:48:06.711543 line       497                             i, j,
excute 13:48:06.717525 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.725504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:48:06.731487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:06.738469 line       494                         if (i == j):
excute 13:48:06.746451 line       496                         i_j_list.append((
excute 13:48:06.753430 line       497                             i, j,
excute 13:48:06.760412 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.766394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:48:06.773378 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:06.779360 line       494                         if (i == j):
excute 13:48:06.785345 line       496                         i_j_list.append((
excute 13:48:06.793323 line       497                             i, j,
excute 13:48:06.799308 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.804294 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:48:06.811275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:06.819254 line       494                         if (i == j):
excute 13:48:06.824241 line       496                         i_j_list.append((
excute 13:48:06.827232 line       497                             i, j,
excute 13:48:06.830223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.834214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:48:06.837205 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:06.841195 line       494                         if (i == j):
excute 13:48:06.845185 line       496                         i_j_list.append((
excute 13:48:06.850172 line       497                             i, j,
excute 13:48:06.854161 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.857152 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:48:06.861142 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:06.864133 line       494                         if (i == j):
excute 13:48:06.868122 line       496                         i_j_list.append((
excute 13:48:06.871114 line       497                             i, j,
excute 13:48:06.875104 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.878097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:48:06.881088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:06.885078 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:06.888069 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:06.892059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:06.896048 line       494                         if (i == j):
excute 13:48:06.900038 line       496                         i_j_list.append((
excute 13:48:06.903030 line       497                             i, j,
excute 13:48:06.907019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.911009 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:48:06.914000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:06.917990 line       494                         if (i == j):
excute 13:48:06.920981 line       496                         i_j_list.append((
excute 13:48:06.924971 line       497                             i, j,
excute 13:48:06.927994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.930986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:48:06.934977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:06.937968 line       494                         if (i == j):
excute 13:48:06.941957 line       495                             continue
excute 13:48:06.945925 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:06.949938 line       494                         if (i == j):
excute 13:48:06.953896 line       496                         i_j_list.append((
excute 13:48:06.957882 line       497                             i, j,
excute 13:48:06.960875 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.967858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:48:06.971848 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:06.975836 line       494                         if (i == j):
excute 13:48:06.979824 line       496                         i_j_list.append((
excute 13:48:06.982844 line       497                             i, j,
excute 13:48:06.985836 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:06.989803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:48:06.993791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:06.997777 line       494                         if (i == j):
excute 13:48:07.002763 line       496                         i_j_list.append((
excute 13:48:07.006753 line       497                             i, j,
excute 13:48:07.010741 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.013733 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:48:07.016725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:07.020714 line       494                         if (i == j):
excute 13:48:07.023706 line       496                         i_j_list.append((
excute 13:48:07.027695 line       497                             i, j,
excute 13:48:07.030687 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.033680 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:48:07.036672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:07.040661 line       494                         if (i == j):
excute 13:48:07.044663 line       496                         i_j_list.append((
excute 13:48:07.047642 line       497                             i, j,
excute 13:48:07.050635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.054632 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:07.058613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:07.062603 line       494                         if (i == j):
excute 13:48:07.065627 line       496                         i_j_list.append((
excute 13:48:07.069584 line       497                             i, j,
excute 13:48:07.072608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.076598 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:07.079590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:07.083548 line       494                         if (i == j):
excute 13:48:07.086571 line       496                         i_j_list.append((
excute 13:48:07.090559 line       497                             i, j,
excute 13:48:07.093552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.096543 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:07.100509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:07.103525 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:07.107482 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:07.110507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:07.114465 line       494                         if (i == j):
excute 13:48:07.118453 line       496                         i_j_list.append((
excute 13:48:07.121445 line       497                             i, j,
excute 13:48:07.124437 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.128426 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0)]
excute 13:48:07.131418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:07.135409 line       494                         if (i == j):
excute 13:48:07.139397 line       496                         i_j_list.append((
excute 13:48:07.142389 line       497                             i, j,
excute 13:48:07.145381 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.149370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0)]
excute 13:48:07.152395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:07.157350 line       494                         if (i == j):
excute 13:48:07.161343 line       496                         i_j_list.append((
excute 13:48:07.164363 line       497                             i, j,
excute 13:48:07.168320 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.171343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:48:07.174336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:07.178296 line       494                         if (i == j):
excute 13:48:07.182284 line       495                             continue
excute 13:48:07.185307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:07.188298 line       494                         if (i == j):
excute 13:48:07.192288 line       496                         i_j_list.append((
excute 13:48:07.196252 line       497                             i, j,
excute 13:48:07.199268 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.202261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:48:07.206251 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:07.210209 line       494                         if (i == j):
excute 13:48:07.213231 line       496                         i_j_list.append((
excute 13:48:07.217221 line       497                             i, j,
excute 13:48:07.220213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.223205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:48:07.227194 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:07.230187 line       494                         if (i == j):
excute 13:48:07.234176 line       496                         i_j_list.append((
excute 13:48:07.238134 line       497                             i, j,
excute 13:48:07.241158 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.244149 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:48:07.248107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:07.251130 line       494                         if (i == j):
excute 13:48:07.255120 line       496                         i_j_list.append((
excute 13:48:07.261106 line       497                             i, j,
excute 13:48:07.264095 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.268060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:48:07.271077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:07.275036 line       494                         if (i == j):
excute 13:48:07.279057 line       496                         i_j_list.append((
excute 13:48:07.283014 line       497                             i, j,
excute 13:48:07.286038 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.289029 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0)]
excute 13:48:07.292021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:07.296010 line       494                         if (i == j):
excute 13:48:07.301743 line       496                         i_j_list.append((
excute 13:48:07.304726 line       497                             i, j,
excute 13:48:07.308684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.311709 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:48:07.314700 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:07.318660 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:07.321681 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:07.326639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:07.335614 line       494                         if (i == j):
excute 13:48:07.341602 line       496                         i_j_list.append((
excute 13:48:07.346617 line       497                             i, j,
excute 13:48:07.349575 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.353565 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0)]
excute 13:48:07.358552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:07.365533 line       494                         if (i == j):
excute 13:48:07.370528 line       496                         i_j_list.append((
excute 13:48:07.374508 line       497                             i, j,
excute 13:48:07.378497 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.381490 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:48:07.385481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:07.389503 line       494                         if (i == j):
excute 13:48:07.393490 line       496                         i_j_list.append((
excute 13:48:07.397466 line       497                             i, j,
excute 13:48:07.400475 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.403463 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:48:07.407420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:07.410444 line       494                         if (i == j):
excute 13:48:07.414434 line       496                         i_j_list.append((
excute 13:48:07.417425 line       497                             i, j,
excute 13:48:07.421417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.424406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:48:07.428397 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:07.432386 line       494                         if (i == j):
excute 13:48:07.435378 line       495                             continue
excute 13:48:07.439367 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:07.442359 line       494                         if (i == j):
excute 13:48:07.446321 line       496                         i_j_list.append((
excute 13:48:07.450339 line       497                             i, j,
excute 13:48:07.453332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.457319 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:48:07.460312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:07.465267 line       494                         if (i == j):
excute 13:48:07.469255 line       496                         i_j_list.append((
excute 13:48:07.472247 line       497                             i, j,
excute 13:48:07.476237 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.479228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:48:07.483217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:07.486209 line       494                         if (i == j):
excute 13:48:07.490199 line       496                         i_j_list.append((
excute 13:48:07.493191 line       497                             i, j,
excute 13:48:07.497180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.500172 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:48:07.503164 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:07.507158 line       494                         if (i == j):
excute 13:48:07.513142 line       496                         i_j_list.append((
excute 13:48:07.516130 line       497                             i, j,
excute 13:48:07.520126 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.523111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:48:07.526103 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:07.530093 line       494                         if (i == j):
excute 13:48:07.533087 line       496                         i_j_list.append((
excute 13:48:07.537074 line       497                             i, j,
excute 13:48:07.540097 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.543089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:48:07.547048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:07.550071 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:07.554061 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:07.558020 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:07.561041 line       494                         if (i == j):
excute 13:48:07.564999 line       496                         i_j_list.append((
excute 13:48:07.568989 line       497                             i, j,
excute 13:48:07.572979 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.575969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0)]
excute 13:48:07.578962 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:07.582952 line       494                         if (i == j):
excute 13:48:07.585943 line       496                         i_j_list.append((
excute 13:48:07.589932 line       497                             i, j,
excute 13:48:07.592924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.595916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:48:07.598908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:07.602898 line       494                         if (i == j):
excute 13:48:07.606887 line       496                         i_j_list.append((
excute 13:48:07.609882 line       497                             i, j,
excute 13:48:07.612871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.615863 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:48:07.619862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:07.622845 line       494                         if (i == j):
excute 13:48:07.626835 line       496                         i_j_list.append((
excute 13:48:07.630823 line       497                             i, j,
excute 13:48:07.634814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.637804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:48:07.640796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:07.644786 line       494                         if (i == j):
excute 13:48:07.648775 line       496                         i_j_list.append((
excute 13:48:07.651767 line       497                             i, j,
excute 13:48:07.654759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.658749 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:48:07.661740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:07.665730 line       494                         if (i == j):
excute 13:48:07.670753 line       495                             continue
excute 13:48:07.673708 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:07.677701 line       494                         if (i == j):
excute 13:48:07.680693 line       496                         i_j_list.append((
excute 13:48:07.684679 line       497                             i, j,
excute 13:48:07.687672 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.690663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:48:07.694652 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:07.697644 line       494                         if (i == j):
excute 13:48:07.701633 line       496                         i_j_list.append((
excute 13:48:07.705623 line       497                             i, j,
excute 13:48:07.708615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.712604 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:48:07.715597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:07.719586 line       494                         if (i == j):
excute 13:48:07.723575 line       496                         i_j_list.append((
excute 13:48:07.726567 line       497                             i, j,
excute 13:48:07.729560 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.733548 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:48:07.737538 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:07.740529 line       494                         if (i == j):
excute 13:48:07.744519 line       496                         i_j_list.append((
excute 13:48:07.748508 line       497                             i, j,
excute 13:48:07.752498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.755491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:48:07.759480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:07.763472 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:07.766460 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:07.770451 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:07.774440 line       494                         if (i == j):
excute 13:48:07.778428 line       496                         i_j_list.append((
excute 13:48:07.782418 line       497                             i, j,
excute 13:48:07.785410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.789400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0)]
excute 13:48:07.792392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:07.800371 line       494                         if (i == j):
excute 13:48:07.807351 line       496                         i_j_list.append((
excute 13:48:07.813335 line       497                             i, j,
excute 13:48:07.817325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.821315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:48:07.824306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:07.828295 line       494                         if (i == j):
excute 13:48:07.832284 line       496                         i_j_list.append((
excute 13:48:07.835276 line       497                             i, j,
excute 13:48:07.838269 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.842259 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:48:07.845250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:07.849239 line       494                         if (i == j):
excute 13:48:07.852231 line       496                         i_j_list.append((
excute 13:48:07.856221 line       497                             i, j,
excute 13:48:07.860210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.863202 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:48:07.866193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:07.870183 line       494                         if (i == j):
excute 13:48:07.875171 line       496                         i_j_list.append((
excute 13:48:07.879159 line       497                             i, j,
excute 13:48:07.883149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.889134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:48:07.892124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:07.896114 line       494                         if (i == j):
excute 13:48:07.900105 line       496                         i_j_list.append((
excute 13:48:07.903095 line       497                             i, j,
excute 13:48:07.906087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.909079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0)]
excute 13:48:07.913069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:07.916060 line       494                         if (i == j):
excute 13:48:07.920050 line       495                             continue
excute 13:48:07.924042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:07.927031 line       494                         if (i == j):
excute 13:48:07.930023 line       496                         i_j_list.append((
excute 13:48:07.934012 line       497                             i, j,
excute 13:48:07.937005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.939997 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:48:07.944983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:07.949972 line       494                         if (i == j):
excute 13:48:07.954957 line       496                         i_j_list.append((
excute 13:48:07.959945 line       497                             i, j,
excute 13:48:07.964931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.969918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:48:07.972908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:07.977896 line       494                         if (i == j):
excute 13:48:07.981885 line       496                         i_j_list.append((
excute 13:48:07.985874 line       497                             i, j,
excute 13:48:07.988865 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:07.991858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:48:07.995847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:07.999837 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:08.002829 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:08.006818 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:08.009810 line       494                         if (i == j):
excute 13:48:08.013800 line       496                         i_j_list.append((
excute 13:48:08.017789 line       497                             i, j,
excute 13:48:08.021778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.025769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:48:08.028760 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:08.032749 line       494                         if (i == j):
excute 13:48:08.036739 line       496                         i_j_list.append((
excute 13:48:08.039730 line       497                             i, j,
excute 13:48:08.042722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.046712 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:48:08.049703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:08.053694 line       494                         if (i == j):
excute 13:48:08.057683 line       496                         i_j_list.append((
excute 13:48:08.060674 line       497                             i, j,
excute 13:48:08.063667 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.067655 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:08.070648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:08.074638 line       494                         if (i == j):
excute 13:48:08.078627 line       496                         i_j_list.append((
excute 13:48:08.082619 line       497                             i, j,
excute 13:48:08.085607 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.088599 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:48:08.092588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:08.096581 line       494                         if (i == j):
excute 13:48:08.099570 line       496                         i_j_list.append((
excute 13:48:08.103560 line       497                             i, j,
excute 13:48:08.106552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.110540 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:48:08.113532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:08.117522 line       494                         if (i == j):
excute 13:48:08.120513 line       496                         i_j_list.append((
excute 13:48:08.124503 line       497                             i, j,
excute 13:48:08.128492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.132482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:48:08.136472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:08.140462 line       494                         if (i == j):
excute 13:48:08.144449 line       496                         i_j_list.append((
excute 13:48:08.149443 line       497                             i, j,
excute 13:48:08.153426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.158426 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:48:08.161405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:08.165394 line       494                         if (i == j):
excute 13:48:08.170382 line       495                             continue
excute 13:48:08.174370 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:08.177362 line       494                         if (i == j):
excute 13:48:08.181352 line       496                         i_j_list.append((
excute 13:48:08.187337 line       497                             i, j,
excute 13:48:08.191325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.195315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:48:08.198306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:08.202296 line       494                         if (i == j):
excute 13:48:08.206285 line       496                         i_j_list.append((
excute 13:48:08.209277 line       497                             i, j,
excute 13:48:08.213266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.216258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:08.219250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:08.223240 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:08.227229 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:08.230221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:08.234242 line       494                         if (i == j):
excute 13:48:08.238202 line       496                         i_j_list.append((
excute 13:48:08.241223 line       497                             i, j,
excute 13:48:08.245191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.248205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:08.251199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:08.255186 line       494                         if (i == j):
excute 13:48:08.259178 line       496                         i_j_list.append((
excute 13:48:08.263165 line       497                             i, j,
excute 13:48:08.267123 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.270145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:48:08.273139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:08.278094 line       494                         if (i == j):
excute 13:48:08.282083 line       496                         i_j_list.append((
excute 13:48:08.285106 line       497                             i, j,
excute 13:48:08.290072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.293053 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:08.297043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:08.300034 line       494                         if (i == j):
excute 13:48:08.304023 line       496                         i_j_list.append((
excute 13:48:08.308013 line       497                             i, j,
excute 13:48:08.311005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.315006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:48:08.317986 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:08.321977 line       494                         if (i == j):
excute 13:48:08.326964 line       496                         i_j_list.append((
excute 13:48:08.337935 line       497                             i, j,
excute 13:48:08.342919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.347938 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:48:08.351895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:08.355891 line       494                         if (i == j):
excute 13:48:08.359891 line       496                         i_j_list.append((
excute 13:48:08.363868 line       497                             i, j,
excute 13:48:08.366855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.369847 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:48:08.373842 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:08.377827 line       494                         if (i == j):
excute 13:48:08.381815 line       496                         i_j_list.append((
excute 13:48:08.385836 line       497                             i, j,
excute 13:48:08.388828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.393784 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:48:08.396807 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:08.400766 line       494                         if (i == j):
excute 13:48:08.404760 line       496                         i_j_list.append((
excute 13:48:08.407778 line       497                             i, j,
excute 13:48:08.410773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.414759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:08.417752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:08.421711 line       494                         if (i == j):
excute 13:48:08.425700 line       495                             continue
excute 13:48:08.428722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:08.432711 line       494                         if (i == j):
excute 13:48:08.436669 line       496                         i_j_list.append((
excute 13:48:08.439662 line       497                             i, j,
excute 13:48:08.443650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.446642 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:08.450632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:08.454621 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:08.457613 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:08.462600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:08.468585 line       494                         if (i == j):
excute 13:48:08.472574 line       496                         i_j_list.append((
excute 13:48:08.476596 line       497                             i, j,
excute 13:48:08.479586 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.483544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0)]
excute 13:48:08.486567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:08.490525 line       494                         if (i == j):
excute 13:48:08.496519 line       496                         i_j_list.append((
excute 13:48:08.499533 line       497                             i, j,
excute 13:48:08.503522 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.506516 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:48:08.512498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:08.518452 line       494                         if (i == j):
excute 13:48:08.522441 line       496                         i_j_list.append((
excute 13:48:08.525467 line       497                             i, j,
excute 13:48:08.529421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.532446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:48:08.535436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:08.539423 line       494                         if (i == j):
excute 13:48:08.543386 line       496                         i_j_list.append((
excute 13:48:08.546409 line       497                             i, j,
excute 13:48:08.550396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.553388 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:48:08.557347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:08.560370 line       494                         if (i == j):
excute 13:48:08.564360 line       496                         i_j_list.append((
excute 13:48:08.568348 line       497                             i, j,
excute 13:48:08.571340 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.575330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:48:08.578324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:08.582281 line       494                         if (i == j):
excute 13:48:08.586270 line       496                         i_j_list.append((
excute 13:48:08.589297 line       497                             i, j,
excute 13:48:08.593252 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.599236 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:48:08.603225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:08.607213 line       494                         if (i == j):
excute 13:48:08.611202 line       496                         i_j_list.append((
excute 13:48:08.614194 line       497                             i, j,
excute 13:48:08.618183 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.621175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:48:08.625165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:08.629154 line       494                         if (i == j):
excute 13:48:08.633144 line       496                         i_j_list.append((
excute 13:48:08.637165 line       497                             i, j,
excute 13:48:08.640156 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.643148 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:48:08.647138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:08.651097 line       494                         if (i == j):
excute 13:48:08.655087 line       496                         i_j_list.append((
excute 13:48:08.658111 line       497                             i, j,
excute 13:48:08.662103 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:08.666090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:48:08.669083 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:08.673068 line       494                         if (i == j):
excute 13:48:08.677037 line       495                             continue
excute 13:48:08.680050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:08.684039 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:08.687031 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (3, 0, 10, 0), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 0), (3, 9, 10, 0)]
excute 13:48:08.690026 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:08.694013 line       505                     if (self.RELOCATE):
excute 13:48:08.698968 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:08.702988 line       505                     if (self.RELOCATE):
excute 13:48:08.706981 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:08.709969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:48:08.713963 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:08.718915 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:08.722904 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.727891 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:08.733874 line       556                     i = i_j[0]
excute 13:48:08.740856 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:08.745845 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.749832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 0)
excute 13:48:08.752824 line       556                     i = i_j[0]
excute 13:48:08.756813 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:08.760802 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.764792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:08.767784 line       556                     i = i_j[0]
excute 13:48:08.771784 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:08.774765 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.778754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:08.782744 line       556                     i = i_j[0]
excute 13:48:08.785735 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:08.789725 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.792717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:08.796706 line       556                     i = i_j[0]
excute 13:48:08.801694 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:08.804685 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.808674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:08.812664 line       556                     i = i_j[0]
excute 13:48:08.818648 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:08.822639 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.827624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:08.833607 line       556                     i = i_j[0]
excute 13:48:08.837597 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:08.840620 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.844610 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:08.848601 line       556                     i = i_j[0]
excute 13:48:08.852594 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:08.855581 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.859570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:08.863528 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:08.866551 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:08.870542 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.874517 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:08.877490 line       556                     i = i_j[0]
excute 13:48:08.881479 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:08.885469 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.889459 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:08.892450 line       556                     i = i_j[0]
excute 13:48:08.896440 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:08.899432 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.904419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:48:08.908424 line       556                     i = i_j[0]
excute 13:48:08.912432 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:08.915391 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.919379 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:08.922370 line       556                     i = i_j[0]
excute 13:48:08.926359 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:08.929352 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.933341 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:08.936364 line       556                     i = i_j[0]
excute 13:48:08.940358 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:08.944344 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.948301 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:08.952290 line       556                     i = i_j[0]
excute 13:48:08.956280 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:08.960269 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.964262 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:08.967282 line       556                     i = i_j[0]
excute 13:48:08.971240 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:08.975262 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.979218 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:08.982210 line       556                     i = i_j[0]
excute 13:48:08.986199 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:08.990202 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:08.994179 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:48:08.997170 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:09.001160 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:09.005151 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.010138 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:48:09.015123 line       556                     i = i_j[0]
excute 13:48:09.018146 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:09.022135 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.026093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:48:09.029087 line       556                     i = i_j[0]
excute 13:48:09.033076 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:09.038064 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.044046 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:48:09.047037 line       556                     i = i_j[0]
excute 13:48:09.051027 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:09.055017 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.060002 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:48:09.063027 line       556                     i = i_j[0]
excute 13:48:09.066985 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:09.070008 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.073999 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:48:09.077986 line       556                     i = i_j[0]
excute 13:48:09.081945 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:09.084968 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.088926 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:48:09.091953 line       556                     i = i_j[0]
excute 13:48:09.095907 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:09.098931 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.102920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:48:09.106877 line       556                     i = i_j[0]
excute 13:48:09.110866 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:09.113858 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.117847 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:48:09.121837 line       556                     i = i_j[0]
excute 13:48:09.124828 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:09.128818 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.132809 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:48:09.136832 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:09.140795 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:09.144812 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.148766 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:48:09.151789 line       556                     i = i_j[0]
excute 13:48:09.155747 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:09.158770 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.163725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:48:09.166748 line       556                     i = i_j[0]
excute 13:48:09.171720 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:09.174697 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.182675 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:48:09.189656 line       556                     i = i_j[0]
excute 13:48:09.193678 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:09.197666 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.201629 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:48:09.204647 line       556                     i = i_j[0]
excute 13:48:09.208619 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:09.213594 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.217581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:48:09.220573 line       556                     i = i_j[0]
excute 13:48:09.224562 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:09.228568 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.232542 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:48:09.235564 line       556                     i = i_j[0]
excute 13:48:09.239524 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:09.242547 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.246536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:48:09.250494 line       556                     i = i_j[0]
excute 13:48:09.253517 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:09.257510 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.261496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:48:09.265464 line       556                     i = i_j[0]
excute 13:48:09.268476 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:09.272469 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.277422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:09.282409 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:09.285431 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:09.289421 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.293378 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:09.296405 line       556                     i = i_j[0]
excute 13:48:09.300393 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:09.304349 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.307372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:09.311363 line       556                     i = i_j[0]
excute 13:48:09.316318 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:09.319309 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.323298 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:48:09.328287 line       556                     i = i_j[0]
excute 13:48:09.336266 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:09.339287 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.344245 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:09.348233 line       556                     i = i_j[0]
excute 13:48:09.352255 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:09.356242 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.361204 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:09.365188 line       556                     i = i_j[0]
excute 13:48:09.369176 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:09.373165 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.377188 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:09.381176 line       556                     i = i_j[0]
excute 13:48:09.385166 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:09.390124 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.394110 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:09.397101 line       556                     i = i_j[0]
excute 13:48:09.401091 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:09.404082 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.408072 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:09.411064 line       556                     i = i_j[0]
excute 13:48:09.415053 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:09.420040 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.424030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:48:09.427021 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:09.431011 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:09.435000 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.437991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:48:09.441981 line       556                     i = i_j[0]
excute 13:48:09.445971 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:09.449960 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.453953 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:48:09.456941 line       556                     i = i_j[0]
excute 13:48:09.460930 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:09.464937 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.468910 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:48:09.471935 line       556                     i = i_j[0]
excute 13:48:09.475891 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:09.479880 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.482908 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:48:09.486893 line       556                     i = i_j[0]
excute 13:48:09.490883 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:09.493874 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.497834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:48:09.501854 line       556                     i = i_j[0]
excute 13:48:09.505815 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:09.509800 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.514787 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:48:09.518778 line       556                     i = i_j[0]
excute 13:48:09.522769 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:09.525790 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.529778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:48:09.533755 line       556                     i = i_j[0]
excute 13:48:09.536761 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:09.540750 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.544735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:48:09.547732 line       556                     i = i_j[0]
excute 13:48:09.551693 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:09.555711 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.559703 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:48:09.562694 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:09.566650 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:09.570644 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.574627 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:48:09.577650 line       556                     i = i_j[0]
excute 13:48:09.581641 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:09.585602 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.588621 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:48:09.592611 line       556                     i = i_j[0]
excute 13:48:09.596569 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:09.599594 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.603551 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:48:09.606573 line       556                     i = i_j[0]
excute 13:48:09.610531 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:09.616547 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.620505 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:48:09.624493 line       556                     i = i_j[0]
excute 13:48:09.628485 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:09.631475 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.636463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:48:09.639487 line       556                     i = i_j[0]
excute 13:48:09.643443 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:09.646466 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.650460 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:48:09.654424 line       556                     i = i_j[0]
excute 13:48:09.658435 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:09.661426 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.665388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:48:09.668408 line       556                     i = i_j[0]
excute 13:48:09.672397 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:09.676359 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.680345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:48:09.683367 line       556                     i = i_j[0]
excute 13:48:09.687326 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:09.691314 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.695311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:09.698296 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:09.702285 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:09.706274 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.710264 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:09.714254 line       556                     i = i_j[0]
excute 13:48:09.718243 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:09.721235 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.726223 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:48:09.730212 line       556                     i = i_j[0]
excute 13:48:09.737192 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:09.743176 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.747168 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:09.750189 line       556                     i = i_j[0]
excute 13:48:09.754155 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:09.758138 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.762125 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:09.766115 line       556                     i = i_j[0]
excute 13:48:09.769138 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:09.773128 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.777091 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:09.780080 line       556                     i = i_j[0]
excute 13:48:09.784067 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:09.787059 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.791048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:09.795041 line       556                     i = i_j[0]
excute 13:48:09.798029 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:09.802018 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.805010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:09.809007 line       556                     i = i_j[0]
excute 13:48:09.811992 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:09.815981 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.819971 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:09.823976 line       556                     i = i_j[0]
excute 13:48:09.827950 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:09.831938 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.835928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:48:09.838920 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:09.842910 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:09.845902 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.849945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:48:09.853935 line       556                     i = i_j[0]
excute 13:48:09.857934 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:09.860916 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.864905 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:48:09.867897 line       556                     i = i_j[0]
excute 13:48:09.871886 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:09.875876 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.879865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:48:09.882857 line       556                     i = i_j[0]
excute 13:48:09.886846 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:09.889838 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.893828 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:48:09.897817 line       556                     i = i_j[0]
excute 13:48:09.900809 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:09.904798 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.907791 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:48:09.911779 line       556                     i = i_j[0]
excute 13:48:09.915769 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:09.918761 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.922751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:48:09.925743 line       556                     i = i_j[0]
excute 13:48:09.929732 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:09.934737 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.938710 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:48:09.944692 line       556                     i = i_j[0]
excute 13:48:09.950678 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:09.953669 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.958656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:48:09.964641 line       556                     i = i_j[0]
excute 13:48:09.970656 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:09.973646 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.978603 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 0)
excute 13:48:09.981625 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:09.985616 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:09.989603 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:09.993594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:48:09.997599 line       556                     i = i_j[0]
excute 13:48:10.001541 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:10.004563 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:10.009519 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:48:10.016500 line       556                     i = i_j[0]
excute 13:48:10.029686 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:10.033679 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:10.037703 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:48:10.041658 line       556                     i = i_j[0]
excute 13:48:10.045648 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:10.048638 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:10.052655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:48:10.056648 line       556                     i = i_j[0]
excute 13:48:10.060607 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:10.063629 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:10.067587 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:48:10.071580 line       556                     i = i_j[0]
excute 13:48:10.075569 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:10.078560 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:10.083546 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:48:10.086539 line       556                     i = i_j[0]
excute 13:48:10.091526 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:10.094518 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:10.099502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 0)
excute 13:48:10.102496 line       556                     i = i_j[0]
excute 13:48:10.106485 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:10.110475 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:10.114462 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 0)
excute 13:48:10.118453 line       556                     i = i_j[0]
excute 13:48:10.122451 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:10.125434 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:10.130420 line       555                 for i_j in i_j_list:
excute 13:48:10.133413 line       581             self.write_matrix(
excute 13:48:10.138399 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:10.142388 line       583                 result_file_path,
excute 13:48:10.145379 line       584                 mode='a'
excute 13:48:10.152376 line       488         for t in time_steps:
excute Modified var:.. t = 125
excute 13:48:10.155355 line       489             if (t != self.TIME + 1):
excute 13:48:10.160340 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:10.163332 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:10.167321 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:10.171311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:10.174302 line       494                         if (i == j):
excute 13:48:10.178291 line       495                             continue
excute 13:48:10.182281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:10.188296 line       494                         if (i == j):
excute 13:48:10.192255 line       496                         i_j_list.append((
excute 13:48:10.196244 line       497                             i, j,
excute 13:48:10.202229 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.206218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:48:10.217188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:10.226165 line       494                         if (i == j):
excute 13:48:10.231153 line       496                         i_j_list.append((
excute 13:48:10.234144 line       497                             i, j,
excute 13:48:10.238133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.242124 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:48:10.248107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:10.252097 line       494                         if (i == j):
excute 13:48:10.256086 line       496                         i_j_list.append((
excute 13:48:10.260076 line       497                             i, j,
excute 13:48:10.265061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.268052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1)]
excute 13:48:10.274039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:10.279023 line       494                         if (i == j):
excute 13:48:10.283012 line       496                         i_j_list.append((
excute 13:48:10.287001 line       497                             i, j,
excute 13:48:10.289993 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.292985 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0)]
excute 13:48:10.296974 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:10.300969 line       494                         if (i == j):
excute 13:48:10.303956 line       496                         i_j_list.append((
excute 13:48:10.307944 line       497                             i, j,
excute 13:48:10.310937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.313929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:48:10.317918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:10.321909 line       494                         if (i == j):
excute 13:48:10.327893 line       496                         i_j_list.append((
excute 13:48:10.334874 line       497                             i, j,
excute 13:48:10.339862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.345845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0)]
excute 13:48:10.349834 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:10.353824 line       494                         if (i == j):
excute 13:48:10.357813 line       496                         i_j_list.append((
excute 13:48:10.361815 line       497                             i, j,
excute 13:48:10.364797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.367785 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:48:10.371777 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:10.374771 line       494                         if (i == j):
excute 13:48:10.378756 line       496                         i_j_list.append((
excute 13:48:10.382746 line       497                             i, j,
excute 13:48:10.386735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.389727 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1)]
excute 13:48:10.392718 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:10.396709 line       494                         if (i == j):
excute 13:48:10.400698 line       496                         i_j_list.append((
excute 13:48:10.403688 line       497                             i, j,
excute 13:48:10.406681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.409673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2)]
excute 13:48:10.413662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:10.417653 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:10.420644 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:10.424633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:10.429621 line       494                         if (i == j):
excute 13:48:10.435604 line       496                         i_j_list.append((
excute 13:48:10.438595 line       497                             i, j,
excute 13:48:10.441588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.445578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2)]
excute 13:48:10.451562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:10.455553 line       494                         if (i == j):
excute 13:48:10.459540 line       495                             continue
excute 13:48:10.462532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:10.465523 line       494                         if (i == j):
excute 13:48:10.469514 line       496                         i_j_list.append((
excute 13:48:10.472505 line       497                             i, j,
excute 13:48:10.475497 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.479487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0)]
excute 13:48:10.482478 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:10.486468 line       494                         if (i == j):
excute 13:48:10.490458 line       496                         i_j_list.append((
excute 13:48:10.497439 line       497                             i, j,
excute 13:48:10.500430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.503422 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1)]
excute 13:48:10.507411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:10.512400 line       494                         if (i == j):
excute 13:48:10.519379 line       496                         i_j_list.append((
excute 13:48:10.525364 line       497                             i, j,
excute 13:48:10.529353 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.533343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0)]
excute 13:48:10.536334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:10.540325 line       494                         if (i == j):
excute 13:48:10.543315 line       496                         i_j_list.append((
excute 13:48:10.547306 line       497                             i, j,
excute 13:48:10.550299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.554286 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:48:10.558278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:10.561268 line       494                         if (i == j):
excute 13:48:10.565258 line       496                         i_j_list.append((
excute 13:48:10.568249 line       497                             i, j,
excute 13:48:10.572238 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.575230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:48:10.579252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:10.583211 line       494                         if (i == j):
excute 13:48:10.587232 line       496                         i_j_list.append((
excute 13:48:10.590222 line       497                             i, j,
excute 13:48:10.593216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.596210 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:48:10.600195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:10.604154 line       494                         if (i == j):
excute 13:48:10.607177 line       496                         i_j_list.append((
excute 13:48:10.611166 line       497                             i, j,
excute 13:48:10.614158 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.617152 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1)]
excute 13:48:10.621108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:10.624131 line       494                         if (i == j):
excute 13:48:10.628112 line       496                         i_j_list.append((
excute 13:48:10.631113 line       497                             i, j,
excute 13:48:10.635103 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.638094 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2)]
excute 13:48:10.642083 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:10.645075 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:10.649068 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:10.653027 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:10.657046 line       494                         if (i == j):
excute 13:48:10.661003 line       496                         i_j_list.append((
excute 13:48:10.664992 line       497                             i, j,
excute 13:48:10.667982 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.670974 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2)]
excute 13:48:10.673967 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:10.677955 line       494                         if (i == j):
excute 13:48:10.681946 line       496                         i_j_list.append((
excute 13:48:10.684937 line       497                             i, j,
excute 13:48:10.687929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.691918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0)]
excute 13:48:10.694910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:10.698900 line       494                         if (i == j):
excute 13:48:10.702889 line       495                             continue
excute 13:48:10.705881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:10.708873 line       494                         if (i == j):
excute 13:48:10.712862 line       496                         i_j_list.append((
excute 13:48:10.715856 line       497                             i, j,
excute 13:48:10.718878 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.722868 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1)]
excute 13:48:10.725859 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:10.729817 line       494                         if (i == j):
excute 13:48:10.733806 line       496                         i_j_list.append((
excute 13:48:10.736798 line       497                             i, j,
excute 13:48:10.740788 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.743812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0)]
excute 13:48:10.746803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:10.750762 line       494                         if (i == j):
excute 13:48:10.754784 line       496                         i_j_list.append((
excute 13:48:10.759740 line       497                             i, j,
excute 13:48:10.762760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.766750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:48:10.769742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:10.773733 line       494                         if (i == j):
excute 13:48:10.776725 line       496                         i_j_list.append((
excute 13:48:10.780714 line       497                             i, j,
excute 13:48:10.783673 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.786665 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:48:10.790654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:10.793646 line       494                         if (i == j):
excute 13:48:10.797636 line       496                         i_j_list.append((
excute 13:48:10.800628 line       497                             i, j,
excute 13:48:10.803620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.807609 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:10.810601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:10.814590 line       494                         if (i == j):
excute 13:48:10.818580 line       496                         i_j_list.append((
excute 13:48:10.821572 line       497                             i, j,
excute 13:48:10.825563 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.828553 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1)]
excute 13:48:10.831545 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:10.835534 line       494                         if (i == j):
excute 13:48:10.839525 line       496                         i_j_list.append((
excute 13:48:10.842515 line       497                             i, j,
excute 13:48:10.845508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.848500 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2)]
excute 13:48:10.852489 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:10.856479 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:10.860469 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:10.864457 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:10.867484 line       494                         if (i == j):
excute 13:48:10.871472 line       496                         i_j_list.append((
excute 13:48:10.874461 line       497                             i, j,
excute 13:48:10.878452 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.881443 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2)]
excute 13:48:10.884435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:10.889411 line       494                         if (i == j):
excute 13:48:10.892414 line       496                         i_j_list.append((
excute 13:48:10.896394 line       497                             i, j,
excute 13:48:10.899399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.902387 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0)]
excute 13:48:10.905380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:10.909369 line       494                         if (i == j):
excute 13:48:10.913326 line       496                         i_j_list.append((
excute 13:48:10.916350 line       497                             i, j,
excute 13:48:10.920341 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.923335 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0)]
excute 13:48:10.926325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:10.930314 line       494                         if (i == j):
excute 13:48:10.934270 line       495                             continue
excute 13:48:10.938260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:10.941285 line       494                         if (i == j):
excute 13:48:10.945242 line       496                         i_j_list.append((
excute 13:48:10.949232 line       497                             i, j,
excute 13:48:10.952256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.956212 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0)]
excute 13:48:10.959204 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:10.965189 line       494                         if (i == j):
excute 13:48:10.969179 line       496                         i_j_list.append((
excute 13:48:10.972201 line       497                             i, j,
excute 13:48:10.975193 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:10.979186 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0)]
excute 13:48:10.982174 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:10.986131 line       494                         if (i == j):
excute 13:48:10.990121 line       496                         i_j_list.append((
excute 13:48:10.994111 line       497                             i, j,
excute 13:48:10.997102 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.000094 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0)]
excute 13:48:11.003086 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:11.007076 line       494                         if (i == j):
excute 13:48:11.011065 line       496                         i_j_list.append((
excute 13:48:11.014057 line       497                             i, j,
excute 13:48:11.018046 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.021039 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0)]
excute 13:48:11.024030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:11.030015 line       494                         if (i == j):
excute 13:48:11.036000 line       496                         i_j_list.append((
excute 13:48:11.039022 line       497                             i, j,
excute 13:48:11.042014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.045006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1)]
excute 13:48:11.048996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:11.051988 line       494                         if (i == j):
excute 13:48:11.056943 line       496                         i_j_list.append((
excute 13:48:11.059967 line       497                             i, j,
excute 13:48:11.062958 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.067947 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2)]
excute 13:48:11.071906 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:11.074897 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:11.078886 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:11.082878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:11.086865 line       494                         if (i == j):
excute 13:48:11.090852 line       496                         i_j_list.append((
excute 13:48:11.093846 line       497                             i, j,
excute 13:48:11.097835 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.100828 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2)]
excute 13:48:11.104816 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:11.108812 line       494                         if (i == j):
excute 13:48:11.111798 line       496                         i_j_list.append((
excute 13:48:11.115787 line       497                             i, j,
excute 13:48:11.119775 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.122768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0)]
excute 13:48:11.126757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:11.129750 line       494                         if (i == j):
excute 13:48:11.134736 line       496                         i_j_list.append((
excute 13:48:11.138726 line       497                             i, j,
excute 13:48:11.141718 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.145707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:48:11.149697 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:11.152689 line       494                         if (i == j):
excute 13:48:11.156678 line       496                         i_j_list.append((
excute 13:48:11.160667 line       497                             i, j,
excute 13:48:11.164656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.168645 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1)]
excute 13:48:11.172644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:11.175659 line       494                         if (i == j):
excute 13:48:11.179647 line       495                             continue
excute 13:48:11.183606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:11.186632 line       494                         if (i == j):
excute 13:48:11.190619 line       496                         i_j_list.append((
excute 13:48:11.193610 line       497                             i, j,
excute 13:48:11.197568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.200592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0)]
excute 13:48:11.203582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:11.207574 line       494                         if (i == j):
excute 13:48:11.211529 line       496                         i_j_list.append((
excute 13:48:11.215518 line       497                             i, j,
excute 13:48:11.218510 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.221502 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:48:11.225493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:11.228483 line       494                         if (i == j):
excute 13:48:11.232502 line       496                         i_j_list.append((
excute 13:48:11.235497 line       497                             i, j,
excute 13:48:11.239489 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.242482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:48:11.245470 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:11.249460 line       494                         if (i == j):
excute 13:48:11.253450 line       496                         i_j_list.append((
excute 13:48:11.257438 line       497                             i, j,
excute 13:48:11.261397 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.264419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1)]
excute 13:48:11.267411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:11.272369 line       494                         if (i == j):
excute 13:48:11.276390 line       496                         i_j_list.append((
excute 13:48:11.279382 line       497                             i, j,
excute 13:48:11.283369 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.286361 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2)]
excute 13:48:11.290323 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:11.293343 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:11.297332 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:11.301297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:11.304314 line       494                         if (i == j):
excute 13:48:11.308272 line       496                         i_j_list.append((
excute 13:48:11.311296 line       497                             i, j,
excute 13:48:11.314290 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.318276 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2)]
excute 13:48:11.321268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:11.326226 line       494                         if (i == j):
excute 13:48:11.337195 line       496                         i_j_list.append((
excute 13:48:11.343178 line       497                             i, j,
excute 13:48:11.348165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.353152 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0)]
excute 13:48:11.360133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:11.366123 line       494                         if (i == j):
excute 13:48:11.380080 line       496                         i_j_list.append((
excute 13:48:11.386064 line       497                             i, j,
excute 13:48:11.391059 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.397034 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:48:11.402023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:11.407007 line       494                         if (i == j):
excute 13:48:11.410996 line       496                         i_j_list.append((
excute 13:48:11.417979 line       497                             i, j,
excute 13:48:11.422966 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.432939 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1)]
excute 13:48:11.436928 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:11.446902 line       494                         if (i == j):
excute 13:48:11.453883 line       496                         i_j_list.append((
excute 13:48:11.459866 line       497                             i, j,
excute 13:48:11.471834 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.485799 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0)]
excute 13:48:11.492779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:11.502751 line       494                         if (i == j):
excute 13:48:11.512726 line       495                             continue
excute 13:48:11.518708 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:11.526687 line       494                         if (i == j):
excute 13:48:11.531675 line       496                         i_j_list.append((
excute 13:48:11.539653 line       497                             i, j,
excute 13:48:11.547631 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.552618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:48:11.558602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:11.564586 line       494                         if (i == j):
excute 13:48:11.573572 line       496                         i_j_list.append((
excute 13:48:11.578548 line       497                             i, j,
excute 13:48:11.584534 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.590519 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:48:11.595503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:11.603482 line       494                         if (i == j):
excute 13:48:11.608469 line       496                         i_j_list.append((
excute 13:48:11.613456 line       497                             i, j,
excute 13:48:11.619439 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.625423 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1)]
excute 13:48:11.631407 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:11.638390 line       494                         if (i == j):
excute 13:48:11.644372 line       496                         i_j_list.append((
excute 13:48:11.649359 line       497                             i, j,
excute 13:48:11.655344 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.661328 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2)]
excute 13:48:11.669306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:11.677285 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:11.683268 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:11.692245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:11.700223 line       494                         if (i == j):
excute 13:48:11.707205 line       496                         i_j_list.append((
excute 13:48:11.712191 line       497                             i, j,
excute 13:48:11.719174 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.725157 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2)]
excute 13:48:11.732138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:11.739119 line       494                         if (i == j):
excute 13:48:11.746103 line       496                         i_j_list.append((
excute 13:48:11.753082 line       497                             i, j,
excute 13:48:11.759066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.766047 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0)]
excute 13:48:11.772031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:11.778016 line       494                         if (i == j):
excute 13:48:11.784000 line       496                         i_j_list.append((
excute 13:48:11.792976 line       497                             i, j,
excute 13:48:11.797963 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.804946 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:48:11.809942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:11.813922 line       494                         if (i == j):
excute 13:48:11.817911 line       496                         i_j_list.append((
excute 13:48:11.820900 line       497                             i, j,
excute 13:48:11.823892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.827883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1)]
excute 13:48:11.830873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:11.834865 line       494                         if (i == j):
excute 13:48:11.838853 line       496                         i_j_list.append((
excute 13:48:11.841844 line       497                             i, j,
excute 13:48:11.844836 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.848826 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0)]
excute 13:48:11.851818 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:11.855809 line       494                         if (i == j):
excute 13:48:11.859796 line       496                         i_j_list.append((
excute 13:48:11.862788 line       497                             i, j,
excute 13:48:11.866810 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.869804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0)]
excute 13:48:11.873786 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:11.876782 line       494                         if (i == j):
excute 13:48:11.880776 line       495                             continue
excute 13:48:11.884740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:11.887753 line       494                         if (i == j):
excute 13:48:11.891712 line       496                         i_j_list.append((
excute 13:48:11.895732 line       497                             i, j,
excute 13:48:11.899722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.902714 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:48:11.905705 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:11.909697 line       494                         if (i == j):
excute 13:48:11.913684 line       496                         i_j_list.append((
excute 13:48:11.917641 line       497                             i, j,
excute 13:48:11.920669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.923658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1)]
excute 13:48:11.927615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:11.930639 line       494                         if (i == j):
excute 13:48:11.934628 line       496                         i_j_list.append((
excute 13:48:11.937621 line       497                             i, j,
excute 13:48:11.941612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.944605 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2)]
excute 13:48:11.949568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:11.953548 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:11.957537 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:11.961526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:11.965515 line       494                         if (i == j):
excute 13:48:11.969505 line       496                         i_j_list.append((
excute 13:48:11.973494 line       497                             i, j,
excute 13:48:11.977483 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:11.981471 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2)]
excute 13:48:11.985461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:11.990449 line       494                         if (i == j):
excute 13:48:11.996434 line       496                         i_j_list.append((
excute 13:48:11.999455 line       497                             i, j,
excute 13:48:12.003445 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.006404 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0)]
excute 13:48:12.009396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:12.013385 line       494                         if (i == j):
excute 13:48:12.017374 line       496                         i_j_list.append((
excute 13:48:12.021364 line       497                             i, j,
excute 13:48:12.024356 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.030342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:12.034365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:12.038350 line       494                         if (i == j):
excute 13:48:12.042312 line       496                         i_j_list.append((
excute 13:48:12.045334 line       497                             i, j,
excute 13:48:12.049322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.052313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1)]
excute 13:48:12.056306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:12.060294 line       494                         if (i == j):
excute 13:48:12.063284 line       496                         i_j_list.append((
excute 13:48:12.067273 line       497                             i, j,
excute 13:48:12.070266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.074225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0)]
excute 13:48:12.078214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:12.082202 line       494                         if (i == j):
excute 13:48:12.086193 line       496                         i_j_list.append((
excute 13:48:12.090182 line       497                             i, j,
excute 13:48:12.094171 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.098160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:48:12.102185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:12.106154 line       494                         if (i == j):
excute 13:48:12.110129 line       496                         i_j_list.append((
excute 13:48:12.113150 line       497                             i, j,
excute 13:48:12.117108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.120136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:48:12.123124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:12.127081 line       494                         if (i == j):
excute 13:48:12.131074 line       495                             continue
excute 13:48:12.135061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:12.138052 line       494                         if (i == j):
excute 13:48:12.142057 line       496                         i_j_list.append((
excute 13:48:12.145034 line       497                             i, j,
excute 13:48:12.148025 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.152015 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1)]
excute 13:48:12.155007 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:12.158996 line       494                         if (i == j):
excute 13:48:12.162986 line       496                         i_j_list.append((
excute 13:48:12.165977 line       497                             i, j,
excute 13:48:12.168970 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.172959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2)]
excute 13:48:12.175951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:12.179941 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:12.182932 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:12.186922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:12.190911 line       494                         if (i == j):
excute 13:48:12.194901 line       496                         i_j_list.append((
excute 13:48:12.197892 line       497                             i, j,
excute 13:48:12.203879 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.207868 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2)]
excute 13:48:12.211866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:12.216859 line       494                         if (i == j):
excute 13:48:12.220833 line       496                         i_j_list.append((
excute 13:48:12.224822 line       497                             i, j,
excute 13:48:12.227814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.231804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0)]
excute 13:48:12.234796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:12.238786 line       494                         if (i == j):
excute 13:48:12.241777 line       496                         i_j_list.append((
excute 13:48:12.245766 line       497                             i, j,
excute 13:48:12.249755 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.253745 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:12.257733 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:12.261722 line       494                         if (i == j):
excute 13:48:12.264713 line       496                         i_j_list.append((
excute 13:48:12.268702 line       497                             i, j,
excute 13:48:12.271695 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.274687 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1)]
excute 13:48:12.278676 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:12.282666 line       494                         if (i == j):
excute 13:48:12.286655 line       496                         i_j_list.append((
excute 13:48:12.289647 line       497                             i, j,
excute 13:48:12.293636 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.296628 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0)]
excute 13:48:12.299620 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:12.303611 line       494                         if (i == j):
excute 13:48:12.308598 line       496                         i_j_list.append((
excute 13:48:12.311624 line       497                             i, j,
excute 13:48:12.315611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.318601 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:48:12.322560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:12.325583 line       494                         if (i == j):
excute 13:48:12.334529 line       496                         i_j_list.append((
excute 13:48:12.338520 line       497                             i, j,
excute 13:48:12.342537 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.346497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:48:12.350484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:12.354474 line       494                         if (i == j):
excute 13:48:12.358463 line       496                         i_j_list.append((
excute 13:48:12.362485 line       497                             i, j,
excute 13:48:12.365476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.369466 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:12.372460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:12.376448 line       494                         if (i == j):
excute 13:48:12.381402 line       495                             continue
excute 13:48:12.384428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:12.388418 line       494                         if (i == j):
excute 13:48:12.392406 line       496                         i_j_list.append((
excute 13:48:12.395396 line       497                             i, j,
excute 13:48:12.399355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.402378 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 2)]
excute 13:48:12.406337 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:12.410328 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:12.413316 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:12.417306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:12.420298 line       494                         if (i == j):
excute 13:48:12.424287 line       496                         i_j_list.append((
excute 13:48:12.431268 line       497                             i, j,
excute 13:48:12.435257 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.438251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 1, 2)]
excute 13:48:12.442239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:12.446229 line       494                         if (i == j):
excute 13:48:12.451249 line       496                         i_j_list.append((
excute 13:48:12.455240 line       497                             i, j,
excute 13:48:12.459194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.462186 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 1, 2), (9, 1, 1, 0)]
excute 13:48:12.466207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:12.470165 line       494                         if (i == j):
excute 13:48:12.473188 line       496                         i_j_list.append((
excute 13:48:12.477178 line       497                             i, j,
excute 13:48:12.480139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.484129 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 1, 2), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:48:12.488118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:12.492109 line       494                         if (i == j):
excute 13:48:12.496098 line       496                         i_j_list.append((
excute 13:48:12.499089 line       497                             i, j,
excute 13:48:12.503078 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.507067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 1, 2), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1)]
excute 13:48:12.512053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:12.516042 line       494                         if (i == j):
excute 13:48:12.520031 line       496                         i_j_list.append((
excute 13:48:12.524022 line       497                             i, j,
excute 13:48:12.530005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.534991 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 1, 2), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 0)]
excute 13:48:12.538981 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:12.543968 line       494                         if (i == j):
excute 13:48:12.549952 line       496                         i_j_list.append((
excute 13:48:12.554939 line       497                             i, j,
excute 13:48:12.559926 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.562917 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 1, 2), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:48:12.566905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:12.570895 line       494                         if (i == j):
excute 13:48:12.574884 line       496                         i_j_list.append((
excute 13:48:12.577877 line       497                             i, j,
excute 13:48:12.581866 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.584889 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 1, 2), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:48:12.588848 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:12.592837 line       494                         if (i == j):
excute 13:48:12.595863 line       496                         i_j_list.append((
excute 13:48:12.599850 line       497                             i, j,
excute 13:48:12.602841 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.605833 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 1, 2), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:48:12.609823 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:12.613782 line       494                         if (i == j):
excute 13:48:12.617801 line       496                         i_j_list.append((
excute 13:48:12.621792 line       497                             i, j,
excute 13:48:12.624784 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:12.627777 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 2), (1, 0, 1, 2), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 2), (2, 0, 2, 2), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 2), (3, 0, 10, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 9, 10, 2), (4, 0, 2, 2), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 1), (4, 9, 2, 2), (5, 0, 0, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 1), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 2), (6, 0, 0, 2), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 2), (7, 0, -1, 2), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 2), (8, 0, 0, 2), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 2), (9, 0, 1, 2), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 1)]
excute 13:48:12.631764 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:12.635724 line       494                         if (i == j):
excute 13:48:12.639713 line       495                             continue
excute 13:48:12.642736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:12.646711 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:12.649717 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (0, 3, -1, 1), (0, 8, -1, 1), (7, 3, -1, 1), (7, 8, -1, 1), (0, 9, -1, 2), (7, 0, -1, 2), (7, 9, -1, 2), (5, 1, 0, 0), (5, 2, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (5, 3, 0, 1), (5, 8, 0, 1), (6, 3, 0, 1), (6, 8, 0, 1), (8, 3, 0, 1), (5, 0, 0, 2), (5, 9, 0, 2), (6, 0, 0, 2), (6, 9, 0, 2), (8, 0, 0, 2), (8, 9, 0, 2), (1, 2, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (1, 3, 1, 1), (1, 8, 1, 1), (9, 3, 1, 1), (9, 8, 1, 1), (1, 0, 1, 2), (1, 9, 1, 2), (9, 0, 1, 2), (2, 1, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (2, 3, 2, 1), (2, 8, 2, 1), (4, 3, 2, 1), (4, 8, 2, 1), (2, 0, 2, 2), (2, 9, 2, 2), (4, 0, 2, 2), (4, 9, 2, 2), (3, 1, 10, 0), (3, 2, 10, 0), (3, 4, 10, 0), (3, 5, 10, 0), (3, 6, 10, 0), (3, 7, 10, 0), (3, 8, 10, 1), (3, 0, 10, 2), (3, 9, 10, 2)]
excute 13:48:12.652708 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:12.657695 line       505                     if (self.RELOCATE):
excute 13:48:12.660690 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:12.664676 line       505                     if (self.RELOCATE):
excute 13:48:12.668636 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:12.671657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:48:12.675649 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:12.679621 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:12.682628 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.686622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:12.690578 line       556                     i = i_j[0]
excute 13:48:12.693567 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:12.697556 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.701549 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:12.704538 line       556                     i = i_j[0]
excute 13:48:12.708527 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:12.712517 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.717537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:12.720526 line       556                     i = i_j[0]
excute 13:48:12.724485 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:12.727476 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.731466 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:12.735455 line       556                     i = i_j[0]
excute 13:48:12.739446 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:12.742472 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.747424 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:12.751426 line       556                     i = i_j[0]
excute 13:48:12.756402 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:12.760391 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.764380 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:12.768369 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:12.772359 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:12.776348 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.780338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:12.783329 line       556                     i = i_j[0]
excute 13:48:12.787319 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:12.791308 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.795304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:12.799287 line       556                     i = i_j[0]
excute 13:48:12.803275 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:12.806301 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.810257 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:12.813280 line       556                     i = i_j[0]
excute 13:48:12.817241 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:12.822226 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.826213 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:12.829207 line       556                     i = i_j[0]
excute 13:48:12.833194 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:12.836188 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.840175 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 1)
excute 13:48:12.844167 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:12.848156 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:12.852145 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.857133 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 1)
excute 13:48:12.860124 line       556                     i = i_j[0]
excute 13:48:12.864113 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:12.868102 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.872092 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 1)
excute 13:48:12.876081 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:12.880070 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:12.884060 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.888048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 1)
excute 13:48:12.891041 line       556                     i = i_j[0]
excute 13:48:12.896029 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:12.899020 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.903008 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 143
excute 13:48:12.906997 line       560                         if (t_tmp > self.TIME):
excute 13:48:12.910988 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:12.914976 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:12.918966 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 161
excute 13:48:12.926943 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:12.933925 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 2)
excute 13:48:12.936918 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:12.940907 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:12.944897 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.949882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 2)
excute 13:48:12.953872 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:12.957864 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:12.963846 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.969830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 2)
excute 13:48:12.972822 line       556                     i = i_j[0]
excute 13:48:12.977808 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:12.980800 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:12.984790 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:48:12.987782 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:12.991771 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:12.996759 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.000749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:48:13.003739 line       556                     i = i_j[0]
excute 13:48:13.007729 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:13.010721 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.014710 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:48:13.018733 line       556                     i = i_j[0]
excute 13:48:13.022691 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:13.026712 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.031664 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:48:13.035652 line       556                     i = i_j[0]
excute 13:48:13.039642 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:13.043631 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.047622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:48:13.050612 line       556                     i = i_j[0]
excute 13:48:13.054603 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:13.057594 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.061583 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:48:13.064575 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:13.068565 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:13.072554 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.076543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:48:13.079535 line       556                     i = i_j[0]
excute 13:48:13.083524 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:13.086517 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.090506 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:48:13.094495 line       556                     i = i_j[0]
excute 13:48:13.097487 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:13.101476 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.104469 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:48:13.108458 line       556                     i = i_j[0]
excute 13:48:13.111450 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:13.115439 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.118431 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:48:13.122422 line       556                     i = i_j[0]
excute 13:48:13.127411 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:13.131429 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.135388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:13.139377 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:13.143368 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:13.147356 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.151345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:13.155335 line       556                     i = i_j[0]
excute 13:48:13.159324 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:13.162316 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.166305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:13.170294 line       556                     i = i_j[0]
excute 13:48:13.174285 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:13.177276 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.181265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:13.185254 line       556                     i = i_j[0]
excute 13:48:13.189244 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:13.193233 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.198221 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:13.201212 line       556                     i = i_j[0]
excute 13:48:13.206200 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:13.209191 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.213180 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:13.217169 line       556                     i = i_j[0]
excute 13:48:13.222157 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:13.225148 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.231131 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 1)
excute 13:48:13.234156 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:13.238144 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:13.244098 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.248086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 1)
excute 13:48:13.251076 line       556                     i = i_j[0]
excute 13:48:13.255066 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:13.258058 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.262048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 1)
excute 13:48:13.266050 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:13.269028 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:13.273019 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.277008 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 1)
excute 13:48:13.280997 line       556                     i = i_j[0]
excute 13:48:13.283989 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:13.287978 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.291970 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 1)
excute 13:48:13.295988 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:13.299976 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:13.303936 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.307926 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 2)
excute 13:48:13.310949 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:13.314941 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:13.318896 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.321922 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 137
excute 13:48:13.327873 line       560                         if (t_tmp > self.TIME):
excute 13:48:13.336850 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:13.341835 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:13.345858 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:13.350842 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:13.353838 line       569                                     available_vhecles[i][t],
excute 13:48:13.357823 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:13.361823 line       571                                     self.S_capacities[j],
excute 13:48:13.365802 line       572                                     demands[t][i][j],
excute 13:48:13.368793 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 3
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 125
calc_contract     13:48:13.372757 call       352     def caluculate_contract(
calc_contract     13:48:13.375759 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:13.375759 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:13.377741 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:13.378736 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:13.378736 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -1
calc_contract     13:48:13.379734 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 2
calc_contract     13:48:13.380731 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:13.381728 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-1, 2, 0]
excute Modified var:.. can_contract = -1
excute Modified var:.. rsf_tmp = 2
excute 13:48:13.382731 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 163
excute 13:48:13.387715 line       576                                 rse += rse_tmp
excute 13:48:13.391704 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 0
move_cars     Starting var:.. t = 125
move_cars     Starting var:.. t_tmp = 137
move_cars     Starting var:.. can_contract = -1
move_cars     13:48:13.397687 call       388     def move_cars(
move_cars     13:48:13.401675 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:13.403670 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:48:13.404669 line       399         return available_vhecles
move_cars     13:48:13.406664 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -5, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:13.408658 line       579                                 success += can_contract
excute Modified var:.. success = 50
excute 13:48:13.413643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 2)
excute 13:48:13.416636 line       556                     i = i_j[0]
excute 13:48:13.420625 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:13.424615 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.428604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 2)
excute 13:48:13.432593 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:13.437583 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:13.441602 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.445589 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 136
excute 13:48:13.449549 line       560                         if (t_tmp > self.TIME):
excute 13:48:13.454534 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:13.458522 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:13.462546 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:13.465538 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:13.469494 line       569                                     available_vhecles[i][t],
excute 13:48:13.472517 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:13.475509 line       571                                     self.S_capacities[j],
excute 13:48:13.479466 line       572                                     demands[t][i][j],
excute 13:48:13.482458 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 4
calc_contract     Starting var:.. available_vhecles_target = 3
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 125
calc_contract     13:48:13.486447 call       352     def caluculate_contract(
calc_contract     13:48:13.489440 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:13.489440 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:13.490437 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:13.491434 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:13.492432 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -1
calc_contract     13:48:13.492432 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 2
calc_contract     13:48:13.493431 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:13.494459 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-1, 2, 0]
excute 13:48:13.495424 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 165
excute 13:48:13.498415 line       576                                 rse += rse_tmp
excute 13:48:13.502405 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 0
move_cars     Starting var:.. t = 125
move_cars     Starting var:.. t_tmp = 136
move_cars     Starting var:.. can_contract = -1
move_cars     13:48:13.505397 call       388     def move_cars(
move_cars     13:48:13.510384 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:13.512379 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:48:13.513376 line       399         return available_vhecles
move_cars     13:48:13.514374 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -5, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:13.517365 line       579                                 success += can_contract
excute Modified var:.. success = 49
excute 13:48:13.521366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 2)
excute 13:48:13.524346 line       556                     i = i_j[0]
excute 13:48:13.529333 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:13.535318 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.541306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 2)
excute 13:48:13.544324 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:13.548318 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:13.552273 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.557260 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 2)
excute 13:48:13.560252 line       556                     i = i_j[0]
excute 13:48:13.564241 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:13.568230 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.572220 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:48:13.576210 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:13.580200 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:13.584187 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.588177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:48:13.592167 line       556                     i = i_j[0]
excute 13:48:13.597164 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:13.600146 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.604136 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:48:13.607127 line       556                     i = i_j[0]
excute 13:48:13.611116 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:13.615105 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.619095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:48:13.622087 line       556                     i = i_j[0]
excute 13:48:13.627074 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:13.630065 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.635052 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:48:13.639041 line       556                     i = i_j[0]
excute 13:48:13.643031 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:13.647050 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.651008 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:48:13.654000 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:13.657989 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:13.661979 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.665968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:48:13.668959 line       556                     i = i_j[0]
excute 13:48:13.672950 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:13.675941 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.679941 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:48:13.682922 line       556                     i = i_j[0]
excute 13:48:13.686911 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:13.689904 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.693893 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:48:13.697883 line       556                     i = i_j[0]
excute 13:48:13.701879 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:13.705862 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.708885 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:48:13.713842 line       556                     i = i_j[0]
excute 13:48:13.716831 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:13.720827 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.724811 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:48:13.727802 line       556                     i = i_j[0]
excute 13:48:13.734785 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:13.738804 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.742794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 1)
excute 13:48:13.747756 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:13.750743 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:13.755729 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.760716 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 1)
excute 13:48:13.764704 line       556                     i = i_j[0]
excute 13:48:13.771714 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:13.775676 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.779666 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 1)
excute 13:48:13.782657 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:13.786646 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:13.790666 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.794655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 1)
excute 13:48:13.797647 line       556                     i = i_j[0]
excute 13:48:13.801605 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:13.804597 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.808586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 2)
excute 13:48:13.812576 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:13.816583 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:13.820567 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.824545 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 2)
excute 13:48:13.827571 line       556                     i = i_j[0]
excute 13:48:13.831558 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:13.834548 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.838508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 2)
excute 13:48:13.841530 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:13.845489 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:13.850476 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.854498 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:13.858454 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:13.861447 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:13.866441 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.870422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:13.876405 line       556                     i = i_j[0]
excute 13:48:13.881405 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:13.885381 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.892387 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:13.897350 line       556                     i = i_j[0]
excute 13:48:13.904331 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:13.908345 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.912312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:13.915337 line       556                     i = i_j[0]
excute 13:48:13.919292 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:13.922314 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.926272 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:13.929264 line       556                     i = i_j[0]
excute 13:48:13.933258 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:13.936245 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.940234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:48:13.944223 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:13.948216 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:13.954198 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.958189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:48:13.962191 line       556                     i = i_j[0]
excute 13:48:13.966167 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:13.970156 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.974146 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:48:13.980129 line       556                     i = i_j[0]
excute 13:48:13.988107 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:13.992098 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:13.996086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:48:14.000081 line       556                     i = i_j[0]
excute 13:48:14.003103 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:14.007089 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.011056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:48:14.014069 line       556                     i = i_j[0]
excute 13:48:14.018058 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:14.022024 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.027004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 1)
excute 13:48:14.032987 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:14.036011 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:14.040002 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.043961 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 132
excute 13:48:14.046980 line       560                         if (t_tmp > self.TIME):
excute 13:48:14.050975 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:14.055960 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 140
excute 13:48:14.058952 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:14.062937 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:14.065931 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:48:14.069889 line       556                     i = i_j[0]
excute 13:48:14.074877 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:14.077868 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.081857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 1)
excute 13:48:14.085847 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:14.089847 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:14.092858 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.096848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 1)
excute 13:48:14.100836 line       556                     i = i_j[0]
excute 13:48:14.104832 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:14.107818 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.120842 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 2)
excute 13:48:14.124835 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:14.129821 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:14.133812 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.137801 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 2)
excute 13:48:14.140792 line       556                     i = i_j[0]
excute 13:48:14.144782 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:14.148771 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.152761 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 131
excute 13:48:14.156752 line       560                         if (t_tmp > self.TIME):
excute 13:48:14.160741 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:14.163732 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 141
excute 13:48:14.167721 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:14.171711 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:14.174702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 2)
excute 13:48:14.178691 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:14.182681 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:14.187667 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.190658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 2)
excute 13:48:14.194649 line       556                     i = i_j[0]
excute 13:48:14.198640 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:14.202627 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.206620 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 10, 0)
excute 13:48:14.209609 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:14.213599 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:14.216589 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.220580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 10, 0)
excute 13:48:14.224568 line       556                     i = i_j[0]
excute 13:48:14.227560 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:14.231551 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.234541 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 10, 0)
excute 13:48:14.238532 line       556                     i = i_j[0]
excute 13:48:14.242520 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:14.245543 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.249502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 10, 0)
excute 13:48:14.252526 line       556                     i = i_j[0]
excute 13:48:14.257481 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:14.261469 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.265470 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 10, 0)
excute 13:48:14.269449 line       556                     i = i_j[0]
excute 13:48:14.273439 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:14.277438 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.281416 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 10, 0)
excute 13:48:14.284441 line       556                     i = i_j[0]
excute 13:48:14.288398 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:14.291420 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.295379 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 10, 1)
excute 13:48:14.298402 line       556                     i = i_j[0]
excute 13:48:14.302390 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:14.306381 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.310339 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 10, 2)
excute 13:48:14.313361 line       556                     i = i_j[0]
excute 13:48:14.317319 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:14.321310 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.325300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 10, 2)
excute 13:48:14.331313 line       556                     i = i_j[0]
excute 13:48:14.338266 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:14.343284 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:14.349267 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 133
excute 13:48:14.352228 line       560                         if (t_tmp > self.TIME):
excute 13:48:14.357231 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:14.362201 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:14.366190 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:14.370180 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:14.374169 line       569                                     available_vhecles[i][t],
excute 13:48:14.378157 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:14.381180 line       571                                     self.S_capacities[j],
excute 13:48:14.385169 line       572                                     demands[t][i][j],
excute 13:48:14.389160 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = -8
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 125
calc_contract     13:48:14.392150 call       352     def caluculate_contract(
calc_contract     13:48:14.396126 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:14.396126 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:14.397107 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:14.398104 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:14.398104 line       375                 can_contract = available_vhecles_target
calc_contract     New var:....... can_contract = 2
calc_contract     13:48:14.399102 line       376                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 9
calc_contract     13:48:14.400099 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:14.401097 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [2, 0, 9]
excute Modified var:.. can_contract = 2
excute Modified var:.. rsf_tmp = 0
excute Modified var:.. rse_tmp = 9
excute 13:48:14.402098 line       575                                 rsf += rsf_tmp
excute 13:48:14.406083 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 150
excute 13:48:14.410104 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 3
move_cars     Starting var:.. j = 9
move_cars     Starting var:.. t = 125
move_cars     Starting var:.. t_tmp = 133
move_cars     Starting var:.. can_contract = 2
move_cars     13:48:14.414062 call       388     def move_cars(
move_cars     13:48:14.418060 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:14.419080 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     13:48:14.421043 line       399         return available_vhecles
move_cars     13:48:14.422072 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute 13:48:14.425046 line       579                                 success += can_contract
excute Modified var:.. success = 51
excute 13:48:14.429026 line       555                 for i_j in i_j_list:
excute 13:48:14.433011 line       581             self.write_matrix(
excute 13:48:14.436036 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:14.439027 line       583                 result_file_path,
excute 13:48:14.443015 line       584                 mode='a'
excute 13:48:14.449974 line       488         for t in time_steps:
excute Modified var:.. t = 126
excute 13:48:14.453990 line       489             if (t != self.TIME + 1):
excute 13:48:14.457945 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:14.462933 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:14.469912 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:14.475929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:14.482880 line       494                         if (i == j):
excute 13:48:14.486869 line       495                             continue
excute 13:48:14.489858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:14.493848 line       494                         if (i == j):
excute 13:48:14.499834 line       496                         i_j_list.append((
excute 13:48:14.505848 line       497                             i, j,
excute 13:48:14.509807 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.514792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:48:14.518783 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:14.522772 line       494                         if (i == j):
excute 13:48:14.535737 line       496                         i_j_list.append((
excute 13:48:14.542718 line       497                             i, j,
excute 13:48:14.550696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.556679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:48:14.560671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:14.566654 line       494                         if (i == j):
excute 13:48:14.570645 line       496                         i_j_list.append((
excute 13:48:14.573634 line       497                             i, j,
excute 13:48:14.577625 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.581614 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1)]
excute 13:48:14.585604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:14.589593 line       494                         if (i == j):
excute 13:48:14.593584 line       496                         i_j_list.append((
excute 13:48:14.596575 line       497                             i, j,
excute 13:48:14.599567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.603556 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0)]
excute 13:48:14.606548 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:14.610536 line       494                         if (i == j):
excute 13:48:14.616521 line       496                         i_j_list.append((
excute 13:48:14.620511 line       497                             i, j,
excute 13:48:14.623502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.626493 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:48:14.629486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:14.633481 line       494                         if (i == j):
excute 13:48:14.637466 line       496                         i_j_list.append((
excute 13:48:14.644444 line       497                             i, j,
excute 13:48:14.648434 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.655416 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0)]
excute 13:48:14.659410 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:14.663396 line       494                         if (i == j):
excute 13:48:14.669380 line       496                         i_j_list.append((
excute 13:48:14.672372 line       497                             i, j,
excute 13:48:14.676362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.680350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:48:14.684340 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:14.688328 line       494                         if (i == j):
excute 13:48:14.692319 line       496                         i_j_list.append((
excute 13:48:14.696307 line       497                             i, j,
excute 13:48:14.700297 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.703289 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:48:14.706281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:14.710271 line       494                         if (i == j):
excute 13:48:14.715270 line       496                         i_j_list.append((
excute 13:48:14.718250 line       497                             i, j,
excute 13:48:14.721241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.725230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:48:14.729220 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:14.733210 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:14.736202 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:14.740196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:14.744178 line       494                         if (i == j):
excute 13:48:14.749167 line       496                         i_j_list.append((
excute 13:48:14.753156 line       497                             i, j,
excute 13:48:14.757145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.761135 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0)]
excute 13:48:14.764126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:14.769112 line       494                         if (i == j):
excute 13:48:14.773103 line       495                             continue
excute 13:48:14.776094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:14.780084 line       494                         if (i == j):
excute 13:48:14.783075 line       496                         i_j_list.append((
excute 13:48:14.787066 line       497                             i, j,
excute 13:48:14.790057 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.793048 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:48:14.796040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:14.800029 line       494                         if (i == j):
excute 13:48:14.804020 line       496                         i_j_list.append((
excute 13:48:14.807011 line       497                             i, j,
excute 13:48:14.810003 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.813992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1)]
excute 13:48:14.816986 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:14.820975 line       494                         if (i == j):
excute 13:48:14.824965 line       496                         i_j_list.append((
excute 13:48:14.827957 line       497                             i, j,
excute 13:48:14.830948 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.834937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0)]
excute 13:48:14.837930 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:14.841920 line       494                         if (i == j):
excute 13:48:14.845909 line       496                         i_j_list.append((
excute 13:48:14.848900 line       497                             i, j,
excute 13:48:14.851892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.855881 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:48:14.859871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:14.863860 line       494                         if (i == j):
excute 13:48:14.867850 line       496                         i_j_list.append((
excute 13:48:14.870842 line       497                             i, j,
excute 13:48:14.875829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.878819 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:48:14.881811 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:14.885801 line       494                         if (i == j):
excute 13:48:14.889791 line       496                         i_j_list.append((
excute 13:48:14.893780 line       497                             i, j,
excute 13:48:14.896772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.900762 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:48:14.903752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:14.907742 line       494                         if (i == j):
excute 13:48:14.911732 line       496                         i_j_list.append((
excute 13:48:14.914725 line       497                             i, j,
excute 13:48:14.918713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.921705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:48:14.925701 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:14.928687 line       494                         if (i == j):
excute 13:48:14.932676 line       496                         i_j_list.append((
excute 13:48:14.936665 line       497                             i, j,
excute 13:48:14.940654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.943646 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:48:14.948633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:14.952624 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:14.955614 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:14.959603 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:14.963595 line       494                         if (i == j):
excute 13:48:14.967583 line       496                         i_j_list.append((
excute 13:48:14.970575 line       497                             i, j,
excute 13:48:14.974565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.978552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:48:14.982542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:14.986532 line       494                         if (i == j):
excute 13:48:14.989523 line       496                         i_j_list.append((
excute 13:48:14.993514 line       497                             i, j,
excute 13:48:14.996504 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:14.999497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:48:15.003503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:15.006476 line       494                         if (i == j):
excute 13:48:15.011466 line       495                             continue
excute 13:48:15.014456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:15.018446 line       494                         if (i == j):
excute 13:48:15.021439 line       496                         i_j_list.append((
excute 13:48:15.024430 line       497                             i, j,
excute 13:48:15.028421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.031411 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1)]
excute 13:48:15.034403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:15.038393 line       494                         if (i == j):
excute 13:48:15.042384 line       496                         i_j_list.append((
excute 13:48:15.046374 line       497                             i, j,
excute 13:48:15.051359 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.054381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0)]
excute 13:48:15.058372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:15.062360 line       494                         if (i == j):
excute 13:48:15.065351 line       496                         i_j_list.append((
excute 13:48:15.069344 line       497                             i, j,
excute 13:48:15.072333 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.076323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:48:15.080285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:15.084272 line       494                         if (i == j):
excute 13:48:15.088261 line       496                         i_j_list.append((
excute 13:48:15.091253 line       497                             i, j,
excute 13:48:15.095242 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.098265 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:48:15.101257 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:15.105245 line       494                         if (i == j):
excute 13:48:15.109203 line       496                         i_j_list.append((
excute 13:48:15.112226 line       497                             i, j,
excute 13:48:15.116184 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.120175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:15.123167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:15.128153 line       494                         if (i == j):
excute 13:48:15.132142 line       496                         i_j_list.append((
excute 13:48:15.136131 line       497                             i, j,
excute 13:48:15.139122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.146104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:15.150093 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:15.156078 line       494                         if (i == j):
excute 13:48:15.161064 line       496                         i_j_list.append((
excute 13:48:15.164055 line       497                             i, j,
excute 13:48:15.167079 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.171069 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:15.174060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:15.178020 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:15.182009 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:15.185999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:15.189023 line       494                         if (i == j):
excute 13:48:15.192979 line       496                         i_j_list.append((
excute 13:48:15.195972 line       497                             i, j,
excute 13:48:15.199962 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.202953 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0)]
excute 13:48:15.206943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:15.209935 line       494                         if (i == j):
excute 13:48:15.214921 line       496                         i_j_list.append((
excute 13:48:15.217946 line       497                             i, j,
excute 13:48:15.220938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.224925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0)]
excute 13:48:15.227916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:15.231876 line       494                         if (i == j):
excute 13:48:15.235864 line       496                         i_j_list.append((
excute 13:48:15.239853 line       497                             i, j,
excute 13:48:15.242845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.246836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0)]
excute 13:48:15.249828 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:15.254827 line       494                         if (i == j):
excute 13:48:15.258805 line       495                             continue
excute 13:48:15.262794 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:15.266782 line       494                         if (i == j):
excute 13:48:15.270773 line       496                         i_j_list.append((
excute 13:48:15.273764 line       497                             i, j,
excute 13:48:15.277754 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.281744 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0)]
excute 13:48:15.285738 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:15.288722 line       494                         if (i == j):
excute 13:48:15.292714 line       496                         i_j_list.append((
excute 13:48:15.296703 line       497                             i, j,
excute 13:48:15.299695 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.302687 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0)]
excute 13:48:15.306676 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:15.310666 line       494                         if (i == j):
excute 13:48:15.314655 line       496                         i_j_list.append((
excute 13:48:15.318644 line       497                             i, j,
excute 13:48:15.322634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.325655 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0)]
excute 13:48:15.333605 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:15.338591 line       494                         if (i == j):
excute 13:48:15.342580 line       496                         i_j_list.append((
excute 13:48:15.348563 line       497                             i, j,
excute 13:48:15.351557 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.355547 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0)]
excute 13:48:15.358538 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:15.363523 line       494                         if (i == j):
excute 13:48:15.367514 line       496                         i_j_list.append((
excute 13:48:15.370506 line       497                             i, j,
excute 13:48:15.374495 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.378484 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0)]
excute 13:48:15.382472 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:15.387473 line       494                         if (i == j):
excute 13:48:15.391450 line       496                         i_j_list.append((
excute 13:48:15.395438 line       497                             i, j,
excute 13:48:15.398431 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.402421 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0)]
excute 13:48:15.405413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:15.409402 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:15.413391 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:15.417381 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:15.420373 line       494                         if (i == j):
excute 13:48:15.424361 line       496                         i_j_list.append((
excute 13:48:15.428351 line       497                             i, j,
excute 13:48:15.431343 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.435332 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0)]
excute 13:48:15.439321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:15.442311 line       494                         if (i == j):
excute 13:48:15.447299 line       496                         i_j_list.append((
excute 13:48:15.451290 line       497                             i, j,
excute 13:48:15.455279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.458271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:48:15.462261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:15.466250 line       494                         if (i == j):
excute 13:48:15.469241 line       496                         i_j_list.append((
excute 13:48:15.473231 line       497                             i, j,
excute 13:48:15.480260 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.483254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:48:15.487245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:15.491233 line       494                         if (i == j):
excute 13:48:15.495223 line       496                         i_j_list.append((
excute 13:48:15.499212 line       497                             i, j,
excute 13:48:15.503201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.506193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1)]
excute 13:48:15.510181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:15.514172 line       494                         if (i == j):
excute 13:48:15.519158 line       495                             continue
excute 13:48:15.522149 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:15.525143 line       494                         if (i == j):
excute 13:48:15.529132 line       496                         i_j_list.append((
excute 13:48:15.533122 line       497                             i, j,
excute 13:48:15.536114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.540103 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0)]
excute 13:48:15.543095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:15.548085 line       494                         if (i == j):
excute 13:48:15.552071 line       496                         i_j_list.append((
excute 13:48:15.556061 line       497                             i, j,
excute 13:48:15.560048 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.563042 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:48:15.567031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:15.572016 line       494                         if (i == j):
excute 13:48:15.576008 line       496                         i_j_list.append((
excute 13:48:15.578999 line       497                             i, j,
excute 13:48:15.582989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.585980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:48:15.589970 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:15.594958 line       494                         if (i == j):
excute 13:48:15.598947 line       496                         i_j_list.append((
excute 13:48:15.601938 line       497                             i, j,
excute 13:48:15.604929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.608919 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:48:15.612911 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:15.616899 line       494                         if (i == j):
excute 13:48:15.619890 line       496                         i_j_list.append((
excute 13:48:15.623879 line       497                             i, j,
excute 13:48:15.627869 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.630860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:48:15.634851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:15.638839 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:15.642829 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:15.646829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:15.649810 line       494                         if (i == j):
excute 13:48:15.653799 line       496                         i_j_list.append((
excute 13:48:15.657788 line       497                             i, j,
excute 13:48:15.661778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.664770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0)]
excute 13:48:15.668759 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:15.672748 line       494                         if (i == j):
excute 13:48:15.676748 line       496                         i_j_list.append((
excute 13:48:15.680728 line       497                             i, j,
excute 13:48:15.683719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.687709 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0)]
excute 13:48:15.690701 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:15.696686 line       494                         if (i == j):
excute 13:48:15.699675 line       496                         i_j_list.append((
excute 13:48:15.703666 line       497                             i, j,
excute 13:48:15.706657 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.709649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0)]
excute 13:48:15.713639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:15.717629 line       494                         if (i == j):
excute 13:48:15.721618 line       496                         i_j_list.append((
excute 13:48:15.724609 line       497                             i, j,
excute 13:48:15.728605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.731591 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1)]
excute 13:48:15.734582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:15.738572 line       494                         if (i == j):
excute 13:48:15.742562 line       496                         i_j_list.append((
excute 13:48:15.745553 line       497                             i, j,
excute 13:48:15.748576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.752560 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0)]
excute 13:48:15.755557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:15.760513 line       494                         if (i == j):
excute 13:48:15.764503 line       495                             continue
excute 13:48:15.767525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:15.770519 line       494                         if (i == j):
excute 13:48:15.774483 line       496                         i_j_list.append((
excute 13:48:15.777499 line       497                             i, j,
excute 13:48:15.781492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.784480 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0)]
excute 13:48:15.787471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:15.791470 line       494                         if (i == j):
excute 13:48:15.795419 line       496                         i_j_list.append((
excute 13:48:15.799408 line       497                             i, j,
excute 13:48:15.803399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.806392 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0)]
excute 13:48:15.810381 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:15.814370 line       494                         if (i == j):
excute 13:48:15.819358 line       496                         i_j_list.append((
excute 13:48:15.822350 line       497                             i, j,
excute 13:48:15.826338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.830327 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0)]
excute 13:48:15.833320 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:15.837309 line       494                         if (i == j):
excute 13:48:15.841298 line       496                         i_j_list.append((
excute 13:48:15.845287 line       497                             i, j,
excute 13:48:15.849277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.853266 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0)]
excute 13:48:15.856258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:15.861246 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:15.864236 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:15.869224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:15.872216 line       494                         if (i == j):
excute 13:48:15.877203 line       496                         i_j_list.append((
excute 13:48:15.880194 line       497                             i, j,
excute 13:48:15.884183 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.888172 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0)]
excute 13:48:15.891195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:15.895158 line       494                         if (i == j):
excute 13:48:15.898178 line       496                         i_j_list.append((
excute 13:48:15.903162 line       497                             i, j,
excute 13:48:15.907121 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.910114 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0)]
excute 13:48:15.915100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:15.919090 line       494                         if (i == j):
excute 13:48:15.924075 line       496                         i_j_list.append((
excute 13:48:15.927092 line       497                             i, j,
excute 13:48:15.930086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.934074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0)]
excute 13:48:15.937071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:15.941030 line       494                         if (i == j):
excute 13:48:15.946020 line       496                         i_j_list.append((
excute 13:48:15.950038 line       497                             i, j,
excute 13:48:15.953029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.956987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1)]
excute 13:48:15.959981 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:15.965965 line       494                         if (i == j):
excute 13:48:15.970953 line       496                         i_j_list.append((
excute 13:48:15.974941 line       497                             i, j,
excute 13:48:15.978930 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:15.982949 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0)]
excute 13:48:15.985945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:15.989900 line       494                         if (i == j):
excute 13:48:15.993904 line       496                         i_j_list.append((
excute 13:48:15.997910 line       497                             i, j,
excute 13:48:16.003863 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.007852 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0)]
excute 13:48:16.011841 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:16.018822 line       494                         if (i == j):
excute 13:48:16.026801 line       495                             continue
excute 13:48:16.033782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:16.036776 line       494                         if (i == j):
excute 13:48:16.040795 line       496                         i_j_list.append((
excute 13:48:16.043786 line       497                             i, j,
excute 13:48:16.046779 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.050739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0)]
excute 13:48:16.053759 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:16.057718 line       494                         if (i == j):
excute 13:48:16.065698 line       496                         i_j_list.append((
excute 13:48:16.068690 line       497                             i, j,
excute 13:48:16.072680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.075702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:48:16.079661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:16.082682 line       494                         if (i == j):
excute 13:48:16.086672 line       496                         i_j_list.append((
excute 13:48:16.090631 line       497                             i, j,
excute 13:48:16.093654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.096645 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:48:16.100604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:16.106589 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:16.109579 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:16.114566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:16.117560 line       494                         if (i == j):
excute 13:48:16.121550 line       496                         i_j_list.append((
excute 13:48:16.124539 line       497                             i, j,
excute 13:48:16.128530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.132519 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0)]
excute 13:48:16.136509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:16.140500 line       494                         if (i == j):
excute 13:48:16.144487 line       496                         i_j_list.append((
excute 13:48:16.147479 line       497                             i, j,
excute 13:48:16.151469 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.155458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:48:16.159447 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:16.163436 line       494                         if (i == j):
excute 13:48:16.167425 line       496                         i_j_list.append((
excute 13:48:16.170418 line       497                             i, j,
excute 13:48:16.174407 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.178397 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:16.181419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:16.185410 line       494                         if (i == j):
excute 13:48:16.189394 line       496                         i_j_list.append((
excute 13:48:16.192389 line       497                             i, j,
excute 13:48:16.196383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.200346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1)]
excute 13:48:16.203359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:16.207351 line       494                         if (i == j):
excute 13:48:16.213303 line       496                         i_j_list.append((
excute 13:48:16.216325 line       497                             i, j,
excute 13:48:16.220284 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.223307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0)]
excute 13:48:16.226298 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:16.230269 line       494                         if (i == j):
excute 13:48:16.234247 line       496                         i_j_list.append((
excute 13:48:16.237269 line       497                             i, j,
excute 13:48:16.241228 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.244255 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:48:16.247242 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:16.251201 line       494                         if (i == j):
excute 13:48:16.255192 line       496                         i_j_list.append((
excute 13:48:16.259181 line       497                             i, j,
excute 13:48:16.263173 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.266162 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:48:16.270162 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:16.276135 line       494                         if (i == j):
excute 13:48:16.281123 line       495                             continue
excute 13:48:16.285112 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:16.290097 line       494                         if (i == j):
excute 13:48:16.296081 line       496                         i_j_list.append((
excute 13:48:16.301067 line       497                             i, j,
excute 13:48:16.305058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.309047 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:48:16.314035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:16.318023 line       494                         if (i == j):
excute 13:48:16.322012 line       496                         i_j_list.append((
excute 13:48:16.327000 line       497                             i, j,
excute 13:48:16.336971 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.343953 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:16.350934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:16.357916 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:16.365895 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:16.369885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:16.376867 line       494                         if (i == j):
excute 13:48:16.383847 line       496                         i_j_list.append((
excute 13:48:16.387841 line       497                             i, j,
excute 13:48:16.392825 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.396812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:16.402796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:16.408780 line       494                         if (i == j):
excute 13:48:16.416761 line       496                         i_j_list.append((
excute 13:48:16.423741 line       497                             i, j,
excute 13:48:16.427731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.435711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:48:16.439699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:16.444686 line       494                         if (i == j):
excute 13:48:16.449672 line       496                         i_j_list.append((
excute 13:48:16.453660 line       497                             i, j,
excute 13:48:16.459645 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.464630 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:16.472609 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:16.481586 line       494                         if (i == j):
excute 13:48:16.487570 line       496                         i_j_list.append((
excute 13:48:16.497542 line       497                             i, j,
excute 13:48:16.503527 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.509511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1)]
excute 13:48:16.515494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:16.524471 line       494                         if (i == j):
excute 13:48:16.533446 line       496                         i_j_list.append((
excute 13:48:16.540428 line       497                             i, j,
excute 13:48:16.548406 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.557384 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0)]
excute 13:48:16.564364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:16.570351 line       494                         if (i == j):
excute 13:48:16.578327 line       496                         i_j_list.append((
excute 13:48:16.584310 line       497                             i, j,
excute 13:48:16.592290 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.596281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:48:16.604257 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:16.613243 line       494                         if (i == j):
excute 13:48:16.621213 line       496                         i_j_list.append((
excute 13:48:16.628193 line       497                             i, j,
excute 13:48:16.636172 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.644150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:48:16.652131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:16.658113 line       494                         if (i == j):
excute 13:48:16.666093 line       496                         i_j_list.append((
excute 13:48:16.672077 line       497                             i, j,
excute 13:48:16.678060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.685042 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:16.691025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:16.698007 line       494                         if (i == j):
excute 13:48:16.705985 line       495                             continue
excute 13:48:16.713963 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:16.719948 line       494                         if (i == j):
excute 13:48:16.727926 line       496                         i_j_list.append((
excute 13:48:16.732913 line       497                             i, j,
excute 13:48:16.738899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.745879 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:16.753858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:16.760838 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:16.766822 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:16.773804 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:16.779788 line       494                         if (i == j):
excute 13:48:16.785772 line       496                         i_j_list.append((
excute 13:48:16.789761 line       497                             i, j,
excute 13:48:16.794749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.798738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0)]
excute 13:48:16.803725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:16.807714 line       494                         if (i == j):
excute 13:48:16.811703 line       496                         i_j_list.append((
excute 13:48:16.815691 line       497                             i, j,
excute 13:48:16.819681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.823672 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:48:16.826662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:16.831649 line       494                         if (i == j):
excute 13:48:16.835639 line       496                         i_j_list.append((
excute 13:48:16.839627 line       497                             i, j,
excute 13:48:16.851630 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.855654 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:48:16.859612 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:16.863629 line       494                         if (i == j):
excute 13:48:16.870584 line       496                         i_j_list.append((
excute 13:48:16.877564 line       497                             i, j,
excute 13:48:16.880581 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.884577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1)]
excute 13:48:16.887568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:16.891559 line       494                         if (i == j):
excute 13:48:16.895547 line       496                         i_j_list.append((
excute 13:48:16.899515 line       497                             i, j,
excute 13:48:16.903525 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.906520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 0)]
excute 13:48:16.910508 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:16.914481 line       494                         if (i == j):
excute 13:48:16.918487 line       496                         i_j_list.append((
excute 13:48:16.921477 line       497                             i, j,
excute 13:48:16.924471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.928460 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:48:16.933417 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:16.938402 line       494                         if (i == j):
excute 13:48:16.942391 line       496                         i_j_list.append((
excute 13:48:16.946381 line       497                             i, j,
excute 13:48:16.950371 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.954360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:48:16.958380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:16.962339 line       494                         if (i == j):
excute 13:48:16.966327 line       496                         i_j_list.append((
excute 13:48:16.969349 line       497                             i, j,
excute 13:48:16.973343 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.976331 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:48:16.979322 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:16.984316 line       494                         if (i == j):
excute 13:48:16.987270 line       496                         i_j_list.append((
excute 13:48:16.991261 line       497                             i, j,
excute 13:48:16.995251 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:16.999240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 1), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 1), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 3, -1, 1), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 1), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 1), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:48:17.002230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:17.006221 line       494                         if (i == j):
excute 13:48:17.011216 line       495                             continue
excute 13:48:17.014199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:17.018189 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:17.021181 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (5, 0, -1, 0), (5, 1, -1, 0), (5, 2, -1, 0), (5, 4, -1, 0), (5, 6, -1, 0), (5, 7, -1, 0), (5, 8, -1, 0), (5, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 3, -1, 1), (5, 3, -1, 1), (6, 3, -1, 1), (7, 3, -1, 1), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (8, 3, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (1, 3, 1, 1), (9, 3, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (2, 3, 2, 1), (4, 3, 2, 1), (3, 0, 12, 0), (3, 1, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0)]
excute 13:48:17.025170 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:17.030156 line       505                     if (self.RELOCATE):
excute 13:48:17.034146 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:17.038168 line       505                     if (self.RELOCATE):
excute 13:48:17.042125 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:17.045146 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:48:17.049136 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:17.053106 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:17.059080 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.065065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:17.068056 line       556                     i = i_j[0]
excute 13:48:17.073042 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:17.076034 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.080023 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:17.084013 line       556                     i = i_j[0]
excute 13:48:17.088003 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:17.090995 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.094984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:17.098973 line       556                     i = i_j[0]
excute 13:48:17.102963 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:17.105987 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.109974 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:17.112965 line       556                     i = i_j[0]
excute 13:48:17.116959 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:17.120931 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.123937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:17.127929 line       556                     i = i_j[0]
excute 13:48:17.131883 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:17.135874 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.140861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:17.143884 line       556                     i = i_j[0]
excute 13:48:17.147842 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:17.150864 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.154856 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:17.158844 line       556                     i = i_j[0]
excute 13:48:17.162802 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:17.165825 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.169784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, -1, 0)
excute 13:48:17.172810 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:17.176766 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:17.180754 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.184775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, -1, 0)
excute 13:48:17.188733 line       556                     i = i_j[0]
excute 13:48:17.192723 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:17.195714 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.200702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, -1, 0)
excute 13:48:17.204690 line       556                     i = i_j[0]
excute 13:48:17.208679 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:17.211701 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.216658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, -1, 0)
excute 13:48:17.219680 line       556                     i = i_j[0]
excute 13:48:17.223641 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:17.226661 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.230620 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, -1, 0)
excute 13:48:17.234609 line       556                     i = i_j[0]
excute 13:48:17.239597 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:17.246588 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.251564 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, -1, 0)
excute 13:48:17.255554 line       556                     i = i_j[0]
excute 13:48:17.259543 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:17.262566 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.266525 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, -1, 0)
excute 13:48:17.269547 line       556                     i = i_j[0]
excute 13:48:17.273515 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:17.277526 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.281517 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, -1, 0)
excute 13:48:17.285494 line       556                     i = i_j[0]
excute 13:48:17.288496 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:17.292485 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.296477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:48:17.300434 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:17.303456 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:17.307446 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.311405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 0)
excute 13:48:17.314427 line       556                     i = i_j[0]
excute 13:48:17.318416 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:17.322406 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.326372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 0)
excute 13:48:17.335340 line       556                     i = i_j[0]
excute 13:48:17.342322 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:17.347340 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.353293 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:48:17.357283 line       556                     i = i_j[0]
excute 13:48:17.363268 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:17.367287 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.371249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 0)
excute 13:48:17.374268 line       556                     i = i_j[0]
excute 13:48:17.378257 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:17.382246 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.387202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:48:17.390224 line       556                     i = i_j[0]
excute 13:48:17.394215 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:17.398192 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.402163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:48:17.405184 line       556                     i = i_j[0]
excute 13:48:17.409144 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:17.412170 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.416124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:48:17.419147 line       556                     i = i_j[0]
excute 13:48:17.423139 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:17.427119 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.431105 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:17.434108 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:17.438065 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:17.442055 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.450037 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:17.453056 line       556                     i = i_j[0]
excute 13:48:17.457015 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:17.460042 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.466990 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:17.471009 line       556                     i = i_j[0]
excute 13:48:17.474998 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:17.478957 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.482946 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:17.485968 line       556                     i = i_j[0]
excute 13:48:17.489958 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:17.493921 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.497907 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:17.500928 line       556                     i = i_j[0]
excute 13:48:17.504921 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:17.508909 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.512877 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:17.516880 line       556                     i = i_j[0]
excute 13:48:17.520847 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:17.523838 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.527827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:17.531817 line       556                     i = i_j[0]
excute 13:48:17.535806 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:17.539795 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.543785 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:17.546776 line       556                     i = i_j[0]
excute 13:48:17.551775 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:17.555787 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.560772 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 1)
excute 13:48:17.565744 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:17.568715 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:17.573736 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.577725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, -1, 1)
excute 13:48:17.580716 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:17.584674 line       557                     j = i_j[1]
excute 13:48:17.588685 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.591686 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 135
excute 13:48:17.594678 line       560                         if (t_tmp > self.TIME):
excute 13:48:17.598669 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:17.601659 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:17.605649 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:17.608643 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:17.612600 line       569                                     available_vhecles[i][t],
excute 13:48:17.615623 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:17.618615 line       571                                     self.S_capacities[j],
excute 13:48:17.622603 line       572                                     demands[t][i][j],
excute 13:48:17.625595 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 4
calc_contract     Starting var:.. available_vhecles_target = -6
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 126
calc_contract     13:48:17.629568 call       352     def caluculate_contract(
calc_contract     13:48:17.632548 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:17.632548 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:17.633544 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:17.635539 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:17.635539 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:48:17.636535 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:17.636535 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. can_contract = 1
excute Modified var:.. rse_tmp = 0
excute 13:48:17.637533 line       575                                 rsf += rsf_tmp
excute 13:48:17.642551 line       576                                 rse += rse_tmp
excute 13:48:17.645542 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 126
move_cars     Starting var:.. t_tmp = 135
move_cars     Starting var:.. can_contract = 1
move_cars     13:48:17.649501 call       388     def move_cars(
move_cars     13:48:17.654488 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:17.656516 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:48:17.657511 line       399         return available_vhecles
move_cars     13:48:17.658509 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute 13:48:17.661500 line       579                                 success += can_contract
excute Modified var:.. success = 52
excute 13:48:17.665480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 1)
excute 13:48:17.668481 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:17.672474 line       557                     j = i_j[1]
excute 13:48:17.676461 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.680451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 1)
excute 13:48:17.684427 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:17.687430 line       557                     j = i_j[1]
excute 13:48:17.691424 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.695404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:17.698400 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:17.702392 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:17.706381 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.710338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:17.714359 line       556                     i = i_j[0]
excute 13:48:17.717349 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:17.721341 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.725299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:17.728323 line       556                     i = i_j[0]
excute 13:48:17.732287 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:17.735302 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.739296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:17.743266 line       556                     i = i_j[0]
excute 13:48:17.747240 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:17.750262 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.754221 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:17.760207 line       556                     i = i_j[0]
excute 13:48:17.764196 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:17.767187 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.772173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:17.775165 line       556                     i = i_j[0]
excute 13:48:17.781150 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:17.784142 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.788132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:17.792120 line       556                     i = i_j[0]
excute 13:48:17.795112 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:17.799101 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.803091 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:17.807081 line       556                     i = i_j[0]
excute 13:48:17.811081 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:17.814092 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.818051 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 1)
excute 13:48:17.821076 line       556                     i = i_j[0]
excute 13:48:17.825062 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:17.829053 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.833010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:48:17.836033 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:17.840991 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:17.844980 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.848969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:48:17.851990 line       556                     i = i_j[0]
excute 13:48:17.855961 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:17.859938 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.864927 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:48:17.867918 line       556                     i = i_j[0]
excute 13:48:17.871906 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:17.875894 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.878888 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:48:17.882877 line       556                     i = i_j[0]
excute 13:48:17.887865 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:17.890856 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.894846 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:48:17.898835 line       556                     i = i_j[0]
excute 13:48:17.902825 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:17.905816 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.909805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:48:17.913794 line       556                     i = i_j[0]
excute 13:48:17.916787 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:17.920777 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.924766 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:48:17.928755 line       556                     i = i_j[0]
excute 13:48:17.932744 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:17.936734 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.940722 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:48:17.944727 line       556                     i = i_j[0]
excute 13:48:17.948705 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:17.952691 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.956680 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:48:17.959671 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:17.964660 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:17.968652 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.972646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:48:17.976627 line       556                     i = i_j[0]
excute 13:48:17.980617 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:17.983607 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:17.987606 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:48:17.991587 line       556                     i = i_j[0]
excute 13:48:17.995575 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:17.999564 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.004551 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:48:18.008540 line       556                     i = i_j[0]
excute 13:48:18.012529 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:18.016519 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.020509 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:48:18.023502 line       556                     i = i_j[0]
excute 13:48:18.027491 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:18.031480 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.035469 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:48:18.038462 line       556                     i = i_j[0]
excute 13:48:18.042452 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:18.045443 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.049432 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:48:18.053421 line       556                     i = i_j[0]
excute 13:48:18.058408 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:18.064392 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.068380 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:48:18.072369 line       556                     i = i_j[0]
excute 13:48:18.076361 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:18.079351 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.083341 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 1)
excute 13:48:18.087331 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:18.091320 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:18.095309 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.099299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 1)
excute 13:48:18.103289 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:18.106281 line       557                     j = i_j[1]
excute 13:48:18.110270 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.114259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:18.117251 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:18.122238 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:18.125228 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.130217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:18.133208 line       556                     i = i_j[0]
excute 13:48:18.138195 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:18.142184 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.146174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:18.150164 line       556                     i = i_j[0]
excute 13:48:18.154153 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:18.158141 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.161133 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:18.165124 line       556                     i = i_j[0]
excute 13:48:18.169115 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:18.173101 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.177091 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:18.181080 line       556                     i = i_j[0]
excute 13:48:18.185070 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:18.189059 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.193063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:18.196040 line       556                     i = i_j[0]
excute 13:48:18.208777 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:18.211797 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.215793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:18.219781 line       556                     i = i_j[0]
excute 13:48:18.223753 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:18.226762 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.230721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:18.233744 line       556                     i = i_j[0]
excute 13:48:18.237703 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:18.240725 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.244718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:48:18.248704 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:18.252682 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:18.256652 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.260677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:48:18.263664 line       556                     i = i_j[0]
excute 13:48:18.267623 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:18.271612 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.276599 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:48:18.279592 line       556                     i = i_j[0]
excute 13:48:18.284577 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:18.287570 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.291560 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:48:18.295549 line       556                     i = i_j[0]
excute 13:48:18.299536 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:18.303527 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.307518 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:48:18.311506 line       556                     i = i_j[0]
excute 13:48:18.315495 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:18.319485 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.323472 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:48:18.330455 line       556                     i = i_j[0]
excute 13:48:18.337436 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:18.340429 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.344419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:48:18.348409 line       556                     i = i_j[0]
excute 13:48:18.353425 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:18.356416 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.360410 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:48:18.364399 line       556                     i = i_j[0]
excute 13:48:18.368376 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:18.372347 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.376363 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 1)
excute 13:48:18.380321 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:18.384342 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:18.388334 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.392320 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 1)
excute 13:48:18.396310 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:18.400270 line       557                     j = i_j[1]
excute 13:48:18.404265 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.407250 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 12, 0)
excute 13:48:18.411239 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:18.415229 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:18.419218 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.423207 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 12, 0)
excute 13:48:18.427196 line       556                     i = i_j[0]
excute 13:48:18.431186 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:18.435175 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.439164 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 12, 0)
excute 13:48:18.443154 line       556                     i = i_j[0]
excute 13:48:18.448142 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:18.451131 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.456118 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 12, 0)
excute 13:48:18.459109 line       556                     i = i_j[0]
excute 13:48:18.463099 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:18.466091 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.471078 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 12, 0)
excute 13:48:18.475069 line       556                     i = i_j[0]
excute 13:48:18.481051 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:18.484042 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.488032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 12, 0)
excute 13:48:18.492023 line       556                     i = i_j[0]
excute 13:48:18.495014 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:18.499004 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.503025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 12, 0)
excute 13:48:18.506017 line       556                     i = i_j[0]
excute 13:48:18.509973 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:18.513962 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.516955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 12, 0)
excute 13:48:18.520945 line       556                     i = i_j[0]
excute 13:48:18.524934 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:18.527925 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.531924 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 12, 0)
excute 13:48:18.534906 line       556                     i = i_j[0]
excute 13:48:18.537899 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:18.541888 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:18.545886 line       555                 for i_j in i_j_list:
excute 13:48:18.548901 line       581             self.write_matrix(
excute 13:48:18.551893 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:18.555885 line       583                 result_file_path,
excute 13:48:18.559843 line       584                 mode='a'
excute 13:48:18.567820 line       488         for t in time_steps:
excute Modified var:.. t = 127
excute 13:48:18.571811 line       489             if (t != self.TIME + 1):
excute 13:48:18.577792 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:18.584773 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:18.590760 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:18.594750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:18.598740 line       494                         if (i == j):
excute 13:48:18.602725 line       495                             continue
excute 13:48:18.606715 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:18.609707 line       494                         if (i == j):
excute 13:48:18.614696 line       496                         i_j_list.append((
excute 13:48:18.620680 line       497                             i, j,
excute 13:48:18.626661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.630652 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1)]
excute 13:48:18.641624 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:18.645612 line       494                         if (i == j):
excute 13:48:18.650600 line       496                         i_j_list.append((
excute 13:48:18.653590 line       497                             i, j,
excute 13:48:18.657580 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.660571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0)]
excute 13:48:18.664562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:18.668551 line       494                         if (i == j):
excute 13:48:18.672540 line       496                         i_j_list.append((
excute 13:48:18.676531 line       497                             i, j,
excute 13:48:18.679521 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.683513 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0)]
excute 13:48:18.689494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:18.694482 line       494                         if (i == j):
excute 13:48:18.699469 line       496                         i_j_list.append((
excute 13:48:18.705455 line       497                             i, j,
excute 13:48:18.709441 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.713438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0)]
excute 13:48:18.717419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:18.721409 line       494                         if (i == j):
excute 13:48:18.725398 line       496                         i_j_list.append((
excute 13:48:18.728390 line       497                             i, j,
excute 13:48:18.732379 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.735371 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:48:18.738363 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:18.742357 line       494                         if (i == j):
excute 13:48:18.746344 line       496                         i_j_list.append((
excute 13:48:18.749334 line       497                             i, j,
excute 13:48:18.753323 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.756315 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0)]
excute 13:48:18.760313 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:18.764295 line       494                         if (i == j):
excute 13:48:18.767286 line       496                         i_j_list.append((
excute 13:48:18.771275 line       497                             i, j,
excute 13:48:18.775265 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.780251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:48:18.783243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:18.788232 line       494                         if (i == j):
excute 13:48:18.792220 line       496                         i_j_list.append((
excute 13:48:18.796209 line       497                             i, j,
excute 13:48:18.799201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.802193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:48:18.806183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:18.810172 line       494                         if (i == j):
excute 13:48:18.814162 line       496                         i_j_list.append((
excute 13:48:18.818151 line       497                             i, j,
excute 13:48:18.822141 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.826130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:48:18.829122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:18.833112 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:18.836103 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:18.840092 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:18.844082 line       494                         if (i == j):
excute 13:48:18.848072 line       496                         i_j_list.append((
excute 13:48:18.851064 line       497                             i, j,
excute 13:48:18.855053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.860048 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0)]
excute 13:48:18.866022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:18.872008 line       494                         if (i == j):
excute 13:48:18.876995 line       495                             continue
excute 13:48:18.880016 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:18.884006 line       494                         if (i == j):
excute 13:48:18.887966 line       496                         i_j_list.append((
excute 13:48:18.891952 line       497                             i, j,
excute 13:48:18.894944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.897936 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:48:18.901926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:18.904917 line       494                         if (i == j):
excute 13:48:18.908907 line       496                         i_j_list.append((
excute 13:48:18.911899 line       497                             i, j,
excute 13:48:18.914891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.917883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:48:18.920875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:18.924865 line       494                         if (i == j):
excute 13:48:18.928854 line       496                         i_j_list.append((
excute 13:48:18.931845 line       497                             i, j,
excute 13:48:18.934838 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.937830 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:48:18.941819 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:18.944811 line       494                         if (i == j):
excute 13:48:18.949805 line       496                         i_j_list.append((
excute 13:48:18.952821 line       497                             i, j,
excute 13:48:18.956812 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.959802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:48:18.965756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:18.970744 line       494                         if (i == j):
excute 13:48:18.975731 line       496                         i_j_list.append((
excute 13:48:18.978752 line       497                             i, j,
excute 13:48:18.982712 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:18.985704 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:48:18.989692 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:18.994679 line       494                         if (i == j):
excute 13:48:18.999698 line       496                         i_j_list.append((
excute 13:48:19.002692 line       497                             i, j,
excute 13:48:19.005685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.009671 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:48:19.012661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:19.016637 line       494                         if (i == j):
excute 13:48:19.020610 line       496                         i_j_list.append((
excute 13:48:19.023634 line       497                             i, j,
excute 13:48:19.027591 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.030583 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:48:19.034573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:19.038563 line       494                         if (i == j):
excute 13:48:19.042552 line       496                         i_j_list.append((
excute 13:48:19.045544 line       497                             i, j,
excute 13:48:19.049533 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.053521 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:48:19.056514 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:19.063494 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:19.069478 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:19.076460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:19.080480 line       494                         if (i == j):
excute 13:48:19.083472 line       496                         i_j_list.append((
excute 13:48:19.087461 line       497                             i, j,
excute 13:48:19.090454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.094445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0)]
excute 13:48:19.098413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:19.101395 line       494                         if (i == j):
excute 13:48:19.105384 line       496                         i_j_list.append((
excute 13:48:19.109373 line       497                             i, j,
excute 13:48:19.113362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.117352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1)]
excute 13:48:19.121339 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:19.124363 line       494                         if (i == j):
excute 13:48:19.128353 line       495                             continue
excute 13:48:19.131313 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:19.135303 line       494                         if (i == j):
excute 13:48:19.139299 line       496                         i_j_list.append((
excute 13:48:19.142315 line       497                             i, j,
excute 13:48:19.146304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.149296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0)]
excute 13:48:19.152288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:19.156278 line       494                         if (i == j):
excute 13:48:19.160267 line       496                         i_j_list.append((
excute 13:48:19.163259 line       497                             i, j,
excute 13:48:19.167248 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.170241 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:48:19.173232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:19.177191 line       494                         if (i == j):
excute 13:48:19.181212 line       496                         i_j_list.append((
excute 13:48:19.184204 line       497                             i, j,
excute 13:48:19.187195 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.191167 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:48:19.194176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:19.200163 line       494                         if (i == j):
excute 13:48:19.204128 line       496                         i_j_list.append((
excute 13:48:19.207142 line       497                             i, j,
excute 13:48:19.210138 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.214124 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:48:19.217114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:19.221074 line       494                         if (i == j):
excute 13:48:19.225079 line       496                         i_j_list.append((
excute 13:48:19.228086 line       497                             i, j,
excute 13:48:19.231077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.235036 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:19.238059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:19.242050 line       494                         if (i == j):
excute 13:48:19.245041 line       496                         i_j_list.append((
excute 13:48:19.249030 line       497                             i, j,
excute 13:48:19.252025 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.256012 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:19.259004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:19.262993 line       494                         if (i == j):
excute 13:48:19.266951 line       496                         i_j_list.append((
excute 13:48:19.269973 line       497                             i, j,
excute 13:48:19.272965 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.276955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:19.280912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:19.283936 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:19.287905 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:19.290917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:19.294876 line       494                         if (i == j):
excute 13:48:19.299862 line       496                         i_j_list.append((
excute 13:48:19.302854 line       497                             i, j,
excute 13:48:19.306844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.309835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0)]
excute 13:48:19.312827 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:19.316817 line       494                         if (i == j):
excute 13:48:19.320805 line       496                         i_j_list.append((
excute 13:48:19.324828 line       497                             i, j,
excute 13:48:19.331778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.338762 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1)]
excute 13:48:19.344745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:19.350727 line       494                         if (i == j):
excute 13:48:19.356744 line       496                         i_j_list.append((
excute 13:48:19.359734 line       497                             i, j,
excute 13:48:19.362726 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.366715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0)]
excute 13:48:19.370686 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:19.373696 line       494                         if (i == j):
excute 13:48:19.378665 line       495                             continue
excute 13:48:19.382642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:19.386630 line       494                         if (i == j):
excute 13:48:19.390619 line       496                         i_j_list.append((
excute 13:48:19.393611 line       497                             i, j,
excute 13:48:19.397601 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.401591 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0)]
excute 13:48:19.404614 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:19.408571 line       494                         if (i == j):
excute 13:48:19.412560 line       496                         i_j_list.append((
excute 13:48:19.416549 line       497                             i, j,
excute 13:48:19.419574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.423532 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0)]
excute 13:48:19.426555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:19.430516 line       494                         if (i == j):
excute 13:48:19.434534 line       496                         i_j_list.append((
excute 13:48:19.437526 line       497                             i, j,
excute 13:48:19.440517 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.444507 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0)]
excute 13:48:19.448469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:19.452491 line       494                         if (i == j):
excute 13:48:19.456476 line       496                         i_j_list.append((
excute 13:48:19.460465 line       497                             i, j,
excute 13:48:19.463457 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.466448 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0)]
excute 13:48:19.470440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:19.474428 line       494                         if (i == j):
excute 13:48:19.477419 line       496                         i_j_list.append((
excute 13:48:19.481393 line       497                             i, j,
excute 13:48:19.484401 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.487392 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0)]
excute 13:48:19.491382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:19.495341 line       494                         if (i == j):
excute 13:48:19.498334 line       496                         i_j_list.append((
excute 13:48:19.502322 line       497                             i, j,
excute 13:48:19.507313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.511297 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0)]
excute 13:48:19.514288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:19.518278 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:19.521270 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:19.525260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:19.528251 line       494                         if (i == j):
excute 13:48:19.532241 line       496                         i_j_list.append((
excute 13:48:19.535232 line       497                             i, j,
excute 13:48:19.538225 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.542214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0)]
excute 13:48:19.545206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:19.549195 line       494                         if (i == j):
excute 13:48:19.552187 line       496                         i_j_list.append((
excute 13:48:19.556177 line       497                             i, j,
excute 13:48:19.559168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.563158 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1)]
excute 13:48:19.571907 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:19.575896 line       494                         if (i == j):
excute 13:48:19.579887 line       496                         i_j_list.append((
excute 13:48:19.583875 line       497                             i, j,
excute 13:48:19.587864 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.590857 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0)]
excute 13:48:19.594846 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:19.598837 line       494                         if (i == j):
excute 13:48:19.601861 line       496                         i_j_list.append((
excute 13:48:19.607812 line       497                             i, j,
excute 13:48:19.610803 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.614792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:48:19.618782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:19.623769 line       494                         if (i == j):
excute 13:48:19.626760 line       495                             continue
excute 13:48:19.630748 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:19.633740 line       494                         if (i == j):
excute 13:48:19.638728 line       496                         i_j_list.append((
excute 13:48:19.641719 line       497                             i, j,
excute 13:48:19.644710 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.647703 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:48:19.650695 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:19.654684 line       494                         if (i == j):
excute 13:48:19.658707 line       496                         i_j_list.append((
excute 13:48:19.662662 line       497                             i, j,
excute 13:48:19.665689 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.668678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:48:19.672636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:19.675659 line       494                         if (i == j):
excute 13:48:19.679617 line       496                         i_j_list.append((
excute 13:48:19.683608 line       497                             i, j,
excute 13:48:19.686630 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.689624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:48:19.693613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:19.697570 line       494                         if (i == j):
excute 13:48:19.700561 line       496                         i_j_list.append((
excute 13:48:19.704562 line       497                             i, j,
excute 13:48:19.707542 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.712531 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:48:19.716521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:19.720510 line       494                         if (i == j):
excute 13:48:19.724500 line       496                         i_j_list.append((
excute 13:48:19.728487 line       497                             i, j,
excute 13:48:19.731480 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.735469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:48:19.739459 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:19.743458 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:19.747438 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:19.751428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:19.754449 line       494                         if (i == j):
excute 13:48:19.758407 line       496                         i_j_list.append((
excute 13:48:19.762428 line       497                             i, j,
excute 13:48:19.765420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.769383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0)]
excute 13:48:19.772401 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:19.778356 line       494                         if (i == j):
excute 13:48:19.782345 line       496                         i_j_list.append((
excute 13:48:19.785337 line       497                             i, j,
excute 13:48:19.789326 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.792318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1)]
excute 13:48:19.796306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:19.799299 line       494                         if (i == j):
excute 13:48:19.803288 line       496                         i_j_list.append((
excute 13:48:19.807278 line       497                             i, j,
excute 13:48:19.812264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.817252 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0)]
excute 13:48:19.820243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:19.825231 line       494                         if (i == j):
excute 13:48:19.829218 line       496                         i_j_list.append((
excute 13:48:19.833206 line       497                             i, j,
excute 13:48:19.836198 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.840188 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:48:19.843180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:19.847171 line       494                         if (i == j):
excute 13:48:19.851161 line       496                         i_j_list.append((
excute 13:48:19.854153 line       497                             i, j,
excute 13:48:19.858140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.861132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:48:19.864124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:19.868114 line       494                         if (i == j):
excute 13:48:19.873103 line       495                             continue
excute 13:48:19.877091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:19.880083 line       494                         if (i == j):
excute 13:48:19.884073 line       496                         i_j_list.append((
excute 13:48:19.888062 line       497                             i, j,
excute 13:48:19.892051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.896043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:48:19.899032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:19.903022 line       494                         if (i == j):
excute 13:48:19.907012 line       496                         i_j_list.append((
excute 13:48:19.911003 line       497                             i, j,
excute 13:48:19.913994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.917981 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:48:19.921971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:19.924963 line       494                         if (i == j):
excute 13:48:19.928951 line       496                         i_j_list.append((
excute 13:48:19.932941 line       497                             i, j,
excute 13:48:19.935933 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.939921 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:48:19.942914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:19.946904 line       494                         if (i == j):
excute 13:48:19.950895 line       496                         i_j_list.append((
excute 13:48:19.955879 line       497                             i, j,
excute 13:48:19.958872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.962862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:48:19.965853 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:19.969874 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:19.972865 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:19.976857 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:19.980844 line       494                         if (i == j):
excute 13:48:19.984804 line       496                         i_j_list.append((
excute 13:48:19.987795 line       497                             i, j,
excute 13:48:19.991784 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:19.995774 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0)]
excute 13:48:19.998766 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:20.002755 line       494                         if (i == j):
excute 13:48:20.007743 line       496                         i_j_list.append((
excute 13:48:20.010734 line       497                             i, j,
excute 13:48:20.014723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.019710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1)]
excute 13:48:20.022701 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:20.026692 line       494                         if (i == j):
excute 13:48:20.030679 line       496                         i_j_list.append((
excute 13:48:20.033671 line       497                             i, j,
excute 13:48:20.036664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.040652 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0)]
excute 13:48:20.043645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:20.047636 line       494                         if (i == j):
excute 13:48:20.050627 line       496                         i_j_list.append((
excute 13:48:20.054617 line       497                             i, j,
excute 13:48:20.057607 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.061596 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0)]
excute 13:48:20.064588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:20.068578 line       494                         if (i == j):
excute 13:48:20.072567 line       496                         i_j_list.append((
excute 13:48:20.076557 line       497                             i, j,
excute 13:48:20.080545 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.083537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0)]
excute 13:48:20.086530 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:20.090518 line       494                         if (i == j):
excute 13:48:20.094508 line       496                         i_j_list.append((
excute 13:48:20.097500 line       497                             i, j,
excute 13:48:20.100492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.104481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0)]
excute 13:48:20.107473 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:20.111463 line       494                         if (i == j):
excute 13:48:20.114454 line       495                             continue
excute 13:48:20.118444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:20.122466 line       494                         if (i == j):
excute 13:48:20.126456 line       496                         i_j_list.append((
excute 13:48:20.129447 line       497                             i, j,
excute 13:48:20.133418 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.136431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0)]
excute 13:48:20.140386 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:20.143380 line       494                         if (i == j):
excute 13:48:20.148364 line       496                         i_j_list.append((
excute 13:48:20.151389 line       497                             i, j,
excute 13:48:20.155377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.159355 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:48:20.162358 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:20.166318 line       494                         if (i == j):
excute 13:48:20.170320 line       496                         i_j_list.append((
excute 13:48:20.173329 line       497                             i, j,
excute 13:48:20.176324 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.180312 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:48:20.183304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:20.187262 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:20.190285 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:20.194242 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:20.197267 line       494                         if (i == j):
excute 13:48:20.201255 line       496                         i_j_list.append((
excute 13:48:20.205238 line       497                             i, j,
excute 13:48:20.208204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.211196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0)]
excute 13:48:20.215186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:20.218177 line       494                         if (i == j):
excute 13:48:20.222167 line       496                         i_j_list.append((
excute 13:48:20.227156 line       497                             i, j,
excute 13:48:20.230148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.234167 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1)]
excute 13:48:20.237158 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:20.241149 line       494                         if (i == j):
excute 13:48:20.245137 line       496                         i_j_list.append((
excute 13:48:20.249128 line       497                             i, j,
excute 13:48:20.252122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.256077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0)]
excute 13:48:20.259068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:20.263058 line       494                         if (i == j):
excute 13:48:20.267048 line       496                         i_j_list.append((
excute 13:48:20.270039 line       497                             i, j,
excute 13:48:20.273031 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.277020 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:48:20.280012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:20.284002 line       494                         if (i == j):
excute 13:48:20.287991 line       496                         i_j_list.append((
excute 13:48:20.290982 line       497                             i, j,
excute 13:48:20.293975 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.297965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:48:20.300991 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:20.304947 line       494                         if (i == j):
excute 13:48:20.308960 line       496                         i_j_list.append((
excute 13:48:20.311962 line       497                             i, j,
excute 13:48:20.314950 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.318941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:48:20.321933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:20.331876 line       494                         if (i == j):
excute 13:48:20.338859 line       496                         i_j_list.append((
excute 13:48:20.342876 line       497                             i, j,
excute 13:48:20.345868 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.350824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:48:20.355810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:20.358804 line       494                         if (i == j):
excute 13:48:20.363789 line       495                             continue
excute 13:48:20.366782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:20.370771 line       494                         if (i == j):
excute 13:48:20.374761 line       496                         i_j_list.append((
excute 13:48:20.378750 line       497                             i, j,
excute 13:48:20.383736 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.386759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:48:20.390749 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:20.394743 line       494                         if (i == j):
excute 13:48:20.398696 line       496                         i_j_list.append((
excute 13:48:20.401720 line       497                             i, j,
excute 13:48:20.404711 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.408700 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:20.411693 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:20.415684 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:20.419671 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:20.422662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:20.426652 line       494                         if (i == j):
excute 13:48:20.431608 line       496                         i_j_list.append((
excute 13:48:20.434630 line       497                             i, j,
excute 13:48:20.438620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.441612 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:20.445601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:20.449560 line       494                         if (i == j):
excute 13:48:20.453580 line       496                         i_j_list.append((
excute 13:48:20.457570 line       497                             i, j,
excute 13:48:20.461529 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.467515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1)]
excute 13:48:20.470534 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:20.474529 line       494                         if (i == j):
excute 13:48:20.478514 line       496                         i_j_list.append((
excute 13:48:20.482471 line       497                             i, j,
excute 13:48:20.485463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.489452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0)]
excute 13:48:20.492444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:20.496433 line       494                         if (i == j):
excute 13:48:20.500423 line       496                         i_j_list.append((
excute 13:48:20.504412 line       497                             i, j,
excute 13:48:20.507404 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.511394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:48:20.515383 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:20.519374 line       494                         if (i == j):
excute 13:48:20.522364 line       496                         i_j_list.append((
excute 13:48:20.526353 line       497                             i, j,
excute 13:48:20.529346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.534364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:48:20.538322 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:20.542314 line       494                         if (i == j):
excute 13:48:20.546305 line       496                         i_j_list.append((
excute 13:48:20.549324 line       497                             i, j,
excute 13:48:20.552316 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.556306 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:48:20.560294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:20.564286 line       494                         if (i == j):
excute 13:48:20.567278 line       496                         i_j_list.append((
excute 13:48:20.571266 line       497                             i, j,
excute 13:48:20.578215 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.582206 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:48:20.585200 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:20.591184 line       494                         if (i == j):
excute 13:48:20.597165 line       496                         i_j_list.append((
excute 13:48:20.602153 line       497                             i, j,
excute 13:48:20.606143 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.612126 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:20.617114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:20.623105 line       494                         if (i == j):
excute 13:48:20.628117 line       495                             continue
excute 13:48:20.635065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:20.640082 line       494                         if (i == j):
excute 13:48:20.646034 line       496                         i_j_list.append((
excute 13:48:20.650026 line       497                             i, j,
excute 13:48:20.656009 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.661027 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:20.664017 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:20.667976 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:20.671002 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:20.674988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:20.678945 line       494                         if (i == j):
excute 13:48:20.681969 line       496                         i_j_list.append((
excute 13:48:20.685958 line       497                             i, j,
excute 13:48:20.688950 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.691942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0)]
excute 13:48:20.695935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:20.699892 line       494                         if (i == j):
excute 13:48:20.707871 line       496                         i_j_list.append((
excute 13:48:20.710860 line       497                             i, j,
excute 13:48:20.714850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.722843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1)]
excute 13:48:20.725822 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:20.731804 line       494                         if (i == j):
excute 13:48:20.736792 line       496                         i_j_list.append((
excute 13:48:20.741780 line       497                             i, j,
excute 13:48:20.745769 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.748761 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0)]
excute 13:48:20.752750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:20.757736 line       494                         if (i == j):
excute 13:48:20.761739 line       496                         i_j_list.append((
excute 13:48:20.764749 line       497                             i, j,
excute 13:48:20.768738 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.771729 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:48:20.776717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:20.781674 line       494                         if (i == j):
excute 13:48:20.785663 line       496                         i_j_list.append((
excute 13:48:20.789652 line       497                             i, j,
excute 13:48:20.792643 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.796633 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:48:20.799625 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:20.804613 line       494                         if (i == j):
excute 13:48:20.808599 line       496                         i_j_list.append((
excute 13:48:20.812588 line       497                             i, j,
excute 13:48:20.819570 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.823561 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:48:20.826553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:20.831540 line       494                         if (i == j):
excute 13:48:20.835527 line       496                         i_j_list.append((
excute 13:48:20.838521 line       497                             i, j,
excute 13:48:20.843507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.846499 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:48:20.849491 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:20.853481 line       494                         if (i == j):
excute 13:48:20.857470 line       496                         i_j_list.append((
excute 13:48:20.861459 line       497                             i, j,
excute 13:48:20.864451 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.867443 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:48:20.871432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:20.875422 line       494                         if (i == j):
excute 13:48:20.879410 line       496                         i_j_list.append((
excute 13:48:20.882403 line       497                             i, j,
excute 13:48:20.886392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:20.889383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 12, 0), (3, 1, 12, 1), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:48:20.892375 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:20.896365 line       494                         if (i == j):
excute 13:48:20.900354 line       495                             continue
excute 13:48:20.903345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:20.906338 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:20.909330 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (6, 0, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 1, -1, 1), (6, 1, -1, 1), (7, 1, -1, 1), (5, 0, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (8, 0, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (5, 1, 0, 1), (8, 1, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (4, 0, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (9, 0, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (4, 1, 1, 1), (9, 1, 1, 1), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (2, 1, 2, 1), (3, 0, 12, 0), (3, 2, 12, 0), (3, 4, 12, 0), (3, 5, 12, 0), (3, 6, 12, 0), (3, 7, 12, 0), (3, 8, 12, 0), (3, 9, 12, 0), (3, 1, 12, 1)]
excute 13:48:20.913319 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:20.917309 line       505                     if (self.RELOCATE):
excute 13:48:20.920300 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:20.924290 line       505                     if (self.RELOCATE):
excute 13:48:20.927281 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:20.935492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:20.938516 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:20.943472 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:20.949457 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:20.953459 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 0)
excute 13:48:20.956467 line       556                     i = i_j[0]
excute 13:48:20.960460 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:20.964416 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:20.968403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:20.972392 line       556                     i = i_j[0]
excute 13:48:20.975384 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:20.979374 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:20.983364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:20.986355 line       556                     i = i_j[0]
excute 13:48:20.990346 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:20.993337 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:20.997326 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:21.000318 line       556                     i = i_j[0]
excute 13:48:21.004307 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:21.007299 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.012287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:21.015278 line       556                     i = i_j[0]
excute 13:48:21.019269 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:21.022259 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.026249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:21.029241 line       556                     i = i_j[0]
excute 13:48:21.033230 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:21.036222 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.040211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:21.044201 line       556                     i = i_j[0]
excute 13:48:21.049189 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:21.052179 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.057168 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:48:21.060158 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:21.064149 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:21.068139 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.072134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 0)
excute 13:48:21.075119 line       556                     i = i_j[0]
excute 13:48:21.080106 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:21.083128 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.087087 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 0)
excute 13:48:21.094068 line       556                     i = i_j[0]
excute 13:48:21.102047 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:21.107034 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.113017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:48:21.117007 line       556                     i = i_j[0]
excute 13:48:21.120997 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:21.123988 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.127977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 0)
excute 13:48:21.131967 line       556                     i = i_j[0]
excute 13:48:21.135966 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:21.138947 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.142937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:48:21.146928 line       556                     i = i_j[0]
excute 13:48:21.150916 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:21.154905 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.158896 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:48:21.161918 line       556                     i = i_j[0]
excute 13:48:21.165909 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:21.168899 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.172891 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:48:21.176873 line       556                     i = i_j[0]
excute 13:48:21.180837 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:21.183862 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.187818 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:21.190840 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:21.194799 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:21.198820 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.202809 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:21.206799 line       556                     i = i_j[0]
excute 13:48:21.210757 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:21.213779 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.217770 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:48:21.220762 line       556                     i = i_j[0]
excute 13:48:21.224750 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:21.228742 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.231734 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:21.235722 line       556                     i = i_j[0]
excute 13:48:21.239714 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:21.242702 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.246691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:21.251646 line       556                     i = i_j[0]
excute 13:48:21.255639 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:21.259627 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.263616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:21.267605 line       556                     i = i_j[0]
excute 13:48:21.272593 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:21.276581 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.280570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:21.284560 line       556                     i = i_j[0]
excute 13:48:21.288547 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:21.292539 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.295531 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:21.299520 line       556                     i = i_j[0]
excute 13:48:21.303510 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:21.307499 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.311490 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 1)
excute 13:48:21.314480 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:21.318469 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:21.323455 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.328443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 1)
excute 13:48:21.337418 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:21.344400 line       557                     j = i_j[1]
excute 13:48:21.350384 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.357365 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 1)
excute 13:48:21.365343 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:21.372323 line       557                     j = i_j[1]
excute 13:48:21.377314 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.385289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:48:21.390279 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:21.396260 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:21.403241 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.407232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:48:21.411219 line       556                     i = i_j[0]
excute 13:48:21.415209 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:21.424185 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.428178 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:48:21.432167 line       556                     i = i_j[0]
excute 13:48:21.436156 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:21.442138 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.447125 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:48:21.455103 line       556                     i = i_j[0]
excute 13:48:21.464080 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:21.473056 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.484026 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:48:21.492005 line       556                     i = i_j[0]
excute 13:48:21.499984 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:21.506964 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.512949 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:48:21.520926 line       556                     i = i_j[0]
excute 13:48:21.526912 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:21.534889 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.541870 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:48:21.548853 line       556                     i = i_j[0]
excute 13:48:21.554837 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:21.561819 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.569797 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:48:21.576779 line       556                     i = i_j[0]
excute 13:48:21.583761 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:21.589744 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.595727 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:21.600714 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:21.606697 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:21.612681 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.618667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:21.624650 line       556                     i = i_j[0]
excute 13:48:21.631630 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:21.636617 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.642602 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:48:21.648585 line       556                     i = i_j[0]
excute 13:48:21.655567 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:21.661552 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.668532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:21.675513 line       556                     i = i_j[0]
excute 13:48:21.682495 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:21.690473 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.697456 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:21.702441 line       556                     i = i_j[0]
excute 13:48:21.709423 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:21.716405 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.725381 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:21.732362 line       556                     i = i_j[0]
excute 13:48:21.740341 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:21.746325 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.753306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:21.761285 line       556                     i = i_j[0]
excute 13:48:21.767269 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:21.773253 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.783227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:21.791205 line       556                     i = i_j[0]
excute 13:48:21.798187 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:21.802177 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.806165 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 1)
excute 13:48:21.809156 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:21.813146 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:21.817135 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.821127 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 137
excute 13:48:21.825113 line       560                         if (t_tmp > self.TIME):
excute 13:48:21.829103 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:21.832095 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:21.836084 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 166
excute 13:48:21.839076 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:21.843066 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 1)
excute 13:48:21.846057 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:21.850046 line       557                     j = i_j[1]
excute 13:48:21.854036 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.857028 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:48:21.861017 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:21.864009 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:21.867999 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.872988 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:48:21.875977 line       556                     i = i_j[0]
excute 13:48:21.879967 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:21.882959 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.886948 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:48:21.890937 line       556                     i = i_j[0]
excute 13:48:21.894927 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:21.897919 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.901909 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:48:21.904900 line       556                     i = i_j[0]
excute 13:48:21.908889 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:21.911882 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.915871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:48:21.919860 line       556                     i = i_j[0]
excute 13:48:21.923850 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:21.926875 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.930867 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:48:21.933857 line       556                     i = i_j[0]
excute 13:48:21.937815 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:21.940836 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.944825 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:48:21.949780 line       556                     i = i_j[0]
excute 13:48:21.953770 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:21.956761 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.960751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:48:21.966735 line       556                     i = i_j[0]
excute 13:48:21.971726 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:21.976710 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.980698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:48:21.984720 line       556                     i = i_j[0]
excute 13:48:21.988676 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:21.991700 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:21.995690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:48:21.999678 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:22.003671 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:22.007657 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.011614 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:48:22.015604 line       556                     i = i_j[0]
excute 13:48:22.019593 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:22.022585 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.026574 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:48:22.029567 line       556                     i = i_j[0]
excute 13:48:22.033556 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:22.036548 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.040537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:48:22.044526 line       556                     i = i_j[0]
excute 13:48:22.048516 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:22.051508 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.055497 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:48:22.059486 line       556                     i = i_j[0]
excute 13:48:22.063476 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:22.066467 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.070457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:48:22.074448 line       556                     i = i_j[0]
excute 13:48:22.081428 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:22.084420 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.089407 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:48:22.092400 line       556                     i = i_j[0]
excute 13:48:22.096390 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:22.099381 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.103370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:48:22.107359 line       556                     i = i_j[0]
excute 13:48:22.111355 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:22.114340 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.118330 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:48:22.122321 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:22.126309 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:22.129332 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.134290 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:48:22.137281 line       556                     i = i_j[0]
excute 13:48:22.141270 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:22.145259 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.150247 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:48:22.153238 line       556                     i = i_j[0]
excute 13:48:22.157227 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:22.161216 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.165207 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:48:22.169195 line       556                     i = i_j[0]
excute 13:48:22.173184 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:22.177174 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.183158 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:48:22.186149 line       556                     i = i_j[0]
excute 13:48:22.190139 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:22.194128 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.198120 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:48:22.201109 line       556                     i = i_j[0]
excute 13:48:22.205100 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:22.208090 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.212081 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:48:22.216071 line       556                     i = i_j[0]
excute 13:48:22.219061 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:22.223051 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.227040 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:48:22.230032 line       556                     i = i_j[0]
excute 13:48:22.234057 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:22.237047 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.241001 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 1)
excute 13:48:22.244026 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:22.248015 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:22.252005 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.255993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 1)
excute 13:48:22.259983 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:22.263941 line       557                     j = i_j[1]
excute 13:48:22.267959 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.270953 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:22.273949 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:22.278900 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:22.282894 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.286911 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:48:22.299784 line       556                     i = i_j[0]
excute 13:48:22.303795 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:22.307783 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.310776 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:22.314765 line       556                     i = i_j[0]
excute 13:48:22.317757 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:22.321747 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.325735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:22.335709 line       556                     i = i_j[0]
excute 13:48:22.340727 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:22.344695 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.348674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:22.354689 line       556                     i = i_j[0]
excute 13:48:22.358679 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:22.362668 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.367625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:22.374605 line       556                     i = i_j[0]
excute 13:48:22.382586 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:22.390562 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.396546 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:22.403529 line       556                     i = i_j[0]
excute 13:48:22.407548 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:22.411538 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.415495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:22.418486 line       556                     i = i_j[0]
excute 13:48:22.422479 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:22.426468 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.430458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:48:22.433448 line       556                     i = i_j[0]
excute 13:48:22.438436 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:22.441427 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.446415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 12, 0)
excute 13:48:22.451399 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:22.455391 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:22.459378 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.463367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 12, 0)
excute 13:48:22.467359 line       556                     i = i_j[0]
excute 13:48:22.471349 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:22.474337 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.479325 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 12, 0)
excute 13:48:22.482318 line       556                     i = i_j[0]
excute 13:48:22.486307 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:22.491294 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.495284 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 12, 0)
excute 13:48:22.498275 line       556                     i = i_j[0]
excute 13:48:22.502268 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:22.505255 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.510243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 12, 0)
excute 13:48:22.513234 line       556                     i = i_j[0]
excute 13:48:22.517224 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:22.521212 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.524205 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 12, 0)
excute 13:48:22.528195 line       556                     i = i_j[0]
excute 13:48:22.532185 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:22.535176 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.539167 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 12, 0)
excute 13:48:22.542157 line       556                     i = i_j[0]
excute 13:48:22.546148 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:22.550136 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.555124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 12, 0)
excute 13:48:22.558145 line       556                     i = i_j[0]
excute 13:48:22.562134 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:22.566092 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.569116 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 12, 1)
excute 13:48:22.573106 line       556                     i = i_j[0]
excute 13:48:22.577063 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:22.581054 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:22.585042 line       555                 for i_j in i_j_list:
excute 13:48:22.588035 line       581             self.write_matrix(
excute 13:48:22.593021 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:22.597011 line       583                 result_file_path,
excute 13:48:22.601000 line       584                 mode='a'
excute 13:48:22.608071 line       488         for t in time_steps:
excute Modified var:.. t = 128
excute 13:48:22.612053 line       489             if (t != self.TIME + 1):
excute 13:48:22.616043 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:22.619033 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:22.623023 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:22.627014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:22.631003 line       494                         if (i == j):
excute 13:48:22.635990 line       495                             continue
excute 13:48:22.638981 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:22.642970 line       494                         if (i == j):
excute 13:48:22.646960 line       496                         i_j_list.append((
excute 13:48:22.650949 line       497                             i, j,
excute 13:48:22.654938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.662941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:48:22.669899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:22.673887 line       494                         if (i == j):
excute 13:48:22.677876 line       496                         i_j_list.append((
excute 13:48:22.681867 line       497                             i, j,
excute 13:48:22.685855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.689847 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:48:22.692837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:22.698829 line       494                         if (i == j):
excute 13:48:22.703809 line       496                         i_j_list.append((
excute 13:48:22.707799 line       497                             i, j,
excute 13:48:22.712784 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.716775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0)]
excute 13:48:22.721760 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:22.726747 line       494                         if (i == j):
excute 13:48:22.733733 line       496                         i_j_list.append((
excute 13:48:22.737717 line       497                             i, j,
excute 13:48:22.741706 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.745696 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0)]
excute 13:48:22.749685 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:22.753675 line       494                         if (i == j):
excute 13:48:22.758664 line       496                         i_j_list.append((
excute 13:48:22.762651 line       497                             i, j,
excute 13:48:22.765674 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.768667 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:48:22.772624 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:22.777611 line       494                         if (i == j):
excute 13:48:22.782598 line       496                         i_j_list.append((
excute 13:48:22.786587 line       497                             i, j,
excute 13:48:22.790577 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.793569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1)]
excute 13:48:22.798571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:22.802544 line       494                         if (i == j):
excute 13:48:22.806539 line       496                         i_j_list.append((
excute 13:48:22.810524 line       497                             i, j,
excute 13:48:22.813515 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.817504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0)]
excute 13:48:22.821494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:22.825483 line       494                         if (i == j):
excute 13:48:22.830471 line       496                         i_j_list.append((
excute 13:48:22.833463 line       497                             i, j,
excute 13:48:22.836454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.840442 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:48:22.844433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:22.847424 line       494                         if (i == j):
excute 13:48:22.851414 line       496                         i_j_list.append((
excute 13:48:22.855405 line       497                             i, j,
excute 13:48:22.858394 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.861386 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:48:22.865375 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:22.868369 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:22.871360 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:22.875350 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:22.878341 line       494                         if (i == j):
excute 13:48:22.882331 line       496                         i_j_list.append((
excute 13:48:22.886321 line       497                             i, j,
excute 13:48:22.893301 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.896326 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1)]
excute 13:48:22.901281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:22.909258 line       494                         if (i == j):
excute 13:48:22.916240 line       495                             continue
excute 13:48:22.923224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:22.927211 line       494                         if (i == j):
excute 13:48:22.932197 line       496                         i_j_list.append((
excute 13:48:22.937184 line       497                             i, j,
excute 13:48:22.941173 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.945194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0)]
excute 13:48:22.950151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:22.954138 line       494                         if (i == j):
excute 13:48:22.959125 line       496                         i_j_list.append((
excute 13:48:22.963115 line       497                             i, j,
excute 13:48:22.968101 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.971092 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:48:22.975083 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:22.978073 line       494                         if (i == j):
excute 13:48:22.982064 line       496                         i_j_list.append((
excute 13:48:22.985055 line       497                             i, j,
excute 13:48:22.988047 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:22.992036 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:48:22.995028 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:22.999018 line       494                         if (i == j):
excute 13:48:23.004007 line       496                         i_j_list.append((
excute 13:48:23.008029 line       497                             i, j,
excute 13:48:23.011020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.014984 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:48:23.019001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:23.022956 line       494                         if (i == j):
excute 13:48:23.027974 line       496                         i_j_list.append((
excute 13:48:23.031930 line       497                             i, j,
excute 13:48:23.036918 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.040907 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1)]
excute 13:48:23.043898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:23.047887 line       494                         if (i == j):
excute 13:48:23.051876 line       496                         i_j_list.append((
excute 13:48:23.055866 line       497                             i, j,
excute 13:48:23.058858 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.062848 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0)]
excute 13:48:23.065841 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:23.069830 line       494                         if (i == j):
excute 13:48:23.075813 line       496                         i_j_list.append((
excute 13:48:23.081797 line       497                             i, j,
excute 13:48:23.085787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.089777 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:48:23.092767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:23.095759 line       494                         if (i == j):
excute 13:48:23.099748 line       496                         i_j_list.append((
excute 13:48:23.102740 line       497                             i, j,
excute 13:48:23.106731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.110752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:48:23.113713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:23.117701 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:23.121690 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:23.125680 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:23.129669 line       494                         if (i == j):
excute 13:48:23.134655 line       496                         i_j_list.append((
excute 13:48:23.137648 line       497                             i, j,
excute 13:48:23.141637 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.144629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1)]
excute 13:48:23.148618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:23.152609 line       494                         if (i == j):
excute 13:48:23.156597 line       496                         i_j_list.append((
excute 13:48:23.159589 line       497                             i, j,
excute 13:48:23.163578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.167568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0)]
excute 13:48:23.170562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:23.174551 line       494                         if (i == j):
excute 13:48:23.178550 line       495                             continue
excute 13:48:23.181532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:23.185519 line       494                         if (i == j):
excute 13:48:23.188513 line       496                         i_j_list.append((
excute 13:48:23.192502 line       497                             i, j,
excute 13:48:23.195494 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.199481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:48:23.202474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:23.206463 line       494                         if (i == j):
excute 13:48:23.211483 line       496                         i_j_list.append((
excute 13:48:23.215474 line       497                             i, j,
excute 13:48:23.218466 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.222421 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:48:23.225444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:23.229414 line       494                         if (i == j):
excute 13:48:23.232426 line       496                         i_j_list.append((
excute 13:48:23.236384 line       497                             i, j,
excute 13:48:23.239410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.242402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:48:23.245390 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:23.249380 line       494                         if (i == j):
excute 13:48:23.254337 line       496                         i_j_list.append((
excute 13:48:23.257359 line       497                             i, j,
excute 13:48:23.260351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.264340 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:48:23.267332 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:23.271291 line       494                         if (i == j):
excute 13:48:23.275312 line       496                         i_j_list.append((
excute 13:48:23.279269 line       497                             i, j,
excute 13:48:23.282295 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.285284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:48:23.288277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:23.292265 line       494                         if (i == j):
excute 13:48:23.296255 line       496                         i_j_list.append((
excute 13:48:23.299247 line       497                             i, j,
excute 13:48:23.303238 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.306232 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:23.310217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:23.314213 line       494                         if (i == j):
excute 13:48:23.318165 line       496                         i_j_list.append((
excute 13:48:23.321190 line       497                             i, j,
excute 13:48:23.325178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.333128 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:23.340110 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:23.343131 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:23.347121 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:23.353074 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:23.357063 line       494                         if (i == j):
excute 13:48:23.361051 line       496                         i_j_list.append((
excute 13:48:23.364044 line       497                             i, j,
excute 13:48:23.369032 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.372053 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1)]
excute 13:48:23.376045 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:23.380019 line       494                         if (i == j):
excute 13:48:23.383992 line       496                         i_j_list.append((
excute 13:48:23.387979 line       497                             i, j,
excute 13:48:23.391969 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.395958 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0)]
excute 13:48:23.399948 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:23.403967 line       494                         if (i == j):
excute 13:48:23.407957 line       496                         i_j_list.append((
excute 13:48:23.411929 line       497                             i, j,
excute 13:48:23.415904 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.418928 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0)]
excute 13:48:23.422920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:23.426907 line       494                         if (i == j):
excute 13:48:23.430863 line       495                             continue
excute 13:48:23.433855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:23.436847 line       494                         if (i == j):
excute 13:48:23.440837 line       496                         i_j_list.append((
excute 13:48:23.443829 line       497                             i, j,
excute 13:48:23.447820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.451809 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0)]
excute 13:48:23.455799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:23.459788 line       494                         if (i == j):
excute 13:48:23.467766 line       496                         i_j_list.append((
excute 13:48:23.471785 line       497                             i, j,
excute 13:48:23.476773 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.479765 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0)]
excute 13:48:23.483756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:23.487711 line       494                         if (i == j):
excute 13:48:23.491703 line       496                         i_j_list.append((
excute 13:48:23.494728 line       497                             i, j,
excute 13:48:23.498684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.501705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1)]
excute 13:48:23.505699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:23.510651 line       494                         if (i == j):
excute 13:48:23.513643 line       496                         i_j_list.append((
excute 13:48:23.518664 line       497                             i, j,
excute 13:48:23.521655 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.524644 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0)]
excute 13:48:23.528631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:23.532592 line       494                         if (i == j):
excute 13:48:23.535616 line       496                         i_j_list.append((
excute 13:48:23.539578 line       497                             i, j,
excute 13:48:23.542598 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.545591 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0)]
excute 13:48:23.549546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:23.552573 line       494                         if (i == j):
excute 13:48:23.557558 line       496                         i_j_list.append((
excute 13:48:23.560548 line       497                             i, j,
excute 13:48:23.563540 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.567531 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0)]
excute 13:48:23.570492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:23.574480 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:23.578502 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:23.582493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:23.586448 line       494                         if (i == j):
excute 13:48:23.589472 line       496                         i_j_list.append((
excute 13:48:23.593432 line       497                             i, j,
excute 13:48:23.596452 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.599444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1)]
excute 13:48:23.603434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:23.607393 line       494                         if (i == j):
excute 13:48:23.611382 line       496                         i_j_list.append((
excute 13:48:23.614408 line       497                             i, j,
excute 13:48:23.617399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.621386 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0)]
excute 13:48:23.625378 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:23.629336 line       494                         if (i == j):
excute 13:48:23.633325 line       496                         i_j_list.append((
excute 13:48:23.637313 line       497                             i, j,
excute 13:48:23.640305 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.644295 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:48:23.647286 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:23.651276 line       494                         if (i == j):
excute 13:48:23.656264 line       496                         i_j_list.append((
excute 13:48:23.660252 line       497                             i, j,
excute 13:48:23.664241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.667233 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:48:23.671222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:23.675212 line       494                         if (i == j):
excute 13:48:23.679201 line       495                             continue
excute 13:48:23.683191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:23.686182 line       494                         if (i == j):
excute 13:48:23.691170 line       496                         i_j_list.append((
excute 13:48:23.694161 line       497                             i, j,
excute 13:48:23.698150 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.702140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:48:23.705132 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:23.709121 line       494                         if (i == j):
excute 13:48:23.713110 line       496                         i_j_list.append((
excute 13:48:23.718097 line       497                             i, j,
excute 13:48:23.723085 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.727080 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1)]
excute 13:48:23.730096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:23.734089 line       494                         if (i == j):
excute 13:48:23.737079 line       496                         i_j_list.append((
excute 13:48:23.741066 line       497                             i, j,
excute 13:48:23.744057 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.747050 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0)]
excute 13:48:23.751039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:23.754998 line       494                         if (i == j):
excute 13:48:23.758986 line       496                         i_j_list.append((
excute 13:48:23.762998 line       497                             i, j,
excute 13:48:23.766005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.768994 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:48:23.772958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:23.777937 line       494                         if (i == j):
excute 13:48:23.781925 line       496                         i_j_list.append((
excute 13:48:23.784917 line       497                             i, j,
excute 13:48:23.787909 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.791898 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:48:23.794889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:23.798881 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:23.802868 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:23.808853 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:23.815834 line       494                         if (i == j):
excute 13:48:23.820824 line       496                         i_j_list.append((
excute 13:48:23.824810 line       497                             i, j,
excute 13:48:23.829798 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.833788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1)]
excute 13:48:23.837776 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:23.841765 line       494                         if (i == j):
excute 13:48:23.844759 line       496                         i_j_list.append((
excute 13:48:23.848747 line       497                             i, j,
excute 13:48:23.852737 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.855759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0)]
excute 13:48:23.859748 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:23.863729 line       494                         if (i == j):
excute 13:48:23.866731 line       496                         i_j_list.append((
excute 13:48:23.870719 line       497                             i, j,
excute 13:48:23.873711 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.876702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:48:23.880661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:23.883685 line       494                         if (i == j):
excute 13:48:23.887674 line       496                         i_j_list.append((
excute 13:48:23.891632 line       497                             i, j,
excute 13:48:23.894623 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.897617 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:48:23.901605 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:23.905596 line       494                         if (i == j):
excute 13:48:23.908587 line       496                         i_j_list.append((
excute 13:48:23.912577 line       497                             i, j,
excute 13:48:23.915600 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.919558 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:48:23.924544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:23.930529 line       494                         if (i == j):
excute 13:48:23.935514 line       495                             continue
excute 13:48:23.939505 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:23.943501 line       494                         if (i == j):
excute 13:48:23.950476 line       496                         i_j_list.append((
excute 13:48:23.954463 line       497                             i, j,
excute 13:48:23.959451 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.964437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1)]
excute 13:48:23.968429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:23.972416 line       494                         if (i == j):
excute 13:48:23.980394 line       496                         i_j_list.append((
excute 13:48:23.984384 line       497                             i, j,
excute 13:48:23.990368 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:23.995355 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0)]
excute 13:48:23.999376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:24.003335 line       494                         if (i == j):
excute 13:48:24.007356 line       496                         i_j_list.append((
excute 13:48:24.010346 line       497                             i, j,
excute 13:48:24.014304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.017327 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:48:24.020319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:24.024278 line       494                         if (i == j):
excute 13:48:24.028268 line       496                         i_j_list.append((
excute 13:48:24.032259 line       497                             i, j,
excute 13:48:24.035250 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.039238 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:48:24.043227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:24.046221 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:24.050209 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:24.054199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:24.058196 line       494                         if (i == j):
excute 13:48:24.061178 line       496                         i_j_list.append((
excute 13:48:24.065167 line       497                             i, j,
excute 13:48:24.068159 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.072149 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1)]
excute 13:48:24.076139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:24.080128 line       494                         if (i == j):
excute 13:48:24.084150 line       496                         i_j_list.append((
excute 13:48:24.087140 line       497                             i, j,
excute 13:48:24.090132 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.094122 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0)]
excute 13:48:24.097114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:24.101073 line       494                         if (i == j):
excute 13:48:24.105063 line       496                         i_j_list.append((
excute 13:48:24.108084 line       497                             i, j,
excute 13:48:24.111046 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.115036 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0)]
excute 13:48:24.118027 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:24.122018 line       494                         if (i == j):
excute 13:48:24.126038 line       496                         i_j_list.append((
excute 13:48:24.129030 line       497                             i, j,
excute 13:48:24.132991 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.137974 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0)]
excute 13:48:24.140966 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:24.144956 line       494                         if (i == j):
excute 13:48:24.148980 line       496                         i_j_list.append((
excute 13:48:24.151970 line       497                             i, j,
excute 13:48:24.155957 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.158948 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0)]
excute 13:48:24.161941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:24.165930 line       494                         if (i == j):
excute 13:48:24.169888 line       496                         i_j_list.append((
excute 13:48:24.173877 line       497                             i, j,
excute 13:48:24.176901 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.179892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0)]
excute 13:48:24.183851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:24.186842 line       494                         if (i == j):
excute 13:48:24.190831 line       495                             continue
excute 13:48:24.193824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:24.197812 line       494                         if (i == j):
excute 13:48:24.201817 line       496                         i_j_list.append((
excute 13:48:24.204829 line       497                             i, j,
excute 13:48:24.208816 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.211807 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0)]
excute 13:48:24.214799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:24.218792 line       494                         if (i == j):
excute 13:48:24.222760 line       496                         i_j_list.append((
excute 13:48:24.225770 line       497                             i, j,
excute 13:48:24.229761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.232752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:48:24.236712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:24.240731 line       494                         if (i == j):
excute 13:48:24.244723 line       496                         i_j_list.append((
excute 13:48:24.247715 line       497                             i, j,
excute 13:48:24.251701 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.254692 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:48:24.258683 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:24.262640 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:24.265663 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:24.269653 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:24.272644 line       494                         if (i == j):
excute 13:48:24.276617 line       496                         i_j_list.append((
excute 13:48:24.280624 line       497                             i, j,
excute 13:48:24.283615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.287603 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1)]
excute 13:48:24.290596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:24.294587 line       494                         if (i == j):
excute 13:48:24.298544 line       496                         i_j_list.append((
excute 13:48:24.301568 line       497                             i, j,
excute 13:48:24.304560 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.307552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0)]
excute 13:48:24.311544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:24.315532 line       494                         if (i == j):
excute 13:48:24.319488 line       496                         i_j_list.append((
excute 13:48:24.322482 line       497                             i, j,
excute 13:48:24.328464 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.334448 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:24.340433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:24.343424 line       494                         if (i == j):
excute 13:48:24.347413 line       496                         i_j_list.append((
excute 13:48:24.351402 line       497                             i, j,
excute 13:48:24.355392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.358383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:48:24.362374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:24.365365 line       494                         if (i == j):
excute 13:48:24.370359 line       496                         i_j_list.append((
excute 13:48:24.373375 line       497                             i, j,
excute 13:48:24.376368 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.380363 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:48:24.384318 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:24.388306 line       494                         if (i == j):
excute 13:48:24.392295 line       496                         i_j_list.append((
excute 13:48:24.396284 line       497                             i, j,
excute 13:48:24.400274 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.403266 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:48:24.407255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:24.411243 line       494                         if (i == j):
excute 13:48:24.415234 line       496                         i_j_list.append((
excute 13:48:24.419223 line       497                             i, j,
excute 13:48:24.423212 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.426204 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1)]
excute 13:48:24.430193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:24.434183 line       494                         if (i == j):
excute 13:48:24.439170 line       495                             continue
excute 13:48:24.443163 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:24.447146 line       494                         if (i == j):
excute 13:48:24.451138 line       496                         i_j_list.append((
excute 13:48:24.455125 line       497                             i, j,
excute 13:48:24.458117 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.462106 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0)]
excute 13:48:24.465098 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:24.469088 line       494                         if (i == j):
excute 13:48:24.472079 line       496                         i_j_list.append((
excute 13:48:24.476069 line       497                             i, j,
excute 13:48:24.479061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.482053 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:24.486042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:24.489034 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:24.493023 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:24.496015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:24.500005 line       494                         if (i == j):
excute 13:48:24.503994 line       496                         i_j_list.append((
excute 13:48:24.507985 line       497                             i, j,
excute 13:48:24.510976 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.514965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1)]
excute 13:48:24.517989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:24.521948 line       494                         if (i == j):
excute 13:48:24.525939 line       496                         i_j_list.append((
excute 13:48:24.528959 line       497                             i, j,
excute 13:48:24.531954 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.535929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0)]
excute 13:48:24.538936 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:24.542892 line       494                         if (i == j):
excute 13:48:24.547912 line       496                         i_j_list.append((
excute 13:48:24.550904 line       497                             i, j,
excute 13:48:24.554890 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.558850 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:24.562839 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:24.566827 line       494                         if (i == j):
excute 13:48:24.570818 line       496                         i_j_list.append((
excute 13:48:24.574805 line       497                             i, j,
excute 13:48:24.579826 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.582818 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:48:24.586773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:24.589800 line       494                         if (i == j):
excute 13:48:24.593787 line       496                         i_j_list.append((
excute 13:48:24.596779 line       497                             i, j,
excute 13:48:24.600767 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.603761 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:48:24.607717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:24.610741 line       494                         if (i == j):
excute 13:48:24.617723 line       496                         i_j_list.append((
excute 13:48:24.621712 line       497                             i, j,
excute 13:48:24.624673 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.628663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:48:24.632652 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:24.637671 line       494                         if (i == j):
excute 13:48:24.641653 line       496                         i_j_list.append((
excute 13:48:24.644649 line       497                             i, j,
excute 13:48:24.648611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.652599 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1)]
excute 13:48:24.656588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:24.661574 line       494                         if (i == j):
excute 13:48:24.665568 line       496                         i_j_list.append((
excute 13:48:24.669552 line       497                             i, j,
excute 13:48:24.672544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.675536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0)]
excute 13:48:24.679525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:24.682517 line       494                         if (i == j):
excute 13:48:24.687505 line       495                             continue
excute 13:48:24.690496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:24.697477 line       494                         if (i == j):
excute 13:48:24.705456 line       496                         i_j_list.append((
excute 13:48:24.712437 line       497                             i, j,
excute 13:48:24.718421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.722410 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:24.725402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:24.729392 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:24.732384 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:24.736373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:24.739365 line       494                         if (i == j):
excute 13:48:24.743354 line       496                         i_j_list.append((
excute 13:48:24.746346 line       497                             i, j,
excute 13:48:24.752332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.756321 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 1)]
excute 13:48:24.760342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:24.764331 line       494                         if (i == j):
excute 13:48:24.768291 line       496                         i_j_list.append((
excute 13:48:24.771313 line       497                             i, j,
excute 13:48:24.777265 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.781254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 1), (9, 1, 1, 0)]
excute 13:48:24.784277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:24.788236 line       494                         if (i == j):
excute 13:48:24.792225 line       496                         i_j_list.append((
excute 13:48:24.795217 line       497                             i, j,
excute 13:48:24.799237 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.802228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:48:24.806189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:24.809210 line       494                         if (i == j):
excute 13:48:24.813201 line       496                         i_j_list.append((
excute 13:48:24.817189 line       497                             i, j,
excute 13:48:24.820181 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.824170 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:48:24.827165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:24.831121 line       494                         if (i == j):
excute 13:48:24.835111 line       496                         i_j_list.append((
excute 13:48:24.838135 line       497                             i, j,
excute 13:48:24.842090 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.845115 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:48:24.848108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:24.853062 line       494                         if (i == j):
excute 13:48:24.857052 line       496                         i_j_list.append((
excute 13:48:24.861040 line       497                             i, j,
excute 13:48:24.864063 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.867058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:48:24.871038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:24.874037 line       494                         if (i == j):
excute 13:48:24.878029 line       496                         i_j_list.append((
excute 13:48:24.882016 line       497                             i, j,
excute 13:48:24.886009 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.888996 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1)]
excute 13:48:24.892963 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:24.895979 line       494                         if (i == j):
excute 13:48:24.899967 line       496                         i_j_list.append((
excute 13:48:24.903926 line       497                             i, j,
excute 13:48:24.906952 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.909944 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0)]
excute 13:48:24.913906 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:24.916922 line       494                         if (i == j):
excute 13:48:24.920913 line       496                         i_j_list.append((
excute 13:48:24.924871 line       497                             i, j,
excute 13:48:24.927893 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:24.930888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 2, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 9, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 6, 9, 1), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, -1, 1), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 1), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 1), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:48:24.934862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:24.938833 line       494                         if (i == j):
excute 13:48:24.941859 line       495                             continue
excute 13:48:24.945845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:24.949839 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:24.953792 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 6, -1, 1), (6, 0, -1, 1), (7, 0, -1, 1), (7, 6, -1, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (5, 0, 0, 1), (5, 6, 0, 1), (8, 0, 0, 1), (8, 6, 0, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (1, 0, 1, 1), (1, 6, 1, 1), (4, 0, 1, 1), (4, 6, 1, 1), (9, 0, 1, 1), (9, 6, 1, 1), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (2, 0, 2, 1), (2, 6, 2, 1), (3, 1, 9, 0), (3, 2, 9, 0), (3, 4, 9, 0), (3, 5, 9, 0), (3, 7, 9, 0), (3, 8, 9, 0), (3, 9, 9, 0), (3, 0, 9, 1), (3, 6, 9, 1)]
excute 13:48:24.957784 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:24.964765 line       505                     if (self.RELOCATE):
excute 13:48:24.969783 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:24.973773 line       505                     if (self.RELOCATE):
excute 13:48:24.977734 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:24.980752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:48:24.984710 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:24.988701 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:24.992690 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:24.996680 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:25.000668 line       556                     i = i_j[0]
excute 13:48:25.004687 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:25.008678 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.012667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 0)
excute 13:48:25.016629 line       556                     i = i_j[0]
excute 13:48:25.021182 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:25.025175 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.029163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:25.032156 line       556                     i = i_j[0]
excute 13:48:25.036146 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:25.039137 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.043127 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:25.047116 line       556                     i = i_j[0]
excute 13:48:25.050141 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:25.054130 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.058115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:25.063074 line       556                     i = i_j[0]
excute 13:48:25.067064 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:25.070056 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.075044 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:25.081039 line       556                     i = i_j[0]
excute 13:48:25.085015 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:25.088008 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.091998 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:25.094988 line       556                     i = i_j[0]
excute 13:48:25.099974 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:25.102968 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.106956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 0)
excute 13:48:25.110945 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:25.113938 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:25.118924 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.121917 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 0)
excute 13:48:25.125907 line       556                     i = i_j[0]
excute 13:48:25.129896 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:25.133885 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.137875 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 0)
excute 13:48:25.140885 line       556                     i = i_j[0]
excute 13:48:25.144856 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:25.147846 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.151851 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:48:25.154828 line       556                     i = i_j[0]
excute 13:48:25.158818 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:25.162807 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.167795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 0)
excute 13:48:25.170786 line       556                     i = i_j[0]
excute 13:48:25.174784 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:25.177767 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.181757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:48:25.185746 line       556                     i = i_j[0]
excute 13:48:25.189735 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:25.193724 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.198712 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:48:25.201702 line       556                     i = i_j[0]
excute 13:48:25.205693 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:25.208684 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.212674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:48:25.216663 line       556                     i = i_j[0]
excute 13:48:25.219655 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:25.223645 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.226636 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:25.230626 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:25.234615 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:25.237607 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.241596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:25.245585 line       556                     i = i_j[0]
excute 13:48:25.248577 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:25.252601 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.256559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:48:25.260545 line       556                     i = i_j[0]
excute 13:48:25.263568 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:25.268524 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.271517 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:25.275506 line       556                     i = i_j[0]
excute 13:48:25.279495 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:25.283484 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.287474 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:25.291463 line       556                     i = i_j[0]
excute 13:48:25.295454 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:25.298445 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.302435 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:25.305426 line       556                     i = i_j[0]
excute 13:48:25.309415 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:25.312407 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.316397 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:25.320386 line       556                     i = i_j[0]
excute 13:48:25.325372 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:25.333350 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.347315 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 1)
excute 13:48:25.353303 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:25.357285 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:25.362275 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.366262 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 1)
excute 13:48:25.372246 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:25.376235 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:25.381224 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.386211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 1)
excute 13:48:25.389203 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:25.393197 line       557                     j = i_j[1]
excute 13:48:25.397183 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.401170 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 1)
excute 13:48:25.405160 line       556                     i = i_j[0]
excute 13:48:25.409148 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:25.413136 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.417129 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:48:25.423112 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:25.428097 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:25.432088 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.436077 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:48:25.440066 line       556                     i = i_j[0]
excute 13:48:25.444056 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:25.448045 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.452035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:48:25.456023 line       556                     i = i_j[0]
excute 13:48:25.460012 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:25.463004 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.466995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:48:25.470985 line       556                     i = i_j[0]
excute 13:48:25.474971 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:25.478962 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.482952 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:48:25.485944 line       556                     i = i_j[0]
excute 13:48:25.489932 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:25.493922 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.498918 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:48:25.501898 line       556                     i = i_j[0]
excute 13:48:25.505890 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:25.509879 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.513870 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:48:25.517858 line       556                     i = i_j[0]
excute 13:48:25.522845 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:25.526834 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.530823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:25.534813 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:25.538802 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:25.541793 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.545783 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:25.549779 line       556                     i = i_j[0]
excute 13:48:25.552764 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:25.556754 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.560744 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:48:25.563734 line       556                     i = i_j[0]
excute 13:48:25.567725 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:25.571714 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.577697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:25.582685 line       556                     i = i_j[0]
excute 13:48:25.587672 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:25.590664 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.594652 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:25.597644 line       556                     i = i_j[0]
excute 13:48:25.601634 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:25.605624 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.608615 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:25.612605 line       556                     i = i_j[0]
excute 13:48:25.615596 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:25.619586 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.623574 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:25.626567 line       556                     i = i_j[0]
excute 13:48:25.631553 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:25.634545 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.638535 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 1)
excute 13:48:25.642525 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:25.645516 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:25.649506 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.653496 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 140
excute 13:48:25.657516 line       560                         if (t_tmp > self.TIME):
excute 13:48:25.661473 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:25.664498 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:25.667491 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:25.671478 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:25.674473 line       569                                     available_vhecles[i][t],
excute 13:48:25.679426 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:25.682417 line       571                                     self.S_capacities[j],
excute 13:48:25.686407 line       572                                     demands[t][i][j],
excute 13:48:25.690396 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 128
calc_contract     13:48:25.694386 call       352     def caluculate_contract(
calc_contract     13:48:25.697377 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:25.698385 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:25.699407 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:25.700403 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:25.700403 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:48:25.701385 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:25.701385 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:48:25.702363 line       575                                 rsf += rsf_tmp
excute 13:48:25.706384 line       576                                 rse += rse_tmp
excute 13:48:25.709377 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 0
move_cars     Starting var:.. t = 128
move_cars     Starting var:.. t_tmp = 140
move_cars     Starting var:.. can_contract = 1
move_cars     13:48:25.713334 call       388     def move_cars(
move_cars     13:48:25.717347 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:25.718323 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     13:48:25.720318 line       399         return available_vhecles
move_cars     13:48:25.721315 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
excute 13:48:25.724307 line       579                                 success += can_contract
excute Modified var:.. success = 53
excute 13:48:25.728300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 1)
excute 13:48:25.732286 line       556                     i = i_j[0]
excute 13:48:25.735274 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:25.739266 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.743255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 1)
excute 13:48:25.747244 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:25.751234 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:25.756222 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.760211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 1)
excute 13:48:25.764229 line       556                     i = i_j[0]
excute 13:48:25.768189 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:25.771213 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.775169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:48:25.779158 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:25.784147 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:25.788167 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.791158 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:48:25.795150 line       556                     i = i_j[0]
excute 13:48:25.799107 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:25.802127 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.806088 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:48:25.810076 line       556                     i = i_j[0]
excute 13:48:25.814065 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:25.817060 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.821048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:48:25.825036 line       556                     i = i_j[0]
excute 13:48:25.829026 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:25.833015 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.837005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:48:25.840994 line       556                     i = i_j[0]
excute 13:48:25.844984 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:25.847975 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.851965 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:48:25.855955 line       556                     i = i_j[0]
excute 13:48:25.859943 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:25.863933 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.867921 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:48:25.870914 line       556                     i = i_j[0]
excute 13:48:25.875902 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:25.878893 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.884880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:48:25.888867 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:25.892856 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:25.896846 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.900833 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:48:25.903827 line       556                     i = i_j[0]
excute 13:48:25.907816 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:25.911805 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.916791 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:48:25.919784 line       556                     i = i_j[0]
excute 13:48:25.924769 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:25.927760 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.931782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:48:25.935741 line       556                     i = i_j[0]
excute 13:48:25.938732 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:25.942722 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.946712 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:48:25.950701 line       556                     i = i_j[0]
excute 13:48:25.954691 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:25.957680 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.961671 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:48:25.965661 line       556                     i = i_j[0]
excute 13:48:25.969650 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:25.973640 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.977630 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:48:25.980621 line       556                     i = i_j[0]
excute 13:48:25.985607 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:25.990593 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:25.994584 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:48:25.997575 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:26.001566 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:26.005554 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.008544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:48:26.012535 line       556                     i = i_j[0]
excute 13:48:26.017521 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:26.020515 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.024502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:48:26.028493 line       556                     i = i_j[0]
excute 13:48:26.032481 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:26.036470 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.040462 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:48:26.043453 line       556                     i = i_j[0]
excute 13:48:26.047442 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:26.051432 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.055422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:48:26.059410 line       556                     i = i_j[0]
excute 13:48:26.063399 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:26.067388 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.070380 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:48:26.077363 line       556                     i = i_j[0]
excute 13:48:26.081351 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:26.085342 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.090327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:48:26.093318 line       556                     i = i_j[0]
excute 13:48:26.097308 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:26.100301 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.105287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 1)
excute 13:48:26.108279 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:26.112268 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:26.116269 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.120248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 1)
excute 13:48:26.123240 line       556                     i = i_j[0]
excute 13:48:26.127229 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:26.131218 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.136206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 1)
excute 13:48:26.139196 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:26.143186 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:26.147174 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.151177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 1)
excute 13:48:26.155153 line       556                     i = i_j[0]
excute 13:48:26.158145 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:26.162135 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.166124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 1)
excute 13:48:26.169118 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:26.173120 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:26.177096 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.181084 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 1)
excute 13:48:26.184076 line       556                     i = i_j[0]
excute 13:48:26.188076 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:26.192069 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.196062 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 139
excute 13:48:26.200064 line       560                         if (t_tmp > self.TIME):
excute 13:48:26.204024 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:26.207048 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:26.211031 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:26.214028 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:26.217020 line       569                                     available_vhecles[i][t],
excute 13:48:26.221009 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:26.224001 line       571                                     self.S_capacities[j],
excute 13:48:26.227958 line       572                                     demands[t][i][j],
excute 13:48:26.230951 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 5
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 128
calc_contract     13:48:26.233976 call       352     def caluculate_contract(
calc_contract     13:48:26.237932 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:26.237932 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:26.238929 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:26.239928 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:26.239928 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -1
calc_contract     13:48:26.240926 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 2
calc_contract     13:48:26.241923 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:26.242919 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-1, 2, 0]
excute Modified var:.. can_contract = -1
excute Modified var:.. rsf_tmp = 2
excute 13:48:26.243918 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 168
excute 13:48:26.247905 line       576                                 rse += rse_tmp
excute 13:48:26.251895 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 128
move_cars     Starting var:.. t_tmp = 139
move_cars     Starting var:.. can_contract = -1
move_cars     13:48:26.256882 call       388     def move_cars(
move_cars     13:48:26.260870 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]]
move_cars     13:48:26.262865 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:48:26.263899 line       399         return available_vhecles
move_cars     13:48:26.265892 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]]
excute 13:48:26.267884 line       579                                 success += can_contract
excute Modified var:.. success = 52
excute 13:48:26.271872 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:26.276830 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:26.280818 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:26.284806 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.287830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:48:26.291819 line       556                     i = i_j[0]
excute 13:48:26.296775 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:26.299765 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.303756 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:26.306749 line       556                     i = i_j[0]
excute 13:48:26.310738 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:26.314728 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.318718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:26.321709 line       556                     i = i_j[0]
excute 13:48:26.327695 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:26.333677 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.345645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:26.348637 line       556                     i = i_j[0]
excute 13:48:26.356615 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:26.360605 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.366592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:26.371576 line       556                     i = i_j[0]
excute 13:48:26.380551 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:26.393043 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.400022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:26.407003 line       556                     i = i_j[0]
excute 13:48:26.413992 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:26.421963 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.431937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 1)
excute 13:48:26.435926 line       556                     i = i_j[0]
excute 13:48:26.439915 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:26.443904 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.448891 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:48:26.454876 line       556                     i = i_j[0]
excute 13:48:26.458865 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:26.468839 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.477816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 9, 0)
excute 13:48:26.486791 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:26.494770 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:26.504748 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.512721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 9, 0)
excute 13:48:26.519701 line       556                     i = i_j[0]
excute 13:48:26.525687 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:26.534662 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.542641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 9, 0)
excute 13:48:26.548625 line       556                     i = i_j[0]
excute 13:48:26.554610 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:26.561590 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.569569 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 9, 0)
excute 13:48:26.576551 line       556                     i = i_j[0]
excute 13:48:26.585526 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:26.590513 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.598491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 9, 0)
excute 13:48:26.605473 line       556                     i = i_j[0]
excute 13:48:26.611456 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:26.616443 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.624424 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 9, 0)
excute 13:48:26.631403 line       556                     i = i_j[0]
excute 13:48:26.638385 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:26.647360 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.653345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 9, 0)
excute 13:48:26.661323 line       556                     i = i_j[0]
excute 13:48:26.669302 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:26.675286 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.683265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 9, 1)
excute 13:48:26.689250 line       556                     i = i_j[0]
excute 13:48:26.696230 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:26.702213 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.710193 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 9, 1)
excute 13:48:26.718171 line       556                     i = i_j[0]
excute 13:48:26.726151 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:26.733131 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:26.741113 line       555                 for i_j in i_j_list:
excute 13:48:26.749091 line       581             self.write_matrix(
excute 13:48:26.756069 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:26.763053 line       583                 result_file_path,
excute 13:48:26.771030 line       584                 mode='a'
excute 13:48:26.782000 line       488         for t in time_steps:
excute Modified var:.. t = 129
excute 13:48:26.790977 line       489             if (t != self.TIME + 1):
excute 13:48:26.800951 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:26.806933 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:26.813916 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:26.818903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:26.822893 line       494                         if (i == j):
excute 13:48:26.826881 line       495                             continue
excute 13:48:26.829873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:26.833862 line       494                         if (i == j):
excute 13:48:26.838851 line       496                         i_j_list.append((
excute 13:48:26.844834 line       497                             i, j,
excute 13:48:26.858796 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:26.864781 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:48:26.872758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:26.876748 line       494                         if (i == j):
excute 13:48:26.880738 line       496                         i_j_list.append((
excute 13:48:26.885725 line       497                             i, j,
excute 13:48:26.888715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:26.892707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:48:26.895698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:26.899687 line       494                         if (i == j):
excute 13:48:26.904672 line       496                         i_j_list.append((
excute 13:48:26.907665 line       497                             i, j,
excute 13:48:26.911655 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:26.921628 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0)]
excute 13:48:26.926615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:26.930604 line       494                         if (i == j):
excute 13:48:26.934595 line       496                         i_j_list.append((
excute 13:48:26.938582 line       497                             i, j,
excute 13:48:26.942573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:26.947558 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0)]
excute 13:48:26.950556 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:26.955537 line       494                         if (i == j):
excute 13:48:26.959527 line       496                         i_j_list.append((
excute 13:48:26.963516 line       497                             i, j,
excute 13:48:26.967505 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:26.970497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1)]
excute 13:48:26.974487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:26.978477 line       494                         if (i == j):
excute 13:48:26.982466 line       496                         i_j_list.append((
excute 13:48:26.986455 line       497                             i, j,
excute 13:48:26.991441 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:26.995432 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0)]
excute 13:48:26.999421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:27.003409 line       494                         if (i == j):
excute 13:48:27.007398 line       496                         i_j_list.append((
excute 13:48:27.010390 line       497                             i, j,
excute 13:48:27.014380 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.018370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:48:27.022358 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:27.026347 line       494                         if (i == j):
excute 13:48:27.029339 line       496                         i_j_list.append((
excute 13:48:27.032332 line       497                             i, j,
excute 13:48:27.036322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.040311 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:48:27.044300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:27.048291 line       494                         if (i == j):
excute 13:48:27.052280 line       496                         i_j_list.append((
excute 13:48:27.056269 line       497                             i, j,
excute 13:48:27.059261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.063250 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:48:27.067240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:27.071229 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:27.078210 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:27.084196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:27.089180 line       494                         if (i == j):
excute 13:48:27.093170 line       496                         i_j_list.append((
excute 13:48:27.096162 line       497                             i, j,
excute 13:48:27.099153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.102145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0)]
excute 13:48:27.106134 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:27.109125 line       494                         if (i == j):
excute 13:48:27.113115 line       495                             continue
excute 13:48:27.116107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:27.119099 line       494                         if (i == j):
excute 13:48:27.125085 line       496                         i_j_list.append((
excute 13:48:27.128076 line       497                             i, j,
excute 13:48:27.131068 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.135058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:48:27.138049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:27.142039 line       494                         if (i == j):
excute 13:48:27.146030 line       496                         i_j_list.append((
excute 13:48:27.149020 line       497                             i, j,
excute 13:48:27.152012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.156002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:48:27.158993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:27.162983 line       494                         if (i == j):
excute 13:48:27.165974 line       496                         i_j_list.append((
excute 13:48:27.169964 line       497                             i, j,
excute 13:48:27.172956 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.175978 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:48:27.179937 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:27.182963 line       494                         if (i == j):
excute 13:48:27.186918 line       496                         i_j_list.append((
excute 13:48:27.189911 line       497                             i, j,
excute 13:48:27.193901 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.197890 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1)]
excute 13:48:27.201878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:27.204872 line       494                         if (i == j):
excute 13:48:27.208861 line       496                         i_j_list.append((
excute 13:48:27.212850 line       497                             i, j,
excute 13:48:27.216840 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.220829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0)]
excute 13:48:27.225825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:27.228805 line       494                         if (i == j):
excute 13:48:27.232795 line       496                         i_j_list.append((
excute 13:48:27.235787 line       497                             i, j,
excute 13:48:27.239776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.242769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:48:27.246759 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:27.249751 line       494                         if (i == j):
excute 13:48:27.253741 line       496                         i_j_list.append((
excute 13:48:27.258728 line       497                             i, j,
excute 13:48:27.262716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.265708 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:48:27.269697 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:27.273686 line       494                         if (i == j):
excute 13:48:27.277678 line       496                         i_j_list.append((
excute 13:48:27.280669 line       497                             i, j,
excute 13:48:27.283661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.287650 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:48:27.291640 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:27.295630 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:27.298621 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:27.302611 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:27.306598 line       494                         if (i == j):
excute 13:48:27.310587 line       496                         i_j_list.append((
excute 13:48:27.313580 line       497                             i, j,
excute 13:48:27.320561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.330535 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:48:27.339513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:27.343499 line       494                         if (i == j):
excute 13:48:27.347488 line       496                         i_j_list.append((
excute 13:48:27.351479 line       497                             i, j,
excute 13:48:27.356467 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.359458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:48:27.363447 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:27.368435 line       494                         if (i == j):
excute 13:48:27.372423 line       495                             continue
excute 13:48:27.375415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:27.379404 line       494                         if (i == j):
excute 13:48:27.382396 line       496                         i_j_list.append((
excute 13:48:27.387383 line       497                             i, j,
excute 13:48:27.390374 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.393370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:48:27.397357 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:27.401348 line       494                         if (i == j):
excute 13:48:27.404336 line       496                         i_j_list.append((
excute 13:48:27.408325 line       497                             i, j,
excute 13:48:27.411318 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.415310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:48:27.419297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:27.423287 line       494                         if (i == j):
excute 13:48:27.426280 line       496                         i_j_list.append((
excute 13:48:27.431279 line       497                             i, j,
excute 13:48:27.434256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.437248 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1)]
excute 13:48:27.441237 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:27.445238 line       494                         if (i == j):
excute 13:48:27.450217 line       496                         i_j_list.append((
excute 13:48:27.453238 line       497                             i, j,
excute 13:48:27.457230 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.460219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0)]
excute 13:48:27.464209 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:27.467200 line       494                         if (i == j):
excute 13:48:27.472158 line       496                         i_j_list.append((
excute 13:48:27.476146 line       497                             i, j,
excute 13:48:27.479138 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.483141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:27.486119 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:27.490109 line       494                         if (i == j):
excute 13:48:27.495094 line       496                         i_j_list.append((
excute 13:48:27.498087 line       497                             i, j,
excute 13:48:27.502077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.506066 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:27.510055 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:27.513046 line       494                         if (i == j):
excute 13:48:27.517035 line       496                         i_j_list.append((
excute 13:48:27.520027 line       497                             i, j,
excute 13:48:27.523019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.527008 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:27.530000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:27.534989 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:27.538010 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:27.541969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:27.544996 line       494                         if (i == j):
excute 13:48:27.548950 line       496                         i_j_list.append((
excute 13:48:27.551974 line       497                             i, j,
excute 13:48:27.555963 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.558959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0)]
excute 13:48:27.562912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:27.565938 line       494                         if (i == j):
excute 13:48:27.569926 line       496                         i_j_list.append((
excute 13:48:27.575891 line       497                             i, j,
excute 13:48:27.580864 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.583856 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0)]
excute 13:48:27.587846 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:27.590837 line       494                         if (i == j):
excute 13:48:27.594827 line       496                         i_j_list.append((
excute 13:48:27.597819 line       497                             i, j,
excute 13:48:27.600811 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.604800 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0)]
excute 13:48:27.607792 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:27.611783 line       494                         if (i == j):
excute 13:48:27.614773 line       495                             continue
excute 13:48:27.617766 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:27.621756 line       494                         if (i == j):
excute 13:48:27.624747 line       496                         i_j_list.append((
excute 13:48:27.628736 line       497                             i, j,
excute 13:48:27.631728 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.637714 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0)]
excute 13:48:27.640740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:27.644729 line       494                         if (i == j):
excute 13:48:27.648684 line       496                         i_j_list.append((
excute 13:48:27.651708 line       497                             i, j,
excute 13:48:27.654699 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.658688 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1)]
excute 13:48:27.661682 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:27.665639 line       494                         if (i == j):
excute 13:48:27.669629 line       496                         i_j_list.append((
excute 13:48:27.672655 line       497                             i, j,
excute 13:48:27.675643 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.679633 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0)]
excute 13:48:27.682628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:27.686584 line       494                         if (i == j):
excute 13:48:27.690605 line       496                         i_j_list.append((
excute 13:48:27.693598 line       497                             i, j,
excute 13:48:27.696590 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.700576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0)]
excute 13:48:27.703568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:27.707558 line       494                         if (i == j):
excute 13:48:27.711516 line       496                         i_j_list.append((
excute 13:48:27.715507 line       497                             i, j,
excute 13:48:27.719496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.722488 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0)]
excute 13:48:27.726477 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:27.730466 line       494                         if (i == j):
excute 13:48:27.735453 line       496                         i_j_list.append((
excute 13:48:27.739443 line       497                             i, j,
excute 13:48:27.750783 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.754808 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0)]
excute 13:48:27.758766 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:27.762755 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:27.765746 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:27.769736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:27.772728 line       494                         if (i == j):
excute 13:48:27.776759 line       496                         i_j_list.append((
excute 13:48:27.779712 line       497                             i, j,
excute 13:48:27.785725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.789685 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0)]
excute 13:48:27.792675 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:27.796664 line       494                         if (i == j):
excute 13:48:27.800654 line       496                         i_j_list.append((
excute 13:48:27.803645 line       497                             i, j,
excute 13:48:27.806637 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.809629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:48:27.812621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:27.816610 line       494                         if (i == j):
excute 13:48:27.820600 line       496                         i_j_list.append((
excute 13:48:27.823592 line       497                             i, j,
excute 13:48:27.827581 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.830573 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:48:27.833565 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:27.838553 line       494                         if (i == j):
excute 13:48:27.843539 line       496                         i_j_list.append((
excute 13:48:27.846531 line       497                             i, j,
excute 13:48:27.849523 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.853512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:48:27.856504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:27.860507 line       494                         if (i == j):
excute 13:48:27.864483 line       495                             continue
excute 13:48:27.867475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:27.870467 line       494                         if (i == j):
excute 13:48:27.874456 line       496                         i_j_list.append((
excute 13:48:27.877448 line       497                             i, j,
excute 13:48:27.881437 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.884429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1)]
excute 13:48:27.887421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:27.891411 line       494                         if (i == j):
excute 13:48:27.895400 line       496                         i_j_list.append((
excute 13:48:27.898392 line       497                             i, j,
excute 13:48:27.901384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.904376 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0)]
excute 13:48:27.908366 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:27.912356 line       494                         if (i == j):
excute 13:48:27.915347 line       496                         i_j_list.append((
excute 13:48:27.919336 line       497                             i, j,
excute 13:48:27.922329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.925320 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:48:27.928313 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:27.932302 line       494                         if (i == j):
excute 13:48:27.936292 line       496                         i_j_list.append((
excute 13:48:27.939283 line       497                             i, j,
excute 13:48:27.945268 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.950255 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:48:27.953246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:27.957236 line       494                         if (i == j):
excute 13:48:27.963226 line       496                         i_j_list.append((
excute 13:48:27.968217 line       497                             i, j,
excute 13:48:27.972227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:27.976222 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:48:27.979176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:27.983166 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:27.987155 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:27.991144 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:27.994136 line       494                         if (i == j):
excute 13:48:27.998125 line       496                         i_j_list.append((
excute 13:48:28.001118 line       497                             i, j,
excute 13:48:28.005139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.008130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0)]
excute 13:48:28.012089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:28.016078 line       494                         if (i == j):
excute 13:48:28.019070 line       496                         i_j_list.append((
excute 13:48:28.023059 line       497                             i, j,
excute 13:48:28.026051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.029043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:48:28.033034 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:28.036025 line       494                         if (i == j):
excute 13:48:28.040015 line       496                         i_j_list.append((
excute 13:48:28.043006 line       497                             i, j,
excute 13:48:28.047993 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.050986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:48:28.054974 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:28.057965 line       494                         if (i == j):
excute 13:48:28.061955 line       496                         i_j_list.append((
excute 13:48:28.064947 line       497                             i, j,
excute 13:48:28.068936 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.071929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:48:28.078942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:28.083896 line       494                         if (i == j):
excute 13:48:28.086888 line       496                         i_j_list.append((
excute 13:48:28.090878 line       497                             i, j,
excute 13:48:28.093869 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.096862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:48:28.099854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:28.103843 line       494                         if (i == j):
excute 13:48:28.107833 line       495                             continue
excute 13:48:28.110824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:28.113816 line       494                         if (i == j):
excute 13:48:28.117806 line       496                         i_j_list.append((
excute 13:48:28.120798 line       497                             i, j,
excute 13:48:28.124787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.127779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:48:28.130771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:28.134761 line       494                         if (i == j):
excute 13:48:28.138749 line       496                         i_j_list.append((
excute 13:48:28.142739 line       497                             i, j,
excute 13:48:28.145731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.150719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:48:28.154707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:28.158697 line       494                         if (i == j):
excute 13:48:28.161688 line       496                         i_j_list.append((
excute 13:48:28.165678 line       497                             i, j,
excute 13:48:28.168669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.171662 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:48:28.175651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:28.179641 line       494                         if (i == j):
excute 13:48:28.182633 line       496                         i_j_list.append((
excute 13:48:28.186622 line       497                             i, j,
excute 13:48:28.189614 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.192637 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:48:28.196596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:28.200586 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:28.203608 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:28.207574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:28.210591 line       494                         if (i == j):
excute 13:48:28.214560 line       496                         i_j_list.append((
excute 13:48:28.217570 line       497                             i, j,
excute 13:48:28.221562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.224551 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0)]
excute 13:48:28.227544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:28.235492 line       494                         if (i == j):
excute 13:48:28.243473 line       496                         i_j_list.append((
excute 13:48:28.246461 line       497                             i, j,
excute 13:48:28.250453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.255438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0)]
excute 13:48:28.259427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:28.263418 line       494                         if (i == j):
excute 13:48:28.267407 line       496                         i_j_list.append((
excute 13:48:28.270430 line       497                             i, j,
excute 13:48:28.273422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.277380 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0)]
excute 13:48:28.281402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:28.285392 line       494                         if (i == j):
excute 13:48:28.288382 line       496                         i_j_list.append((
excute 13:48:28.292371 line       497                             i, j,
excute 13:48:28.295363 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.298357 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0)]
excute 13:48:28.302344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:28.306335 line       494                         if (i == j):
excute 13:48:28.310323 line       496                         i_j_list.append((
excute 13:48:28.313316 line       497                             i, j,
excute 13:48:28.317305 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.320296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0)]
excute 13:48:28.324286 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:28.334229 line       494                         if (i == j):
excute 13:48:28.344234 line       496                         i_j_list.append((
excute 13:48:28.348192 line       497                             i, j,
excute 13:48:28.352180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.360160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1)]
excute 13:48:28.366143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:28.370132 line       494                         if (i == j):
excute 13:48:28.374121 line       495                             continue
excute 13:48:28.377113 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:28.381102 line       494                         if (i == j):
excute 13:48:28.385092 line       496                         i_j_list.append((
excute 13:48:28.389113 line       497                             i, j,
excute 13:48:28.392105 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.396094 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0)]
excute 13:48:28.399087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:28.403075 line       494                         if (i == j):
excute 13:48:28.407064 line       496                         i_j_list.append((
excute 13:48:28.411054 line       497                             i, j,
excute 13:48:28.414045 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.418039 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:48:28.421028 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:28.425016 line       494                         if (i == j):
excute 13:48:28.428980 line       496                         i_j_list.append((
excute 13:48:28.432002 line       497                             i, j,
excute 13:48:28.435956 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.441973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:48:28.444969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:28.449920 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:28.452948 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:28.456899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:28.461888 line       494                         if (i == j):
excute 13:48:28.465877 line       496                         i_j_list.append((
excute 13:48:28.468900 line       497                             i, j,
excute 13:48:28.472889 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.475883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0)]
excute 13:48:28.479839 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:28.483829 line       494                         if (i == j):
excute 13:48:28.486850 line       496                         i_j_list.append((
excute 13:48:28.490809 line       497                             i, j,
excute 13:48:28.493832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.496824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:48:28.500791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:28.503807 line       494                         if (i == j):
excute 13:48:28.507796 line       496                         i_j_list.append((
excute 13:48:28.511785 line       497                             i, j,
excute 13:48:28.514776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.518766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:28.521759 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:28.525716 line       494                         if (i == j):
excute 13:48:28.532378 line       496                         i_j_list.append((
excute 13:48:28.535421 line       497                             i, j,
excute 13:48:28.539410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.542401 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:48:28.546359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:28.549383 line       494                         if (i == j):
excute 13:48:28.553374 line       496                         i_j_list.append((
excute 13:48:28.557361 line       497                             i, j,
excute 13:48:28.560355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.565309 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:48:28.569297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:28.573288 line       494                         if (i == j):
excute 13:48:28.577277 line       496                         i_j_list.append((
excute 13:48:28.581300 line       497                             i, j,
excute 13:48:28.584290 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.588282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1)]
excute 13:48:28.591272 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:28.595229 line       494                         if (i == j):
excute 13:48:28.599219 line       496                         i_j_list.append((
excute 13:48:28.602241 line       497                             i, j,
excute 13:48:28.605234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.609225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0)]
excute 13:48:28.612217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:28.616173 line       494                         if (i == j):
excute 13:48:28.620163 line       495                             continue
excute 13:48:28.623185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:28.626177 line       494                         if (i == j):
excute 13:48:28.630167 line       496                         i_j_list.append((
excute 13:48:28.634157 line       497                             i, j,
excute 13:48:28.638146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.641140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:48:28.644132 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:28.648122 line       494                         if (i == j):
excute 13:48:28.652111 line       496                         i_j_list.append((
excute 13:48:28.656066 line       497                             i, j,
excute 13:48:28.660063 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.663047 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:28.668071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:28.672023 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:28.676012 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:28.680002 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:28.683993 line       494                         if (i == j):
excute 13:48:28.687995 line       496                         i_j_list.append((
excute 13:48:28.691005 line       497                             i, j,
excute 13:48:28.694967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.697986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:28.701943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:28.705934 line       494                         if (i == j):
excute 13:48:28.709934 line       496                         i_j_list.append((
excute 13:48:28.713914 line       497                             i, j,
excute 13:48:28.716903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.719895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:48:28.723885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:28.727875 line       494                         if (i == j):
excute 13:48:28.730866 line       496                         i_j_list.append((
excute 13:48:28.734856 line       497                             i, j,
excute 13:48:28.737847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.740839 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:28.743831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:28.747821 line       494                         if (i == j):
excute 13:48:28.751822 line       496                         i_j_list.append((
excute 13:48:28.755800 line       497                             i, j,
excute 13:48:28.758793 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.762781 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:48:28.765772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:28.770760 line       494                         if (i == j):
excute 13:48:28.774750 line       496                         i_j_list.append((
excute 13:48:28.778738 line       497                             i, j,
excute 13:48:28.781730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.785719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:48:28.788711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:28.792701 line       494                         if (i == j):
excute 13:48:28.796691 line       496                         i_j_list.append((
excute 13:48:28.799682 line       497                             i, j,
excute 13:48:28.803672 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.806663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1)]
excute 13:48:28.809655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:28.813666 line       494                         if (i == j):
excute 13:48:28.817635 line       496                         i_j_list.append((
excute 13:48:28.820657 line       497                             i, j,
excute 13:48:28.824615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.827607 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0)]
excute 13:48:28.830599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:28.834599 line       494                         if (i == j):
excute 13:48:28.838579 line       496                         i_j_list.append((
excute 13:48:28.841569 line       497                             i, j,
excute 13:48:28.844562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.848551 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:28.851543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:28.855533 line       494                         if (i == j):
excute 13:48:28.859521 line       495                             continue
excute 13:48:28.863512 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:28.866503 line       494                         if (i == j):
excute 13:48:28.870494 line       496                         i_j_list.append((
excute 13:48:28.875480 line       497                             i, j,
excute 13:48:28.878471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.882461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:28.885452 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:28.889442 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:28.893432 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:28.896423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:28.900413 line       494                         if (i == j):
excute 13:48:28.904408 line       496                         i_j_list.append((
excute 13:48:28.907394 line       497                             i, j,
excute 13:48:28.911384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.914375 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0)]
excute 13:48:28.917399 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:28.921389 line       494                         if (i == j):
excute 13:48:28.925347 line       496                         i_j_list.append((
excute 13:48:28.928372 line       497                             i, j,
excute 13:48:28.932329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.935351 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0)]
excute 13:48:28.938342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:28.942332 line       494                         if (i == j):
excute 13:48:28.947291 line       496                         i_j_list.append((
excute 13:48:28.950311 line       497                             i, j,
excute 13:48:28.954300 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.958258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0)]
excute 13:48:28.961282 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:28.965277 line       494                         if (i == j):
excute 13:48:28.969260 line       496                         i_j_list.append((
excute 13:48:28.973217 line       497                             i, j,
excute 13:48:28.978207 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:28.981197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0)]
excute 13:48:28.985186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:28.988178 line       494                         if (i == j):
excute 13:48:28.992167 line       496                         i_j_list.append((
excute 13:48:28.995159 line       497                             i, j,
excute 13:48:28.999180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:29.002172 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0)]
excute 13:48:29.006165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:29.010121 line       494                         if (i == j):
excute 13:48:29.014110 line       496                         i_j_list.append((
excute 13:48:29.017133 line       497                             i, j,
excute 13:48:29.021091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:29.024116 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 1)]
excute 13:48:29.027108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:29.031095 line       494                         if (i == j):
excute 13:48:29.035053 line       496                         i_j_list.append((
excute 13:48:29.038045 line       497                             i, j,
excute 13:48:29.042033 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:29.045026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 1), (9, 6, 0, 0)]
excute 13:48:29.049015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:29.053006 line       494                         if (i == j):
excute 13:48:29.056994 line       496                         i_j_list.append((
excute 13:48:29.059986 line       497                             i, j,
excute 13:48:29.062978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:29.066967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 1), (9, 6, 0, 0), (9, 7, 0, 0)]
excute 13:48:29.069959 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:29.073949 line       494                         if (i == j):
excute 13:48:29.078937 line       496                         i_j_list.append((
excute 13:48:29.082959 line       497                             i, j,
excute 13:48:29.086915 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:29.089937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 1), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 1), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 1), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 1), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0)]
excute 13:48:29.092929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:29.096914 line       494                         if (i == j):
excute 13:48:29.100877 line       495                             continue
excute 13:48:29.103903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:29.109927 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:29.113909 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 5, -1, 1), (6, 5, -1, 1), (7, 5, -1, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0), (1, 5, 0, 1), (8, 5, 0, 1), (9, 5, 0, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (4, 5, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (2, 5, 2, 1), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (3, 5, 8, 1)]
excute 13:48:29.116901 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:29.120904 line       505                     if (self.RELOCATE):
excute 13:48:29.124880 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:29.127872 line       505                     if (self.RELOCATE):
excute 13:48:29.131861 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:29.135850 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:48:29.138842 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:29.142832 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:29.146821 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.150816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:29.153802 line       556                     i = i_j[0]
excute 13:48:29.157792 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:29.160783 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.164780 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 0)
excute 13:48:29.167765 line       556                     i = i_j[0]
excute 13:48:29.171756 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:29.174746 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.178736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:29.183740 line       556                     i = i_j[0]
excute 13:48:29.186714 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:29.190703 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.194693 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:29.197684 line       556                     i = i_j[0]
excute 13:48:29.201677 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:29.205665 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.209653 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:29.213644 line       556                     i = i_j[0]
excute 13:48:29.217634 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:29.221622 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.225612 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:29.228604 line       556                     i = i_j[0]
excute 13:48:29.232624 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:29.236613 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.240572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:29.243594 line       556                     i = i_j[0]
excute 13:48:29.247552 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:29.254532 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.259521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:48:29.263510 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:29.268499 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:29.272485 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.277472 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 0)
excute 13:48:29.281460 line       556                     i = i_j[0]
excute 13:48:29.286449 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:29.289471 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.293431 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 0)
excute 13:48:29.297419 line       556                     i = i_j[0]
excute 13:48:29.300442 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:29.304431 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.308389 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 0)
excute 13:48:29.311412 line       556                     i = i_j[0]
excute 13:48:29.315372 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:29.318395 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.322380 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:48:29.326343 line       556                     i = i_j[0]
excute 13:48:29.337314 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:29.342305 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.346289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:48:29.350286 line       556                     i = i_j[0]
excute 13:48:29.358257 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:29.361249 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.370225 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:48:29.377206 line       556                     i = i_j[0]
excute 13:48:29.381195 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:29.385187 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.391173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:48:29.395157 line       556                     i = i_j[0]
excute 13:48:29.399147 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:29.402170 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.406129 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:29.409151 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:29.413113 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:29.417100 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.421089 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:29.424111 line       556                     i = i_j[0]
excute 13:48:29.428069 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:29.432091 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.435082 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:29.439072 line       556                     i = i_j[0]
excute 13:48:29.443064 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:29.446053 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.451010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:48:29.456029 line       556                     i = i_j[0]
excute 13:48:29.459985 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:29.464972 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.470987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:29.474976 line       556                     i = i_j[0]
excute 13:48:29.478966 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:29.481956 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.485918 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:29.490902 line       556                     i = i_j[0]
excute 13:48:29.494891 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:29.497884 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.501873 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:29.504864 line       556                     i = i_j[0]
excute 13:48:29.509854 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:29.512845 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.517832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:29.521820 line       556                     i = i_j[0]
excute 13:48:29.525811 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:29.528802 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.533789 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 1)
excute 13:48:29.536781 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:29.540769 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:29.545755 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.548749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 1)
excute 13:48:29.552737 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:29.557724 line       557                     j = i_j[1]
excute 13:48:29.561713 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.564736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 1)
excute 13:48:29.567731 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:29.571717 line       557                     j = i_j[1]
excute 13:48:29.577672 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.581690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:48:29.585648 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:29.588671 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:29.593628 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.597618 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:48:29.601607 line       556                     i = i_j[0]
excute 13:48:29.606592 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:29.609585 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.615568 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:48:29.618562 line       556                     i = i_j[0]
excute 13:48:29.622551 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:29.626540 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.630530 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:48:29.634519 line       556                     i = i_j[0]
excute 13:48:29.639506 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:29.642498 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.646487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:48:29.650476 line       556                     i = i_j[0]
excute 13:48:29.655462 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:29.658456 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.662444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:48:29.666433 line       556                     i = i_j[0]
excute 13:48:29.669426 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:29.673415 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.678401 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:48:29.681393 line       556                     i = i_j[0]
excute 13:48:29.685383 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:29.689372 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.694359 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:48:29.699344 line       556                     i = i_j[0]
excute 13:48:29.703333 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:29.706325 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.710315 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:29.714305 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:29.718293 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:29.722283 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.726273 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:29.729264 line       556                     i = i_j[0]
excute 13:48:29.733254 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:29.736245 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.740236 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:29.743226 line       556                     i = i_j[0]
excute 13:48:29.747228 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:29.750208 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.754197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:48:29.758219 line       556                     i = i_j[0]
excute 13:48:29.763176 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:29.766167 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.770156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:29.774147 line       556                     i = i_j[0]
excute 13:48:29.778136 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:29.781125 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.786113 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:29.789106 line       556                     i = i_j[0]
excute 13:48:29.793095 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:29.797084 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.803067 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:29.806058 line       556                     i = i_j[0]
excute 13:48:29.810048 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:29.813040 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.817036 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:29.821019 line       556                     i = i_j[0]
excute 13:48:29.825011 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:29.828001 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.831991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 0, 0)
excute 13:48:29.834982 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:29.838972 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:29.842962 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.846951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 0, 0)
excute 13:48:29.849942 line       556                     i = i_j[0]
excute 13:48:29.853965 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:29.857952 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.861943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 0, 0)
excute 13:48:29.864933 line       556                     i = i_j[0]
excute 13:48:29.868890 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:29.871914 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.875904 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 0, 0)
excute 13:48:29.879863 line       556                     i = i_j[0]
excute 13:48:29.883853 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:29.887872 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.891864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 0, 0)
excute 13:48:29.894853 line       556                     i = i_j[0]
excute 13:48:29.898813 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:29.902802 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.906789 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 0, 0)
excute 13:48:29.909813 line       556                     i = i_j[0]
excute 13:48:29.913803 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:29.917792 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.921752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 0, 0)
excute 13:48:29.924743 line       556                     i = i_j[0]
excute 13:48:29.928732 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:29.932722 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.936711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 0, 0)
excute 13:48:29.940700 line       556                     i = i_j[0]
excute 13:48:29.945688 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:29.949707 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.953665 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 1)
excute 13:48:29.957653 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:29.960645 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:29.964635 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.968624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 1)
excute 13:48:29.972613 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:29.976603 line       557                     j = i_j[1]
excute 13:48:29.980592 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.983584 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 0, 1)
excute 13:48:29.987573 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:29.991563 line       557                     j = i_j[1]
excute 13:48:29.994554 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:29.998544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:48:30.001536 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:30.007521 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:30.011510 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.014501 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:48:30.018508 line       556                     i = i_j[0]
excute 13:48:30.021482 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:30.025472 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.028463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:48:30.032454 line       556                     i = i_j[0]
excute 13:48:30.035445 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:30.039434 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.042426 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:48:30.046415 line       556                     i = i_j[0]
excute 13:48:30.049408 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:30.053397 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.057393 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:48:30.060378 line       556                     i = i_j[0]
excute 13:48:30.064383 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:30.068358 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.073345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:48:30.079327 line       556                     i = i_j[0]
excute 13:48:30.083317 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:30.087308 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.090300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:48:30.094289 line       556                     i = i_j[0]
excute 13:48:30.098278 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:30.102268 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.106258 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:48:30.110245 line       556                     i = i_j[0]
excute 13:48:30.114236 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:30.117258 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.121248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:48:30.125213 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:30.128197 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:30.132186 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.137178 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:48:30.140198 line       556                     i = i_j[0]
excute 13:48:30.144156 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:30.147178 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.151168 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:48:30.155159 line       556                     i = i_j[0]
excute 13:48:30.159116 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:30.162139 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.166096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:48:30.169120 line       556                     i = i_j[0]
excute 13:48:30.173112 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:30.177099 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.181057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:48:30.184080 line       556                     i = i_j[0]
excute 13:48:30.188043 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:30.191060 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.195051 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:48:30.199010 line       556                     i = i_j[0]
excute 13:48:30.203002 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:30.205991 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.211977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:48:30.214965 line       556                     i = i_j[0]
excute 13:48:30.218966 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:30.221946 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.225936 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:48:30.228928 line       556                     i = i_j[0]
excute 13:48:30.232917 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:30.236906 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.240899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:48:30.244885 line       556                     i = i_j[0]
excute 13:48:30.248876 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:30.253863 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.258848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 1)
excute 13:48:30.262838 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:30.267824 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:30.271817 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.275837 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:30.278795 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:30.282783 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:30.286773 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.290763 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:30.293786 line       556                     i = i_j[0]
excute 13:48:30.297776 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:30.301733 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.304758 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:48:30.308750 line       556                     i = i_j[0]
excute 13:48:30.312707 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:30.316726 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.320690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:30.324673 line       556                     i = i_j[0]
excute 13:48:30.331656 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:30.338636 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.343631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:30.346615 line       556                     i = i_j[0]
excute 13:48:30.351601 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:30.355591 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.363570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:30.368555 line       556                     i = i_j[0]
excute 13:48:30.372546 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:30.377531 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.381523 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:30.385512 line       556                     i = i_j[0]
excute 13:48:30.390496 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:30.393490 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.398476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:30.401468 line       556                     i = i_j[0]
excute 13:48:30.406463 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:30.409448 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.413438 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 1)
excute 13:48:30.418425 line       556                     i = i_j[0]
excute 13:48:30.421413 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:30.425408 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.428394 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 140
excute 13:48:30.432384 line       560                         if (t_tmp > self.TIME):
excute 13:48:30.435376 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:30.439365 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 151
excute 13:48:30.442357 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:30.446348 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:30.451334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 8, 0)
excute 13:48:30.454325 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:30.462307 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:30.466296 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.486704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 8, 0)
excute 13:48:30.490728 line       556                     i = i_j[0]
excute 13:48:30.494687 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:30.497709 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.501669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 8, 0)
excute 13:48:30.504693 line       556                     i = i_j[0]
excute 13:48:30.508650 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:30.512672 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.516628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 8, 0)
excute 13:48:30.521614 line       556                     i = i_j[0]
excute 13:48:30.524606 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:30.528595 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.532587 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 8, 0)
excute 13:48:30.535576 line       556                     i = i_j[0]
excute 13:48:30.539566 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:30.542558 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.546547 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 8, 0)
excute 13:48:30.550540 line       556                     i = i_j[0]
excute 13:48:30.554560 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:30.557549 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.561513 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 8, 0)
excute 13:48:30.564531 line       556                     i = i_j[0]
excute 13:48:30.568523 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:30.572481 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.577465 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 8, 0)
excute 13:48:30.580456 line       556                     i = i_j[0]
excute 13:48:30.584446 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:30.588434 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.591427 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 8, 1)
excute 13:48:30.595416 line       556                     i = i_j[0]
excute 13:48:30.599406 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:30.602397 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:30.606387 line       555                 for i_j in i_j_list:
excute 13:48:30.609379 line       581             self.write_matrix(
excute 13:48:30.612371 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:30.615363 line       583                 result_file_path,
excute 13:48:30.619352 line       584                 mode='a'
excute 13:48:30.626350 line       488         for t in time_steps:
excute Modified var:.. t = 130
excute 13:48:30.631352 line       489             if (t != self.TIME + 1):
excute 13:48:30.637305 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:30.641295 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:30.645286 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:30.649275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:30.654260 line       494                         if (i == j):
excute 13:48:30.658249 line       495                             continue
excute 13:48:30.662240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:30.668257 line       494                         if (i == j):
excute 13:48:30.673243 line       496                         i_j_list.append((
excute 13:48:30.678228 line       497                             i, j,
excute 13:48:30.685177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.696148 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:48:30.706123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:30.710144 line       494                         if (i == j):
excute 13:48:30.715128 line       496                         i_j_list.append((
excute 13:48:30.718091 line       497                             i, j,
excute 13:48:30.722078 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.729097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:48:30.733056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:30.739034 line       494                         if (i == j):
excute 13:48:30.745049 line       496                         i_j_list.append((
excute 13:48:30.751032 line       497                             i, j,
excute 13:48:30.755990 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.761971 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0)]
excute 13:48:30.764963 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:30.768953 line       494                         if (i == j):
excute 13:48:30.773939 line       496                         i_j_list.append((
excute 13:48:30.779955 line       497                             i, j,
excute 13:48:30.783921 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.786905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0)]
excute 13:48:30.790894 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:30.794883 line       494                         if (i == j):
excute 13:48:30.798873 line       496                         i_j_list.append((
excute 13:48:30.801865 line       497                             i, j,
excute 13:48:30.805854 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.808845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:48:30.811838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:30.815827 line       494                         if (i == j):
excute 13:48:30.819819 line       496                         i_j_list.append((
excute 13:48:30.823807 line       497                             i, j,
excute 13:48:30.826797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.831784 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0)]
excute 13:48:30.834776 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:30.838766 line       494                         if (i == j):
excute 13:48:30.842756 line       496                         i_j_list.append((
excute 13:48:30.845747 line       497                             i, j,
excute 13:48:30.848739 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.851731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:48:30.855721 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:30.859710 line       494                         if (i == j):
excute 13:48:30.862701 line       496                         i_j_list.append((
excute 13:48:30.865694 line       497                             i, j,
excute 13:48:30.869683 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.872675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:48:30.875667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:30.879656 line       494                         if (i == j):
excute 13:48:30.883648 line       496                         i_j_list.append((
excute 13:48:30.887636 line       497                             i, j,
excute 13:48:30.890628 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.894617 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:48:30.897608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:30.900600 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:30.904590 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:30.909579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:30.913567 line       494                         if (i == j):
excute 13:48:30.916558 line       496                         i_j_list.append((
excute 13:48:30.920548 line       497                             i, j,
excute 13:48:30.923539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.926531 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0)]
excute 13:48:30.930521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:30.934510 line       494                         if (i == j):
excute 13:48:30.938499 line       495                             continue
excute 13:48:30.942489 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:30.945481 line       494                         if (i == j):
excute 13:48:30.950467 line       496                         i_j_list.append((
excute 13:48:30.953459 line       497                             i, j,
excute 13:48:30.957448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.961439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:48:30.967422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:30.972410 line       494                         if (i == j):
excute 13:48:30.975401 line       496                         i_j_list.append((
excute 13:48:30.979390 line       497                             i, j,
excute 13:48:30.982382 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:30.986373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:48:30.989365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:30.993353 line       494                         if (i == j):
excute 13:48:30.997343 line       496                         i_j_list.append((
excute 13:48:31.000367 line       497                             i, j,
excute 13:48:31.004355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.007349 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:48:31.011336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:31.015306 line       494                         if (i == j):
excute 13:48:31.018320 line       496                         i_j_list.append((
excute 13:48:31.022307 line       497                             i, j,
excute 13:48:31.025300 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.028290 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:48:31.032280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:31.038233 line       494                         if (i == j):
excute 13:48:31.042223 line       496                         i_j_list.append((
excute 13:48:31.045214 line       497                             i, j,
excute 13:48:31.048206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.052195 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0)]
excute 13:48:31.055188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:31.059176 line       494                         if (i == j):
excute 13:48:31.063166 line       496                         i_j_list.append((
excute 13:48:31.066158 line       497                             i, j,
excute 13:48:31.070148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.073141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:48:31.077129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:31.080123 line       494                         if (i == j):
excute 13:48:31.085141 line       496                         i_j_list.append((
excute 13:48:31.088131 line       497                             i, j,
excute 13:48:31.092120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.095114 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:48:31.099102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:31.103069 line       494                         if (i == j):
excute 13:48:31.107081 line       496                         i_j_list.append((
excute 13:48:31.110072 line       497                             i, j,
excute 13:48:31.113064 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.117054 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:48:31.120046 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:31.124006 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:31.127030 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:31.131016 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:31.135009 line       494                         if (i == j):
excute 13:48:31.139964 line       496                         i_j_list.append((
excute 13:48:31.142953 line       497                             i, j,
excute 13:48:31.145945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.149933 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:48:31.152926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:31.156917 line       494                         if (i == j):
excute 13:48:31.161903 line       496                         i_j_list.append((
excute 13:48:31.166889 line       497                             i, j,
excute 13:48:31.173882 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.176865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:48:31.183844 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:31.187859 line       494                         if (i == j):
excute 13:48:31.191824 line       495                             continue
excute 13:48:31.194846 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:31.198837 line       494                         if (i == j):
excute 13:48:31.202794 line       496                         i_j_list.append((
excute 13:48:31.205817 line       497                             i, j,
excute 13:48:31.208808 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.212797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:48:31.215790 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:31.219783 line       494                         if (i == j):
excute 13:48:31.223739 line       496                         i_j_list.append((
excute 13:48:31.226760 line       497                             i, j,
excute 13:48:31.230752 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.233744 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:48:31.236734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:31.241691 line       494                         if (i == j):
excute 13:48:31.245679 line       496                         i_j_list.append((
excute 13:48:31.248704 line       497                             i, j,
excute 13:48:31.252692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.257647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:48:31.264628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:31.268618 line       494                         if (i == j):
excute 13:48:31.272608 line       496                         i_j_list.append((
excute 13:48:31.276597 line       497                             i, j,
excute 13:48:31.279619 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.282610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:48:31.286604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:31.290560 line       494                         if (i == j):
excute 13:48:31.293582 line       496                         i_j_list.append((
excute 13:48:31.297574 line       497                             i, j,
excute 13:48:31.300563 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.303555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:31.307531 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:31.310538 line       494                         if (i == j):
excute 13:48:31.314525 line       496                         i_j_list.append((
excute 13:48:31.318484 line       497                             i, j,
excute 13:48:31.321510 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.325491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:31.332450 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:31.348405 line       494                         if (i == j):
excute 13:48:31.357380 line       496                         i_j_list.append((
excute 13:48:31.364367 line       497                             i, j,
excute 13:48:31.368355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.374337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:31.379353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:31.384347 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:31.389296 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:31.395281 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:31.399269 line       494                         if (i == j):
excute 13:48:31.407247 line       496                         i_j_list.append((
excute 13:48:31.412265 line       497                             i, j,
excute 13:48:31.416223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.420214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0)]
excute 13:48:31.425198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:31.430185 line       494                         if (i == j):
excute 13:48:31.441157 line       496                         i_j_list.append((
excute 13:48:31.451131 line       497                             i, j,
excute 13:48:31.455122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.464097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0)]
excute 13:48:31.467088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:31.473072 line       494                         if (i == j):
excute 13:48:31.482049 line       496                         i_j_list.append((
excute 13:48:31.490025 line       497                             i, j,
excute 13:48:31.498005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.504986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0)]
excute 13:48:31.513963 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:31.519955 line       494                         if (i == j):
excute 13:48:31.528923 line       495                             continue
excute 13:48:31.533909 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:31.538896 line       494                         if (i == j):
excute 13:48:31.545876 line       496                         i_j_list.append((
excute 13:48:31.551862 line       497                             i, j,
excute 13:48:31.559839 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.565828 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0)]
excute 13:48:31.571807 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:31.579787 line       494                         if (i == j):
excute 13:48:31.585769 line       496                         i_j_list.append((
excute 13:48:31.590758 line       497                             i, j,
excute 13:48:31.596740 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.600729 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0)]
excute 13:48:31.606714 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:31.611701 line       494                         if (i == j):
excute 13:48:31.620677 line       496                         i_j_list.append((
excute 13:48:31.626661 line       497                             i, j,
excute 13:48:31.631647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.637631 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0)]
excute 13:48:31.643614 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:31.651596 line       494                         if (i == j):
excute 13:48:31.660570 line       496                         i_j_list.append((
excute 13:48:31.668550 line       497                             i, j,
excute 13:48:31.676527 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.684505 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0)]
excute 13:48:31.691486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:31.699468 line       494                         if (i == j):
excute 13:48:31.706447 line       496                         i_j_list.append((
excute 13:48:31.712430 line       497                             i, j,
excute 13:48:31.719412 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.727391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0)]
excute 13:48:31.733375 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:31.742352 line       494                         if (i == j):
excute 13:48:31.748335 line       496                         i_j_list.append((
excute 13:48:31.756314 line       497                             i, j,
excute 13:48:31.764293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.771274 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0)]
excute 13:48:31.777257 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:31.784239 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:31.792217 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:31.799199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:31.803189 line       494                         if (i == j):
excute 13:48:31.807178 line       496                         i_j_list.append((
excute 13:48:31.811167 line       497                             i, j,
excute 13:48:31.817150 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.822139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0)]
excute 13:48:31.826129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:31.830117 line       494                         if (i == j):
excute 13:48:31.836099 line       496                         i_j_list.append((
excute 13:48:31.841087 line       497                             i, j,
excute 13:48:31.845077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.848068 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:48:31.852058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:31.856048 line       494                         if (i == j):
excute 13:48:31.861034 line       496                         i_j_list.append((
excute 13:48:31.865022 line       497                             i, j,
excute 13:48:31.868014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.872004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:48:31.874995 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:31.878990 line       494                         if (i == j):
excute 13:48:31.882976 line       496                         i_j_list.append((
excute 13:48:31.885967 line       497                             i, j,
excute 13:48:31.889955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.892948 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:48:31.896938 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:31.899928 line       494                         if (i == j):
excute 13:48:31.903918 line       495                             continue
excute 13:48:31.907908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:31.910900 line       494                         if (i == j):
excute 13:48:31.914890 line       496                         i_j_list.append((
excute 13:48:31.917881 line       497                             i, j,
excute 13:48:31.921871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.924862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:48:31.927855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:31.931844 line       494                         if (i == j):
excute 13:48:31.935834 line       496                         i_j_list.append((
excute 13:48:31.938825 line       497                             i, j,
excute 13:48:31.942815 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.945806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:48:31.949796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:31.953786 line       494                         if (i == j):
excute 13:48:31.958773 line       496                         i_j_list.append((
excute 13:48:31.961795 line       497                             i, j,
excute 13:48:31.966782 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.970771 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:48:31.975727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:31.979715 line       494                         if (i == j):
excute 13:48:31.984705 line       496                         i_j_list.append((
excute 13:48:31.988694 line       497                             i, j,
excute 13:48:31.993680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:31.997700 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:48:32.001689 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:32.004683 line       494                         if (i == j):
excute 13:48:32.009638 line       496                         i_j_list.append((
excute 13:48:32.013626 line       497                             i, j,
excute 13:48:32.017618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.021604 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:48:32.025593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:32.030580 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:32.035570 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:32.039590 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:32.043577 line       494                         if (i == j):
excute 13:48:32.047543 line       496                         i_j_list.append((
excute 13:48:32.050558 line       497                             i, j,
excute 13:48:32.054517 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.057539 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0)]
excute 13:48:32.061529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:32.065490 line       494                         if (i == j):
excute 13:48:32.072469 line       496                         i_j_list.append((
excute 13:48:32.078453 line       497                             i, j,
excute 13:48:32.082474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.085466 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:48:32.089459 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:32.093442 line       494                         if (i == j):
excute 13:48:32.097435 line       496                         i_j_list.append((
excute 13:48:32.100427 line       497                             i, j,
excute 13:48:32.103419 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.107406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:48:32.110398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:32.114357 line       494                         if (i == j):
excute 13:48:32.118351 line       496                         i_j_list.append((
excute 13:48:32.121368 line       497                             i, j,
excute 13:48:32.125329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.132308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:48:32.136299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:32.140288 line       494                         if (i == j):
excute 13:48:32.145274 line       496                         i_j_list.append((
excute 13:48:32.148266 line       497                             i, j,
excute 13:48:32.152286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.155279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:48:32.159270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:32.163239 line       494                         if (i == j):
excute 13:48:32.166248 line       495                             continue
excute 13:48:32.171207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:32.174228 line       494                         if (i == j):
excute 13:48:32.178186 line       496                         i_j_list.append((
excute 13:48:32.181209 line       497                             i, j,
excute 13:48:32.185199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.188193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:48:32.191184 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:32.195171 line       494                         if (i == j):
excute 13:48:32.200128 line       496                         i_j_list.append((
excute 13:48:32.203150 line       497                             i, j,
excute 13:48:32.206142 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.210116 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:48:32.213123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:32.217082 line       494                         if (i == j):
excute 13:48:32.221102 line       496                         i_j_list.append((
excute 13:48:32.224095 line       497                             i, j,
excute 13:48:32.227086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.231078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:48:32.234068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:32.238026 line       494                         if (i == j):
excute 13:48:32.244010 line       496                         i_j_list.append((
excute 13:48:32.247999 line       497                             i, j,
excute 13:48:32.254982 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.259002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:48:32.262960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:32.266950 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:32.270973 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:32.275926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:32.279915 line       494                         if (i == j):
excute 13:48:32.283938 line       496                         i_j_list.append((
excute 13:48:32.288890 line       497                             i, j,
excute 13:48:32.293877 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.297898 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0)]
excute 13:48:32.301886 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:32.305879 line       494                         if (i == j):
excute 13:48:32.310832 line       496                         i_j_list.append((
excute 13:48:32.315817 line       497                             i, j,
excute 13:48:32.320811 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.325792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0)]
excute 13:48:32.330780 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:32.342745 line       494                         if (i == j):
excute 13:48:32.349729 line       496                         i_j_list.append((
excute 13:48:32.357708 line       497                             i, j,
excute 13:48:32.360730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.364719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0)]
excute 13:48:32.367710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:32.372700 line       494                         if (i == j):
excute 13:48:32.378651 line       496                         i_j_list.append((
excute 13:48:32.382646 line       497                             i, j,
excute 13:48:32.385663 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.390620 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0)]
excute 13:48:32.393610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:32.397598 line       494                         if (i == j):
excute 13:48:32.401597 line       496                         i_j_list.append((
excute 13:48:32.404580 line       497                             i, j,
excute 13:48:32.408569 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.412560 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0)]
excute 13:48:32.415550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:32.419539 line       494                         if (i == j):
excute 13:48:32.423529 line       496                         i_j_list.append((
excute 13:48:32.427519 line       497                             i, j,
excute 13:48:32.430511 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.433503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0)]
excute 13:48:32.437492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:32.441481 line       494                         if (i == j):
excute 13:48:32.445471 line       495                             continue
excute 13:48:32.450458 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:32.454447 line       494                         if (i == j):
excute 13:48:32.458449 line       496                         i_j_list.append((
excute 13:48:32.463424 line       497                             i, j,
excute 13:48:32.468410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.472398 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0)]
excute 13:48:32.476388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:32.481375 line       494                         if (i == j):
excute 13:48:32.484366 line       496                         i_j_list.append((
excute 13:48:32.488357 line       497                             i, j,
excute 13:48:32.492345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.495337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:48:32.499326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:32.503316 line       494                         if (i == j):
excute 13:48:32.507306 line       496                         i_j_list.append((
excute 13:48:32.510297 line       497                             i, j,
excute 13:48:32.513289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.517279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:48:32.520270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:32.524261 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:32.527252 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:32.531241 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:32.534233 line       494                         if (i == j):
excute 13:48:32.538223 line       496                         i_j_list.append((
excute 13:48:32.541214 line       497                             i, j,
excute 13:48:32.545204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.548196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0)]
excute 13:48:32.551188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:32.556175 line       494                         if (i == j):
excute 13:48:32.560164 line       496                         i_j_list.append((
excute 13:48:32.563156 line       497                             i, j,
excute 13:48:32.567145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.570137 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:48:32.574127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:32.578116 line       494                         if (i == j):
excute 13:48:32.583105 line       496                         i_j_list.append((
excute 13:48:32.587093 line       497                             i, j,
excute 13:48:32.590084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.593076 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:32.597075 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:32.601055 line       494                         if (i == j):
excute 13:48:32.604046 line       496                         i_j_list.append((
excute 13:48:32.608036 line       497                             i, j,
excute 13:48:32.611028 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.614020 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:48:32.618010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:32.621999 line       494                         if (i == j):
excute 13:48:32.625989 line       496                         i_j_list.append((
excute 13:48:32.628981 line       497                             i, j,
excute 13:48:32.632969 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.635961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:48:32.639950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:32.643941 line       494                         if (i == j):
excute 13:48:32.646931 line       496                         i_j_list.append((
excute 13:48:32.650922 line       497                             i, j,
excute 13:48:32.653948 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.657904 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:48:32.660926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:32.664885 line       494                         if (i == j):
excute 13:48:32.668906 line       496                         i_j_list.append((
excute 13:48:32.672895 line       497                             i, j,
excute 13:48:32.675887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.679876 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:48:32.682870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:32.688822 line       494                         if (i == j):
excute 13:48:32.692810 line       495                             continue
excute 13:48:32.695801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:32.699791 line       494                         if (i == j):
excute 13:48:32.703780 line       496                         i_j_list.append((
excute 13:48:32.706772 line       497                             i, j,
excute 13:48:32.710761 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.714785 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:48:32.717777 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:32.721766 line       494                         if (i == j):
excute 13:48:32.725721 line       496                         i_j_list.append((
excute 13:48:32.728745 line       497                             i, j,
excute 13:48:32.732735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.735726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:32.739684 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:32.743675 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:32.746699 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:32.750656 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:32.754646 line       494                         if (i == j):
excute 13:48:32.758641 line       496                         i_j_list.append((
excute 13:48:32.761658 line       497                             i, j,
excute 13:48:32.765616 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.768638 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:32.771631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:32.775590 line       494                         if (i == j):
excute 13:48:32.779609 line       496                         i_j_list.append((
excute 13:48:32.783598 line       497                             i, j,
excute 13:48:32.787574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.792575 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:48:32.795566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:32.799556 line       494                         if (i == j):
excute 13:48:32.803514 line       496                         i_j_list.append((
excute 13:48:32.806537 line       497                             i, j,
excute 13:48:32.810529 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.813521 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:32.817508 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:32.821500 line       494                         if (i == j):
excute 13:48:32.825456 line       496                         i_j_list.append((
excute 13:48:32.828478 line       497                             i, j,
excute 13:48:32.832437 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.835460 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:48:32.839418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:32.843413 line       494                         if (i == j):
excute 13:48:32.847398 line       496                         i_j_list.append((
excute 13:48:32.850422 line       497                             i, j,
excute 13:48:32.854396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.857401 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:48:32.861393 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:32.865349 line       494                         if (i == j):
excute 13:48:32.869339 line       496                         i_j_list.append((
excute 13:48:32.872361 line       497                             i, j,
excute 13:48:32.875354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.879342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:48:32.882337 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:32.887302 line       494                         if (i == j):
excute 13:48:32.891300 line       496                         i_j_list.append((
excute 13:48:32.895300 line       497                             i, j,
excute 13:48:32.898294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.902283 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:48:32.905273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:32.909231 line       494                         if (i == j):
excute 13:48:32.913224 line       496                         i_j_list.append((
excute 13:48:32.916243 line       497                             i, j,
excute 13:48:32.920234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.923225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:32.927183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:32.930213 line       494                         if (i == j):
excute 13:48:32.934198 line       495                             continue
excute 13:48:32.938187 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:32.941181 line       494                         if (i == j):
excute 13:48:32.945136 line       496                         i_j_list.append((
excute 13:48:32.951121 line       497                             i, j,
excute 13:48:32.957104 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:32.961094 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:32.969071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:32.974059 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:32.977081 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:32.981073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:32.985060 line       494                         if (i == j):
excute 13:48:32.989052 line       496                         i_j_list.append((
excute 13:48:32.993006 line       497                             i, j,
excute 13:48:32.996998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:33.000020 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0)]
excute 13:48:33.004010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:33.007968 line       494                         if (i == j):
excute 13:48:33.011957 line       496                         i_j_list.append((
excute 13:48:33.014980 line       497                             i, j,
excute 13:48:33.018969 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:33.021961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0)]
excute 13:48:33.025933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:33.028944 line       494                         if (i == j):
excute 13:48:33.032932 line       496                         i_j_list.append((
excute 13:48:33.036925 line       497                             i, j,
excute 13:48:33.039914 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:33.043903 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0)]
excute 13:48:33.046864 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:33.054843 line       494                         if (i == j):
excute 13:48:33.059828 line       496                         i_j_list.append((
excute 13:48:33.062820 line       497                             i, j,
excute 13:48:33.066809 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:33.069801 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0)]
excute 13:48:33.073795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:33.078779 line       494                         if (i == j):
excute 13:48:33.081803 line       496                         i_j_list.append((
excute 13:48:33.085795 line       497                             i, j,
excute 13:48:33.088787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:33.092776 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0)]
excute 13:48:33.095769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:33.101717 line       494                         if (i == j):
excute 13:48:33.105707 line       496                         i_j_list.append((
excute 13:48:33.108737 line       497                             i, j,
excute 13:48:33.112724 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:33.115715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0)]
excute 13:48:33.119668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:33.122697 line       494                         if (i == j):
excute 13:48:33.126689 line       496                         i_j_list.append((
excute 13:48:33.130679 line       497                             i, j,
excute 13:48:33.134669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:33.137654 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0)]
excute 13:48:33.141646 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:33.145614 line       494                         if (i == j):
excute 13:48:33.149590 line       496                         i_j_list.append((
excute 13:48:33.152621 line       497                             i, j,
excute 13:48:33.156609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:33.159598 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0)]
excute 13:48:33.163588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:33.167542 line       494                         if (i == j):
excute 13:48:33.170569 line       496                         i_j_list.append((
excute 13:48:33.174561 line       497                             i, j,
excute 13:48:33.177548 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:33.181512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0)]
excute 13:48:33.184527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:33.188485 line       494                         if (i == j):
excute 13:48:33.192474 line       495                             continue
excute 13:48:33.197461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:33.204443 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:33.208463 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0)]
excute 13:48:33.211454 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:33.215445 line       505                     if (self.RELOCATE):
excute 13:48:33.219433 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:33.223422 line       505                     if (self.RELOCATE):
excute 13:48:33.227413 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:33.230404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:48:33.234362 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:33.237385 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:33.241377 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.245364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:33.249326 line       556                     i = i_j[0]
excute 13:48:33.253312 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:33.256335 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.261305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 0)
excute 13:48:33.264313 line       556                     i = i_j[0]
excute 13:48:33.268272 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:33.271294 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.276251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:33.279273 line       556                     i = i_j[0]
excute 13:48:33.283262 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:33.287252 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.291242 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:33.294233 line       556                     i = i_j[0]
excute 13:48:33.298224 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:33.302183 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.307168 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:33.311157 line       556                     i = i_j[0]
excute 13:48:33.314148 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:33.318137 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.322127 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:33.325151 line       556                     i = i_j[0]
excute 13:48:33.334097 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:33.338085 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.344070 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:33.347062 line       556                     i = i_j[0]
excute 13:48:33.351049 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:33.356036 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.360025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:33.363018 line       556                     i = i_j[0]
excute 13:48:33.367007 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:33.370996 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.374987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:48:33.378009 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:33.382000 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:33.386954 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.390952 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 0)
excute 13:48:33.393966 line       556                     i = i_j[0]
excute 13:48:33.397937 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:33.401915 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.404937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 0)
excute 13:48:33.409893 line       556                     i = i_j[0]
excute 13:48:33.413882 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:33.416873 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.420864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 0)
excute 13:48:33.423854 line       556                     i = i_j[0]
excute 13:48:33.427844 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:33.430837 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.434826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:48:33.438814 line       556                     i = i_j[0]
excute 13:48:33.442805 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:33.445796 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.450784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 0)
excute 13:48:33.453807 line       556                     i = i_j[0]
excute 13:48:33.457796 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:33.461786 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.465775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:48:33.468766 line       556                     i = i_j[0]
excute 13:48:33.472759 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:33.476745 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.480710 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:48:33.483729 line       556                     i = i_j[0]
excute 13:48:33.487685 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:33.490708 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.494698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:48:33.498689 line       556                     i = i_j[0]
excute 13:48:33.501678 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:33.505669 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.510628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:33.514615 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:33.518602 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:33.522608 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.525582 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:33.529572 line       556                     i = i_j[0]
excute 13:48:33.533594 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:33.536587 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.540545 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:33.543567 line       556                     i = i_j[0]
excute 13:48:33.547558 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:33.551544 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.555539 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:48:33.558526 line       556                     i = i_j[0]
excute 13:48:33.562487 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:33.565508 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.569497 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:33.573458 line       556                     i = i_j[0]
excute 13:48:33.579439 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:33.583430 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.587420 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:33.591409 line       556                     i = i_j[0]
excute 13:48:33.595399 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:33.599387 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.602411 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:33.606398 line       556                     i = i_j[0]
excute 13:48:33.610357 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:33.614347 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.619333 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:33.622324 line       556                     i = i_j[0]
excute 13:48:33.626314 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:33.629306 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.633295 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:33.637284 line       556                     i = i_j[0]
excute 13:48:33.641274 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:33.644266 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.648255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:48:33.652244 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:33.656234 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:33.660223 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.664213 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:48:33.667204 line       556                     i = i_j[0]
excute 13:48:33.671194 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:33.674186 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.678189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:48:33.682164 line       556                     i = i_j[0]
excute 13:48:33.686155 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:33.690145 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.694135 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:48:33.698155 line       556                     i = i_j[0]
excute 13:48:33.702124 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:33.705136 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.709093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:48:33.713114 line       556                     i = i_j[0]
excute 13:48:33.717103 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:33.721063 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.725049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:48:33.729039 line       556                     i = i_j[0]
excute 13:48:33.733029 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:33.736020 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.740010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:48:33.743002 line       556                     i = i_j[0]
excute 13:48:33.746991 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:33.749983 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.753973 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:48:33.757961 line       556                     i = i_j[0]
excute 13:48:33.761983 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:33.765972 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.769931 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:48:33.772921 line       556                     i = i_j[0]
excute 13:48:33.776913 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:33.779937 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.783926 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:33.787914 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:33.791872 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:33.795878 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.798890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:33.802876 line       556                     i = i_j[0]
excute 13:48:33.806868 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:33.809856 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.813813 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:33.816836 line       556                     i = i_j[0]
excute 13:48:33.822823 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:33.826780 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.829770 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:48:33.833759 line       556                     i = i_j[0]
excute 13:48:33.837748 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:33.841738 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.844729 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:33.848719 line       556                     i = i_j[0]
excute 13:48:33.852709 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:33.855702 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.859689 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:33.863679 line       556                     i = i_j[0]
excute 13:48:33.867669 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:33.870692 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.874651 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:33.877674 line       556                     i = i_j[0]
excute 13:48:33.881664 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:33.885653 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.889611 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:33.892633 line       556                     i = i_j[0]
excute 13:48:33.896593 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:33.899614 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.903606 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:33.907594 line       556                     i = i_j[0]
excute 13:48:33.911587 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:33.914577 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.918543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 0, 0)
excute 13:48:33.922558 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:33.926511 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:33.930500 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.934489 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 0, 0)
excute 13:48:33.938479 line       556                     i = i_j[0]
excute 13:48:33.941504 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:33.945493 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.950448 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 0, 0)
excute 13:48:33.953439 line       556                     i = i_j[0]
excute 13:48:33.958426 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:33.962416 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.969398 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 0, 0)
excute 13:48:33.973419 line       556                     i = i_j[0]
excute 13:48:33.977376 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:33.981365 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:33.985355 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 0, 0)
excute 13:48:33.988378 line       556                     i = i_j[0]
excute 13:48:33.993334 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:33.996356 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.000315 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 0, 0)
excute 13:48:34.004303 line       556                     i = i_j[0]
excute 13:48:34.008294 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:34.011316 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.015308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 0, 0)
excute 13:48:34.019301 line       556                     i = i_j[0]
excute 13:48:34.023288 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:34.027244 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.031233 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 0, 0)
excute 13:48:34.034257 line       556                     i = i_j[0]
excute 13:48:34.038244 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:34.042212 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.045225 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 0, 0)
excute 13:48:34.049214 line       556                     i = i_j[0]
excute 13:48:34.053174 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:34.057163 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.060185 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:48:34.064175 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:34.068134 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:34.072123 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.076112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:48:34.080102 line       556                     i = i_j[0]
excute 13:48:34.084090 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:34.087082 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.091071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:48:34.095060 line       556                     i = i_j[0]
excute 13:48:34.099059 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:34.102041 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.106031 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:48:34.109023 line       556                     i = i_j[0]
excute 13:48:34.113012 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:34.116005 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.119994 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:48:34.123988 line       556                     i = i_j[0]
excute 13:48:34.126975 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:34.131994 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.135983 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:48:34.139972 line       556                     i = i_j[0]
excute 13:48:34.143932 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:34.146954 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.150911 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:48:34.154933 line       556                     i = i_j[0]
excute 13:48:34.158915 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:34.161916 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.165872 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:48:34.168894 line       556                     i = i_j[0]
excute 13:48:34.172884 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:34.176867 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.179865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:48:34.183855 line       556                     i = i_j[0]
excute 13:48:34.187814 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:34.190839 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.194794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:34.198783 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:34.202775 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:34.205797 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.209788 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:34.213775 line       556                     i = i_j[0]
excute 13:48:34.217742 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:34.220756 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.224715 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:48:34.228736 line       556                     i = i_j[0]
excute 13:48:34.233691 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:34.236713 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.240703 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:34.244660 line       556                     i = i_j[0]
excute 13:48:34.247684 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:34.251674 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.255633 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:34.259621 line       556                     i = i_j[0]
excute 13:48:34.263610 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:34.266602 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.271590 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:34.275578 line       556                     i = i_j[0]
excute 13:48:34.282584 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:34.290538 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.294531 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:34.298518 line       556                     i = i_j[0]
excute 13:48:34.304533 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:34.308522 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.312480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:34.315471 line       556                     i = i_j[0]
excute 13:48:34.319460 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:34.323450 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.331431 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:34.342436 line       556                     i = i_j[0]
excute 13:48:34.346408 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:34.349413 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.353371 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:48:34.358359 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:34.362347 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:34.366336 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.371325 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:48:34.375312 line       556                     i = i_j[0]
excute 13:48:34.384314 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:34.388279 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.392299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:48:34.396292 line       556                     i = i_j[0]
excute 13:48:34.400246 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:34.404235 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.407226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:48:34.411215 line       556                     i = i_j[0]
excute 13:48:34.415205 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:34.418228 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.422220 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:48:34.426207 line       556                     i = i_j[0]
excute 13:48:34.430200 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:34.433191 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.437147 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:48:34.441137 line       556                     i = i_j[0]
excute 13:48:34.445125 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:34.449117 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.453135 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:48:34.457127 line       556                     i = i_j[0]
excute 13:48:34.461085 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:34.465072 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.468095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:48:34.472084 line       556                     i = i_j[0]
excute 13:48:34.476043 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:34.479066 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.483055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:48:34.487045 line       556                     i = i_j[0]
excute 13:48:34.491035 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:34.494028 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.497984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 8, 0)
excute 13:48:34.501007 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:34.504999 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:34.508986 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.513942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 8, 0)
excute 13:48:34.516932 line       556                     i = i_j[0]
excute 13:48:34.520925 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:34.523914 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.527912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 8, 0)
excute 13:48:34.530895 line       556                     i = i_j[0]
excute 13:48:34.534884 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:34.537877 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.542865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 8, 0)
excute 13:48:34.546886 line       556                     i = i_j[0]
excute 13:48:34.550843 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:34.554832 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.558821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 8, 0)
excute 13:48:34.572013 line       556                     i = i_j[0]
excute 13:48:34.577030 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:34.580020 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.584012 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 8, 0)
excute 13:48:34.588000 line       556                     i = i_j[0]
excute 13:48:34.591959 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:34.594983 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.598939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 8, 0)
excute 13:48:34.601962 line       556                     i = i_j[0]
excute 13:48:34.605951 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:34.608943 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.612932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 8, 0)
excute 13:48:34.616893 line       556                     i = i_j[0]
excute 13:48:34.620913 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:34.624897 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.628859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 8, 0)
excute 13:48:34.631884 line       556                     i = i_j[0]
excute 13:48:34.636837 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:34.639829 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:34.643818 line       555                 for i_j in i_j_list:
excute 13:48:34.648837 line       581             self.write_matrix(
excute 13:48:34.652826 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:34.655821 line       583                 result_file_path,
excute 13:48:34.659808 line       584                 mode='a'
excute 13:48:34.667756 line       488         for t in time_steps:
excute Modified var:.. t = 131
excute 13:48:34.672742 line       489             if (t != self.TIME + 1):
excute 13:48:34.678757 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:34.685707 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:34.689697 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:34.694720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:34.698675 line       494                         if (i == j):
excute 13:48:34.704687 line       495                             continue
excute 13:48:34.708645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:34.713631 line       494                         if (i == j):
excute 13:48:34.720613 line       496                         i_j_list.append((
excute 13:48:34.726597 line       497                             i, j,
excute 13:48:34.730588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:34.740569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:48:34.744551 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:34.751532 line       494                         if (i == j):
excute 13:48:34.758543 line       496                         i_j_list.append((
excute 13:48:34.765497 line       497                             i, j,
excute 13:48:34.769483 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:34.775467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:48:34.779469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:34.785474 line       494                         if (i == j):
excute 13:48:34.789464 line       496                         i_j_list.append((
excute 13:48:34.792423 line       497                             i, j,
excute 13:48:34.798437 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:34.803393 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3)]
excute 13:48:34.812376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:34.817356 line       494                         if (i == j):
excute 13:48:34.824336 line       496                         i_j_list.append((
excute 13:48:34.828326 line       497                             i, j,
excute 13:48:34.832315 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:34.835337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0)]
excute 13:48:34.839331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:34.843292 line       494                         if (i == j):
excute 13:48:34.847309 line       496                         i_j_list.append((
excute 13:48:34.850301 line       497                             i, j,
excute 13:48:34.855254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:34.858279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:48:34.861268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:34.865227 line       494                         if (i == j):
excute 13:48:34.869217 line       496                         i_j_list.append((
excute 13:48:34.872240 line       497                             i, j,
excute 13:48:34.875231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:34.879223 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0)]
excute 13:48:34.882215 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:34.886203 line       494                         if (i == j):
excute 13:48:34.890160 line       496                         i_j_list.append((
excute 13:48:34.893183 line       497                             i, j,
excute 13:48:34.896175 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:34.900165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:48:34.903159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:34.907115 line       494                         if (i == j):
excute 13:48:34.911105 line       496                         i_j_list.append((
excute 13:48:34.914130 line       497                             i, j,
excute 13:48:34.917120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:34.920111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:48:34.924102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:34.927095 line       494                         if (i == j):
excute 13:48:34.931082 line       496                         i_j_list.append((
excute 13:48:34.934074 line       497                             i, j,
excute 13:48:34.938066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:34.941055 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:48:34.944047 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:34.950998 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:34.957979 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:34.962982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:34.966956 line       494                         if (i == j):
excute 13:48:34.971944 line       496                         i_j_list.append((
excute 13:48:34.975934 line       497                             i, j,
excute 13:48:34.978955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:34.981946 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0)]
excute 13:48:34.985904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:34.988927 line       494                         if (i == j):
excute 13:48:34.992886 line       495                             continue
excute 13:48:34.995908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:34.999867 line       494                         if (i == j):
excute 13:48:35.002890 line       496                         i_j_list.append((
excute 13:48:35.006849 line       497                             i, j,
excute 13:48:35.009874 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.013831 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:48:35.017820 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:35.020842 line       494                         if (i == j):
excute 13:48:35.024801 line       496                         i_j_list.append((
excute 13:48:35.027823 line       497                             i, j,
excute 13:48:35.030817 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.034806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3)]
excute 13:48:35.037796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:35.041755 line       494                         if (i == j):
excute 13:48:35.045745 line       496                         i_j_list.append((
excute 13:48:35.048768 line       497                             i, j,
excute 13:48:35.051759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.055749 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0)]
excute 13:48:35.059710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:35.063696 line       494                         if (i == j):
excute 13:48:35.067695 line       496                         i_j_list.append((
excute 13:48:35.070677 line       497                             i, j,
excute 13:48:35.074666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.077658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:48:35.080650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:35.085639 line       494                         if (i == j):
excute 13:48:35.088662 line       496                         i_j_list.append((
excute 13:48:35.092650 line       497                             i, j,
excute 13:48:35.095642 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.098634 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0)]
excute 13:48:35.102593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:35.105618 line       494                         if (i == j):
excute 13:48:35.109574 line       496                         i_j_list.append((
excute 13:48:35.112598 line       497                             i, j,
excute 13:48:35.116587 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.119578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:48:35.122571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:35.126527 line       494                         if (i == j):
excute 13:48:35.130517 line       496                         i_j_list.append((
excute 13:48:35.133509 line       497                             i, j,
excute 13:48:35.137498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.140490 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:48:35.143482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:35.147471 line       494                         if (i == j):
excute 13:48:35.151460 line       496                         i_j_list.append((
excute 13:48:35.155451 line       497                             i, j,
excute 13:48:35.158442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.163432 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:48:35.166423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:35.170410 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:35.173402 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:35.177391 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:35.180383 line       494                         if (i == j):
excute 13:48:35.184375 line       496                         i_j_list.append((
excute 13:48:35.188365 line       497                             i, j,
excute 13:48:35.191387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.195343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:48:35.198371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:35.202326 line       494                         if (i == j):
excute 13:48:35.206314 line       496                         i_j_list.append((
excute 13:48:35.209345 line       497                             i, j,
excute 13:48:35.212330 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.216300 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:48:35.219312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:35.223270 line       494                         if (i == j):
excute 13:48:35.227292 line       495                             continue
excute 13:48:35.230285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:35.233276 line       494                         if (i == j):
excute 13:48:35.237232 line       496                         i_j_list.append((
excute 13:48:35.240255 line       497                             i, j,
excute 13:48:35.244216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.247237 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3)]
excute 13:48:35.250229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:35.255188 line       494                         if (i == j):
excute 13:48:35.258176 line       496                         i_j_list.append((
excute 13:48:35.262165 line       497                             i, j,
excute 13:48:35.267151 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.270144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0)]
excute 13:48:35.273136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:35.278123 line       494                         if (i == j):
excute 13:48:35.282123 line       496                         i_j_list.append((
excute 13:48:35.285136 line       497                             i, j,
excute 13:48:35.288127 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.291120 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:48:35.295108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:35.298100 line       494                         if (i == j):
excute 13:48:35.302092 line       496                         i_j_list.append((
excute 13:48:35.306081 line       497                             i, j,
excute 13:48:35.309072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.312062 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:48:35.316022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:35.320010 line       494                         if (i == j):
excute 13:48:35.324003 line       496                         i_j_list.append((
excute 13:48:35.330983 line       497                             i, j,
excute 13:48:35.337967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.342981 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:35.345973 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:35.349931 line       494                         if (i == j):
excute 13:48:35.353957 line       496                         i_j_list.append((
excute 13:48:35.357944 line       497                             i, j,
excute 13:48:35.360935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.364922 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:35.368881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:35.373867 line       494                         if (i == j):
excute 13:48:35.377856 line       496                         i_j_list.append((
excute 13:48:35.380848 line       497                             i, j,
excute 13:48:35.384838 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.387829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:35.391820 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:35.394810 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:35.397803 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:35.401791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:35.405781 line       494                         if (i == j):
excute 13:48:35.408773 line       496                         i_j_list.append((
excute 13:48:35.412762 line       497                             i, j,
excute 13:48:35.415754 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.419745 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0)]
excute 13:48:35.422736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:35.425727 line       494                         if (i == j):
excute 13:48:35.429717 line       496                         i_j_list.append((
excute 13:48:35.433739 line       497                             i, j,
excute 13:48:35.436731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.439723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0)]
excute 13:48:35.443680 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:35.447702 line       494                         if (i == j):
excute 13:48:35.451659 line       496                         i_j_list.append((
excute 13:48:35.454650 line       497                             i, j,
excute 13:48:35.458642 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.462631 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0)]
excute 13:48:35.468614 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:35.473600 line       494                         if (i == j):
excute 13:48:35.477589 line       495                             continue
excute 13:48:35.481578 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:35.484570 line       494                         if (i == j):
excute 13:48:35.488568 line       496                         i_j_list.append((
excute 13:48:35.491552 line       497                             i, j,
excute 13:48:35.495541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.498533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0)]
excute 13:48:35.502522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:35.506514 line       494                         if (i == j):
excute 13:48:35.510533 line       496                         i_j_list.append((
excute 13:48:35.514523 line       497                             i, j,
excute 13:48:35.517517 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.520509 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0)]
excute 13:48:35.525462 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:35.528453 line       494                         if (i == j):
excute 13:48:35.532442 line       496                         i_j_list.append((
excute 13:48:35.535434 line       497                             i, j,
excute 13:48:35.539423 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.542415 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0)]
excute 13:48:35.545408 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:35.549397 line       494                         if (i == j):
excute 13:48:35.553404 line       496                         i_j_list.append((
excute 13:48:35.556378 line       497                             i, j,
excute 13:48:35.559370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.563359 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0)]
excute 13:48:35.566352 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:35.570341 line       494                         if (i == j):
excute 13:48:35.576327 line       496                         i_j_list.append((
excute 13:48:35.580314 line       497                             i, j,
excute 13:48:35.583306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.586298 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0)]
excute 13:48:35.589291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:35.593279 line       494                         if (i == j):
excute 13:48:35.597269 line       496                         i_j_list.append((
excute 13:48:35.600261 line       497                             i, j,
excute 13:48:35.604251 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.607243 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0)]
excute 13:48:35.610234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:35.614224 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:35.617216 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:35.621206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:35.624197 line       494                         if (i == j):
excute 13:48:35.628186 line       496                         i_j_list.append((
excute 13:48:35.631178 line       497                             i, j,
excute 13:48:35.635169 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.638160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0)]
excute 13:48:35.642149 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:35.645143 line       494                         if (i == j):
excute 13:48:35.649130 line       496                         i_j_list.append((
excute 13:48:35.652122 line       497                             i, j,
excute 13:48:35.656111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.659104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:48:35.663094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:35.667084 line       494                         if (i == j):
excute 13:48:35.671073 line       496                         i_j_list.append((
excute 13:48:35.674064 line       497                             i, j,
excute 13:48:35.680047 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.684037 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:48:35.687030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:35.695009 line       494                         if (i == j):
excute 13:48:35.698998 line       496                         i_j_list.append((
excute 13:48:35.701989 line       497                             i, j,
excute 13:48:35.704981 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.708971 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3)]
excute 13:48:35.712961 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:35.716950 line       494                         if (i == j):
excute 13:48:35.719942 line       495                             continue
excute 13:48:35.723931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:35.726923 line       494                         if (i == j):
excute 13:48:35.730913 line       496                         i_j_list.append((
excute 13:48:35.733904 line       497                             i, j,
excute 13:48:35.736928 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.740885 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0)]
excute 13:48:35.743911 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:35.747889 line       494                         if (i == j):
excute 13:48:35.750890 line       496                         i_j_list.append((
excute 13:48:35.754880 line       497                             i, j,
excute 13:48:35.757872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.761862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:48:35.765820 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:35.769810 line       494                         if (i == j):
excute 13:48:35.773797 line       496                         i_j_list.append((
excute 13:48:35.781777 line       497                             i, j,
excute 13:48:35.786794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.789787 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:48:35.793775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:35.797763 line       494                         if (i == j):
excute 13:48:35.800756 line       496                         i_j_list.append((
excute 13:48:35.804750 line       497                             i, j,
excute 13:48:35.807706 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.810699 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:48:35.813691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:35.817680 line       494                         if (i == j):
excute 13:48:35.821669 line       496                         i_j_list.append((
excute 13:48:35.825690 line       497                             i, j,
excute 13:48:35.828684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.832641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:48:35.835663 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:35.839657 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:35.842645 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:35.846604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:35.849626 line       494                         if (i == j):
excute 13:48:35.853585 line       496                         i_j_list.append((
excute 13:48:35.857574 line       497                             i, j,
excute 13:48:35.860565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.863557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0)]
excute 13:48:35.866550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:35.870538 line       494                         if (i == j):
excute 13:48:35.874528 line       496                         i_j_list.append((
excute 13:48:35.877520 line       497                             i, j,
excute 13:48:35.880512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.885498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:48:35.888490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:35.892481 line       494                         if (i == j):
excute 13:48:35.896469 line       496                         i_j_list.append((
excute 13:48:35.899461 line       497                             i, j,
excute 13:48:35.902453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.905445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:48:35.909434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:35.912426 line       494                         if (i == j):
excute 13:48:35.916416 line       496                         i_j_list.append((
excute 13:48:35.922110 line       497                             i, j,
excute 13:48:35.928397 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.932406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3)]
excute 13:48:35.935428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:35.939400 line       494                         if (i == j):
excute 13:48:35.943375 line       496                         i_j_list.append((
excute 13:48:35.946401 line       497                             i, j,
excute 13:48:35.950388 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.954345 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0)]
excute 13:48:35.957374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:35.961359 line       494                         if (i == j):
excute 13:48:35.965319 line       495                             continue
excute 13:48:35.968342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:35.972310 line       494                         if (i == j):
excute 13:48:35.976289 line       496                         i_j_list.append((
excute 13:48:35.980284 line       497                             i, j,
excute 13:48:35.983300 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:35.989253 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:48:35.992276 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:35.996235 line       494                         if (i == j):
excute 13:48:36.000254 line       496                         i_j_list.append((
excute 13:48:36.003247 line       497                             i, j,
excute 13:48:36.006238 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.010232 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:48:36.013223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:36.017211 line       494                         if (i == j):
excute 13:48:36.021168 line       496                         i_j_list.append((
excute 13:48:36.024159 line       497                             i, j,
excute 13:48:36.028148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.031140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:48:36.034132 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:36.038122 line       494                         if (i == j):
excute 13:48:36.042112 line       496                         i_j_list.append((
excute 13:48:36.046100 line       497                             i, j,
excute 13:48:36.049094 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.053083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:48:36.057072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:36.060095 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:36.064085 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:36.067076 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:36.071065 line       494                         if (i == j):
excute 13:48:36.075024 line       496                         i_j_list.append((
excute 13:48:36.079045 line       497                             i, j,
excute 13:48:36.082038 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.086006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0)]
excute 13:48:36.090000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:36.093974 line       494                         if (i == j):
excute 13:48:36.096967 line       496                         i_j_list.append((
excute 13:48:36.100956 line       497                             i, j,
excute 13:48:36.103946 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.106938 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0)]
excute 13:48:36.109930 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:36.113919 line       494                         if (i == j):
excute 13:48:36.117909 line       496                         i_j_list.append((
excute 13:48:36.120900 line       497                             i, j,
excute 13:48:36.123892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.127882 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0)]
excute 13:48:36.130874 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:36.134863 line       494                         if (i == j):
excute 13:48:36.138884 line       496                         i_j_list.append((
excute 13:48:36.142875 line       497                             i, j,
excute 13:48:36.145868 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.148861 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3)]
excute 13:48:36.152847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:36.156806 line       494                         if (i == j):
excute 13:48:36.160796 line       496                         i_j_list.append((
excute 13:48:36.163817 line       497                             i, j,
excute 13:48:36.166809 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.169803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0)]
excute 13:48:36.173791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:36.177783 line       494                         if (i == j):
excute 13:48:36.181744 line       496                         i_j_list.append((
excute 13:48:36.184761 line       497                             i, j,
excute 13:48:36.187753 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.192741 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0)]
excute 13:48:36.195732 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:36.200687 line       494                         if (i == j):
excute 13:48:36.203679 line       495                             continue
excute 13:48:36.207668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:36.210661 line       494                         if (i == j):
excute 13:48:36.214651 line       496                         i_j_list.append((
excute 13:48:36.217642 line       497                             i, j,
excute 13:48:36.220634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.224633 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0)]
excute 13:48:36.227617 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:36.231605 line       494                         if (i == j):
excute 13:48:36.235594 line       496                         i_j_list.append((
excute 13:48:36.238617 line       497                             i, j,
excute 13:48:36.241612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.245599 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:48:36.248591 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:36.252552 line       494                         if (i == j):
excute 13:48:36.256538 line       496                         i_j_list.append((
excute 13:48:36.259530 line       497                             i, j,
excute 13:48:36.263519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.266511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:48:36.269503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:36.273495 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:36.276484 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:36.280473 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:36.284463 line       494                         if (i == j):
excute 13:48:36.287455 line       496                         i_j_list.append((
excute 13:48:36.291444 line       497                             i, j,
excute 13:48:36.295434 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.298426 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0)]
excute 13:48:36.301418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:36.305407 line       494                         if (i == j):
excute 13:48:36.309401 line       496                         i_j_list.append((
excute 13:48:36.317375 line       497                             i, j,
excute 13:48:36.323359 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.334331 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:48:36.344306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:36.350288 line       494                         if (i == j):
excute 13:48:36.356272 line       496                         i_j_list.append((
excute 13:48:36.361259 line       497                             i, j,
excute 13:48:36.367242 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.374224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:36.379211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:36.385202 line       494                         if (i == j):
excute 13:48:36.389185 line       496                         i_j_list.append((
excute 13:48:36.396165 line       497                             i, j,
excute 13:48:36.401152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.406138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3)]
excute 13:48:36.410130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:36.420101 line       494                         if (i == j):
excute 13:48:36.428116 line       496                         i_j_list.append((
excute 13:48:36.438084 line       497                             i, j,
excute 13:48:36.443040 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.447030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0)]
excute 13:48:36.452015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:36.458001 line       494                         if (i == j):
excute 13:48:36.462987 line       496                         i_j_list.append((
excute 13:48:36.468971 line       497                             i, j,
excute 13:48:36.475953 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.485925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:48:36.495898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:36.504875 line       494                         if (i == j):
excute 13:48:36.513851 line       496                         i_j_list.append((
excute 13:48:36.518837 line       497                             i, j,
excute 13:48:36.523825 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.531802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:48:36.538783 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:36.544767 line       494                         if (i == j):
excute 13:48:36.549755 line       495                             continue
excute 13:48:36.555741 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:36.560725 line       494                         if (i == j):
excute 13:48:36.566710 line       496                         i_j_list.append((
excute 13:48:36.570699 line       497                             i, j,
excute 13:48:36.577680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.582669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:48:36.588650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:36.594636 line       494                         if (i == j):
excute 13:48:36.600619 line       496                         i_j_list.append((
excute 13:48:36.607601 line       497                             i, j,
excute 13:48:36.613584 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.620566 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:36.625552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:36.634528 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:36.640512 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:36.646495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:36.652481 line       494                         if (i == j):
excute 13:48:36.658466 line       496                         i_j_list.append((
excute 13:48:36.664449 line       497                             i, j,
excute 13:48:36.670432 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.676416 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:36.683397 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:36.689381 line       494                         if (i == j):
excute 13:48:36.698357 line       496                         i_j_list.append((
excute 13:48:36.705339 line       497                             i, j,
excute 13:48:36.712321 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.718305 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:48:36.724288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:36.733264 line       494                         if (i == j):
excute 13:48:36.740245 line       496                         i_j_list.append((
excute 13:48:36.747228 line       497                             i, j,
excute 13:48:36.755208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.761189 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:36.767172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:36.775152 line       494                         if (i == j):
excute 13:48:36.784129 line       496                         i_j_list.append((
excute 13:48:36.790111 line       497                             i, j,
excute 13:48:36.795099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.802080 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3)]
excute 13:48:36.810060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:36.815045 line       494                         if (i == j):
excute 13:48:36.822028 line       496                         i_j_list.append((
excute 13:48:36.826016 line       497                             i, j,
excute 13:48:36.832000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.834991 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0)]
excute 13:48:36.838982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:36.841973 line       494                         if (i == j):
excute 13:48:36.845962 line       496                         i_j_list.append((
excute 13:48:36.849953 line       497                             i, j,
excute 13:48:36.852944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.856933 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:48:36.859925 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:36.863914 line       494                         if (i == j):
excute 13:48:36.867903 line       496                         i_j_list.append((
excute 13:48:36.870895 line       497                             i, j,
excute 13:48:36.873887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.877876 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:48:36.880869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:36.884859 line       494                         if (i == j):
excute 13:48:36.888847 line       496                         i_j_list.append((
excute 13:48:36.891839 line       497                             i, j,
excute 13:48:36.895828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.898820 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:36.901814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:36.906801 line       494                         if (i == j):
excute 13:48:36.909792 line       495                             continue
excute 13:48:36.914779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:36.917770 line       494                         if (i == j):
excute 13:48:36.921760 line       496                         i_j_list.append((
excute 13:48:36.924751 line       497                             i, j,
excute 13:48:36.928741 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.932731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:36.935722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:36.939713 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:36.942703 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:36.947693 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:36.951681 line       494                         if (i == j):
excute 13:48:36.955669 line       496                         i_j_list.append((
excute 13:48:36.959658 line       497                             i, j,
excute 13:48:36.965644 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.969636 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0)]
excute 13:48:36.973654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:36.978608 line       494                         if (i == j):
excute 13:48:36.981631 line       496                         i_j_list.append((
excute 13:48:36.985620 line       497                             i, j,
excute 13:48:36.988612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:36.992602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0)]
excute 13:48:36.995593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:37.000557 line       494                         if (i == j):
excute 13:48:37.004539 line       496                         i_j_list.append((
excute 13:48:37.007565 line       497                             i, j,
excute 13:48:37.011552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:37.015510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0)]
excute 13:48:37.019498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:37.023488 line       494                         if (i == j):
excute 13:48:37.027478 line       496                         i_j_list.append((
excute 13:48:37.030500 line       497                             i, j,
excute 13:48:37.034494 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:37.037483 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 3)]
excute 13:48:37.041445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:37.044463 line       494                         if (i == j):
excute 13:48:37.048453 line       496                         i_j_list.append((
excute 13:48:37.052411 line       497                             i, j,
excute 13:48:37.055436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:37.059423 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 3), (9, 4, 0, 0)]
excute 13:48:37.062415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:37.066373 line       494                         if (i == j):
excute 13:48:37.070364 line       496                         i_j_list.append((
excute 13:48:37.074355 line       497                             i, j,
excute 13:48:37.078342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:37.081364 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 3), (9, 4, 0, 0), (9, 5, 0, 0)]
excute 13:48:37.085333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:37.089312 line       494                         if (i == j):
excute 13:48:37.092335 line       496                         i_j_list.append((
excute 13:48:37.096324 line       497                             i, j,
excute 13:48:37.099316 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:37.103275 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 3), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0)]
excute 13:48:37.106302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:37.110265 line       494                         if (i == j):
excute 13:48:37.114259 line       496                         i_j_list.append((
excute 13:48:37.118236 line       497                             i, j,
excute 13:48:37.121258 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:37.125247 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 3), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0)]
excute 13:48:37.128239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:37.132229 line       494                         if (i == j):
excute 13:48:37.136187 line       496                         i_j_list.append((
excute 13:48:37.140179 line       497                             i, j,
excute 13:48:37.143202 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:37.146199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 3), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 3), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 3), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 3), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 3), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 3), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 3), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 3), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 3, 0, 3), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0)]
excute 13:48:37.150182 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:37.154154 line       494                         if (i == j):
excute 13:48:37.158129 line       495                             continue
excute 13:48:37.161152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:37.165110 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:37.168132 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 3, -1, 3), (6, 3, -1, 3), (7, 3, -1, 3), (1, 0, 0, 0), (1, 2, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 0, 0), (9, 1, 0, 0), (9, 2, 0, 0), (9, 4, 0, 0), (9, 5, 0, 0), (9, 6, 0, 0), (9, 7, 0, 0), (9, 8, 0, 0), (1, 3, 0, 3), (8, 3, 0, 3), (9, 3, 0, 3), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (5, 3, 1, 3), (2, 0, 2, 0), (2, 1, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (2, 3, 2, 3), (4, 3, 2, 3), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0)]
excute 13:48:37.171124 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:37.175116 line       505                     if (self.RELOCATE):
excute 13:48:37.179103 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:37.183061 line       505                     if (self.RELOCATE):
excute 13:48:37.186088 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:37.190074 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:48:37.193066 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:37.197056 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:37.201044 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.205020 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:37.208026 line       556                     i = i_j[0]
excute 13:48:37.212015 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:37.215973 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.219967 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:37.223952 line       556                     i = i_j[0]
excute 13:48:37.227941 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:37.230933 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.234922 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:37.237914 line       556                     i = i_j[0]
excute 13:48:37.241903 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:37.245892 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.248916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:37.252906 line       556                     i = i_j[0]
excute 13:48:37.256864 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:37.259887 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.263877 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:37.267866 line       556                     i = i_j[0]
excute 13:48:37.271825 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:37.275814 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.278839 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:37.282826 line       556                     i = i_j[0]
excute 13:48:37.292889 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:37.295876 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.299835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:37.302860 line       556                     i = i_j[0]
excute 13:48:37.306847 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:37.310806 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.314794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:48:37.317786 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:37.322776 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:37.326798 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.336739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 0)
excute 13:48:37.343721 line       556                     i = i_j[0]
excute 13:48:37.347708 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:37.350733 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.354722 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 0)
excute 13:48:37.360673 line       556                     i = i_j[0]
excute 13:48:37.363663 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:37.367656 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.371643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:48:37.374635 line       556                     i = i_j[0]
excute 13:48:37.378623 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:37.382613 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.386602 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 0)
excute 13:48:37.390592 line       556                     i = i_j[0]
excute 13:48:37.394582 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:37.397605 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.401598 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:48:37.405583 line       556                     i = i_j[0]
excute 13:48:37.409557 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:37.412565 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.416524 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:48:37.419546 line       556                     i = i_j[0]
excute 13:48:37.425500 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:37.429489 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.433478 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:48:37.440458 line       556                     i = i_j[0]
excute 13:48:37.445446 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:37.450434 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.455452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:37.459440 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:37.463399 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:37.467388 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.471376 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:37.474400 line       556                     i = i_j[0]
excute 13:48:37.478391 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:37.482352 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.485370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:37.489363 line       556                     i = i_j[0]
excute 13:48:37.493317 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:37.496341 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.500300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:37.503322 line       556                     i = i_j[0]
excute 13:48:37.507312 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:37.511301 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.515291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:37.519248 line       556                     i = i_j[0]
excute 13:48:37.522271 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:37.529223 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.533212 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:37.537202 line       556                     i = i_j[0]
excute 13:48:37.541191 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:37.545213 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.549201 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:37.552191 line       556                     i = i_j[0]
excute 13:48:37.556182 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:37.560171 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.563162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:37.567152 line       556                     i = i_j[0]
excute 13:48:37.571110 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:37.578092 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.582096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 3)
excute 13:48:37.585107 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:37.589062 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:37.593053 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.596074 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 3)
excute 13:48:37.600063 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:37.604034 line       557                     j = i_j[1]
excute 13:48:37.608012 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.611034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 3)
excute 13:48:37.614999 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:37.617983 line       557                     j = i_j[1]
excute 13:48:37.621973 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.625962 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:48:37.629957 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:37.633962 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:37.637965 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.641920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:48:37.644943 line       556                     i = i_j[0]
excute 13:48:37.648911 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:37.651929 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.655919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:48:37.659909 line       556                     i = i_j[0]
excute 13:48:37.663863 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:37.666892 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.670843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:48:37.673871 line       556                     i = i_j[0]
excute 13:48:37.677858 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:37.681849 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.685804 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:48:37.688835 line       556                     i = i_j[0]
excute 13:48:37.692785 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:37.696814 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.700763 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:48:37.703786 line       556                     i = i_j[0]
excute 13:48:37.707781 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:37.710772 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.715724 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:48:37.718751 line       556                     i = i_j[0]
excute 13:48:37.722705 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:37.725730 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.730684 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:48:37.734671 line       556                     i = i_j[0]
excute 13:48:37.738661 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:37.741653 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.745642 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:37.748635 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:37.752625 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:37.756645 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.761601 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:37.764624 line       556                     i = i_j[0]
excute 13:48:37.768583 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:37.771604 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.775564 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:37.778587 line       556                     i = i_j[0]
excute 13:48:37.782576 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:37.786542 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.789560 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:37.793516 line       556                     i = i_j[0]
excute 13:48:37.797505 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:37.801493 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.804487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:37.808476 line       556                     i = i_j[0]
excute 13:48:37.812465 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:37.815488 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.820445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:37.824432 line       556                     i = i_j[0]
excute 13:48:37.832411 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:37.838395 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.841418 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:37.845410 line       556                     i = i_j[0]
excute 13:48:37.849397 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:37.852389 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.856375 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:37.860336 line       556                     i = i_j[0]
excute 13:48:37.863327 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:37.867317 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.870309 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 0, 0)
excute 13:48:37.874298 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:37.878288 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:37.881280 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.886267 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 0, 0)
excute 13:48:37.889258 line       556                     i = i_j[0]
excute 13:48:37.893248 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:37.896240 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.900229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 0, 0)
excute 13:48:37.903221 line       556                     i = i_j[0]
excute 13:48:37.907224 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:37.910239 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.914223 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 0, 0)
excute 13:48:37.918181 line       556                     i = i_j[0]
excute 13:48:37.921173 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:37.925163 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.928154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 0, 0)
excute 13:48:37.932144 line       556                     i = i_j[0]
excute 13:48:37.936138 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:37.940122 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.944118 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 0, 0)
excute 13:48:37.948110 line       556                     i = i_j[0]
excute 13:48:37.952091 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:37.956090 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.960069 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 0, 0)
excute 13:48:37.963061 line       556                     i = i_j[0]
excute 13:48:37.967050 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:37.971041 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.975031 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 0, 0)
excute 13:48:37.978021 line       556                     i = i_j[0]
excute 13:48:37.982011 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:37.985002 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:37.988992 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 3)
excute 13:48:37.992982 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:37.995973 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:37.999963 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.003953 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 3)
excute 13:48:38.006944 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:38.010933 line       557                     j = i_j[1]
excute 13:48:38.014923 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.018921 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 0, 3)
excute 13:48:38.021903 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:38.025893 line       557                     j = i_j[1]
excute 13:48:38.028885 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.032875 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 139
excute 13:48:38.035866 line       560                         if (t_tmp > self.TIME):
excute 13:48:38.040869 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:38.043845 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:38.047834 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:38.050826 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:38.053818 line       569                                     available_vhecles[i][t],
excute 13:48:38.057807 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:38.060800 line       571                                     self.S_capacities[j],
excute 13:48:38.064789 line       572                                     demands[t][i][j],
excute 13:48:38.067782 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = -5
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 3
calc_contract     Starting var:.. t = 131
calc_contract     13:48:38.070773 call       352     def caluculate_contract(
calc_contract     13:48:38.074763 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:38.074763 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:38.075761 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:38.076759 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:38.077756 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 3
calc_contract     13:48:38.077756 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:38.078753 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [3, 0, 0]
excute Modified var:.. can_contract = 3
excute Modified var:.. rsf_tmp = 0
excute 13:48:38.080748 line       575                                 rsf += rsf_tmp
excute 13:48:38.084737 line       576                                 rse += rse_tmp
excute 13:48:38.087728 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 131
move_cars     Starting var:.. t_tmp = 139
move_cars     Starting var:.. can_contract = 3
move_cars     13:48:38.091718 call       388     def move_cars(
move_cars     13:48:38.095707 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:48:38.096704 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:48:38.098699 line       399         return available_vhecles
move_cars     13:48:38.099696 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:38.101691 line       579                                 success += can_contract
excute Modified var:.. success = 55
excute 13:48:38.106678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:48:38.113661 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:38.120642 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:38.127623 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.131611 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:48:38.135637 line       556                     i = i_j[0]
excute 13:48:38.140590 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:38.144609 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.148567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:48:38.151592 line       556                     i = i_j[0]
excute 13:48:38.155578 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:38.159571 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.163526 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:48:38.166549 line       556                     i = i_j[0]
excute 13:48:38.170508 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:38.173531 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.177499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:48:38.180514 line       556                     i = i_j[0]
excute 13:48:38.184501 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:38.188459 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.191486 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:48:38.195471 line       556                     i = i_j[0]
excute 13:48:38.199431 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:38.202453 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.206411 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:48:38.209435 line       556                     i = i_j[0]
excute 13:48:38.213424 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:38.217413 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.221373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:48:38.224394 line       556                     i = i_j[0]
excute 13:48:38.228353 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:38.231379 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.235335 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 3)
excute 13:48:38.238357 line       556                     i = i_j[0]
excute 13:48:38.243314 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:38.248299 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.252288 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:38.256277 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:38.260267 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:38.264257 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.268247 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:38.271272 line       556                     i = i_j[0]
excute 13:48:38.276224 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:38.279216 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.283205 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:38.286197 line       556                     i = i_j[0]
excute 13:48:38.290195 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:38.293179 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.297168 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:38.300160 line       556                     i = i_j[0]
excute 13:48:38.305147 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:38.312135 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.317115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:38.320107 line       556                     i = i_j[0]
excute 13:48:38.325094 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:38.333073 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.339056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:38.343083 line       556                     i = i_j[0]
excute 13:48:38.349031 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:38.352053 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.357009 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:38.360000 line       556                     i = i_j[0]
excute 13:48:38.363989 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:38.367979 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.370971 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:38.374995 line       556                     i = i_j[0]
excute 13:48:38.378981 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:38.382974 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.386945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:48:38.390953 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:38.393909 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:38.397898 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.402888 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:48:38.405909 line       556                     i = i_j[0]
excute 13:48:38.409868 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:38.412890 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.416849 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:48:38.420837 line       556                     i = i_j[0]
excute 13:48:38.423861 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:38.427852 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.431808 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:48:38.434832 line       556                     i = i_j[0]
excute 13:48:38.438790 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:38.441813 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.445802 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:48:38.451757 line       556                     i = i_j[0]
excute 13:48:38.455778 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:38.458768 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.464721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:48:38.469707 line       556                     i = i_j[0]
excute 13:48:38.473697 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:38.477717 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.481677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:48:38.484698 line       556                     i = i_j[0]
excute 13:48:38.488689 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:38.492677 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.496636 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:48:38.499662 line       556                     i = i_j[0]
excute 13:48:38.503648 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:38.507639 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.511596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 3)
excute 13:48:38.514618 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:38.518611 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:38.522568 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.526556 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 3)
excute 13:48:38.529579 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:38.533569 line       557                     j = i_j[1]
excute 13:48:38.537557 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.541516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 8, 0)
excute 13:48:38.544538 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:38.548498 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:38.552488 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.557473 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 8, 0)
excute 13:48:38.560496 line       556                     i = i_j[0]
excute 13:48:38.564486 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:38.568444 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.572436 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 8, 0)
excute 13:48:38.575427 line       556                     i = i_j[0]
excute 13:48:38.580444 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:38.584424 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.587427 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 8, 0)
excute 13:48:38.591413 line       556                     i = i_j[0]
excute 13:48:38.595371 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:38.598398 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.602353 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 8, 0)
excute 13:48:38.605376 line       556                     i = i_j[0]
excute 13:48:38.609334 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:38.612357 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.616347 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 8, 0)
excute 13:48:38.619341 line       556                     i = i_j[0]
excute 13:48:38.623332 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:38.627320 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.631303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 8, 0)
excute 13:48:38.635264 line       556                     i = i_j[0]
excute 13:48:38.639255 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:38.642283 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.646236 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 8, 0)
excute 13:48:38.664836 line       556                     i = i_j[0]
excute 13:48:38.668825 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:38.671816 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.675805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 8, 0)
excute 13:48:38.679794 line       556                     i = i_j[0]
excute 13:48:38.683789 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:38.686776 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:38.690766 line       555                 for i_j in i_j_list:
excute 13:48:38.693757 line       581             self.write_matrix(
excute 13:48:38.697748 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:38.701737 line       583                 result_file_path,
excute 13:48:38.704729 line       584                 mode='a'
excute 13:48:38.711709 line       488         for t in time_steps:
excute Modified var:.. t = 132
excute 13:48:38.716699 line       489             if (t != self.TIME + 1):
excute 13:48:38.720688 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:38.724677 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:38.729661 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:38.733651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:38.737642 line       494                         if (i == j):
excute 13:48:38.742630 line       495                             continue
excute 13:48:38.745619 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:38.751602 line       494                         if (i == j):
excute 13:48:38.755596 line       496                         i_j_list.append((
excute 13:48:38.761578 line       497                             i, j,
excute 13:48:38.767560 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:38.776541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:48:38.783517 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:38.791500 line       494                         if (i == j):
excute 13:48:38.796485 line       496                         i_j_list.append((
excute 13:48:38.802467 line       497                             i, j,
excute 13:48:38.808452 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:38.814436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:48:38.820427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:38.826404 line       494                         if (i == j):
excute 13:48:38.832388 line       496                         i_j_list.append((
excute 13:48:38.838371 line       497                             i, j,
excute 13:48:38.842361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:38.849342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0)]
excute 13:48:38.855326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:38.862308 line       494                         if (i == j):
excute 13:48:38.867294 line       496                         i_j_list.append((
excute 13:48:38.871283 line       497                             i, j,
excute 13:48:38.875272 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:38.878264 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0)]
excute 13:48:38.882253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:38.886243 line       494                         if (i == j):
excute 13:48:38.890232 line       496                         i_j_list.append((
excute 13:48:38.893224 line       497                             i, j,
excute 13:48:38.897214 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:38.900205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:48:38.904195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:38.908184 line       494                         if (i == j):
excute 13:48:38.912186 line       496                         i_j_list.append((
excute 13:48:38.916164 line       497                             i, j,
excute 13:48:38.919155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:38.922147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1)]
excute 13:48:38.926136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:38.929128 line       494                         if (i == j):
excute 13:48:38.933118 line       496                         i_j_list.append((
excute 13:48:38.936109 line       497                             i, j,
excute 13:48:38.940100 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:38.943091 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0)]
excute 13:48:38.946083 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:38.952067 line       494                         if (i == j):
excute 13:48:38.956057 line       496                         i_j_list.append((
excute 13:48:38.960046 line       497                             i, j,
excute 13:48:38.965034 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:38.969035 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:48:38.972015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:38.977000 line       494                         if (i == j):
excute 13:48:38.979995 line       496                         i_j_list.append((
excute 13:48:38.983983 line       497                             i, j,
excute 13:48:38.986975 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:38.991961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:48:38.995950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:39.000937 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:39.004926 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:39.007918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:39.011908 line       494                         if (i == j):
excute 13:48:39.015897 line       496                         i_j_list.append((
excute 13:48:39.018889 line       497                             i, j,
excute 13:48:39.021881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.024873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0)]
excute 13:48:39.028863 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:39.031855 line       494                         if (i == j):
excute 13:48:39.035845 line       495                             continue
excute 13:48:39.038836 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:39.042826 line       494                         if (i == j):
excute 13:48:39.046826 line       496                         i_j_list.append((
excute 13:48:39.049837 line       497                             i, j,
excute 13:48:39.052829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.056818 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:48:39.059810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:39.063769 line       494                         if (i == j):
excute 13:48:39.069754 line       496                         i_j_list.append((
excute 13:48:39.073752 line       497                             i, j,
excute 13:48:39.079725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.083717 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:48:39.088702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:39.091725 line       494                         if (i == j):
excute 13:48:39.095683 line       496                         i_j_list.append((
excute 13:48:39.098707 line       497                             i, j,
excute 13:48:39.102664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.105688 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:48:39.108680 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:39.112639 line       494                         if (i == j):
excute 13:48:39.115660 line       496                         i_j_list.append((
excute 13:48:39.119652 line       497                             i, j,
excute 13:48:39.123609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.126632 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:48:39.130623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:39.134582 line       494                         if (i == j):
excute 13:48:39.138569 line       496                         i_j_list.append((
excute 13:48:39.141591 line       497                             i, j,
excute 13:48:39.144583 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.148573 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1)]
excute 13:48:39.151533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:39.155533 line       494                         if (i == j):
excute 13:48:39.159513 line       496                         i_j_list.append((
excute 13:48:39.162504 line       497                             i, j,
excute 13:48:39.165496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.168488 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0)]
excute 13:48:39.173506 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:39.177497 line       494                         if (i == j):
excute 13:48:39.181455 line       496                         i_j_list.append((
excute 13:48:39.184477 line       497                             i, j,
excute 13:48:39.187469 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.191465 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:48:39.194452 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:39.198441 line       494                         if (i == j):
excute 13:48:39.202398 line       496                         i_j_list.append((
excute 13:48:39.205420 line       497                             i, j,
excute 13:48:39.209379 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.212403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:48:39.215396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:39.219354 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:39.222375 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:39.226368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:39.229326 line       494                         if (i == j):
excute 13:48:39.233315 line       496                         i_j_list.append((
excute 13:48:39.236307 line       497                             i, j,
excute 13:48:39.240296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.243288 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:48:39.246280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:39.250269 line       494                         if (i == j):
excute 13:48:39.254259 line       496                         i_j_list.append((
excute 13:48:39.257251 line       497                             i, j,
excute 13:48:39.261240 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.264232 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:48:39.268221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:39.272215 line       494                         if (i == j):
excute 13:48:39.278229 line       495                             continue
excute 13:48:39.284181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:39.288175 line       494                         if (i == j):
excute 13:48:39.291192 line       496                         i_j_list.append((
excute 13:48:39.295183 line       497                             i, j,
excute 13:48:39.298174 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.301165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:48:39.305155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:39.308147 line       494                         if (i == j):
excute 13:48:39.312136 line       496                         i_j_list.append((
excute 13:48:39.316127 line       497                             i, j,
excute 13:48:39.321080 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.324072 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:48:39.332053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:39.337040 line       494                         if (i == j):
excute 13:48:39.342025 line       496                         i_j_list.append((
excute 13:48:39.347012 line       497                             i, j,
excute 13:48:39.350005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.353994 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:48:39.357985 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:39.361972 line       494                         if (i == j):
excute 13:48:39.365961 line       496                         i_j_list.append((
excute 13:48:39.368984 line       497                             i, j,
excute 13:48:39.372954 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.377930 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:48:39.381951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:39.385907 line       494                         if (i == j):
excute 13:48:39.389901 line       496                         i_j_list.append((
excute 13:48:39.392920 line       497                             i, j,
excute 13:48:39.395912 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.399901 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:48:39.402893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:39.406852 line       494                         if (i == j):
excute 13:48:39.410874 line       496                         i_j_list.append((
excute 13:48:39.413864 line       497                             i, j,
excute 13:48:39.416855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.420825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:39.423839 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:39.427815 line       494                         if (i == j):
excute 13:48:39.431818 line       496                         i_j_list.append((
excute 13:48:39.434808 line       497                             i, j,
excute 13:48:39.438800 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.441757 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:39.444750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:39.449739 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:39.453726 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:39.457716 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:39.460708 line       494                         if (i == j):
excute 13:48:39.464698 line       496                         i_j_list.append((
excute 13:48:39.468688 line       497                             i, j,
excute 13:48:39.471679 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.475669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0)]
excute 13:48:39.479659 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:39.484646 line       494                         if (i == j):
excute 13:48:39.488635 line       496                         i_j_list.append((
excute 13:48:39.491626 line       497                             i, j,
excute 13:48:39.495615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.498607 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0)]
excute 13:48:39.502596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:39.508579 line       494                         if (i == j):
excute 13:48:39.512569 line       496                         i_j_list.append((
excute 13:48:39.515560 line       497                             i, j,
excute 13:48:39.518552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.522541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0)]
excute 13:48:39.525534 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:39.529523 line       494                         if (i == j):
excute 13:48:39.532515 line       495                             continue
excute 13:48:39.535507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:39.539497 line       494                         if (i == j):
excute 13:48:39.543522 line       496                         i_j_list.append((
excute 13:48:39.546509 line       497                             i, j,
excute 13:48:39.549502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.553478 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0)]
excute 13:48:39.556482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:39.560472 line       494                         if (i == j):
excute 13:48:39.564432 line       496                         i_j_list.append((
excute 13:48:39.567454 line       497                             i, j,
excute 13:48:39.571444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.574406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0)]
excute 13:48:39.578395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:39.584387 line       494                         if (i == j):
excute 13:48:39.588399 line       496                         i_j_list.append((
excute 13:48:39.591389 line       497                             i, j,
excute 13:48:39.594381 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.598361 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1)]
excute 13:48:39.601364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:39.605322 line       494                         if (i == j):
excute 13:48:39.609344 line       496                         i_j_list.append((
excute 13:48:39.612333 line       497                             i, j,
excute 13:48:39.619283 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.622308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0)]
excute 13:48:39.625300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:39.629286 line       494                         if (i == j):
excute 13:48:39.633247 line       496                         i_j_list.append((
excute 13:48:39.637237 line       497                             i, j,
excute 13:48:39.641226 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.644216 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0)]
excute 13:48:39.647208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:39.651198 line       494                         if (i == j):
excute 13:48:39.657183 line       496                         i_j_list.append((
excute 13:48:39.662170 line       497                             i, j,
excute 13:48:39.669150 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.674138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0)]
excute 13:48:39.677129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:39.686105 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:39.690094 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:39.694082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:39.698074 line       494                         if (i == j):
excute 13:48:39.703076 line       496                         i_j_list.append((
excute 13:48:39.706053 line       497                             i, j,
excute 13:48:39.710042 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.715030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0)]
excute 13:48:39.718021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:39.723009 line       494                         if (i == j):
excute 13:48:39.726998 line       496                         i_j_list.append((
excute 13:48:39.731017 line       497                             i, j,
excute 13:48:39.734973 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.737965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:48:39.741955 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:39.747945 line       494                         if (i == j):
excute 13:48:39.752927 line       496                         i_j_list.append((
excute 13:48:39.756914 line       497                             i, j,
excute 13:48:39.760905 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.767886 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:48:39.771876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:39.776862 line       494                         if (i == j):
excute 13:48:39.781848 line       496                         i_j_list.append((
excute 13:48:39.786836 line       497                             i, j,
excute 13:48:39.792853 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.796809 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:48:39.799801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:39.803789 line       494                         if (i == j):
excute 13:48:39.807779 line       495                             continue
excute 13:48:39.811769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:39.814760 line       494                         if (i == j):
excute 13:48:39.818751 line       496                         i_j_list.append((
excute 13:48:39.821743 line       497                             i, j,
excute 13:48:39.824734 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.828723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:48:39.832713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:39.836714 line       494                         if (i == j):
excute 13:48:39.840691 line       496                         i_j_list.append((
excute 13:48:39.843683 line       497                             i, j,
excute 13:48:39.847673 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.850664 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1)]
excute 13:48:39.853656 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:39.857646 line       494                         if (i == j):
excute 13:48:39.860638 line       496                         i_j_list.append((
excute 13:48:39.864627 line       497                             i, j,
excute 13:48:39.867619 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.870611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0)]
excute 13:48:39.874600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:39.877592 line       494                         if (i == j):
excute 13:48:39.881582 line       496                         i_j_list.append((
excute 13:48:39.885571 line       497                             i, j,
excute 13:48:39.888563 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.892554 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:48:39.896541 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:39.900532 line       494                         if (i == j):
excute 13:48:39.904527 line       496                         i_j_list.append((
excute 13:48:39.907516 line       497                             i, j,
excute 13:48:39.910504 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.914494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:48:39.917519 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:39.921495 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:39.924499 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:39.928490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:39.931480 line       494                         if (i == j):
excute 13:48:39.935470 line       496                         i_j_list.append((
excute 13:48:39.939428 line       497                             i, j,
excute 13:48:39.942418 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.945411 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0)]
excute 13:48:39.950399 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:39.953423 line       494                         if (i == j):
excute 13:48:39.958378 line       496                         i_j_list.append((
excute 13:48:39.962374 line       497                             i, j,
excute 13:48:39.967355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.972342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:48:39.976329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:39.980332 line       494                         if (i == j):
excute 13:48:39.984307 line       496                         i_j_list.append((
excute 13:48:39.987330 line       497                             i, j,
excute 13:48:39.991296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:39.996308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:48:40.000268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:40.003288 line       494                         if (i == j):
excute 13:48:40.007278 line       496                         i_j_list.append((
excute 13:48:40.011267 line       497                             i, j,
excute 13:48:40.015225 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.019213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:48:40.022205 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:40.026196 line       494                         if (i == j):
excute 13:48:40.029187 line       496                         i_j_list.append((
excute 13:48:40.033178 line       497                             i, j,
excute 13:48:40.036168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.039160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:48:40.042152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:40.046141 line       494                         if (i == j):
excute 13:48:40.050131 line       495                             continue
excute 13:48:40.053123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:40.057112 line       494                         if (i == j):
excute 13:48:40.060105 line       496                         i_j_list.append((
excute 13:48:40.064094 line       497                             i, j,
excute 13:48:40.067088 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.071076 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1)]
excute 13:48:40.075065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:40.079057 line       494                         if (i == j):
excute 13:48:40.083043 line       496                         i_j_list.append((
excute 13:48:40.086035 line       497                             i, j,
excute 13:48:40.089027 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.092019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0)]
excute 13:48:40.096009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:40.100995 line       494                         if (i == j):
excute 13:48:40.104021 line       496                         i_j_list.append((
excute 13:48:40.108009 line       497                             i, j,
excute 13:48:40.111000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.113992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:48:40.117951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:40.125930 line       494                         if (i == j):
excute 13:48:40.129918 line       496                         i_j_list.append((
excute 13:48:40.133909 line       497                             i, j,
excute 13:48:40.137896 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.141899 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:48:40.144910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:40.148883 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:40.151892 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:40.155880 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:40.159871 line       494                         if (i == j):
excute 13:48:40.163828 line       496                         i_j_list.append((
excute 13:48:40.166851 line       497                             i, j,
excute 13:48:40.169844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.173834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0)]
excute 13:48:40.176824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:40.180783 line       494                         if (i == j):
excute 13:48:40.184805 line       496                         i_j_list.append((
excute 13:48:40.187795 line       497                             i, j,
excute 13:48:40.190786 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.194776 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0)]
excute 13:48:40.197768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:40.202724 line       494                         if (i == j):
excute 13:48:40.206714 line       496                         i_j_list.append((
excute 13:48:40.209737 line       497                             i, j,
excute 13:48:40.212734 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.216718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0)]
excute 13:48:40.219709 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:40.223690 line       494                         if (i == j):
excute 13:48:40.227660 line       496                         i_j_list.append((
excute 13:48:40.230680 line       497                             i, j,
excute 13:48:40.233671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.237662 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0)]
excute 13:48:40.240653 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:40.244646 line       494                         if (i == j):
excute 13:48:40.248633 line       496                         i_j_list.append((
excute 13:48:40.252624 line       497                             i, j,
excute 13:48:40.255615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.259603 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0)]
excute 13:48:40.262565 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:40.266554 line       494                         if (i == j):
excute 13:48:40.270543 line       496                         i_j_list.append((
excute 13:48:40.274533 line       497                             i, j,
excute 13:48:40.278522 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.282511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0)]
excute 13:48:40.286500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:40.289523 line       494                         if (i == j):
excute 13:48:40.293513 line       495                             continue
excute 13:48:40.297471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:40.300495 line       494                         if (i == j):
excute 13:48:40.305481 line       496                         i_j_list.append((
excute 13:48:40.309439 line       497                             i, j,
excute 13:48:40.312465 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.315455 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0)]
excute 13:48:40.319414 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:40.323407 line       494                         if (i == j):
excute 13:48:40.329386 line       496                         i_j_list.append((
excute 13:48:40.336366 line       497                             i, j,
excute 13:48:40.344346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.348333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:48:40.351326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:40.355320 line       494                         if (i == j):
excute 13:48:40.360324 line       496                         i_j_list.append((
excute 13:48:40.364324 line       497                             i, j,
excute 13:48:40.368312 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.371304 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:48:40.375297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:40.379253 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:40.382275 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:40.387230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:40.391221 line       494                         if (i == j):
excute 13:48:40.396207 line       496                         i_j_list.append((
excute 13:48:40.402224 line       497                             i, j,
excute 13:48:40.406180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.410168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0)]
excute 13:48:40.413160 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:40.417149 line       494                         if (i == j):
excute 13:48:40.421141 line       496                         i_j_list.append((
excute 13:48:40.425130 line       497                             i, j,
excute 13:48:40.429119 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.433109 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:48:40.437097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:40.441089 line       494                         if (i == j):
excute 13:48:40.445077 line       496                         i_j_list.append((
excute 13:48:40.450062 line       497                             i, j,
excute 13:48:40.453053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.457044 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:40.461032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:40.465025 line       494                         if (i == j):
excute 13:48:40.468016 line       496                         i_j_list.append((
excute 13:48:40.472005 line       497                             i, j,
excute 13:48:40.475994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.479983 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:48:40.483973 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:40.487962 line       494                         if (i == j):
excute 13:48:40.491952 line       496                         i_j_list.append((
excute 13:48:40.495941 line       497                             i, j,
excute 13:48:40.499930 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.502923 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:48:40.505914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:40.511897 line       494                         if (i == j):
excute 13:48:40.514889 line       496                         i_j_list.append((
excute 13:48:40.518878 line       497                             i, j,
excute 13:48:40.521870 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.524862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:48:40.528851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:40.532841 line       494                         if (i == j):
excute 13:48:40.535832 line       496                         i_j_list.append((
excute 13:48:40.539823 line       497                             i, j,
excute 13:48:40.542813 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.545806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1)]
excute 13:48:40.549795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:40.552787 line       494                         if (i == j):
excute 13:48:40.557782 line       495                             continue
excute 13:48:40.560765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:40.563758 line       494                         if (i == j):
excute 13:48:40.567747 line       496                         i_j_list.append((
excute 13:48:40.570739 line       497                             i, j,
excute 13:48:40.574730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.578718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0)]
excute 13:48:40.582707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:40.586705 line       494                         if (i == j):
excute 13:48:40.589688 line       496                         i_j_list.append((
excute 13:48:40.593679 line       497                             i, j,
excute 13:48:40.596670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.599662 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:40.602654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:40.606644 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:40.609635 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:40.614622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:40.618611 line       494                         if (i == j):
excute 13:48:40.622602 line       496                         i_j_list.append((
excute 13:48:40.625592 line       497                             i, j,
excute 13:48:40.629582 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.632574 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:40.636563 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:40.640553 line       494                         if (i == j):
excute 13:48:40.644543 line       496                         i_j_list.append((
excute 13:48:40.647534 line       497                             i, j,
excute 13:48:40.651524 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.654515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:48:40.658518 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:40.661497 line       494                         if (i == j):
excute 13:48:40.665485 line       496                         i_j_list.append((
excute 13:48:40.669476 line       497                             i, j,
excute 13:48:40.672467 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.676457 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:40.679449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:40.683439 line       494                         if (i == j):
excute 13:48:40.687441 line       496                         i_j_list.append((
excute 13:48:40.690452 line       497                             i, j,
excute 13:48:40.693443 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.697433 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:48:40.701392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:40.705379 line       494                         if (i == j):
excute 13:48:40.709369 line       496                         i_j_list.append((
excute 13:48:40.713359 line       497                             i, j,
excute 13:48:40.718378 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.721368 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:48:40.725332 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:40.728354 line       494                         if (i == j):
excute 13:48:40.732340 line       496                         i_j_list.append((
excute 13:48:40.736328 line       497                             i, j,
excute 13:48:40.739322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.742314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:48:40.746306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:40.750294 line       494                         if (i == j):
excute 13:48:40.754250 line       496                         i_j_list.append((
excute 13:48:40.758272 line       497                             i, j,
excute 13:48:40.762227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.765219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1)]
excute 13:48:40.769209 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:40.773199 line       494                         if (i == j):
excute 13:48:40.777188 line       496                         i_j_list.append((
excute 13:48:40.780179 line       497                             i, j,
excute 13:48:40.784169 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.787161 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0)]
excute 13:48:40.791151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:40.795140 line       494                         if (i == j):
excute 13:48:40.799130 line       495                             continue
excute 13:48:40.803120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:40.807109 line       494                         if (i == j):
excute 13:48:40.810102 line       496                         i_j_list.append((
excute 13:48:40.814090 line       497                             i, j,
excute 13:48:40.819076 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.823065 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:40.826059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:40.830048 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:40.834037 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:40.838026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:40.842016 line       494                         if (i == j):
excute 13:48:40.847009 line       496                         i_j_list.append((
excute 13:48:40.849994 line       497                             i, j,
excute 13:48:40.854982 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.858969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 0)]
excute 13:48:40.861962 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:40.869940 line       494                         if (i == j):
excute 13:48:40.873929 line       496                         i_j_list.append((
excute 13:48:40.877918 line       497                             i, j,
excute 13:48:40.880909 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.884905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:48:40.887891 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:40.891882 line       494                         if (i == j):
excute 13:48:40.895870 line       496                         i_j_list.append((
excute 13:48:40.898867 line       497                             i, j,
excute 13:48:40.901854 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.904846 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:48:40.908835 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:40.911827 line       494                         if (i == j):
excute 13:48:40.915816 line       496                         i_j_list.append((
excute 13:48:40.919807 line       497                             i, j,
excute 13:48:40.923827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.927790 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:48:40.930811 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:40.934782 line       494                         if (i == j):
excute 13:48:40.938791 line       496                         i_j_list.append((
excute 13:48:40.941782 line       497                             i, j,
excute 13:48:40.945737 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.950726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:48:40.954714 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:40.959702 line       494                         if (i == j):
excute 13:48:40.963691 line       496                         i_j_list.append((
excute 13:48:40.967680 line       497                             i, j,
excute 13:48:40.971669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.975658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:48:40.979648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:40.983637 line       494                         if (i == j):
excute 13:48:40.987626 line       496                         i_j_list.append((
excute 13:48:40.991616 line       497                             i, j,
excute 13:48:40.994608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:40.998598 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1)]
excute 13:48:41.001589 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:41.006577 line       494                         if (i == j):
excute 13:48:41.010598 line       496                         i_j_list.append((
excute 13:48:41.013589 line       497                             i, j,
excute 13:48:41.017546 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:41.020568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0)]
excute 13:48:41.024528 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:41.028548 line       494                         if (i == j):
excute 13:48:41.032505 line       496                         i_j_list.append((
excute 13:48:41.035528 line       497                             i, j,
excute 13:48:41.039518 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:41.042511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 1), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:48:41.046500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:41.050470 line       494                         if (i == j):
excute 13:48:41.054449 line       495                             continue
excute 13:48:41.057440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:41.061429 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:41.065418 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (6, 0, -1, 0), (6, 1, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 6, -1, 1), (7, 6, -1, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (1, 6, 0, 1), (8, 6, 0, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (5, 6, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (2, 6, 2, 1), (4, 6, 2, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (9, 6, 3, 1), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (3, 6, 8, 1)]
excute 13:48:41.069408 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:41.074397 line       505                     if (self.RELOCATE):
excute 13:48:41.078383 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:41.081374 line       505                     if (self.RELOCATE):
excute 13:48:41.085363 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:41.088355 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:48:41.092344 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:41.096334 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:41.100324 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.104338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:41.107338 line       556                     i = i_j[0]
excute 13:48:41.111296 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:41.114319 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.118276 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 0)
excute 13:48:41.121299 line       556                     i = i_j[0]
excute 13:48:41.126259 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:41.130243 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.134236 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:41.138222 line       556                     i = i_j[0]
excute 13:48:41.141216 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:41.145205 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.150191 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:41.154181 line       556                     i = i_j[0]
excute 13:48:41.158173 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:41.161161 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.165151 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:41.168142 line       556                     i = i_j[0]
excute 13:48:41.172131 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:41.176121 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.179144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:41.184101 line       556                     i = i_j[0]
excute 13:48:41.192082 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:41.197069 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.202056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:41.206041 line       556                     i = i_j[0]
excute 13:48:41.213022 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:41.221001 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.236636 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:48:41.249600 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:41.259575 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:41.267553 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.271544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 0)
excute 13:48:41.276528 line       556                     i = i_j[0]
excute 13:48:41.283510 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:41.289495 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.302460 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 0)
excute 13:48:41.314427 line       556                     i = i_j[0]
excute 13:48:41.322407 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:41.331384 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.341357 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 0)
excute 13:48:41.349337 line       556                     i = i_j[0]
excute 13:48:41.358316 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:41.370278 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.385239 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:48:41.394215 line       556                     i = i_j[0]
excute 13:48:41.403192 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:41.412167 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.423138 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 0)
excute 13:48:41.431116 line       556                     i = i_j[0]
excute 13:48:41.443085 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:41.451063 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.460038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:48:41.471009 line       556                     i = i_j[0]
excute 13:48:41.481981 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:41.490957 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.498935 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:48:41.502924 line       556                     i = i_j[0]
excute 13:48:41.506926 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:41.516887 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.523869 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:48:41.532848 line       556                     i = i_j[0]
excute 13:48:41.541823 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:41.551793 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.560770 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:41.568747 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:41.578722 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:41.586699 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.593681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:41.600663 line       556                     i = i_j[0]
excute 13:48:41.608642 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:41.613628 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.620610 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:41.625596 line       556                     i = i_j[0]
excute 13:48:41.634572 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:41.640556 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.646540 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:48:41.654519 line       556                     i = i_j[0]
excute 13:48:41.662499 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:41.669480 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.677458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:41.685435 line       556                     i = i_j[0]
excute 13:48:41.692419 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:41.698404 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.707378 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:41.715357 line       556                     i = i_j[0]
excute 13:48:41.721340 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:41.728321 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.734305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:41.740289 line       556                     i = i_j[0]
excute 13:48:41.748268 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:41.757246 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.765222 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:41.773202 line       556                     i = i_j[0]
excute 13:48:41.781180 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:41.790158 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.798135 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 1)
excute 13:48:41.804118 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:41.812097 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:41.819079 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.827057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 1)
excute 13:48:41.833041 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:41.840023 line       557                     j = i_j[1]
excute 13:48:41.849996 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.859970 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:48:41.867948 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:41.871936 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:41.875926 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.880913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:48:41.883905 line       556                     i = i_j[0]
excute 13:48:41.890886 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:41.896870 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.902854 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:48:41.906843 line       556                     i = i_j[0]
excute 13:48:41.910833 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:41.914822 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.920806 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:48:41.927787 line       556                     i = i_j[0]
excute 13:48:41.931777 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:41.935766 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.941757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:48:41.945739 line       556                     i = i_j[0]
excute 13:48:41.950727 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:41.954716 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.961698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:48:41.968678 line       556                     i = i_j[0]
excute 13:48:41.973665 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:41.978651 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:41.982641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:48:41.988624 line       556                     i = i_j[0]
excute 13:48:41.992614 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:41.996603 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.000593 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:48:42.005579 line       556                     i = i_j[0]
excute 13:48:42.009569 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:42.013558 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.017547 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:42.021537 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:42.028519 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:42.031510 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.035499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:42.039488 line       556                     i = i_j[0]
excute 13:48:42.043478 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:42.047468 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.053451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:42.058438 line       556                     i = i_j[0]
excute 13:48:42.062428 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:42.067414 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.071404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:48:42.078386 line       556                     i = i_j[0]
excute 13:48:42.084369 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:42.088358 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.092348 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:42.095339 line       556                     i = i_j[0]
excute 13:48:42.100326 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:42.103318 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.107307 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:42.111297 line       556                     i = i_j[0]
excute 13:48:42.114289 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:42.119275 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.123265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:42.126257 line       556                     i = i_j[0]
excute 13:48:42.130246 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:42.135234 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.139222 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:42.143211 line       556                     i = i_j[0]
excute 13:48:42.147201 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:42.150193 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.155180 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 1)
excute 13:48:42.158171 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:42.162161 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:42.167149 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.173133 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 143
excute 13:48:42.179116 line       560                         if (t_tmp > self.TIME):
excute 13:48:42.185100 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:42.191084 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:42.197068 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 169
excute 13:48:42.202054 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:42.206047 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 1)
excute 13:48:42.211031 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:42.216017 line       557                     j = i_j[1]
excute 13:48:42.221003 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.225991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:48:42.229979 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:42.234967 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:42.239954 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.248930 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:48:42.253916 line       556                     i = i_j[0]
excute 13:48:42.262893 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:42.267878 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.278850 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:48:42.283838 line       556                     i = i_j[0]
excute 13:48:42.289821 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:42.293810 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.299793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:48:42.307772 line       556                     i = i_j[0]
excute 13:48:42.315751 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:42.325724 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.347666 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:48:42.356641 line       556                     i = i_j[0]
excute 13:48:42.365619 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:42.370604 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.376589 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:48:42.380588 line       556                     i = i_j[0]
excute 13:48:42.384568 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:42.388556 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.393550 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:48:42.396535 line       556                     i = i_j[0]
excute 13:48:42.400524 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:42.404515 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.407505 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:48:42.411494 line       556                     i = i_j[0]
excute 13:48:42.415497 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:42.418477 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.422467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 1)
excute 13:48:42.426456 line       556                     i = i_j[0]
excute 13:48:42.430446 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:42.433436 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.438424 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:42.441415 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:42.445406 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:42.450393 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.454380 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:42.458369 line       556                     i = i_j[0]
excute 13:48:42.462358 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:42.465350 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.469340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:48:42.472332 line       556                     i = i_j[0]
excute 13:48:42.476321 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:42.481308 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.484299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:42.488289 line       556                     i = i_j[0]
excute 13:48:42.492278 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:42.495270 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.499260 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:42.502252 line       556                     i = i_j[0]
excute 13:48:42.506241 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:42.510230 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.514220 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:42.517212 line       556                     i = i_j[0]
excute 13:48:42.521201 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:42.525198 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.528182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:42.532172 line       556                     i = i_j[0]
excute 13:48:42.536161 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:42.539153 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.543142 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:42.546134 line       556                     i = i_j[0]
excute 13:48:42.550124 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:42.553116 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.557105 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:48:42.561094 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:42.565084 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:42.569073 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.573065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:48:42.577052 line       556                     i = i_j[0]
excute 13:48:42.582040 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:42.586028 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.589019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:48:42.593009 line       556                     i = i_j[0]
excute 13:48:42.596999 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:42.599991 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.604979 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:48:42.607969 line       556                     i = i_j[0]
excute 13:48:42.611960 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:42.614952 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.618940 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:48:42.622930 line       556                     i = i_j[0]
excute 13:48:42.625956 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:42.629942 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.633935 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:48:42.637890 line       556                     i = i_j[0]
excute 13:48:42.641880 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:42.644873 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.648862 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:48:42.652851 line       556                     i = i_j[0]
excute 13:48:42.656840 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:42.660864 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.664819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:48:42.667841 line       556                     i = i_j[0]
excute 13:48:42.671800 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:42.675790 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.680777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:48:42.684780 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:42.688785 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:42.692743 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.696732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 1)
excute 13:48:42.702715 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:42.706705 line       557                     j = i_j[1]
excute 13:48:42.710695 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.714684 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:48:42.718675 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:42.722663 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:42.726685 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.730643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:48:42.733666 line       556                     i = i_j[0]
excute 13:48:42.746758 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:42.749750 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.753739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:48:42.758729 line       556                     i = i_j[0]
excute 13:48:42.762717 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:42.766706 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.771694 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:48:42.775683 line       556                     i = i_j[0]
excute 13:48:42.779672 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:42.783661 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.789644 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:48:42.793633 line       556                     i = i_j[0]
excute 13:48:42.798620 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:42.801613 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.805602 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:48:42.808625 line       556                     i = i_j[0]
excute 13:48:42.812614 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:42.816604 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.820561 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:48:42.823553 line       556                     i = i_j[0]
excute 13:48:42.827542 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:42.830534 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.834523 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:48:42.838513 line       556                     i = i_j[0]
excute 13:48:42.842502 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:42.846491 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.849483 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 1)
excute 13:48:42.853472 line       556                     i = i_j[0]
excute 13:48:42.857463 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:42.860454 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.864443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 8, 0)
excute 13:48:42.867435 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:42.871424 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:42.875414 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.879403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 8, 0)
excute 13:48:42.882395 line       556                     i = i_j[0]
excute 13:48:42.887383 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:42.891373 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.896359 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 8, 0)
excute 13:48:42.899351 line       556                     i = i_j[0]
excute 13:48:42.903339 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:42.906363 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.910353 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 8, 0)
excute 13:48:42.914311 line       556                     i = i_j[0]
excute 13:48:42.917334 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:42.921323 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.925314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 8, 0)
excute 13:48:42.928305 line       556                     i = i_j[0]
excute 13:48:42.932294 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:42.936252 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.940241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 8, 0)
excute 13:48:42.943267 line       556                     i = i_j[0]
excute 13:48:42.947223 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:42.951246 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.955234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 8, 0)
excute 13:48:42.959225 line       556                     i = i_j[0]
excute 13:48:42.965176 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:42.969164 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.974151 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 8, 0)
excute 13:48:42.977176 line       556                     i = i_j[0]
excute 13:48:42.981163 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:42.985153 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:42.989130 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 8, 1)
excute 13:48:42.992134 line       556                     i = i_j[0]
excute 13:48:42.997121 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:43.001110 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:43.005081 line       555                 for i_j in i_j_list:
excute 13:48:43.009063 line       581             self.write_matrix(
excute 13:48:43.012082 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:43.016071 line       583                 result_file_path,
excute 13:48:43.019061 line       584                 mode='a'
excute 13:48:43.026013 line       488         for t in time_steps:
excute Modified var:.. t = 133
excute 13:48:43.031996 line       489             if (t != self.TIME + 1):
excute 13:48:43.038978 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:43.043966 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:43.047955 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:43.051943 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:43.055935 line       494                         if (i == j):
excute 13:48:43.061918 line       495                             continue
excute 13:48:43.064910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:43.068900 line       494                         if (i == j):
excute 13:48:43.072889 line       496                         i_j_list.append((
excute 13:48:43.078873 line       497                             i, j,
excute 13:48:43.083857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.093832 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1)]
excute 13:48:43.105801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:43.112783 line       494                         if (i == j):
excute 13:48:43.116771 line       496                         i_j_list.append((
excute 13:48:43.120758 line       497                             i, j,
excute 13:48:43.123750 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.129739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0)]
excute 13:48:43.132729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:43.137714 line       494                         if (i == j):
excute 13:48:43.141706 line       496                         i_j_list.append((
excute 13:48:43.145694 line       497                             i, j,
excute 13:48:43.149683 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.152674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0)]
excute 13:48:43.159657 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:43.163645 line       494                         if (i == j):
excute 13:48:43.167646 line       496                         i_j_list.append((
excute 13:48:43.170626 line       497                             i, j,
excute 13:48:43.174616 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.179602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0)]
excute 13:48:43.182592 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:43.186582 line       494                         if (i == j):
excute 13:48:43.190573 line       496                         i_j_list.append((
excute 13:48:43.193564 line       497                             i, j,
excute 13:48:43.197553 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.200578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2)]
excute 13:48:43.205533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:43.208555 line       494                         if (i == j):
excute 13:48:43.212545 line       496                         i_j_list.append((
excute 13:48:43.215536 line       497                             i, j,
excute 13:48:43.219527 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.222523 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0)]
excute 13:48:43.226478 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:43.230467 line       494                         if (i == j):
excute 13:48:43.234456 line       496                         i_j_list.append((
excute 13:48:43.238445 line       497                             i, j,
excute 13:48:43.242436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.245456 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:48:43.249414 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:43.252406 line       494                         if (i == j):
excute 13:48:43.257396 line       496                         i_j_list.append((
excute 13:48:43.260385 line       497                             i, j,
excute 13:48:43.264374 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.267366 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:48:43.270358 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:43.274348 line       494                         if (i == j):
excute 13:48:43.278337 line       496                         i_j_list.append((
excute 13:48:43.281361 line       497                             i, j,
excute 13:48:43.285352 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.288343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:48:43.291302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:43.295291 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:43.298284 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:43.302273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:43.307260 line       494                         if (i == j):
excute 13:48:43.310251 line       496                         i_j_list.append((
excute 13:48:43.314242 line       497                             i, j,
excute 13:48:43.317233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.325213 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0)]
excute 13:48:43.334189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:43.342168 line       494                         if (i == j):
excute 13:48:43.348153 line       495                             continue
excute 13:48:43.352142 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:43.356131 line       494                         if (i == j):
excute 13:48:43.360120 line       496                         i_j_list.append((
excute 13:48:43.364109 line       497                             i, j,
excute 13:48:43.368099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.371091 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:48:43.375080 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:43.380066 line       494                         if (i == j):
excute 13:48:43.383089 line       496                         i_j_list.append((
excute 13:48:43.387079 line       497                             i, j,
excute 13:48:43.391035 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.394060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:48:43.397020 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:43.401010 line       494                         if (i == j):
excute 13:48:43.405000 line       496                         i_j_list.append((
excute 13:48:43.409987 line       497                             i, j,
excute 13:48:43.412978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.416968 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:48:43.419959 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:43.423948 line       494                         if (i == j):
excute 13:48:43.427939 line       496                         i_j_list.append((
excute 13:48:43.430931 line       497                             i, j,
excute 13:48:43.433922 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.437911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2)]
excute 13:48:43.440902 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:43.444892 line       494                         if (i == j):
excute 13:48:43.448886 line       496                         i_j_list.append((
excute 13:48:43.452872 line       497                             i, j,
excute 13:48:43.456861 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.461848 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0)]
excute 13:48:43.465837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:43.469829 line       494                         if (i == j):
excute 13:48:43.473816 line       496                         i_j_list.append((
excute 13:48:43.478815 line       497                             i, j,
excute 13:48:43.481794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.484816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:48:43.488806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:43.492797 line       494                         if (i == j):
excute 13:48:43.495787 line       496                         i_j_list.append((
excute 13:48:43.499746 line       497                             i, j,
excute 13:48:43.502738 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.506728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:48:43.510719 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:43.515705 line       494                         if (i == j):
excute 13:48:43.519694 line       496                         i_j_list.append((
excute 13:48:43.522685 line       497                             i, j,
excute 13:48:43.526675 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.530664 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:48:43.534653 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:43.538644 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:43.541635 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:43.545622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:43.548615 line       494                         if (i == j):
excute 13:48:43.552605 line       496                         i_j_list.append((
excute 13:48:43.558588 line       497                             i, j,
excute 13:48:43.561581 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.565570 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:48:43.568562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:43.572552 line       494                         if (i == j):
excute 13:48:43.576541 line       496                         i_j_list.append((
excute 13:48:43.579533 line       497                             i, j,
excute 13:48:43.583522 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.586514 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1)]
excute 13:48:43.590507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:43.595504 line       494                         if (i == j):
excute 13:48:43.599480 line       495                             continue
excute 13:48:43.602502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:43.605494 line       494                         if (i == j):
excute 13:48:43.609483 line       496                         i_j_list.append((
excute 13:48:43.614466 line       497                             i, j,
excute 13:48:43.617444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.620454 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0)]
excute 13:48:43.624444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:43.627435 line       494                         if (i == j):
excute 13:48:43.631396 line       496                         i_j_list.append((
excute 13:48:43.635384 line       497                             i, j,
excute 13:48:43.640370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.643363 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:48:43.647353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:43.651343 line       494                         if (i == j):
excute 13:48:43.655332 line       496                         i_j_list.append((
excute 13:48:43.659320 line       497                             i, j,
excute 13:48:43.663310 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.666302 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2)]
excute 13:48:43.670291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:43.675277 line       494                         if (i == j):
excute 13:48:43.679268 line       496                         i_j_list.append((
excute 13:48:43.682259 line       497                             i, j,
excute 13:48:43.686248 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.690237 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0)]
excute 13:48:43.693229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:43.698218 line       494                         if (i == j):
excute 13:48:43.702208 line       496                         i_j_list.append((
excute 13:48:43.705198 line       497                             i, j,
excute 13:48:43.709187 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.713175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:43.718164 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:43.722152 line       494                         if (i == j):
excute 13:48:43.726144 line       496                         i_j_list.append((
excute 13:48:43.729133 line       497                             i, j,
excute 13:48:43.732125 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.736115 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:43.739106 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:43.743106 line       494                         if (i == j):
excute 13:48:43.747084 line       496                         i_j_list.append((
excute 13:48:43.750077 line       497                             i, j,
excute 13:48:43.753069 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.757058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:43.760050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:43.764040 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:43.768029 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:43.784983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:43.790966 line       494                         if (i == j):
excute 13:48:43.797948 line       496                         i_j_list.append((
excute 13:48:43.800939 line       497                             i, j,
excute 13:48:43.804929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.809916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0)]
excute 13:48:43.812908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:43.816897 line       494                         if (i == j):
excute 13:48:43.821883 line       496                         i_j_list.append((
excute 13:48:43.825873 line       497                             i, j,
excute 13:48:43.828865 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.832854 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1)]
excute 13:48:43.835846 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:43.839836 line       494                         if (i == j):
excute 13:48:43.842827 line       496                         i_j_list.append((
excute 13:48:43.846818 line       497                             i, j,
excute 13:48:43.849809 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.852801 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0)]
excute 13:48:43.856790 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:43.860781 line       494                         if (i == j):
excute 13:48:43.864771 line       495                             continue
excute 13:48:43.867792 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:43.870785 line       494                         if (i == j):
excute 13:48:43.875773 line       496                         i_j_list.append((
excute 13:48:43.878764 line       497                             i, j,
excute 13:48:43.881755 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.885713 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0)]
excute 13:48:43.888705 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:43.892694 line       494                         if (i == j):
excute 13:48:43.896685 line       496                         i_j_list.append((
excute 13:48:43.899709 line       497                             i, j,
excute 13:48:43.903697 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.906689 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2)]
excute 13:48:43.909680 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:43.913671 line       494                         if (i == j):
excute 13:48:43.917629 line       496                         i_j_list.append((
excute 13:48:43.921619 line       497                             i, j,
excute 13:48:43.924643 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.928630 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0)]
excute 13:48:43.931622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:43.935580 line       494                         if (i == j):
excute 13:48:43.939571 line       496                         i_j_list.append((
excute 13:48:43.942592 line       497                             i, j,
excute 13:48:43.946584 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.950540 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0)]
excute 13:48:43.953532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:43.958520 line       494                         if (i == j):
excute 13:48:43.962508 line       496                         i_j_list.append((
excute 13:48:43.966499 line       497                             i, j,
excute 13:48:43.970489 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.974477 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0)]
excute 13:48:43.977482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:43.981489 line       494                         if (i == j):
excute 13:48:43.985462 line       496                         i_j_list.append((
excute 13:48:43.988473 line       497                             i, j,
excute 13:48:43.992428 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:43.995452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0)]
excute 13:48:43.999441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:44.003400 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:44.006425 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:44.010382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:44.013403 line       494                         if (i == j):
excute 13:48:44.017364 line       496                         i_j_list.append((
excute 13:48:44.020388 line       497                             i, j,
excute 13:48:44.025373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.028370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0)]
excute 13:48:44.032328 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:44.035345 line       494                         if (i == j):
excute 13:48:44.039334 line       496                         i_j_list.append((
excute 13:48:44.043324 line       497                             i, j,
excute 13:48:44.046317 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.050281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1)]
excute 13:48:44.053297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:44.057257 line       494                         if (i == j):
excute 13:48:44.061244 line       496                         i_j_list.append((
excute 13:48:44.064236 line       497                             i, j,
excute 13:48:44.068225 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.071217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0)]
excute 13:48:44.075206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:44.079196 line       494                         if (i == j):
excute 13:48:44.082188 line       496                         i_j_list.append((
excute 13:48:44.086177 line       497                             i, j,
excute 13:48:44.090167 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.096183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:48:44.100141 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:44.106265 line       494                         if (i == j):
excute 13:48:44.111280 line       495                             continue
excute 13:48:44.114271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:44.117236 line       494                         if (i == j):
excute 13:48:44.121260 line       496                         i_j_list.append((
excute 13:48:44.125217 line       497                             i, j,
excute 13:48:44.129204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.133193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2)]
excute 13:48:44.137193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:44.141172 line       494                         if (i == j):
excute 13:48:44.144196 line       496                         i_j_list.append((
excute 13:48:44.148186 line       497                             i, j,
excute 13:48:44.151177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.155166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0)]
excute 13:48:44.159125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:44.162147 line       494                         if (i == j):
excute 13:48:44.166140 line       496                         i_j_list.append((
excute 13:48:44.170094 line       497                             i, j,
excute 13:48:44.173120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.176111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:48:44.180100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:44.183093 line       494                         if (i == j):
excute 13:48:44.187081 line       496                         i_j_list.append((
excute 13:48:44.191043 line       497                             i, j,
excute 13:48:44.194063 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.198020 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:48:44.201012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:44.205001 line       494                         if (i == j):
excute 13:48:44.208991 line       496                         i_j_list.append((
excute 13:48:44.211982 line       497                             i, j,
excute 13:48:44.214975 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.218963 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:48:44.221956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:44.225945 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:44.229936 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:44.233938 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:44.236947 line       494                         if (i == j):
excute 13:48:44.240940 line       496                         i_j_list.append((
excute 13:48:44.244927 line       497                             i, j,
excute 13:48:44.247919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.250880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0)]
excute 13:48:44.254869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:44.259855 line       494                         if (i == j):
excute 13:48:44.264843 line       496                         i_j_list.append((
excute 13:48:44.267833 line       497                             i, j,
excute 13:48:44.273817 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.279803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1)]
excute 13:48:44.283792 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:44.288790 line       494                         if (i == j):
excute 13:48:44.292774 line       496                         i_j_list.append((
excute 13:48:44.295760 line       497                             i, j,
excute 13:48:44.299750 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.303739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0)]
excute 13:48:44.307729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:44.311718 line       494                         if (i == j):
excute 13:48:44.315706 line       496                         i_j_list.append((
excute 13:48:44.319696 line       497                             i, j,
excute 13:48:44.323686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.329670 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:48:44.339643 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:44.343632 line       494                         if (i == j):
excute 13:48:44.348650 line       496                         i_j_list.append((
excute 13:48:44.352607 line       497                             i, j,
excute 13:48:44.357595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.362582 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:48:44.367598 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:44.371588 line       494                         if (i == j):
excute 13:48:44.375576 line       495                             continue
excute 13:48:44.379566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:44.383555 line       494                         if (i == j):
excute 13:48:44.387513 line       496                         i_j_list.append((
excute 13:48:44.391503 line       497                             i, j,
excute 13:48:44.394494 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.398485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:48:44.401476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:44.404468 line       494                         if (i == j):
excute 13:48:44.408457 line       496                         i_j_list.append((
excute 13:48:44.412447 line       497                             i, j,
excute 13:48:44.415438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.418430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:48:44.422423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:44.425413 line       494                         if (i == j):
excute 13:48:44.429401 line       496                         i_j_list.append((
excute 13:48:44.432393 line       497                             i, j,
excute 13:48:44.436382 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.440373 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:48:44.444362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:44.449381 line       494                         if (i == j):
excute 13:48:44.453340 line       496                         i_j_list.append((
excute 13:48:44.457327 line       497                             i, j,
excute 13:48:44.462314 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.468299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:48:44.471321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:44.475280 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:44.479270 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:44.483259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:44.487248 line       494                         if (i == j):
excute 13:48:44.491238 line       496                         i_j_list.append((
excute 13:48:44.495227 line       497                             i, j,
excute 13:48:44.501210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.505205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0)]
excute 13:48:44.509191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:44.514176 line       494                         if (i == j):
excute 13:48:44.520165 line       496                         i_j_list.append((
excute 13:48:44.528195 line       497                             i, j,
excute 13:48:44.531155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.535176 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1)]
excute 13:48:44.538169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:44.543122 line       494                         if (i == j):
excute 13:48:44.547112 line       496                         i_j_list.append((
excute 13:48:44.550103 line       497                             i, j,
excute 13:48:44.553095 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.557084 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0)]
excute 13:48:44.561076 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:44.566096 line       494                         if (i == j):
excute 13:48:44.570082 line       496                         i_j_list.append((
excute 13:48:44.574042 line       497                             i, j,
excute 13:48:44.577031 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.580023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0)]
excute 13:48:44.584013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:44.588002 line       494                         if (i == j):
excute 13:48:44.594984 line       496                         i_j_list.append((
excute 13:48:44.598974 line       497                             i, j,
excute 13:48:44.602962 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.605954 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0)]
excute 13:48:44.608946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:44.612936 line       494                         if (i == j):
excute 13:48:44.617923 line       496                         i_j_list.append((
excute 13:48:44.620914 line       497                             i, j,
excute 13:48:44.623906 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.627895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2)]
excute 13:48:44.630921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:44.634910 line       494                         if (i == j):
excute 13:48:44.638898 line       495                             continue
excute 13:48:44.643857 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:44.646845 line       494                         if (i == j):
excute 13:48:44.650834 line       496                         i_j_list.append((
excute 13:48:44.653826 line       497                             i, j,
excute 13:48:44.657816 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.660808 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0)]
excute 13:48:44.664796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:44.668787 line       494                         if (i == j):
excute 13:48:44.672781 line       496                         i_j_list.append((
excute 13:48:44.675767 line       497                             i, j,
excute 13:48:44.679757 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.682749 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0)]
excute 13:48:44.686739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:44.689730 line       494                         if (i == j):
excute 13:48:44.693720 line       496                         i_j_list.append((
excute 13:48:44.697711 line       497                             i, j,
excute 13:48:44.700701 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.703693 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0)]
excute 13:48:44.707683 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:44.711673 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:44.715661 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:44.719652 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:44.722674 line       494                         if (i == j):
excute 13:48:44.726648 line       496                         i_j_list.append((
excute 13:48:44.729655 line       497                             i, j,
excute 13:48:44.733648 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.736636 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0)]
excute 13:48:44.740595 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:44.744586 line       494                         if (i == j):
excute 13:48:44.749585 line       496                         i_j_list.append((
excute 13:48:44.752598 line       497                             i, j,
excute 13:48:44.756583 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.760541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1)]
excute 13:48:44.764532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:44.768523 line       494                         if (i == j):
excute 13:48:44.772512 line       496                         i_j_list.append((
excute 13:48:44.778493 line       497                             i, j,
excute 13:48:44.782514 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.785505 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0)]
excute 13:48:44.789498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:44.793453 line       494                         if (i == j):
excute 13:48:44.797443 line       496                         i_j_list.append((
excute 13:48:44.802461 line       497                             i, j,
excute 13:48:44.806432 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.809442 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:48:44.812434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:44.816423 line       494                         if (i == j):
excute 13:48:44.821379 line       496                         i_j_list.append((
excute 13:48:44.824407 line       497                             i, j,
excute 13:48:44.828369 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.831384 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:48:44.834375 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:44.838365 line       494                         if (i == j):
excute 13:48:44.842355 line       496                         i_j_list.append((
excute 13:48:44.845348 line       497                             i, j,
excute 13:48:44.851300 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.855289 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2)]
excute 13:48:44.859277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:44.863267 line       494                         if (i == j):
excute 13:48:44.867256 line       496                         i_j_list.append((
excute 13:48:44.870248 line       497                             i, j,
excute 13:48:44.873240 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.877229 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0)]
excute 13:48:44.880256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:44.884227 line       494                         if (i == j):
excute 13:48:44.888217 line       495                             continue
excute 13:48:44.891223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:44.895213 line       494                         if (i == j):
excute 13:48:44.899172 line       496                         i_j_list.append((
excute 13:48:44.902194 line       497                             i, j,
excute 13:48:44.906152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.909179 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:48:44.912172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:44.916140 line       494                         if (i == j):
excute 13:48:44.920145 line       496                         i_j_list.append((
excute 13:48:44.924137 line       497                             i, j,
excute 13:48:44.927129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.931090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:44.934079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:44.938066 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:44.943053 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:44.947042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:44.954034 line       494                         if (i == j):
excute 13:48:44.957050 line       496                         i_j_list.append((
excute 13:48:44.961037 line       497                             i, j,
excute 13:48:44.965029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.968022 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:44.972008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:44.975969 line       494                         if (i == j):
excute 13:48:44.979966 line       496                         i_j_list.append((
excute 13:48:44.982946 line       497                             i, j,
excute 13:48:44.986935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:44.989928 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1)]
excute 13:48:44.992920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:44.996909 line       494                         if (i == j):
excute 13:48:45.000899 line       496                         i_j_list.append((
excute 13:48:45.004888 line       497                             i, j,
excute 13:48:45.007910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.011902 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0)]
excute 13:48:45.014894 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:45.019849 line       494                         if (i == j):
excute 13:48:45.022871 line       496                         i_j_list.append((
excute 13:48:45.026861 line       497                             i, j,
excute 13:48:45.029852 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.033813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:48:45.036804 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:45.040794 line       494                         if (i == j):
excute 13:48:45.044781 line       496                         i_j_list.append((
excute 13:48:45.047773 line       497                             i, j,
excute 13:48:45.051762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.055755 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:48:45.059750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:45.063731 line       494                         if (i == j):
excute 13:48:45.066756 line       496                         i_j_list.append((
excute 13:48:45.070744 line       497                             i, j,
excute 13:48:45.074703 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.078690 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2)]
excute 13:48:45.081718 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:45.085672 line       494                         if (i == j):
excute 13:48:45.092656 line       496                         i_j_list.append((
excute 13:48:45.095645 line       497                             i, j,
excute 13:48:45.099634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.103623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0)]
excute 13:48:45.106616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:45.110605 line       494                         if (i == j):
excute 13:48:45.114594 line       496                         i_j_list.append((
excute 13:48:45.117587 line       497                             i, j,
excute 13:48:45.121576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.125567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:45.129554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:45.133546 line       494                         if (i == j):
excute 13:48:45.137546 line       495                             continue
excute 13:48:45.140559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:45.144547 line       494                         if (i == j):
excute 13:48:45.148539 line       496                         i_j_list.append((
excute 13:48:45.151532 line       497                             i, j,
excute 13:48:45.155489 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.160472 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:45.163495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:45.167457 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:45.170478 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:45.174466 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:45.178456 line       494                         if (i == j):
excute 13:48:45.182414 line       496                         i_j_list.append((
excute 13:48:45.185440 line       497                             i, j,
excute 13:48:45.188431 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.192419 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0)]
excute 13:48:45.195410 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:45.199405 line       494                         if (i == j):
excute 13:48:45.203389 line       496                         i_j_list.append((
excute 13:48:45.207383 line       497                             i, j,
excute 13:48:45.210371 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.214328 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1)]
excute 13:48:45.217327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:45.221310 line       494                         if (i == j):
excute 13:48:45.225300 line       496                         i_j_list.append((
excute 13:48:45.228324 line       497                             i, j,
excute 13:48:45.232280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.235304 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0)]
excute 13:48:45.239292 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:45.243252 line       494                         if (i == j):
excute 13:48:45.247242 line       496                         i_j_list.append((
excute 13:48:45.250264 line       497                             i, j,
excute 13:48:45.254253 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.258210 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:48:45.263229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:45.267191 line       494                         if (i == j):
excute 13:48:45.271177 line       496                         i_j_list.append((
excute 13:48:45.274199 line       497                             i, j,
excute 13:48:45.278191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.282147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:48:45.285170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:45.289128 line       494                         if (i == j):
excute 13:48:45.293119 line       496                         i_j_list.append((
excute 13:48:45.296141 line       497                             i, j,
excute 13:48:45.300133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.303121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 2)]
excute 13:48:45.307080 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:45.310103 line       494                         if (i == j):
excute 13:48:45.314093 line       496                         i_j_list.append((
excute 13:48:45.318056 line       497                             i, j,
excute 13:48:45.321075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.325063 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 2), (9, 6, 1, 0)]
excute 13:48:45.331017 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:45.337997 line       494                         if (i == j):
excute 13:48:45.340989 line       496                         i_j_list.append((
excute 13:48:45.344979 line       497                             i, j,
excute 13:48:45.349967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.353956 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 2), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:48:45.357945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:45.363929 line       494                         if (i == j):
excute 13:48:45.367919 line       496                         i_j_list.append((
excute 13:48:45.370941 line       497                             i, j,
excute 13:48:45.374929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:45.378920 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 2), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 2), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 2, 0), (4, 1, 2, 1), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 2), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, -1, 0), (6, 1, -1, 1), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 5, -1, 2), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 2), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 2), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:48:45.381912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:45.386868 line       494                         if (i == j):
excute 13:48:45.390889 line       495                             continue
excute 13:48:45.393848 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:45.397837 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:45.400860 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (6, 0, -1, 0), (6, 2, -1, 0), (6, 3, -1, 0), (6, 4, -1, 0), (6, 7, -1, 0), (6, 8, -1, 0), (6, 9, -1, 0), (7, 0, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 1, -1, 1), (6, 1, -1, 1), (7, 1, -1, 1), (0, 5, -1, 2), (6, 5, -1, 2), (7, 5, -1, 2), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (8, 0, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (8, 1, 0, 1), (1, 5, 0, 2), (8, 5, 0, 2), (5, 0, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (9, 0, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (5, 1, 1, 1), (9, 1, 1, 1), (9, 5, 1, 2), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (4, 0, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (2, 1, 2, 1), (4, 1, 2, 1), (2, 5, 2, 2), (4, 5, 2, 2), (3, 0, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (3, 1, 8, 1), (3, 5, 8, 2)]
excute 13:48:45.404819 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:45.408808 line       505                     if (self.RELOCATE):
excute 13:48:45.411835 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:45.415826 line       505                     if (self.RELOCATE):
excute 13:48:45.419805 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:45.422801 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:45.426797 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:45.430751 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:45.434778 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.438728 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 0)
excute 13:48:45.441756 line       556                     i = i_j[0]
excute 13:48:45.445711 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:45.449735 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.453689 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:45.456712 line       556                     i = i_j[0]
excute 13:48:45.461668 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:45.468711 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.472709 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:45.475736 line       556                     i = i_j[0]
excute 13:48:45.479688 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:45.483678 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.487667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:45.490660 line       556                     i = i_j[0]
excute 13:48:45.494649 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:45.498638 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.502628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:45.505651 line       556                     i = i_j[0]
excute 13:48:45.510623 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:45.513629 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.517619 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:45.521608 line       556                     i = i_j[0]
excute 13:48:45.525568 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:45.529555 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.532581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, -1, 0)
excute 13:48:45.536568 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:45.540526 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:45.544516 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.547507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, -1, 0)
excute 13:48:45.551497 line       556                     i = i_j[0]
excute 13:48:45.555487 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:45.559475 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.563465 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, -1, 0)
excute 13:48:45.566488 line       556                     i = i_j[0]
excute 13:48:45.571477 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:45.575468 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.579422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, -1, 0)
excute 13:48:45.583412 line       556                     i = i_j[0]
excute 13:48:45.587402 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:45.590393 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.597375 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, -1, 0)
excute 13:48:45.600368 line       556                     i = i_j[0]
excute 13:48:45.604356 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:45.608345 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.612345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, -1, 0)
excute 13:48:45.615326 line       556                     i = i_j[0]
excute 13:48:45.619316 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:45.623307 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.626297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, -1, 0)
excute 13:48:45.630286 line       556                     i = i_j[0]
excute 13:48:45.634275 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:45.638298 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.642256 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:45.645278 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:45.649236 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:45.653226 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.657246 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:45.661204 line       556                     i = i_j[0]
excute 13:48:45.664227 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:45.669186 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.673174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:48:45.677160 line       556                     i = i_j[0]
excute 13:48:45.681150 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:45.684144 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.688132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:45.692121 line       556                     i = i_j[0]
excute 13:48:45.697110 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:45.700134 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.704120 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:45.708095 line       556                     i = i_j[0]
excute 13:48:45.711105 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:45.716058 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.720049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:45.724040 line       556                     i = i_j[0]
excute 13:48:45.727027 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:45.731016 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.735007 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:45.737999 line       556                     i = i_j[0]
excute 13:48:45.741987 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:45.744980 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.748969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 1)
excute 13:48:45.752958 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:45.757945 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:45.761934 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.765924 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, -1, 1)
excute 13:48:45.768947 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:45.773904 line       557                     j = i_j[1]
excute 13:48:45.777895 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.781882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 1)
excute 13:48:45.784872 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:45.787865 line       557                     j = i_j[1]
excute 13:48:45.792859 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.795843 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 148
excute 13:48:45.799866 line       560                         if (t_tmp > self.TIME):
excute 13:48:45.803823 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:45.806814 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:45.809806 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 170
excute 13:48:45.813796 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:45.817787 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 2)
excute 13:48:45.820777 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:45.824766 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:45.828755 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.832745 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, -1, 2)
excute 13:48:45.835737 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:45.839726 line       557                     j = i_j[1]
excute 13:48:45.843716 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.846708 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 143
excute 13:48:45.850697 line       560                         if (t_tmp > self.TIME):
excute 13:48:45.854686 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:45.857678 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:45.861667 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:45.864659 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:45.868658 line       569                                     available_vhecles[i][t],
excute 13:48:45.871641 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:45.875632 line       571                                     self.S_capacities[j],
excute 13:48:45.879620 line       572                                     demands[t][i][j],
excute 13:48:45.883610 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 5
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 133
calc_contract     13:48:45.886601 call       352     def caluculate_contract(
calc_contract     13:48:45.889594 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:45.890592 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:45.891588 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:45.891588 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:45.892587 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:48:45.892587 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:45.893584 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. can_contract = 1
excute 13:48:45.894581 line       575                                 rsf += rsf_tmp
excute 13:48:45.898570 line       576                                 rse += rse_tmp
excute 13:48:45.902558 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 133
move_cars     Starting var:.. t_tmp = 143
move_cars     Starting var:.. can_contract = 1
move_cars     13:48:45.905550 call       388     def move_cars(
move_cars     13:48:45.909541 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:45.910538 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:48:45.912536 line       399         return available_vhecles
move_cars     13:48:45.913562 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:45.915560 line       579                                 success += can_contract
excute Modified var:.. success = 56
excute 13:48:45.919546 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 2)
excute 13:48:45.923538 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:45.927520 line       557                     j = i_j[1]
excute 13:48:45.931483 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.934508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:48:45.938494 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:45.942454 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:45.946474 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.950430 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:48:45.955420 line       556                     i = i_j[0]
excute 13:48:45.959407 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:45.965392 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.970382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:48:45.973401 line       556                     i = i_j[0]
excute 13:48:45.979356 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:45.982345 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:45.986334 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:48:45.990324 line       556                     i = i_j[0]
excute 13:48:45.994315 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:45.998304 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.002292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:48:46.005284 line       556                     i = i_j[0]
excute 13:48:46.009273 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:46.013294 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.017253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:48:46.020276 line       556                     i = i_j[0]
excute 13:48:46.024265 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:46.028255 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.032246 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:48:46.035205 line       556                     i = i_j[0]
excute 13:48:46.039193 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:46.043182 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.047172 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:48:46.050164 line       556                     i = i_j[0]
excute 13:48:46.054153 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:46.058157 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.062132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:46.065124 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:46.070112 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:46.076094 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.083078 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:46.086068 line       556                     i = i_j[0]
excute 13:48:46.093050 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:46.097040 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.101036 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:48:46.104020 line       556                     i = i_j[0]
excute 13:48:46.108010 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:46.111999 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.116000 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:46.119978 line       556                     i = i_j[0]
excute 13:48:46.122969 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:46.126958 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.130948 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:46.133940 line       556                     i = i_j[0]
excute 13:48:46.137930 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:46.141919 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.144910 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:46.148900 line       556                     i = i_j[0]
excute 13:48:46.152890 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:46.155882 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.159870 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:46.163860 line       556                     i = i_j[0]
excute 13:48:46.167850 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:46.170843 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.174862 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 1)
excute 13:48:46.178854 line       556                     i = i_j[0]
excute 13:48:46.183831 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:46.186798 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.190787 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 2)
excute 13:48:46.193780 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:46.198772 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:46.202762 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.206747 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 2)
excute 13:48:46.209769 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:46.213729 line       557                     j = i_j[1]
excute 13:48:46.217717 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.220740 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:48:46.224729 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:46.228707 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:46.232685 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.235700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:48:46.239688 line       556                     i = i_j[0]
excute 13:48:46.243680 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:46.246670 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.250628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:48:46.254651 line       556                     i = i_j[0]
excute 13:48:46.258607 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:46.261633 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.265588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:48:46.268611 line       556                     i = i_j[0]
excute 13:48:46.272600 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:46.276591 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.280580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:48:46.286534 line       556                     i = i_j[0]
excute 13:48:46.290523 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:46.293548 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.297504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:48:46.300529 line       556                     i = i_j[0]
excute 13:48:46.304515 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:46.308487 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.312463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:48:46.315486 line       556                     i = i_j[0]
excute 13:48:46.319446 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:46.323436 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.329418 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:48:46.337398 line       556                     i = i_j[0]
excute 13:48:46.343384 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:46.350361 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.358341 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:48:46.362331 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:46.368314 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:46.372303 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.377290 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:48:46.381279 line       556                     i = i_j[0]
excute 13:48:46.389258 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:46.395243 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.400229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:48:46.404218 line       556                     i = i_j[0]
excute 13:48:46.409205 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:46.414192 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.421173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:48:46.425163 line       556                     i = i_j[0]
excute 13:48:46.433141 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:46.438128 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.443117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:48:46.449098 line       556                     i = i_j[0]
excute 13:48:46.457077 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:46.462064 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.466055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:48:46.473034 line       556                     i = i_j[0]
excute 13:48:46.482012 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:46.489989 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.500960 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:48:46.506944 line       556                     i = i_j[0]
excute 13:48:46.514923 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:46.519910 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.525892 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 1)
excute 13:48:46.530880 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:46.536863 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:46.544842 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.552821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 1)
excute 13:48:46.558805 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:46.564789 line       557                     j = i_j[1]
excute 13:48:46.572767 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.578752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 2)
excute 13:48:46.583738 line       556                     i = i_j[0]
excute 13:48:46.589725 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:46.598698 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.604681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:46.610666 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:46.616650 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:46.625625 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.632607 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:48:46.639590 line       556                     i = i_j[0]
excute 13:48:46.646570 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:46.651557 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.657543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:46.666516 line       556                     i = i_j[0]
excute 13:48:46.675493 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:46.680478 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.688459 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:46.694441 line       556                     i = i_j[0]
excute 13:48:46.702422 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:46.708405 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.717380 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:46.725358 line       556                     i = i_j[0]
excute 13:48:46.732341 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:46.738324 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.746303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:46.751290 line       556                     i = i_j[0]
excute 13:48:46.758272 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:46.763257 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.770239 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:46.776225 line       556                     i = i_j[0]
excute 13:48:46.783205 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:46.788191 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.797169 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:48:46.801156 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:46.807140 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:46.811130 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.816117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:48:46.820105 line       556                     i = i_j[0]
excute 13:48:46.824095 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:46.843794 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.847783 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:48:46.851772 line       556                     i = i_j[0]
excute 13:48:46.856761 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:46.860749 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.863740 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:48:46.867730 line       556                     i = i_j[0]
excute 13:48:46.871720 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:46.875710 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.879700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:48:46.883688 line       556                     i = i_j[0]
excute 13:48:46.887678 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:46.891667 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.896654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:48:46.899644 line       556                     i = i_j[0]
excute 13:48:46.904633 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:46.909619 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.913609 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:48:46.917598 line       556                     i = i_j[0]
excute 13:48:46.921587 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:46.925576 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.929567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:48:46.933554 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:46.937544 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:46.945525 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.951519 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 1)
excute 13:48:46.955497 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:46.960482 line       557                     j = i_j[1]
excute 13:48:46.965469 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.971454 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 2)
excute 13:48:46.975441 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:46.979433 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:46.983423 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:46.987410 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 2)
excute 13:48:46.990403 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:46.994392 line       557                     j = i_j[1]
excute 13:48:46.998382 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:47.001373 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 140
excute 13:48:47.004365 line       560                         if (t_tmp > self.TIME):
excute 13:48:47.009354 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:47.013341 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:47.017331 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:47.020322 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:47.024311 line       569                                     available_vhecles[i][t],
excute 13:48:47.027302 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:47.031292 line       571                                     self.S_capacities[j],
excute 13:48:47.034283 line       572                                     demands[t][i][j],
excute 13:48:47.037276 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 2
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 133
calc_contract     13:48:47.041266 call       352     def caluculate_contract(
calc_contract     13:48:47.044258 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:47.045258 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:47.046255 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:47.047251 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:47.047251 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:48:47.048248 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:47.049244 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:48:47.050242 line       575                                 rsf += rsf_tmp
excute 13:48:47.054230 line       576                                 rse += rse_tmp
excute 13:48:47.058222 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 4
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 133
move_cars     Starting var:.. t_tmp = 140
move_cars     Starting var:.. can_contract = 1
move_cars     13:48:47.062211 call       388     def move_cars(
move_cars     13:48:47.067197 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:47.068228 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:48:47.069226 line       399         return available_vhecles
move_cars     13:48:47.071188 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:47.073213 line       579                                 success += can_contract
excute Modified var:.. success = 57
excute 13:48:47.077170 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 8, 0)
excute 13:48:47.081158 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:47.085148 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:47.091132 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:47.097120 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 8, 0)
excute 13:48:47.100139 line       556                     i = i_j[0]
excute 13:48:47.104130 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:47.108087 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:47.112080 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 8, 0)
excute 13:48:47.116067 line       556                     i = i_j[0]
excute 13:48:47.120056 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:47.124045 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:47.128035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 8, 0)
excute 13:48:47.132024 line       556                     i = i_j[0]
excute 13:48:47.137012 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:47.141001 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:47.144989 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 8, 0)
excute 13:48:47.148979 line       556                     i = i_j[0]
excute 13:48:47.153964 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:47.157955 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:47.161944 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 8, 0)
excute 13:48:47.164935 line       556                     i = i_j[0]
excute 13:48:47.168924 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:47.171916 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:47.175909 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 8, 0)
excute 13:48:47.178897 line       556                     i = i_j[0]
excute 13:48:47.182886 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:47.186876 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:47.190866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 8, 1)
excute 13:48:47.193857 line       556                     i = i_j[0]
excute 13:48:47.197847 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:47.200839 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:47.204828 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 8, 2)
excute 13:48:47.207820 line       556                     i = i_j[0]
excute 13:48:47.212809 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:47.216798 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:47.220788 line       555                 for i_j in i_j_list:
excute 13:48:47.224806 line       581             self.write_matrix(
excute 13:48:47.227800 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:47.231788 line       583                 result_file_path,
excute 13:48:47.234780 line       584                 mode='a'
excute 13:48:47.241730 line       488         for t in time_steps:
excute Modified var:.. t = 134
excute 13:48:47.246720 line       489             if (t != self.TIME + 1):
excute 13:48:47.250708 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:47.255695 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:47.259684 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:47.264672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:47.268660 line       494                         if (i == j):
excute 13:48:47.273645 line       495                             continue
excute 13:48:47.277636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:47.283619 line       494                         if (i == j):
excute 13:48:47.287608 line       496                         i_j_list.append((
excute 13:48:47.291598 line       497                             i, j,
excute 13:48:47.295586 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.303567 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0)]
excute 13:48:47.313539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:47.321520 line       494                         if (i == j):
excute 13:48:47.330505 line       496                         i_j_list.append((
excute 13:48:47.340466 line       497                             i, j,
excute 13:48:47.346453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.351439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0)]
excute 13:48:47.356425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:47.363406 line       494                         if (i == j):
excute 13:48:47.368392 line       496                         i_j_list.append((
excute 13:48:47.371384 line       497                             i, j,
excute 13:48:47.375373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.380360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0)]
excute 13:48:47.387348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:47.392329 line       494                         if (i == j):
excute 13:48:47.397315 line       496                         i_j_list.append((
excute 13:48:47.401304 line       497                             i, j,
excute 13:48:47.404294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.407287 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0)]
excute 13:48:47.411277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:47.415265 line       494                         if (i == j):
excute 13:48:47.420253 line       496                         i_j_list.append((
excute 13:48:47.424242 line       497                             i, j,
excute 13:48:47.428232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.432221 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0)]
excute 13:48:47.435213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:47.440199 line       494                         if (i == j):
excute 13:48:47.444190 line       496                         i_j_list.append((
excute 13:48:47.448179 line       497                             i, j,
excute 13:48:47.451170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.455159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0)]
excute 13:48:47.458151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:47.462140 line       494                         if (i == j):
excute 13:48:47.469124 line       496                         i_j_list.append((
excute 13:48:47.473111 line       497                             i, j,
excute 13:48:47.477101 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.481090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0)]
excute 13:48:47.485079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:47.489069 line       494                         if (i == j):
excute 13:48:47.493059 line       496                         i_j_list.append((
excute 13:48:47.497047 line       497                             i, j,
excute 13:48:47.501036 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.504028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1)]
excute 13:48:47.507020 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:47.512008 line       494                         if (i == j):
excute 13:48:47.515997 line       496                         i_j_list.append((
excute 13:48:47.519987 line       497                             i, j,
excute 13:48:47.524973 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.531955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0)]
excute 13:48:47.537940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:47.542925 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:47.546914 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:47.550904 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:47.554893 line       494                         if (i == j):
excute 13:48:47.558882 line       496                         i_j_list.append((
excute 13:48:47.562872 line       497                             i, j,
excute 13:48:47.566861 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.569853 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0)]
excute 13:48:47.573842 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:47.577832 line       494                         if (i == j):
excute 13:48:47.581821 line       495                             continue
excute 13:48:47.585810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:47.589800 line       494                         if (i == j):
excute 13:48:47.592791 line       496                         i_j_list.append((
excute 13:48:47.596781 line       497                             i, j,
excute 13:48:47.599772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.604759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:48:47.607751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:47.611741 line       494                         if (i == j):
excute 13:48:47.615737 line       496                         i_j_list.append((
excute 13:48:47.619719 line       497                             i, j,
excute 13:48:47.625704 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.631687 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:48:47.635676 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:47.639667 line       494                         if (i == j):
excute 13:48:47.644652 line       496                         i_j_list.append((
excute 13:48:47.648642 line       497                             i, j,
excute 13:48:47.651634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.656621 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:48:47.662604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:47.667593 line       494                         if (i == j):
excute 13:48:47.671595 line       496                         i_j_list.append((
excute 13:48:47.674573 line       497                             i, j,
excute 13:48:47.678562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.684546 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:48:47.687537 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:47.692524 line       494                         if (i == j):
excute 13:48:47.697513 line       496                         i_j_list.append((
excute 13:48:47.700503 line       497                             i, j,
excute 13:48:47.706487 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.710477 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0)]
excute 13:48:47.716460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:47.721447 line       494                         if (i == j):
excute 13:48:47.724439 line       496                         i_j_list.append((
excute 13:48:47.730425 line       497                             i, j,
excute 13:48:47.735409 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.739401 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:48:47.745383 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:47.748376 line       494                         if (i == j):
excute 13:48:47.755365 line       496                         i_j_list.append((
excute 13:48:47.759347 line       497                             i, j,
excute 13:48:47.763335 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.769320 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1)]
excute 13:48:47.772313 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:47.778296 line       494                         if (i == j):
excute 13:48:47.782285 line       496                         i_j_list.append((
excute 13:48:47.788268 line       497                             i, j,
excute 13:48:47.792258 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.796247 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0)]
excute 13:48:47.802231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:47.809213 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:47.815196 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:47.822178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:47.828164 line       494                         if (i == j):
excute 13:48:47.835144 line       496                         i_j_list.append((
excute 13:48:47.841128 line       497                             i, j,
excute 13:48:47.847111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.852098 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:48:47.858082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:47.865066 line       494                         if (i == j):
excute 13:48:47.872045 line       496                         i_j_list.append((
excute 13:48:47.878028 line       497                             i, j,
excute 13:48:47.882019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.887005 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:48:47.892989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:47.898973 line       494                         if (i == j):
excute 13:48:47.904958 line       495                             continue
excute 13:48:47.910940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:47.916924 line       494                         if (i == j):
excute 13:48:47.923906 line       496                         i_j_list.append((
excute 13:48:47.929889 line       497                             i, j,
excute 13:48:47.936872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.942855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:48:47.949837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:47.955821 line       494                         if (i == j):
excute 13:48:47.962803 line       496                         i_j_list.append((
excute 13:48:47.968786 line       497                             i, j,
excute 13:48:47.974771 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:47.979758 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:48:47.985742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:47.991724 line       494                         if (i == j):
excute 13:48:47.995714 line       496                         i_j_list.append((
excute 13:48:47.998706 line       497                             i, j,
excute 13:48:48.002695 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.006686 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:48:48.010673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:48.014665 line       494                         if (i == j):
excute 13:48:48.018654 line       496                         i_j_list.append((
excute 13:48:48.021645 line       497                             i, j,
excute 13:48:48.024636 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.028625 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:48:48.032616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:48.036605 line       494                         if (i == j):
excute 13:48:48.042589 line       496                         i_j_list.append((
excute 13:48:48.045580 line       497                             i, j,
excute 13:48:48.049570 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.052561 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:48.056553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:48.060541 line       494                         if (i == j):
excute 13:48:48.064530 line       496                         i_j_list.append((
excute 13:48:48.067522 line       497                             i, j,
excute 13:48:48.071511 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.074504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1)]
excute 13:48:48.078492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:48.082483 line       494                         if (i == j):
excute 13:48:48.086472 line       496                         i_j_list.append((
excute 13:48:48.089465 line       497                             i, j,
excute 13:48:48.093454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.097442 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0)]
excute 13:48:48.101432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:48.105422 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:48.108414 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:48.112404 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:48.116393 line       494                         if (i == j):
excute 13:48:48.120380 line       496                         i_j_list.append((
excute 13:48:48.124404 line       497                             i, j,
excute 13:48:48.127395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.131384 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0)]
excute 13:48:48.135343 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:48.139330 line       494                         if (i == j):
excute 13:48:48.144318 line       496                         i_j_list.append((
excute 13:48:48.148308 line       497                             i, j,
excute 13:48:48.153293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.159277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0)]
excute 13:48:48.165261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:48.171245 line       494                         if (i == j):
excute 13:48:48.177229 line       496                         i_j_list.append((
excute 13:48:48.182215 line       497                             i, j,
excute 13:48:48.187201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.193186 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0)]
excute 13:48:48.202162 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:48.209143 line       494                         if (i == j):
excute 13:48:48.215127 line       495                             continue
excute 13:48:48.221112 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:48.226098 line       494                         if (i == j):
excute 13:48:48.232083 line       496                         i_j_list.append((
excute 13:48:48.238066 line       497                             i, j,
excute 13:48:48.245048 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.251031 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0)]
excute 13:48:48.257018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:48.263000 line       494                         if (i == j):
excute 13:48:48.269981 line       496                         i_j_list.append((
excute 13:48:48.275965 line       497                             i, j,
excute 13:48:48.281950 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.286935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0)]
excute 13:48:48.293917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:48.299901 line       494                         if (i == j):
excute 13:48:48.305885 line       496                         i_j_list.append((
excute 13:48:48.310873 line       497                             i, j,
excute 13:48:48.316855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.321842 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0)]
excute 13:48:48.328824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:48.337801 line       494                         if (i == j):
excute 13:48:48.342788 line       496                         i_j_list.append((
excute 13:48:48.346779 line       497                             i, j,
excute 13:48:48.353757 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.359742 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0)]
excute 13:48:48.365725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:48.371720 line       494                         if (i == j):
excute 13:48:48.378691 line       496                         i_j_list.append((
excute 13:48:48.384675 line       497                             i, j,
excute 13:48:48.390658 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.396643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1)]
excute 13:48:48.403623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:48.410605 line       494                         if (i == j):
excute 13:48:48.416589 line       496                         i_j_list.append((
excute 13:48:48.423570 line       497                             i, j,
excute 13:48:48.429554 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.435540 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0)]
excute 13:48:48.439528 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:48.444515 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:48.448505 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:48.453491 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:48.458477 line       494                         if (i == j):
excute 13:48:48.462467 line       496                         i_j_list.append((
excute 13:48:48.465458 line       497                             i, j,
excute 13:48:48.469448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.472440 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0)]
excute 13:48:48.476429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:48.481415 line       494                         if (i == j):
excute 13:48:48.485404 line       496                         i_j_list.append((
excute 13:48:48.489394 line       497                             i, j,
excute 13:48:48.493384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.496375 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:48:48.503357 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:48.507347 line       494                         if (i == j):
excute 13:48:48.511337 line       496                         i_j_list.append((
excute 13:48:48.515325 line       497                             i, j,
excute 13:48:48.520311 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.524302 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0)]
excute 13:48:48.531283 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:48.535274 line       494                         if (i == j):
excute 13:48:48.543252 line       496                         i_j_list.append((
excute 13:48:48.549237 line       497                             i, j,
excute 13:48:48.555218 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.560206 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0)]
excute 13:48:48.564195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:48.568184 line       494                         if (i == j):
excute 13:48:48.573171 line       495                             continue
excute 13:48:48.578158 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:48.582147 line       494                         if (i == j):
excute 13:48:48.587134 line       496                         i_j_list.append((
excute 13:48:48.591123 line       497                             i, j,
excute 13:48:48.597107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.603091 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:48:48.609075 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:48.615059 line       494                         if (i == j):
excute 13:48:48.621042 line       496                         i_j_list.append((
excute 13:48:48.627027 line       497                             i, j,
excute 13:48:48.633012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.638994 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0)]
excute 13:48:48.644980 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:48.650963 line       494                         if (i == j):
excute 13:48:48.656946 line       496                         i_j_list.append((
excute 13:48:48.663928 line       497                             i, j,
excute 13:48:48.668914 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.674898 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:48:48.680882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:48.687864 line       494                         if (i == j):
excute 13:48:48.693848 line       496                         i_j_list.append((
excute 13:48:48.698834 line       497                             i, j,
excute 13:48:48.704820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.708807 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1)]
excute 13:48:48.712802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:48.716787 line       494                         if (i == j):
excute 13:48:48.720776 line       496                         i_j_list.append((
excute 13:48:48.724765 line       497                             i, j,
excute 13:48:48.728754 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.732745 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0)]
excute 13:48:48.735737 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:48.740723 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:48.744712 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:48.748702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:48.752691 line       494                         if (i == j):
excute 13:48:48.757678 line       496                         i_j_list.append((
excute 13:48:48.762664 line       497                             i, j,
excute 13:48:48.766653 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.770643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0)]
excute 13:48:48.774633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:48.779621 line       494                         if (i == j):
excute 13:48:48.783608 line       496                         i_j_list.append((
excute 13:48:48.786602 line       497                             i, j,
excute 13:48:48.791587 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.794578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:48:48.798567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:48.802557 line       494                         if (i == j):
excute 13:48:48.806546 line       496                         i_j_list.append((
excute 13:48:48.810535 line       497                             i, j,
excute 13:48:48.814524 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.817517 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:48:48.821506 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:48.826493 line       494                         if (i == j):
excute 13:48:48.830483 line       496                         i_j_list.append((
excute 13:48:48.834471 line       497                             i, j,
excute 13:48:48.838461 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.841453 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:48:48.845444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:48.850430 line       494                         if (i == j):
excute 13:48:48.855416 line       496                         i_j_list.append((
excute 13:48:48.858407 line       497                             i, j,
excute 13:48:48.862397 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.866387 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:48:48.870377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:48.874366 line       494                         if (i == j):
excute 13:48:48.879352 line       495                             continue
excute 13:48:48.882345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:48.886335 line       494                         if (i == j):
excute 13:48:48.890324 line       496                         i_j_list.append((
excute 13:48:48.893314 line       497                             i, j,
excute 13:48:48.898303 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.901294 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:48:48.905284 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:48.908275 line       494                         if (i == j):
excute 13:48:48.912297 line       496                         i_j_list.append((
excute 13:48:48.916285 line       497                             i, j,
excute 13:48:48.928476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.932471 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:48:48.935461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:48.939451 line       494                         if (i == j):
excute 13:48:48.943439 line       496                         i_j_list.append((
excute 13:48:48.948427 line       497                             i, j,
excute 13:48:48.951419 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.955409 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1)]
excute 13:48:48.958400 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:48.967378 line       494                         if (i == j):
excute 13:48:48.972397 line       496                         i_j_list.append((
excute 13:48:48.975386 line       497                             i, j,
excute 13:48:48.979355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:48.982368 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0)]
excute 13:48:48.986357 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:48.990347 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:48.995303 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:49.000307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:49.003313 line       494                         if (i == j):
excute 13:48:49.007270 line       496                         i_j_list.append((
excute 13:48:49.011261 line       497                             i, j,
excute 13:48:49.015249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.019270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0)]
excute 13:48:49.023259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:49.027218 line       494                         if (i == j):
excute 13:48:49.031205 line       496                         i_j_list.append((
excute 13:48:49.035195 line       497                             i, j,
excute 13:48:49.039184 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.042176 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:48:49.047163 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:49.050154 line       494                         if (i == j):
excute 13:48:49.055142 line       496                         i_j_list.append((
excute 13:48:49.059130 line       497                             i, j,
excute 13:48:49.063133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.066145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:48:49.072098 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:49.076086 line       494                         if (i == j):
excute 13:48:49.081072 line       496                         i_j_list.append((
excute 13:48:49.084064 line       497                             i, j,
excute 13:48:49.089052 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.096068 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:48:49.100021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:49.104011 line       494                         if (i == j):
excute 13:48:49.108002 line       496                         i_j_list.append((
excute 13:48:49.111991 line       497                             i, j,
excute 13:48:49.115980 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.119978 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:48:49.123957 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:49.127947 line       494                         if (i == j):
excute 13:48:49.131936 line       496                         i_j_list.append((
excute 13:48:49.135961 line       497                             i, j,
excute 13:48:49.138950 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.142939 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0)]
excute 13:48:49.146929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:49.152880 line       494                         if (i == j):
excute 13:48:49.156870 line       495                             continue
excute 13:48:49.160860 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:49.164848 line       494                         if (i == j):
excute 13:48:49.169842 line       496                         i_j_list.append((
excute 13:48:49.175819 line       497                             i, j,
excute 13:48:49.179808 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.182800 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0)]
excute 13:48:49.185792 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:49.189781 line       494                         if (i == j):
excute 13:48:49.194768 line       496                         i_j_list.append((
excute 13:48:49.198758 line       497                             i, j,
excute 13:48:49.202750 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.205738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1)]
excute 13:48:49.208731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:49.213720 line       494                         if (i == j):
excute 13:48:49.217708 line       496                         i_j_list.append((
excute 13:48:49.221696 line       497                             i, j,
excute 13:48:49.225686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.229675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0)]
excute 13:48:49.233665 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:49.237655 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:49.241644 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:49.246635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:49.250619 line       494                         if (i == j):
excute 13:48:49.255606 line       496                         i_j_list.append((
excute 13:48:49.259599 line       497                             i, j,
excute 13:48:49.263585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.266578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:48:49.270567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:49.276555 line       494                         if (i == j):
excute 13:48:49.281542 line       496                         i_j_list.append((
excute 13:48:49.284528 line       497                             i, j,
excute 13:48:49.287520 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.291510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:48:49.294501 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:49.298491 line       494                         if (i == j):
excute 13:48:49.302513 line       496                         i_j_list.append((
excute 13:48:49.306501 line       497                             i, j,
excute 13:48:49.309493 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.312485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:49.316477 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:49.320466 line       494                         if (i == j):
excute 13:48:49.324422 line       496                         i_j_list.append((
excute 13:48:49.332402 line       497                             i, j,
excute 13:48:49.338386 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.343372 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:48:49.346363 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:49.352348 line       494                         if (i == j):
excute 13:48:49.356373 line       496                         i_j_list.append((
excute 13:48:49.359363 line       497                             i, j,
excute 13:48:49.363351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.367308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:48:49.370330 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:49.374302 line       494                         if (i == j):
excute 13:48:49.379282 line       496                         i_j_list.append((
excute 13:48:49.383266 line       497                             i, j,
excute 13:48:49.387255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.391245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0)]
excute 13:48:49.395236 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:49.399224 line       494                         if (i == j):
excute 13:48:49.404209 line       496                         i_j_list.append((
excute 13:48:49.407203 line       497                             i, j,
excute 13:48:49.410194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.415180 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0)]
excute 13:48:49.418173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:49.422163 line       494                         if (i == j):
excute 13:48:49.426151 line       495                             continue
excute 13:48:49.430141 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:49.434130 line       494                         if (i == j):
excute 13:48:49.439121 line       496                         i_j_list.append((
excute 13:48:49.442109 line       497                             i, j,
excute 13:48:49.446098 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.450119 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1)]
excute 13:48:49.454109 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:49.458099 line       494                         if (i == j):
excute 13:48:49.462055 line       496                         i_j_list.append((
excute 13:48:49.465078 line       497                             i, j,
excute 13:48:49.469064 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.472058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0)]
excute 13:48:49.475052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:49.482034 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:49.485024 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:49.489002 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:49.492977 line       494                         if (i == j):
excute 13:48:49.496962 line       496                         i_j_list.append((
excute 13:48:49.500952 line       497                             i, j,
excute 13:48:49.504941 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.507933 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:49.512935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:49.516907 line       494                         if (i == j):
excute 13:48:49.519900 line       496                         i_j_list.append((
excute 13:48:49.523888 line       497                             i, j,
excute 13:48:49.526881 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.529872 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:48:49.533861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:49.536853 line       494                         if (i == j):
excute 13:48:49.540844 line       496                         i_j_list.append((
excute 13:48:49.544834 line       497                             i, j,
excute 13:48:49.548823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.552812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:49.556801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:49.561790 line       494                         if (i == j):
excute 13:48:49.565779 line       496                         i_j_list.append((
excute 13:48:49.569767 line       497                             i, j,
excute 13:48:49.572760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.576748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:48:49.580738 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:49.586754 line       494                         if (i == j):
excute 13:48:49.590714 line       496                         i_j_list.append((
excute 13:48:49.594732 line       497                             i, j,
excute 13:48:49.598723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.601712 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:48:49.605702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:49.609661 line       494                         if (i == j):
excute 13:48:49.613650 line       496                         i_j_list.append((
excute 13:48:49.619635 line       497                             i, j,
excute 13:48:49.622626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.626615 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0)]
excute 13:48:49.630605 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:49.634593 line       494                         if (i == j):
excute 13:48:49.638583 line       496                         i_j_list.append((
excute 13:48:49.642573 line       497                             i, j,
excute 13:48:49.645565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.649554 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0)]
excute 13:48:49.653543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:49.657533 line       494                         if (i == j):
excute 13:48:49.662518 line       496                         i_j_list.append((
excute 13:48:49.666509 line       497                             i, j,
excute 13:48:49.669501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.673490 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:49.677479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:49.681470 line       494                         if (i == j):
excute 13:48:49.686455 line       495                             continue
excute 13:48:49.690443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:49.694434 line       494                         if (i == j):
excute 13:48:49.698422 line       496                         i_j_list.append((
excute 13:48:49.701414 line       497                             i, j,
excute 13:48:49.704406 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.708395 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:49.711387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:49.716374 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:49.720365 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:49.724354 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:49.728344 line       494                         if (i == j):
excute 13:48:49.732334 line       496                         i_j_list.append((
excute 13:48:49.735325 line       497                             i, j,
excute 13:48:49.739314 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.742306 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0)]
excute 13:48:49.746295 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:49.750285 line       494                         if (i == j):
excute 13:48:49.755283 line       496                         i_j_list.append((
excute 13:48:49.759261 line       497                             i, j,
excute 13:48:49.762252 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.766243 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:48:49.769234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:49.773224 line       494                         if (i == j):
excute 13:48:49.777213 line       496                         i_j_list.append((
excute 13:48:49.780204 line       497                             i, j,
excute 13:48:49.784194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.787185 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:48:49.792176 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:49.796161 line       494                         if (i == j):
excute 13:48:49.800150 line       496                         i_j_list.append((
excute 13:48:49.803142 line       497                             i, j,
excute 13:48:49.807131 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.810122 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:48:49.813115 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:49.817104 line       494                         if (i == j):
excute 13:48:49.821095 line       496                         i_j_list.append((
excute 13:48:49.825090 line       497                             i, j,
excute 13:48:49.828075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.831067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:48:49.835056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:49.839047 line       494                         if (i == j):
excute 13:48:49.843066 line       496                         i_j_list.append((
excute 13:48:49.846062 line       497                             i, j,
excute 13:48:49.849051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.853041 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:48:49.857012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:49.859990 line       494                         if (i == j):
excute 13:48:49.863979 line       496                         i_j_list.append((
excute 13:48:49.867968 line       497                             i, j,
excute 13:48:49.870960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.873952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:48:49.877942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:49.881936 line       494                         if (i == j):
excute 13:48:49.885921 line       496                         i_j_list.append((
excute 13:48:49.888912 line       497                             i, j,
excute 13:48:49.893900 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.896892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:48:49.900881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:49.904870 line       494                         if (i == j):
excute 13:48:49.908860 line       496                         i_j_list.append((
excute 13:48:49.912849 line       497                             i, j,
excute 13:48:49.916839 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:49.919829 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 8, -1, 1), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 8, 8, 1), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 1), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 8, 0, 1), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 8, -1, 1), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 1)]
excute 13:48:49.922822 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:49.926811 line       494                         if (i == j):
excute 13:48:49.930800 line       495                             continue
excute 13:48:49.933793 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:49.937781 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:49.941771 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, -1, 0), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 0), (0, 6, -1, 0), (0, 7, -1, 0), (0, 9, -1, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 0), (7, 6, -1, 0), (7, 9, -1, 0), (0, 8, -1, 1), (7, 8, -1, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 0), (6, 7, 0, 0), (6, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (1, 8, 0, 1), (6, 8, 0, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (5, 8, 1, 1), (9, 8, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 9, 2, 0), (2, 8, 2, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 9, 3, 0), (4, 8, 3, 1), (3, 0, 8, 0), (3, 1, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 0), (3, 7, 8, 0), (3, 9, 8, 0), (3, 8, 8, 1)]
excute 13:48:49.945761 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:49.953740 line       505                     if (self.RELOCATE):
excute 13:48:49.961719 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:49.967702 line       505                     if (self.RELOCATE):
excute 13:48:49.971691 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:49.975681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 0)
excute 13:48:49.978672 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:49.982661 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:49.986651 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:49.990640 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:49.994631 line       556                     i = i_j[0]
excute 13:48:49.999618 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:50.003606 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.007596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 0)
excute 13:48:50.011585 line       556                     i = i_j[0]
excute 13:48:50.016573 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:50.019563 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.023552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:50.027549 line       556                     i = i_j[0]
excute 13:48:50.031532 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:50.034525 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.038513 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 0)
excute 13:48:50.042503 line       556                     i = i_j[0]
excute 13:48:50.047490 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:50.050482 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.055468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 0)
excute 13:48:50.059459 line       556                     i = i_j[0]
excute 13:48:50.064457 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:50.068442 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.072422 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:50.075445 line       556                     i = i_j[0]
excute 13:48:50.079435 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:50.082395 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.086384 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:50.090374 line       556                     i = i_j[0]
excute 13:48:50.095364 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:50.100381 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.104370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:50.108359 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:50.112316 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:50.115339 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.120300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:50.123317 line       556                     i = i_j[0]
excute 13:48:50.127278 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:50.130302 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.135255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:50.139245 line       556                     i = i_j[0]
excute 13:48:50.143232 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:50.147222 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.151211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:48:50.154203 line       556                     i = i_j[0]
excute 13:48:50.158192 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:50.162181 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.166172 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:50.169195 line       556                     i = i_j[0]
excute 13:48:50.173153 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:50.176176 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.180143 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 0)
excute 13:48:50.183158 line       556                     i = i_j[0]
excute 13:48:50.187148 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:50.191136 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.195094 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:50.199084 line       556                     i = i_j[0]
excute 13:48:50.203108 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:50.207094 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.210088 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:50.214076 line       556                     i = i_j[0]
excute 13:48:50.218035 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:50.222024 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.226013 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 1)
excute 13:48:50.230003 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:50.233992 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:50.238985 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.242968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 1)
excute 13:48:50.246957 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:50.251943 line       557                     j = i_j[1]
excute 13:48:50.255933 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.259922 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:48:50.263911 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:50.267901 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:50.272887 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.276876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:48:50.280897 line       556                     i = i_j[0]
excute 13:48:50.284890 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:50.287877 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.291867 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:48:50.295857 line       556                     i = i_j[0]
excute 13:48:50.299846 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:50.303805 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.308805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:48:50.311784 line       556                     i = i_j[0]
excute 13:48:50.316770 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:50.319761 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.323749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:48:50.331731 line       556                     i = i_j[0]
excute 13:48:50.339709 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:50.342732 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.346691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:48:50.352674 line       556                     i = i_j[0]
excute 13:48:50.356664 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:50.360653 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.365641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:48:50.369638 line       556                     i = i_j[0]
excute 13:48:50.373620 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:50.376609 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.381598 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:48:50.385586 line       556                     i = i_j[0]
excute 13:48:50.388579 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:50.392567 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.397553 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:48:50.400545 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:50.404534 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:50.409523 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.413512 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:48:50.416534 line       556                     i = i_j[0]
excute 13:48:50.420491 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:50.424480 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.428470 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:48:50.434455 line       556                     i = i_j[0]
excute 13:48:50.442433 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:50.448417 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.452406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:48:50.457394 line       556                     i = i_j[0]
excute 13:48:50.462381 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:50.467400 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.471356 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:48:50.474379 line       556                     i = i_j[0]
excute 13:48:50.479368 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:50.483323 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.487313 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 0)
excute 13:48:50.490305 line       556                     i = i_j[0]
excute 13:48:50.494294 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:50.498317 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.502305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:48:50.506293 line       556                     i = i_j[0]
excute 13:48:50.512248 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:50.515269 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.519227 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:48:50.522219 line       556                     i = i_j[0]
excute 13:48:50.526208 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:50.530198 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.534187 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:50.537179 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:50.541170 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:50.545166 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.548150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:50.552140 line       556                     i = i_j[0]
excute 13:48:50.556129 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:50.559121 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.563111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:50.566102 line       556                     i = i_j[0]
excute 13:48:50.570091 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:50.574081 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.582059 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:48:50.586049 line       556                     i = i_j[0]
excute 13:48:50.590040 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:50.594029 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.598017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:50.601009 line       556                     i = i_j[0]
excute 13:48:50.604998 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:50.607990 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.613990 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 0)
excute 13:48:50.616966 line       556                     i = i_j[0]
excute 13:48:50.620956 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:50.624945 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.627937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:50.631926 line       556                     i = i_j[0]
excute 13:48:50.635918 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:50.639906 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.644893 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:50.647884 line       556                     i = i_j[0]
excute 13:48:50.651874 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:50.655863 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.659852 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:50.663841 line       556                     i = i_j[0]
excute 13:48:50.668829 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:50.672818 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.676808 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 1)
excute 13:48:50.680795 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:50.684785 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:50.688774 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.691766 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 1)
excute 13:48:50.695755 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:50.699745 line       557                     j = i_j[1]
excute 13:48:50.703734 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.706726 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:48:50.710715 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:50.717700 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:50.721718 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.725675 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:48:50.729665 line       556                     i = i_j[0]
excute 13:48:50.733654 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:50.737644 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.741649 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:48:50.745623 line       556                     i = i_j[0]
excute 13:48:50.749612 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:50.753602 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.757603 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:48:50.761580 line       556                     i = i_j[0]
excute 13:48:50.766568 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:50.769559 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.773548 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:48:50.777539 line       556                     i = i_j[0]
excute 13:48:50.781528 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:50.785517 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.789507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:48:50.792497 line       556                     i = i_j[0]
excute 13:48:50.797487 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:50.801474 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.804467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:48:50.808456 line       556                     i = i_j[0]
excute 13:48:50.812446 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:50.817432 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.823415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:48:50.827405 line       556                     i = i_j[0]
excute 13:48:50.831395 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:50.835384 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.840370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:48:50.843362 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:50.847353 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:50.851341 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.855342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:48:50.858321 line       556                     i = i_j[0]
excute 13:48:50.862311 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:50.866302 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.870290 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:48:50.873282 line       556                     i = i_j[0]
excute 13:48:50.877272 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:50.881262 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.885251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:48:50.889240 line       556                     i = i_j[0]
excute 13:48:50.892232 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:50.896221 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.900211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:48:50.904210 line       556                     i = i_j[0]
excute 13:48:50.908188 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:50.911181 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.916167 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:48:50.920155 line       556                     i = i_j[0]
excute 13:48:50.926140 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:50.930128 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.935117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:48:50.939106 line       556                     i = i_j[0]
excute 13:48:50.943096 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:50.947086 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.951075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:48:50.955064 line       556                     i = i_j[0]
excute 13:48:50.959053 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:50.962075 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.966065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 1)
excute 13:48:50.970055 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:50.974013 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:50.978003 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.981992 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 1)
excute 13:48:50.985014 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:50.989003 line       557                     j = i_j[1]
excute 13:48:50.992996 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:50.996951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:50.999942 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:51.003931 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:51.007922 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.011913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:51.015901 line       556                     i = i_j[0]
excute 13:48:51.020887 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:51.023880 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.028865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:48:51.032854 line       556                     i = i_j[0]
excute 13:48:51.036844 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:51.040833 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.044823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:51.048812 line       556                     i = i_j[0]
excute 13:48:51.052804 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:51.056791 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.060780 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:48:51.064771 line       556                     i = i_j[0]
excute 13:48:51.068760 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:51.072750 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.076738 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:51.080728 line       556                     i = i_j[0]
excute 13:48:51.084715 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:51.089703 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.095723 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:51.099709 line       556                     i = i_j[0]
excute 13:48:51.103667 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:51.106691 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.110679 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:51.114637 line       556                     i = i_j[0]
excute 13:48:51.118634 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:51.121650 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.125608 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:48:51.129597 line       556                     i = i_j[0]
excute 13:48:51.133618 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:51.137606 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.141565 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 142
excute 13:48:51.145555 line       560                         if (t_tmp > self.TIME):
excute 13:48:51.149545 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:51.152537 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 152
excute 13:48:51.157523 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:51.161513 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 171
excute 13:48:51.165502 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:51.169489 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:48:51.173480 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:51.177468 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:51.180462 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.185449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:48:51.188441 line       556                     i = i_j[0]
excute 13:48:51.192430 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:51.196419 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.200406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:48:51.204397 line       556                     i = i_j[0]
excute 13:48:51.207387 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:51.211377 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.215367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:48:51.218358 line       556                     i = i_j[0]
excute 13:48:51.222348 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:51.225340 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.230329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:48:51.234352 line       556                     i = i_j[0]
excute 13:48:51.238338 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:51.242329 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.246284 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:48:51.249276 line       556                     i = i_j[0]
excute 13:48:51.253265 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:51.257286 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.261276 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:48:51.265234 line       556                     i = i_j[0]
excute 13:48:51.269222 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:51.273214 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.281190 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:48:51.288171 line       556                     i = i_j[0]
excute 13:48:51.295153 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:51.303132 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.307121 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 1)
excute 13:48:51.311112 line       556                     i = i_j[0]
excute 13:48:51.315100 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:51.318092 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.323080 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 8, 0)
excute 13:48:51.327070 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:51.333053 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:51.342031 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.352002 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 8, 0)
excute 13:48:51.360979 line       556                     i = i_j[0]
excute 13:48:51.368956 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:51.373944 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.382919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 8, 0)
excute 13:48:51.391895 line       556                     i = i_j[0]
excute 13:48:51.404861 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:51.411842 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.419821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 8, 0)
excute 13:48:51.426801 line       556                     i = i_j[0]
excute 13:48:51.433783 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:51.443757 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.451736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 8, 0)
excute 13:48:51.458718 line       556                     i = i_j[0]
excute 13:48:51.469688 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:51.477666 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.485645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 8, 0)
excute 13:48:51.493623 line       556                     i = i_j[0]
excute 13:48:51.502600 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:51.511577 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.521548 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 8, 0)
excute 13:48:51.529528 line       556                     i = i_j[0]
excute 13:48:51.537506 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:51.546486 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.555458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 8, 0)
excute 13:48:51.564437 line       556                     i = i_j[0]
excute 13:48:51.573410 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:51.581390 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.589367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 8, 1)
excute 13:48:51.597346 line       556                     i = i_j[0]
excute 13:48:51.605325 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:51.614300 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:51.623276 line       555                 for i_j in i_j_list:
excute 13:48:51.631255 line       581             self.write_matrix(
excute 13:48:51.639236 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:51.647215 line       583                 result_file_path,
excute 13:48:51.655192 line       584                 mode='a'
excute 13:48:51.780856 line       488         for t in time_steps:
excute Modified var:.. t = 135
excute 13:48:51.794818 line       489             if (t != self.TIME + 1):
excute 13:48:51.803794 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:51.811782 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:51.818755 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:51.825736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:51.832718 line       494                         if (i == j):
excute 13:48:51.840695 line       495                             continue
excute 13:48:51.847676 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:51.854659 line       494                         if (i == j):
excute 13:48:51.861642 line       496                         i_j_list.append((
excute 13:48:51.866626 line       497                             i, j,
excute 13:48:51.874618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:51.878604 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1)]
excute 13:48:51.884578 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:51.888567 line       494                         if (i == j):
excute 13:48:51.891559 line       496                         i_j_list.append((
excute 13:48:51.895553 line       497                             i, j,
excute 13:48:51.899539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:51.903527 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0)]
excute 13:48:51.907516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:51.911513 line       494                         if (i == j):
excute 13:48:51.915495 line       496                         i_j_list.append((
excute 13:48:51.919484 line       497                             i, j,
excute 13:48:51.923474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:51.926466 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0)]
excute 13:48:51.930454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:51.934444 line       494                         if (i == j):
excute 13:48:51.938433 line       496                         i_j_list.append((
excute 13:48:51.941425 line       497                             i, j,
excute 13:48:51.945415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:51.950405 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0)]
excute 13:48:51.953394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:51.957385 line       494                         if (i == j):
excute 13:48:51.965364 line       496                         i_j_list.append((
excute 13:48:51.970349 line       497                             i, j,
excute 13:48:51.974338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:51.978327 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1)]
excute 13:48:51.983313 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:51.989298 line       494                         if (i == j):
excute 13:48:51.995283 line       496                         i_j_list.append((
excute 13:48:51.999270 line       497                             i, j,
excute 13:48:52.006255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.011239 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1)]
excute 13:48:52.015229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:52.020215 line       494                         if (i == j):
excute 13:48:52.026199 line       496                         i_j_list.append((
excute 13:48:52.029192 line       497                             i, j,
excute 13:48:52.035174 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.039165 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0)]
excute 13:48:52.044150 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:52.048143 line       494                         if (i == j):
excute 13:48:52.053128 line       496                         i_j_list.append((
excute 13:48:52.058114 line       497                             i, j,
excute 13:48:52.063104 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.066093 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0)]
excute 13:48:52.072077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:52.078063 line       494                         if (i == j):
excute 13:48:52.083047 line       496                         i_j_list.append((
excute 13:48:52.089031 line       497                             i, j,
excute 13:48:52.093021 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.097010 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0)]
excute 13:48:52.100003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:52.104992 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:52.109976 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:52.113964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:52.117954 line       494                         if (i == j):
excute 13:48:52.121943 line       496                         i_j_list.append((
excute 13:48:52.124935 line       497                             i, j,
excute 13:48:52.128925 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.131916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0)]
excute 13:48:52.135906 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:52.138897 line       494                         if (i == j):
excute 13:48:52.142899 line       495                             continue
excute 13:48:52.145879 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:52.149871 line       494                         if (i == j):
excute 13:48:52.152860 line       496                         i_j_list.append((
excute 13:48:52.156849 line       497                             i, j,
excute 13:48:52.159841 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.163832 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:48:52.168817 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:52.172808 line       494                         if (i == j):
excute 13:48:52.176802 line       496                         i_j_list.append((
excute 13:48:52.179789 line       497                             i, j,
excute 13:48:52.182781 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.185773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:48:52.189793 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:52.192785 line       494                         if (i == j):
excute 13:48:52.196746 line       496                         i_j_list.append((
excute 13:48:52.200732 line       497                             i, j,
excute 13:48:52.203724 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.206716 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:48:52.210706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:52.213731 line       494                         if (i == j):
excute 13:48:52.218686 line       496                         i_j_list.append((
excute 13:48:52.221676 line       497                             i, j,
excute 13:48:52.225666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.228657 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1)]
excute 13:48:52.231649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:52.235639 line       494                         if (i == j):
excute 13:48:52.239628 line       496                         i_j_list.append((
excute 13:48:52.242620 line       497                             i, j,
excute 13:48:52.245612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.249602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1)]
excute 13:48:52.252593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:52.256584 line       494                         if (i == j):
excute 13:48:52.260574 line       496                         i_j_list.append((
excute 13:48:52.263564 line       497                             i, j,
excute 13:48:52.266557 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.271543 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0)]
excute 13:48:52.274535 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:52.278525 line       494                         if (i == j):
excute 13:48:52.285506 line       496                         i_j_list.append((
excute 13:48:52.288497 line       497                             i, j,
excute 13:48:52.292487 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.295479 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:48:52.299469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:52.302460 line       494                         if (i == j):
excute 13:48:52.306458 line       496                         i_j_list.append((
excute 13:48:52.309473 line       497                             i, j,
excute 13:48:52.313463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.316457 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:48:52.319449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:52.323437 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:52.329389 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:52.338366 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:52.342355 line       494                         if (i == j):
excute 13:48:52.347344 line       496                         i_j_list.append((
excute 13:48:52.351364 line       497                             i, j,
excute 13:48:52.355351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.359343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:48:52.362332 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:52.367324 line       494                         if (i == j):
excute 13:48:52.371281 line       496                         i_j_list.append((
excute 13:48:52.376262 line       497                             i, j,
excute 13:48:52.382248 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.389229 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1)]
excute 13:48:52.394216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:52.402194 line       494                         if (i == j):
excute 13:48:52.407183 line       495                             continue
excute 13:48:52.413166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:52.417185 line       494                         if (i == j):
excute 13:48:52.421177 line       496                         i_j_list.append((
excute 13:48:52.424167 line       497                             i, j,
excute 13:48:52.428159 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.431151 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0)]
excute 13:48:52.434141 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:52.438097 line       494                         if (i == j):
excute 13:48:52.442086 line       496                         i_j_list.append((
excute 13:48:52.446080 line       497                             i, j,
excute 13:48:52.450067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.453090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:48:52.457080 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:52.460076 line       494                         if (i == j):
excute 13:48:52.464061 line       496                         i_j_list.append((
excute 13:48:52.468017 line       497                             i, j,
excute 13:48:52.471009 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.475001 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1)]
excute 13:48:52.479023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:52.483977 line       494                         if (i == j):
excute 13:48:52.488962 line       496                         i_j_list.append((
excute 13:48:52.493950 line       497                             i, j,
excute 13:48:52.497937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.501927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1)]
excute 13:48:52.504919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:52.508909 line       494                         if (i == j):
excute 13:48:52.512911 line       496                         i_j_list.append((
excute 13:48:52.515923 line       497                             i, j,
excute 13:48:52.519911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.522903 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:48:52.526895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:52.530883 line       494                         if (i == j):
excute 13:48:52.534840 line       496                         i_j_list.append((
excute 13:48:52.537864 line       497                             i, j,
excute 13:48:52.540855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.544813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:52.547839 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:52.551826 line       494                         if (i == j):
excute 13:48:52.555820 line       496                         i_j_list.append((
excute 13:48:52.559772 line       497                             i, j,
excute 13:48:52.562766 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.566755 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:52.570745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:52.574735 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:52.578725 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:52.583711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:52.587700 line       494                         if (i == j):
excute 13:48:52.591687 line       496                         i_j_list.append((
excute 13:48:52.594681 line       497                             i, j,
excute 13:48:52.598670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.602660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0)]
excute 13:48:52.608642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:52.612663 line       494                         if (i == j):
excute 13:48:52.616652 line       496                         i_j_list.append((
excute 13:48:52.620622 line       497                             i, j,
excute 13:48:52.623633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.626629 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1)]
excute 13:48:52.630618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:52.634579 line       494                         if (i == j):
excute 13:48:52.638562 line       496                         i_j_list.append((
excute 13:48:52.641553 line       497                             i, j,
excute 13:48:52.644545 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.648535 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0)]
excute 13:48:52.652525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:52.656515 line       494                         if (i == j):
excute 13:48:52.659508 line       495                             continue
excute 13:48:52.663496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:52.667486 line       494                         if (i == j):
excute 13:48:52.671475 line       496                         i_j_list.append((
excute 13:48:52.675464 line       497                             i, j,
excute 13:48:52.679454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.685469 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0)]
excute 13:48:52.688460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:52.692450 line       494                         if (i == j):
excute 13:48:52.696408 line       496                         i_j_list.append((
excute 13:48:52.699399 line       497                             i, j,
excute 13:48:52.703388 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.706380 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1)]
excute 13:48:52.709372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:52.714359 line       494                         if (i == j):
excute 13:48:52.717351 line       496                         i_j_list.append((
excute 13:48:52.721341 line       497                             i, j,
excute 13:48:52.724332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.727324 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1)]
excute 13:48:52.730316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:52.734306 line       494                         if (i == j):
excute 13:48:52.738296 line       496                         i_j_list.append((
excute 13:48:52.741287 line       497                             i, j,
excute 13:48:52.744279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.747271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0)]
excute 13:48:52.751260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:52.755253 line       494                         if (i == j):
excute 13:48:52.759242 line       496                         i_j_list.append((
excute 13:48:52.762262 line       497                             i, j,
excute 13:48:52.766255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.769244 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0)]
excute 13:48:52.773202 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:52.777205 line       494                         if (i == j):
excute 13:48:52.781181 line       496                         i_j_list.append((
excute 13:48:52.785171 line       497                             i, j,
excute 13:48:52.789159 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.796140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0)]
excute 13:48:52.802128 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:52.807113 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:52.812101 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:52.817085 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:52.820076 line       494                         if (i == j):
excute 13:48:52.826062 line       496                         i_j_list.append((
excute 13:48:52.831049 line       497                             i, j,
excute 13:48:52.834040 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.839028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0)]
excute 13:48:52.845011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:52.850994 line       494                         if (i == j):
excute 13:48:52.856978 line       496                         i_j_list.append((
excute 13:48:52.860967 line       497                             i, j,
excute 13:48:52.863961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.867949 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1)]
excute 13:48:52.871937 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:52.878919 line       494                         if (i == j):
excute 13:48:52.884908 line       496                         i_j_list.append((
excute 13:48:52.890887 line       497                             i, j,
excute 13:48:52.897870 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.904852 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0)]
excute 13:48:52.909838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:52.915821 line       494                         if (i == j):
excute 13:48:52.924797 line       496                         i_j_list.append((
excute 13:48:52.931779 line       497                             i, j,
excute 13:48:52.935768 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.939756 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0)]
excute 13:48:52.947738 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:52.955715 line       494                         if (i == j):
excute 13:48:52.959704 line       495                             continue
excute 13:48:52.963694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:52.968680 line       494                         if (i == j):
excute 13:48:52.974664 line       496                         i_j_list.append((
excute 13:48:52.981645 line       497                             i, j,
excute 13:48:52.986631 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:52.994611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1)]
excute 13:48:52.998600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:53.005580 line       494                         if (i == j):
excute 13:48:53.011566 line       496                         i_j_list.append((
excute 13:48:53.019543 line       497                             i, j,
excute 13:48:53.023533 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.028520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1)]
excute 13:48:53.031512 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:53.036498 line       494                         if (i == j):
excute 13:48:53.042483 line       496                         i_j_list.append((
excute 13:48:53.049465 line       497                             i, j,
excute 13:48:53.055448 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.059437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0)]
excute 13:48:53.064425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:53.068414 line       494                         if (i == j):
excute 13:48:53.073400 line       496                         i_j_list.append((
excute 13:48:53.080380 line       497                             i, j,
excute 13:48:53.084370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.091354 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:48:53.099331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:53.106312 line       494                         if (i == j):
excute 13:48:53.116286 line       496                         i_j_list.append((
excute 13:48:53.125261 line       497                             i, j,
excute 13:48:53.134237 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.153187 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0)]
excute 13:48:53.164157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:53.171140 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:53.179117 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:53.189090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:53.198068 line       494                         if (i == j):
excute 13:48:53.206045 line       496                         i_j_list.append((
excute 13:48:53.210034 line       497                             i, j,
excute 13:48:53.218014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.224996 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0)]
excute 13:48:53.231976 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:53.238958 line       494                         if (i == j):
excute 13:48:53.244941 line       496                         i_j_list.append((
excute 13:48:53.250924 line       497                             i, j,
excute 13:48:53.254916 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.258904 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1)]
excute 13:48:53.261895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:53.265886 line       494                         if (i == j):
excute 13:48:53.269876 line       496                         i_j_list.append((
excute 13:48:53.272866 line       497                             i, j,
excute 13:48:53.276856 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.279847 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0)]
excute 13:48:53.283838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:53.286829 line       494                         if (i == j):
excute 13:48:53.290819 line       496                         i_j_list.append((
excute 13:48:53.293813 line       497                             i, j,
excute 13:48:53.297800 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.300791 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:48:53.305779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:53.309769 line       494                         if (i == j):
excute 13:48:53.313757 line       496                         i_j_list.append((
excute 13:48:53.316749 line       497                             i, j,
excute 13:48:53.320747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.324728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:48:53.332707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:53.341719 line       494                         if (i == j):
excute 13:48:53.345671 line       495                             continue
excute 13:48:53.349661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:53.354649 line       494                         if (i == j):
excute 13:48:53.358670 line       496                         i_j_list.append((
excute 13:48:53.361663 line       497                             i, j,
excute 13:48:53.365650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.368642 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1)]
excute 13:48:53.372634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:53.376622 line       494                         if (i == j):
excute 13:48:53.380614 line       496                         i_j_list.append((
excute 13:48:53.384569 line       497                             i, j,
excute 13:48:53.388556 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.391549 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0)]
excute 13:48:53.395538 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:53.398530 line       494                         if (i == j):
excute 13:48:53.402551 line       496                         i_j_list.append((
excute 13:48:53.407509 line       497                             i, j,
excute 13:48:53.410498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.414487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:48:53.417479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:53.421468 line       494                         if (i == j):
excute 13:48:53.425458 line       496                         i_j_list.append((
excute 13:48:53.428484 line       497                             i, j,
excute 13:48:53.432470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.435463 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:48:53.438454 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:53.442445 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:53.446402 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:53.451422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:53.454412 line       494                         if (i == j):
excute 13:48:53.458370 line       496                         i_j_list.append((
excute 13:48:53.464357 line       497                             i, j,
excute 13:48:53.469342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.473332 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0)]
excute 13:48:53.477321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:53.482307 line       494                         if (i == j):
excute 13:48:53.486300 line       496                         i_j_list.append((
excute 13:48:53.489322 line       497                             i, j,
excute 13:48:53.493308 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.496301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1)]
excute 13:48:53.500293 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:53.504279 line       494                         if (i == j):
excute 13:48:53.509236 line       496                         i_j_list.append((
excute 13:48:53.513225 line       497                             i, j,
excute 13:48:53.517212 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.520205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0)]
excute 13:48:53.524199 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:53.529181 line       494                         if (i == j):
excute 13:48:53.536165 line       496                         i_j_list.append((
excute 13:48:53.540152 line       497                             i, j,
excute 13:48:53.543145 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.547134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0)]
excute 13:48:53.552119 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:53.558104 line       494                         if (i == j):
excute 13:48:53.563091 line       496                         i_j_list.append((
excute 13:48:53.567080 line       497                             i, j,
excute 13:48:53.572067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.575090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0)]
excute 13:48:53.579048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:53.583040 line       494                         if (i == j):
excute 13:48:53.587028 line       496                         i_j_list.append((
excute 13:48:53.591017 line       497                             i, j,
excute 13:48:53.595005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.597998 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1)]
excute 13:48:53.601987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:53.605976 line       494                         if (i == j):
excute 13:48:53.613957 line       495                             continue
excute 13:48:53.617975 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:53.620967 line       494                         if (i == j):
excute 13:48:53.624959 line       496                         i_j_list.append((
excute 13:48:53.628914 line       497                             i, j,
excute 13:48:53.631938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.634930 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0)]
excute 13:48:53.638919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:53.645886 line       494                         if (i == j):
excute 13:48:53.649858 line       496                         i_j_list.append((
excute 13:48:53.654844 line       497                             i, j,
excute 13:48:53.660867 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.664875 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:48:53.668885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:53.672853 line       494                         if (i == j):
excute 13:48:53.675865 line       496                         i_j_list.append((
excute 13:48:53.679853 line       497                             i, j,
excute 13:48:53.682844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.686834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:48:53.689825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:53.693783 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:53.697773 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:53.700764 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:53.704753 line       494                         if (i == j):
excute 13:48:53.707746 line       496                         i_j_list.append((
excute 13:48:53.711736 line       497                             i, j,
excute 13:48:53.717720 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.723705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:48:53.727725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:53.731683 line       494                         if (i == j):
excute 13:48:53.734706 line       496                         i_j_list.append((
excute 13:48:53.738697 line       497                             i, j,
excute 13:48:53.741686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.744681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1)]
excute 13:48:53.748668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:53.752662 line       494                         if (i == j):
excute 13:48:53.756649 line       496                         i_j_list.append((
excute 13:48:53.759607 line       497                             i, j,
excute 13:48:53.762599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.766588 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0)]
excute 13:48:53.769581 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:53.773570 line       494                         if (i == j):
excute 13:48:53.777559 line       496                         i_j_list.append((
excute 13:48:53.781549 line       497                             i, j,
excute 13:48:53.784541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.787533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0)]
excute 13:48:53.791522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:53.796541 line       494                         if (i == j):
excute 13:48:53.800504 line       496                         i_j_list.append((
excute 13:48:53.803525 line       497                             i, j,
excute 13:48:53.806514 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.810503 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0)]
excute 13:48:53.813496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:53.818452 line       494                         if (i == j):
excute 13:48:53.824434 line       496                         i_j_list.append((
excute 13:48:53.827426 line       497                             i, j,
excute 13:48:53.830418 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.834407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1)]
excute 13:48:53.837431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:53.841388 line       494                         if (i == j):
excute 13:48:53.845379 line       496                         i_j_list.append((
excute 13:48:53.848404 line       497                             i, j,
excute 13:48:53.852360 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.855353 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1)]
excute 13:48:53.859341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:53.863335 line       494                         if (i == j):
excute 13:48:53.866322 line       495                             continue
excute 13:48:53.870311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:53.873303 line       494                         if (i == j):
excute 13:48:53.877293 line       496                         i_j_list.append((
excute 13:48:53.880285 line       497                             i, j,
excute 13:48:53.884274 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.887266 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0)]
excute 13:48:53.891256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:53.894247 line       494                         if (i == j):
excute 13:48:53.898236 line       496                         i_j_list.append((
excute 13:48:53.901229 line       497                             i, j,
excute 13:48:53.905217 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.908241 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:53.912200 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:53.915226 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:53.919213 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:53.925166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:53.929155 line       494                         if (i == j):
excute 13:48:53.933144 line       496                         i_j_list.append((
excute 13:48:53.940128 line       497                             i, j,
excute 13:48:53.944116 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.950099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:53.956084 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:53.962099 line       494                         if (i == j):
excute 13:48:53.970046 line       496                         i_j_list.append((
excute 13:48:53.973062 line       497                             i, j,
excute 13:48:53.977027 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:53.980050 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1)]
excute 13:48:53.984012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:53.988017 line       494                         if (i == j):
excute 13:48:53.991020 line       496                         i_j_list.append((
excute 13:48:53.995013 line       497                             i, j,
excute 13:48:53.998003 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.001991 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0)]
excute 13:48:54.004984 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:54.008941 line       494                         if (i == j):
excute 13:48:54.012931 line       496                         i_j_list.append((
excute 13:48:54.015956 line       497                             i, j,
excute 13:48:54.019943 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.022935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0)]
excute 13:48:54.027892 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:54.031881 line       494                         if (i == j):
excute 13:48:54.035869 line       496                         i_j_list.append((
excute 13:48:54.038892 line       497                             i, j,
excute 13:48:54.045843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.049833 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:48:54.055851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:54.059806 line       494                         if (i == j):
excute 13:48:54.063795 line       496                         i_j_list.append((
excute 13:48:54.066821 line       497                             i, j,
excute 13:48:54.070776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.074767 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1)]
excute 13:48:54.077757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:54.081747 line       494                         if (i == j):
excute 13:48:54.085737 line       496                         i_j_list.append((
excute 13:48:54.088764 line       497                             i, j,
excute 13:48:54.092749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.095743 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1)]
excute 13:48:54.099705 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:54.103697 line       494                         if (i == j):
excute 13:48:54.110670 line       496                         i_j_list.append((
excute 13:48:54.114660 line       497                             i, j,
excute 13:48:54.118648 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.121639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0)]
excute 13:48:54.125629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:54.129622 line       494                         if (i == j):
excute 13:48:54.133607 line       495                             continue
excute 13:48:54.137631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:54.140620 line       494                         if (i == j):
excute 13:48:54.144610 line       496                         i_j_list.append((
excute 13:48:54.148599 line       497                             i, j,
excute 13:48:54.151594 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.155588 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:54.158574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:54.162565 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:54.166553 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:54.170510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:54.173532 line       494                         if (i == j):
excute 13:48:54.177492 line       496                         i_j_list.append((
excute 13:48:54.180513 line       497                             i, j,
excute 13:48:54.183509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.187495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0)]
excute 13:48:54.190487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:54.194473 line       494                         if (i == j):
excute 13:48:54.198434 line       496                         i_j_list.append((
excute 13:48:54.202423 line       497                             i, j,
excute 13:48:54.205415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.208407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1)]
excute 13:48:54.212396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:54.216387 line       494                         if (i == j):
excute 13:48:54.220375 line       496                         i_j_list.append((
excute 13:48:54.223402 line       497                             i, j,
excute 13:48:54.226394 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.231347 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0)]
excute 13:48:54.234373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:54.238330 line       494                         if (i == j):
excute 13:48:54.242318 line       496                         i_j_list.append((
excute 13:48:54.245340 line       497                             i, j,
excute 13:48:54.249329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.252322 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:48:54.256311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:54.260270 line       494                         if (i == j):
excute 13:48:54.264259 line       496                         i_j_list.append((
excute 13:48:54.267281 line       497                             i, j,
excute 13:48:54.271243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.274266 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:48:54.278253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:54.283209 line       494                         if (i == j):
excute 13:48:54.286231 line       496                         i_j_list.append((
excute 13:48:54.290224 line       497                             i, j,
excute 13:48:54.293181 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.296173 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1)]
excute 13:48:54.300162 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:54.304152 line       494                         if (i == j):
excute 13:48:54.308141 line       496                         i_j_list.append((
excute 13:48:54.311133 line       497                             i, j,
excute 13:48:54.315133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.318114 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 1)]
excute 13:48:54.321106 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:54.326094 line       494                         if (i == j):
excute 13:48:54.337064 line       496                         i_j_list.append((
excute 13:48:54.341085 line       497                             i, j,
excute 13:48:54.345066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.348072 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 1), (9, 7, 1, 0)]
excute 13:48:54.353021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:54.357042 line       494                         if (i == j):
excute 13:48:54.362032 line       496                         i_j_list.append((
excute 13:48:54.364991 line       497                             i, j,
excute 13:48:54.369013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:54.372999 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, -1, 1), (0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 5, -1, 1), (0, 6, -1, 1), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 1), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 1), (3, 2, 7, 0), (3, 4, 7, 0), (3, 5, 7, 1), (3, 6, 7, 1), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 1), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 1), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 1), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 1), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 5, -1, 1), (7, 6, -1, 1), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 1), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 1), (8, 6, 0, 1), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 1), (9, 6, 1, 1), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:48:54.375991 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:54.379981 line       494                         if (i == j):
excute 13:48:54.384938 line       495                             continue
excute 13:48:54.388924 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:54.391917 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:54.395906 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 2, -1, 0), (0, 3, -1, 0), (0, 4, -1, 0), (0, 7, -1, 0), (0, 8, -1, 0), (0, 9, -1, 0), (7, 0, -1, 0), (7, 2, -1, 0), (7, 3, -1, 0), (7, 4, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (0, 1, -1, 1), (0, 5, -1, 1), (0, 6, -1, 1), (7, 1, -1, 1), (7, 5, -1, 1), (7, 6, -1, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (6, 0, 0, 0), (6, 2, 0, 0), (6, 3, 0, 0), (6, 4, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (8, 0, 0, 0), (8, 2, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (1, 5, 0, 1), (1, 6, 0, 1), (6, 1, 0, 1), (6, 5, 0, 1), (8, 1, 0, 1), (8, 5, 0, 1), (8, 6, 0, 1), (5, 0, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (9, 0, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (5, 1, 1, 1), (5, 6, 1, 1), (9, 1, 1, 1), (9, 5, 1, 1), (9, 6, 1, 1), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (2, 1, 2, 1), (2, 5, 2, 1), (2, 6, 2, 1), (4, 0, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (4, 1, 3, 1), (4, 5, 3, 1), (4, 6, 3, 1), (3, 0, 7, 0), (3, 2, 7, 0), (3, 4, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (3, 1, 7, 1), (3, 5, 7, 1), (3, 6, 7, 1)]
excute 13:48:54.399896 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:54.403889 line       505                     if (self.RELOCATE):
excute 13:48:54.406876 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:54.410866 line       505                     if (self.RELOCATE):
excute 13:48:54.414856 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:54.417847 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, -1, 0)
excute 13:48:54.420839 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:54.424829 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:54.428818 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.432807 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, -1, 0)
excute 13:48:54.435800 line       556                     i = i_j[0]
excute 13:48:54.440787 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:54.443810 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.448768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, -1, 0)
excute 13:48:54.451790 line       556                     i = i_j[0]
excute 13:48:54.456777 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:54.459767 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.463754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, -1, 0)
excute 13:48:54.467714 line       556                     i = i_j[0]
excute 13:48:54.470741 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:54.474727 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.478686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, -1, 0)
excute 13:48:54.481711 line       556                     i = i_j[0]
excute 13:48:54.485667 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:54.488690 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.492679 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, -1, 0)
excute 13:48:54.496637 line       556                     i = i_j[0]
excute 13:48:54.499660 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:54.503651 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.507640 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:54.510601 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:54.514621 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:54.518613 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.522600 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:54.526592 line       556                     i = i_j[0]
excute 13:48:54.530554 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:54.534537 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.537562 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 0)
excute 13:48:54.542515 line       556                     i = i_j[0]
excute 13:48:54.546536 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:54.550493 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.554516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 0)
excute 13:48:54.557508 line       556                     i = i_j[0]
excute 13:48:54.561498 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:54.565454 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.568476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:54.572472 line       556                     i = i_j[0]
excute 13:48:54.576425 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:54.579447 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.583437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:54.587427 line       556                     i = i_j[0]
excute 13:48:54.591417 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:54.595372 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.599362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, -1, 1)
excute 13:48:54.602355 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:54.607343 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:54.611335 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.615352 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, -1, 1)
excute 13:48:54.618314 line       556                     i = i_j[0]
excute 13:48:54.622301 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:54.626290 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.630280 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, -1, 1)
excute 13:48:54.633271 line       556                     i = i_j[0]
excute 13:48:54.637262 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:54.640284 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.646241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 1)
excute 13:48:54.650226 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:54.654251 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:54.658206 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.663192 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 1)
excute 13:48:54.667191 line       556                     i = i_j[0]
excute 13:48:54.672201 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:54.675162 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.683139 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 1)
excute 13:48:54.687153 line       556                     i = i_j[0]
excute 13:48:54.691150 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:54.694111 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.698098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:48:54.701090 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:54.705083 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:54.709069 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.713059 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:48:54.717056 line       556                     i = i_j[0]
excute 13:48:54.720039 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:54.724029 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.728025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:48:54.731010 line       556                     i = i_j[0]
excute 13:48:54.735000 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:54.737991 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.741981 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:48:54.744973 line       556                     i = i_j[0]
excute 13:48:54.750967 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:54.753951 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.758939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:48:54.762927 line       556                     i = i_j[0]
excute 13:48:54.766917 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:54.769938 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.773930 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:48:54.777920 line       556                     i = i_j[0]
excute 13:48:54.782873 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:54.785896 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.789855 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:48:54.792847 line       556                     i = i_j[0]
excute 13:48:54.796866 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:54.800825 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.803847 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:48:54.807836 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:54.811827 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:54.815785 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.818807 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:48:54.822796 line       556                     i = i_j[0]
excute 13:48:54.826755 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:54.829780 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.833769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 0)
excute 13:48:54.837733 line       556                     i = i_j[0]
excute 13:48:54.841714 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:54.844738 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.848697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 0)
excute 13:48:54.852688 line       556                     i = i_j[0]
excute 13:48:54.856674 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:54.860664 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.864653 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:48:54.867645 line       556                     i = i_j[0]
excute 13:48:54.871634 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:54.874658 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.878648 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:48:54.882636 line       556                     i = i_j[0]
excute 13:48:54.886596 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:54.889619 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.893610 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:48:54.897598 line       556                     i = i_j[0]
excute 13:48:54.901590 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:54.904581 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.908536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:54.911560 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:54.915527 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:54.919508 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.923497 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:54.926520 line       556                     i = i_j[0]
excute 13:48:54.930510 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:54.934498 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.938457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:48:54.941483 line       556                     i = i_j[0]
excute 13:48:54.945472 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:54.949428 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.954415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:48:54.958403 line       556                     i = i_j[0]
excute 13:48:54.963391 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:54.968376 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.972365 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:54.976354 line       556                     i = i_j[0]
excute 13:48:54.980344 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:54.983336 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:54.987325 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:54.991314 line       556                     i = i_j[0]
excute 13:48:54.995304 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:54.998296 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.003284 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 1)
excute 13:48:55.009268 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:55.014254 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:55.017279 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.021268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 1)
excute 13:48:55.025257 line       556                     i = i_j[0]
excute 13:48:55.029248 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:55.032240 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.036195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 1)
excute 13:48:55.039186 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:55.043175 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:55.047166 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.051154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 1)
excute 13:48:55.055146 line       556                     i = i_j[0]
excute 13:48:55.059147 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:55.062125 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.066114 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 1)
excute 13:48:55.070104 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:55.073096 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:55.077085 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.081074 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 1)
excute 13:48:55.085064 line       556                     i = i_j[0]
excute 13:48:55.089055 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:55.092076 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.096035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 1)
excute 13:48:55.099059 line       556                     i = i_j[0]
excute 13:48:55.103048 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:55.109997 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.113987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:48:55.117978 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:55.120967 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:55.124962 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.128948 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:48:55.132937 line       556                     i = i_j[0]
excute 13:48:55.136926 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:55.139918 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.143907 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:48:55.146898 line       556                     i = i_j[0]
excute 13:48:55.150889 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:55.154878 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.159866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:48:55.163853 line       556                     i = i_j[0]
excute 13:48:55.167843 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:55.170866 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.174825 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:48:55.177847 line       556                     i = i_j[0]
excute 13:48:55.181822 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:55.184797 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.188786 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:48:55.192775 line       556                     i = i_j[0]
excute 13:48:55.196771 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:55.200757 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.208736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:48:55.214717 line       556                     i = i_j[0]
excute 13:48:55.218709 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:55.225689 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.229678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:48:55.232671 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:55.236667 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:55.240648 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.244638 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:48:55.247664 line       556                     i = i_j[0]
excute 13:48:55.251650 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:55.255643 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.259631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:48:55.263589 line       556                     i = i_j[0]
excute 13:48:55.267575 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:55.271565 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.275556 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:48:55.278578 line       556                     i = i_j[0]
excute 13:48:55.282567 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:55.286548 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.289548 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:48:55.293538 line       556                     i = i_j[0]
excute 13:48:55.297498 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:55.300489 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.305475 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:48:55.308466 line       556                     i = i_j[0]
excute 13:48:55.312456 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:55.315448 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.319437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 1)
excute 13:48:55.323427 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:55.329412 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:55.338402 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.343408 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 1)
excute 13:48:55.347395 line       556                     i = i_j[0]
excute 13:48:55.352352 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:55.356338 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.360328 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 1)
excute 13:48:55.364318 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:55.369311 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:55.372329 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.377283 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 143
excute 13:48:55.380310 line       560                         if (t_tmp > self.TIME):
excute 13:48:55.385262 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:55.388253 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:55.392246 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 172
excute 13:48:55.395235 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:55.399224 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 1)
excute 13:48:55.403245 line       556                     i = i_j[0]
excute 13:48:55.407238 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:55.410226 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.414185 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 1)
excute 13:48:55.417207 line       556                     i = i_j[0]
excute 13:48:55.421197 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:55.425189 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.429146 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 146
excute 13:48:55.432168 line       560                         if (t_tmp > self.TIME):
excute 13:48:55.436146 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:55.439152 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:55.443138 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:55.446131 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:55.451122 line       569                                     available_vhecles[i][t],
excute 13:48:55.455076 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:55.458103 line       571                                     self.S_capacities[j],
excute 13:48:55.461091 line       572                                     demands[t][i][j],
excute 13:48:55.465088 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 3
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 135
calc_contract     13:48:55.470072 call       352     def caluculate_contract(
calc_contract     13:48:55.473028 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:55.474026 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:55.474026 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:55.475022 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:55.476020 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:48:55.476020 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:55.477018 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:48:55.478014 line       575                                 rsf += rsf_tmp
excute 13:48:55.482039 line       576                                 rse += rse_tmp
excute 13:48:55.486003 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 135
move_cars     Starting var:.. t_tmp = 146
move_cars     Starting var:.. can_contract = 1
move_cars     13:48:55.488984 call       388     def move_cars(
move_cars     13:48:55.493989 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     13:48:55.495005 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:48:55.496989 line       399         return available_vhecles
move_cars     13:48:55.497993 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:48:55.499990 line       579                                 success += can_contract
excute Modified var:.. success = 58
excute 13:48:55.503976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:55.507968 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:55.511955 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:55.515946 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.519933 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:48:55.523891 line       556                     i = i_j[0]
excute 13:48:55.526917 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:55.531872 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.535868 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:48:55.538851 line       556                     i = i_j[0]
excute 13:48:55.542840 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:55.546830 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.549821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:55.553810 line       556                     i = i_j[0]
excute 13:48:55.557800 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:55.560792 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.564781 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:55.567774 line       556                     i = i_j[0]
excute 13:48:55.573794 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:55.576749 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.580739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:55.583731 line       556                     i = i_j[0]
excute 13:48:55.587722 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:55.591709 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.594701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:48:55.598690 line       556                     i = i_j[0]
excute 13:48:55.602685 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:55.605673 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.609662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 1)
excute 13:48:55.613682 line       556                     i = i_j[0]
excute 13:48:55.617642 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:55.620664 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.624622 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:48:55.628643 line       560                         if (t_tmp > self.TIME):
excute 13:48:55.631634 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:55.635626 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 153
excute 13:48:55.638619 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:55.642605 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:55.646597 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:48:55.650552 line       556                     i = i_j[0]
excute 13:48:55.653543 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:55.657533 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.661523 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:48:55.664515 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:48:55.669502 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:55.674490 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.678513 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:48:55.681501 line       556                     i = i_j[0]
excute 13:48:55.685459 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:55.688483 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.692474 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:48:55.696462 line       556                     i = i_j[0]
excute 13:48:55.700420 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:55.703442 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.707401 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:48:55.710427 line       556                     i = i_j[0]
excute 13:48:55.715414 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:55.719400 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.723359 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:48:55.726384 line       556                     i = i_j[0]
excute 13:48:55.730340 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:55.733363 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.737352 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:48:55.741310 line       556                     i = i_j[0]
excute 13:48:55.744333 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:55.748323 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.752312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 1)
excute 13:48:55.755273 line       556                     i = i_j[0]
excute 13:48:55.759261 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:55.763266 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.766242 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 1)
excute 13:48:55.770232 line       556                     i = i_j[0]
excute 13:48:55.774221 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:55.780237 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.784198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 1)
excute 13:48:55.787221 line       556                     i = i_j[0]
excute 13:48:55.791176 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:55.795199 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.799156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 7, 0)
excute 13:48:55.802178 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:48:55.806171 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:55.810158 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.814150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 7, 0)
excute 13:48:55.818132 line       556                     i = i_j[0]
excute 13:48:55.822095 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:55.825117 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.829076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 7, 0)
excute 13:48:55.832098 line       556                     i = i_j[0]
excute 13:48:55.836061 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:55.840046 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.843071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 7, 0)
excute 13:48:55.847060 line       556                     i = i_j[0]
excute 13:48:55.851021 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:55.854043 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.857997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 7, 0)
excute 13:48:55.861021 line       556                     i = i_j[0]
excute 13:48:55.865012 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:55.869000 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.880970 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 7, 0)
excute 13:48:55.884927 line       556                     i = i_j[0]
excute 13:48:55.888916 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:55.891907 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.895896 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 7, 1)
excute 13:48:55.899888 line       556                     i = i_j[0]
excute 13:48:55.902877 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:55.906866 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.909859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 7, 1)
excute 13:48:55.913848 line       556                     i = i_j[0]
excute 13:48:55.916840 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:55.920829 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.923821 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 7, 1)
excute 13:48:55.927811 line       556                     i = i_j[0]
excute 13:48:55.931800 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:55.935789 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:55.938781 line       555                 for i_j in i_j_list:
excute 13:48:55.942771 line       581             self.write_matrix(
excute 13:48:55.946761 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:48:55.950751 line       583                 result_file_path,
excute 13:48:55.953742 line       584                 mode='a'
excute 13:48:55.960725 line       488         for t in time_steps:
excute Modified var:.. t = 136
excute 13:48:55.964712 line       489             if (t != self.TIME + 1):
excute 13:48:55.970697 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:48:55.976712 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:48:55.983663 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:55.990644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:55.996659 line       494                         if (i == j):
excute 13:48:56.001617 line       495                             continue
excute 13:48:56.005606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:56.011620 line       494                         if (i == j):
excute 13:48:56.015577 line       496                         i_j_list.append((
excute 13:48:56.021596 line       497                             i, j,
excute 13:48:56.026547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.034526 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:48:56.045496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:56.055471 line       494                         if (i == j):
excute 13:48:56.061454 line       496                         i_j_list.append((
excute 13:48:56.065444 line       497                             i, j,
excute 13:48:56.071428 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.076415 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:48:56.080404 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:56.086390 line       494                         if (i == j):
excute 13:48:56.093368 line       496                         i_j_list.append((
excute 13:48:56.099385 line       497                             i, j,
excute 13:48:56.105337 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.111321 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1)]
excute 13:48:56.117306 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:56.124293 line       494                         if (i == j):
excute 13:48:56.128275 line       496                         i_j_list.append((
excute 13:48:56.132266 line       497                             i, j,
excute 13:48:56.137254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.140243 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1)]
excute 13:48:56.144232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:56.148222 line       494                         if (i == j):
excute 13:48:56.152213 line       496                         i_j_list.append((
excute 13:48:56.157197 line       497                             i, j,
excute 13:48:56.161189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.168168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1)]
excute 13:48:56.172159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:56.179141 line       494                         if (i == j):
excute 13:48:56.183137 line       496                         i_j_list.append((
excute 13:48:56.187119 line       497                             i, j,
excute 13:48:56.191108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.194099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0)]
excute 13:48:56.198089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:56.202078 line       494                         if (i == j):
excute 13:48:56.205069 line       496                         i_j_list.append((
excute 13:48:56.209059 line       497                             i, j,
excute 13:48:56.212051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.216073 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:48:56.219032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:56.223022 line       494                         if (i == j):
excute 13:48:56.227012 line       496                         i_j_list.append((
excute 13:48:56.230034 line       497                             i, j,
excute 13:48:56.234028 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.237019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:48:56.240008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:56.243999 line       494                         if (i == j):
excute 13:48:56.247980 line       496                         i_j_list.append((
excute 13:48:56.250979 line       497                             i, j,
excute 13:48:56.255933 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.259956 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:48:56.263914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:56.271892 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:48:56.276907 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:56.280868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:56.283891 line       494                         if (i == j):
excute 13:48:56.287881 line       496                         i_j_list.append((
excute 13:48:56.292835 line       497                             i, j,
excute 13:48:56.295827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.298851 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0)]
excute 13:48:56.302840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:56.306830 line       494                         if (i == j):
excute 13:48:56.309821 line       495                             continue
excute 13:48:56.313814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:56.316806 line       494                         if (i == j):
excute 13:48:56.320761 line       496                         i_j_list.append((
excute 13:48:56.323784 line       497                             i, j,
excute 13:48:56.330736 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.337717 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:48:56.341710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:56.348688 line       494                         if (i == j):
excute 13:48:56.355670 line       496                         i_j_list.append((
excute 13:48:56.360654 line       497                             i, j,
excute 13:48:56.368633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.371625 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1)]
excute 13:48:56.375615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:56.384630 line       494                         if (i == j):
excute 13:48:56.388579 line       496                         i_j_list.append((
excute 13:48:56.393567 line       497                             i, j,
excute 13:48:56.398557 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.405566 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1)]
excute 13:48:56.412516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:56.416506 line       494                         if (i == j):
excute 13:48:56.421492 line       496                         i_j_list.append((
excute 13:48:56.425483 line       497                             i, j,
excute 13:48:56.429474 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.433460 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1)]
excute 13:48:56.436455 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:56.441443 line       494                         if (i == j):
excute 13:48:56.445438 line       496                         i_j_list.append((
excute 13:48:56.450417 line       497                             i, j,
excute 13:48:56.456399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.463381 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0)]
excute 13:48:56.473353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:56.483329 line       494                         if (i == j):
excute 13:48:56.491306 line       496                         i_j_list.append((
excute 13:48:56.501281 line       497                             i, j,
excute 13:48:56.507264 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.512249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:48:56.520231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:56.526211 line       494                         if (i == j):
excute 13:48:56.534191 line       496                         i_j_list.append((
excute 13:48:56.542169 line       497                             i, j,
excute 13:48:56.547155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.552153 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:48:56.558127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:56.563114 line       494                         if (i == j):
excute 13:48:56.572090 line       496                         i_j_list.append((
excute 13:48:56.580082 line       497                             i, j,
excute 13:48:56.585056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.591048 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:48:56.599017 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:56.606998 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:48:56.614974 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:56.622954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:56.628937 line       494                         if (i == j):
excute 13:48:56.635919 line       496                         i_j_list.append((
excute 13:48:56.641902 line       497                             i, j,
excute 13:48:56.647887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.653869 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:48:56.659854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:56.666837 line       494                         if (i == j):
excute 13:48:56.672820 line       496                         i_j_list.append((
excute 13:48:56.677806 line       497                             i, j,
excute 13:48:56.685785 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.691769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:48:56.697755 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:56.705733 line       494                         if (i == j):
excute 13:48:56.712714 line       495                             continue
excute 13:48:56.719695 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:56.725679 line       494                         if (i == j):
excute 13:48:56.731663 line       496                         i_j_list.append((
excute 13:48:56.737647 line       497                             i, j,
excute 13:48:56.745624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.750613 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1)]
excute 13:48:56.756596 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:56.762581 line       494                         if (i == j):
excute 13:48:56.769562 line       496                         i_j_list.append((
excute 13:48:56.775545 line       497                             i, j,
excute 13:48:56.782526 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.789508 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1)]
excute 13:48:56.795492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:56.799481 line       494                         if (i == j):
excute 13:48:56.803470 line       496                         i_j_list.append((
excute 13:48:56.808459 line       497                             i, j,
excute 13:48:56.811449 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.815438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1)]
excute 13:48:56.818430 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:56.822420 line       494                         if (i == j):
excute 13:48:56.826410 line       496                         i_j_list.append((
excute 13:48:56.829400 line       497                             i, j,
excute 13:48:56.833422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.837412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0)]
excute 13:48:56.840405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:56.844362 line       494                         if (i == j):
excute 13:48:56.848351 line       496                         i_j_list.append((
excute 13:48:56.851376 line       497                             i, j,
excute 13:48:56.855365 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.858355 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:48:56.862344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:56.866303 line       494                         if (i == j):
excute 13:48:56.869325 line       496                         i_j_list.append((
excute 13:48:56.873315 line       497                             i, j,
excute 13:48:56.876308 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.880265 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:48:56.883291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:56.887249 line       494                         if (i == j):
excute 13:48:56.891237 line       496                         i_j_list.append((
excute 13:48:56.894258 line       497                             i, j,
excute 13:48:56.898249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.901240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:48:56.905232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:56.911184 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:48:56.914205 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:56.918195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:56.922186 line       494                         if (i == j):
excute 13:48:56.926143 line       496                         i_j_list.append((
excute 13:48:56.929166 line       497                             i, j,
excute 13:48:56.932158 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.936150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0)]
excute 13:48:56.939142 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:56.943098 line       494                         if (i == j):
excute 13:48:56.947123 line       496                         i_j_list.append((
excute 13:48:56.951107 line       497                             i, j,
excute 13:48:56.955099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.958088 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0)]
excute 13:48:56.961080 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:56.965069 line       494                         if (i == j):
excute 13:48:56.969060 line       496                         i_j_list.append((
excute 13:48:56.973048 line       497                             i, j,
excute 13:48:56.976043 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:56.980030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0)]
excute 13:48:56.983021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:56.987014 line       494                         if (i == j):
excute 13:48:56.990969 line       495                             continue
excute 13:48:56.993995 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:56.997982 line       494                         if (i == j):
excute 13:48:57.001943 line       496                         i_j_list.append((
excute 13:48:57.004931 line       497                             i, j,
excute 13:48:57.008950 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.013909 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1)]
excute 13:48:57.016936 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:57.020889 line       494                         if (i == j):
excute 13:48:57.024879 line       496                         i_j_list.append((
excute 13:48:57.027902 line       497                             i, j,
excute 13:48:57.031893 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.034891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1)]
excute 13:48:57.038848 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:57.041869 line       494                         if (i == j):
excute 13:48:57.045858 line       496                         i_j_list.append((
excute 13:48:57.049827 line       497                             i, j,
excute 13:48:57.052842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.056792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0)]
excute 13:48:57.059786 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:57.063777 line       494                         if (i == j):
excute 13:48:57.071755 line       496                         i_j_list.append((
excute 13:48:57.078735 line       497                             i, j,
excute 13:48:57.082725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.089707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0)]
excute 13:48:57.093720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:57.097684 line       494                         if (i == j):
excute 13:48:57.101674 line       496                         i_j_list.append((
excute 13:48:57.106694 line       497                             i, j,
excute 13:48:57.111647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.114638 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0)]
excute 13:48:57.119659 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:57.123614 line       494                         if (i == j):
excute 13:48:57.127605 line       496                         i_j_list.append((
excute 13:48:57.130630 line       497                             i, j,
excute 13:48:57.133620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.138574 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0)]
excute 13:48:57.141565 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:57.145555 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:48:57.148548 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:57.152537 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:57.156526 line       494                         if (i == j):
excute 13:48:57.160516 line       496                         i_j_list.append((
excute 13:48:57.163508 line       497                             i, j,
excute 13:48:57.167498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.171486 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0)]
excute 13:48:57.176474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:57.179496 line       494                         if (i == j):
excute 13:48:57.183488 line       496                         i_j_list.append((
excute 13:48:57.187476 line       497                             i, j,
excute 13:48:57.190468 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.194428 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:48:57.197448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:57.201407 line       494                         if (i == j):
excute 13:48:57.205396 line       496                         i_j_list.append((
excute 13:48:57.208419 line       497                             i, j,
excute 13:48:57.212409 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.215404 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0)]
excute 13:48:57.219360 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:57.224346 line       494                         if (i == j):
excute 13:48:57.227368 line       496                         i_j_list.append((
excute 13:48:57.231361 line       497                             i, j,
excute 13:48:57.235316 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.238308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1)]
excute 13:48:57.241300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:57.245289 line       494                         if (i == j):
excute 13:48:57.249278 line       495                             continue
excute 13:48:57.253267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:57.257256 line       494                         if (i == j):
excute 13:48:57.261246 line       496                         i_j_list.append((
excute 13:48:57.264238 line       497                             i, j,
excute 13:48:57.268227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.271219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1)]
excute 13:48:57.275221 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:57.279198 line       494                         if (i == j):
excute 13:48:57.283189 line       496                         i_j_list.append((
excute 13:48:57.286179 line       497                             i, j,
excute 13:48:57.289172 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.293160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0)]
excute 13:48:57.296153 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:57.300142 line       494                         if (i == j):
excute 13:48:57.304141 line       496                         i_j_list.append((
excute 13:48:57.307123 line       497                             i, j,
excute 13:48:57.310115 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.314114 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:48:57.317096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:57.321088 line       494                         if (i == j):
excute 13:48:57.328071 line       496                         i_j_list.append((
excute 13:48:57.333055 line       497                             i, j,
excute 13:48:57.340067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.344026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:48:57.347048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:57.352004 line       494                         if (i == j):
excute 13:48:57.356992 line       496                         i_j_list.append((
excute 13:48:57.359982 line       497                             i, j,
excute 13:48:57.362974 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.366967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0)]
excute 13:48:57.370984 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:57.374944 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:48:57.377969 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:57.381955 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:57.386942 line       494                         if (i == j):
excute 13:48:57.390915 line       496                         i_j_list.append((
excute 13:48:57.393891 line       497                             i, j,
excute 13:48:57.396884 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.401870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0)]
excute 13:48:57.404894 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:57.408883 line       494                         if (i == j):
excute 13:48:57.412849 line       496                         i_j_list.append((
excute 13:48:57.416862 line       497                             i, j,
excute 13:48:57.419853 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.423820 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:48:57.427833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:57.431824 line       494                         if (i == j):
excute 13:48:57.435812 line       496                         i_j_list.append((
excute 13:48:57.439804 line       497                             i, j,
excute 13:48:57.442792 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.445785 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:48:57.449743 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:57.453734 line       494                         if (i == j):
excute 13:48:57.457721 line       496                         i_j_list.append((
excute 13:48:57.461710 line       497                             i, j,
excute 13:48:57.464702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.468726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1)]
excute 13:48:57.471716 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:57.475705 line       494                         if (i == j):
excute 13:48:57.479694 line       496                         i_j_list.append((
excute 13:48:57.483652 line       497                             i, j,
excute 13:48:57.486678 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.489671 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1)]
excute 13:48:57.493658 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:57.497629 line       494                         if (i == j):
excute 13:48:57.501604 line       495                             continue
excute 13:48:57.504629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:57.507619 line       494                         if (i == j):
excute 13:48:57.512588 line       496                         i_j_list.append((
excute 13:48:57.515598 line       497                             i, j,
excute 13:48:57.518592 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.522579 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0)]
excute 13:48:57.525571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:57.530559 line       494                         if (i == j):
excute 13:48:57.534550 line       496                         i_j_list.append((
excute 13:48:57.538536 line       497                             i, j,
excute 13:48:57.541529 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.545487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:48:57.548510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:57.552478 line       494                         if (i == j):
excute 13:48:57.556458 line       496                         i_j_list.append((
excute 13:48:57.559481 line       497                             i, j,
excute 13:48:57.563472 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.566464 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:48:57.570421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:57.574409 line       494                         if (i == j):
excute 13:48:57.578398 line       496                         i_j_list.append((
excute 13:48:57.581390 line       497                             i, j,
excute 13:48:57.584382 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.588372 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:48:57.592362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:57.595353 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:48:57.599343 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:57.602334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:57.606323 line       494                         if (i == j):
excute 13:48:57.611311 line       496                         i_j_list.append((
excute 13:48:57.614302 line       497                             i, j,
excute 13:48:57.617294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.621284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0)]
excute 13:48:57.624276 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:57.628265 line       494                         if (i == j):
excute 13:48:57.633288 line       496                         i_j_list.append((
excute 13:48:57.637273 line       497                             i, j,
excute 13:48:57.641231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.644254 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0)]
excute 13:48:57.647246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:57.651238 line       494                         if (i == j):
excute 13:48:57.656192 line       496                         i_j_list.append((
excute 13:48:57.659214 line       497                             i, j,
excute 13:48:57.662208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.666197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0)]
excute 13:48:57.670187 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:57.678135 line       494                         if (i == j):
excute 13:48:57.682122 line       496                         i_j_list.append((
excute 13:48:57.686112 line       497                             i, j,
excute 13:48:57.694089 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.697083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1)]
excute 13:48:57.705060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:57.709050 line       494                         if (i == j):
excute 13:48:57.713039 line       496                         i_j_list.append((
excute 13:48:57.717028 line       497                             i, j,
excute 13:48:57.720051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.723043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1)]
excute 13:48:57.727032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:57.730992 line       494                         if (i == j):
excute 13:48:57.739974 line       496                         i_j_list.append((
excute 13:48:57.742963 line       497                             i, j,
excute 13:48:57.746952 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.749944 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1)]
excute 13:48:57.753935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:57.757892 line       494                         if (i == j):
excute 13:48:57.761883 line       495                             continue
excute 13:48:57.764905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:57.768893 line       494                         if (i == j):
excute 13:48:57.772887 line       496                         i_j_list.append((
excute 13:48:57.775844 line       497                             i, j,
excute 13:48:57.782827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.786813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0)]
excute 13:48:57.789805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:57.795790 line       494                         if (i == j):
excute 13:48:57.799780 line       496                         i_j_list.append((
excute 13:48:57.803769 line       497                             i, j,
excute 13:48:57.807759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.811748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0)]
excute 13:48:57.815738 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:57.819728 line       494                         if (i == j):
excute 13:48:57.823715 line       496                         i_j_list.append((
excute 13:48:57.827706 line       497                             i, j,
excute 13:48:57.831694 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.834687 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0)]
excute 13:48:57.840703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:57.844661 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:48:57.847681 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:48:57.851671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:57.855662 line       494                         if (i == j):
excute 13:48:57.859620 line       496                         i_j_list.append((
excute 13:48:57.862642 line       497                             i, j,
excute 13:48:57.866636 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.869624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0)]
excute 13:48:57.873614 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:57.877571 line       494                         if (i == j):
excute 13:48:57.880594 line       496                         i_j_list.append((
excute 13:48:57.884552 line       497                             i, j,
excute 13:48:57.888541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.891533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0)]
excute 13:48:57.895523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:57.899517 line       494                         if (i == j):
excute 13:48:57.903538 line       496                         i_j_list.append((
excute 13:48:57.906493 line       497                             i, j,
excute 13:48:57.909485 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.913474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0)]
excute 13:48:57.916466 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:57.920457 line       494                         if (i == j):
excute 13:48:57.924448 line       496                         i_j_list.append((
excute 13:48:57.928436 line       497                             i, j,
excute 13:48:57.932426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.935417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1)]
excute 13:48:57.939407 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:57.945422 line       494                         if (i == j):
excute 13:48:57.950376 line       496                         i_j_list.append((
excute 13:48:57.954366 line       497                             i, j,
excute 13:48:57.958355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.963341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1)]
excute 13:48:57.969327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:57.973347 line       494                         if (i == j):
excute 13:48:57.977336 line       496                         i_j_list.append((
excute 13:48:57.981325 line       497                             i, j,
excute 13:48:57.984318 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:57.988276 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1)]
excute 13:48:57.992265 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:57.997251 line       494                         if (i == j):
excute 13:48:58.001242 line       496                         i_j_list.append((
excute 13:48:58.005230 line       497                             i, j,
excute 13:48:58.008252 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.012212 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0)]
excute 13:48:58.015234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:58.019200 line       494                         if (i == j):
excute 13:48:58.023183 line       495                             continue
excute 13:48:58.026205 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:58.030194 line       494                         if (i == j):
excute 13:48:58.035152 line       496                         i_j_list.append((
excute 13:48:58.039140 line       497                             i, j,
excute 13:48:58.043130 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.049112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0)]
excute 13:48:58.052138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:58.057091 line       494                         if (i == j):
excute 13:48:58.060116 line       496                         i_j_list.append((
excute 13:48:58.064104 line       497                             i, j,
excute 13:48:58.067096 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.071085 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0)]
excute 13:48:58.074077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:58.078040 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:48:58.081059 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:58.085047 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:58.089037 line       494                         if (i == j):
excute 13:48:58.093995 line       496                         i_j_list.append((
excute 13:48:58.096986 line       497                             i, j,
excute 13:48:58.099978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.104963 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0)]
excute 13:48:58.111944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:58.115943 line       494                         if (i == j):
excute 13:48:58.119924 line       496                         i_j_list.append((
excute 13:48:58.122946 line       497                             i, j,
excute 13:48:58.126940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.129928 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:48:58.133917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:58.137907 line       494                         if (i == j):
excute 13:48:58.141895 line       496                         i_j_list.append((
excute 13:48:58.145854 line       497                             i, j,
excute 13:48:58.149844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.152867 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0)]
excute 13:48:58.156859 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:58.160845 line       494                         if (i == j):
excute 13:48:58.164834 line       496                         i_j_list.append((
excute 13:48:58.168824 line       497                             i, j,
excute 13:48:58.171818 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.175773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1)]
excute 13:48:58.178797 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:58.182770 line       494                         if (i == j):
excute 13:48:58.186745 line       496                         i_j_list.append((
excute 13:48:58.190758 line       497                             i, j,
excute 13:48:58.193757 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.197746 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1)]
excute 13:48:58.200739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:58.204729 line       494                         if (i == j):
excute 13:48:58.208717 line       496                         i_j_list.append((
excute 13:48:58.212676 line       497                             i, j,
excute 13:48:58.215697 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.219690 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1)]
excute 13:48:58.222679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:58.226669 line       494                         if (i == j):
excute 13:48:58.230658 line       496                         i_j_list.append((
excute 13:48:58.234648 line       497                             i, j,
excute 13:48:58.237639 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.241628 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0)]
excute 13:48:58.245610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:58.249581 line       494                         if (i == j):
excute 13:48:58.254564 line       496                         i_j_list.append((
excute 13:48:58.258554 line       497                             i, j,
excute 13:48:58.262543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.266532 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0)]
excute 13:48:58.270522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:58.274511 line       494                         if (i == j):
excute 13:48:58.279498 line       495                             continue
excute 13:48:58.283487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:58.287476 line       494                         if (i == j):
excute 13:48:58.292464 line       496                         i_j_list.append((
excute 13:48:58.295455 line       497                             i, j,
excute 13:48:58.299444 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.303434 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0)]
excute 13:48:58.307421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:58.311410 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:48:58.315402 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:48:58.319397 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:48:58.323379 line       494                         if (i == j):
excute 13:48:58.329364 line       496                         i_j_list.append((
excute 13:48:58.339372 line       497                             i, j,
excute 13:48:58.343326 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.346348 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0)]
excute 13:48:58.350308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:48:58.358289 line       494                         if (i == j):
excute 13:48:58.362277 line       496                         i_j_list.append((
excute 13:48:58.366265 line       497                             i, j,
excute 13:48:58.371286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.375272 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:48:58.378232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:48:58.382221 line       494                         if (i == j):
excute 13:48:58.387208 line       496                         i_j_list.append((
excute 13:48:58.390236 line       497                             i, j,
excute 13:48:58.394228 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.397212 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:48:58.401203 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:48:58.406183 line       494                         if (i == j):
excute 13:48:58.409181 line       496                         i_j_list.append((
excute 13:48:58.413170 line       497                             i, j,
excute 13:48:58.416162 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.420121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1)]
excute 13:48:58.424111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:48:58.429104 line       494                         if (i == j):
excute 13:48:58.433088 line       496                         i_j_list.append((
excute 13:48:58.437076 line       497                             i, j,
excute 13:48:58.441066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.444088 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 1)]
excute 13:48:58.448077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:48:58.453035 line       494                         if (i == j):
excute 13:48:58.457021 line       496                         i_j_list.append((
excute 13:48:58.462010 line       497                             i, j,
excute 13:48:58.465999 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.469988 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 1), (9, 5, 2, 1)]
excute 13:48:58.473977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:48:58.477967 line       494                         if (i == j):
excute 13:48:58.481957 line       496                         i_j_list.append((
excute 13:48:58.485946 line       497                             i, j,
excute 13:48:58.488938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.492927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 1), (9, 5, 2, 1), (9, 6, 2, 0)]
excute 13:48:58.498910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:48:58.505892 line       494                         if (i == j):
excute 13:48:58.511877 line       496                         i_j_list.append((
excute 13:48:58.517860 line       497                             i, j,
excute 13:48:58.522849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.527835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 1), (9, 5, 2, 1), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:48:58.531824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:48:58.538804 line       494                         if (i == j):
excute 13:48:58.544787 line       496                         i_j_list.append((
excute 13:48:58.549774 line       497                             i, j,
excute 13:48:58.552766 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:48:58.556756 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 1), (9, 5, 2, 1), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:48:58.564734 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:48:58.572712 line       494                         if (i == j):
excute 13:48:58.576701 line       495                             continue
excute 13:48:58.579693 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:48:58.583684 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:48:58.586674 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -1, 0), (7, 1, -1, 0), (7, 2, -1, 0), (7, 6, -1, 0), (7, 8, -1, 0), (7, 9, -1, 0), (7, 3, -1, 1), (7, 4, -1, 1), (7, 5, -1, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (6, 0, 0, 0), (6, 1, 0, 0), (6, 2, 0, 0), (6, 7, 0, 0), (6, 8, 0, 0), (6, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 0), (8, 6, 0, 0), (8, 7, 0, 0), (8, 9, 0, 0), (0, 3, 0, 1), (0, 4, 0, 1), (0, 5, 0, 1), (1, 3, 0, 1), (1, 4, 0, 1), (1, 5, 0, 1), (6, 3, 0, 1), (6, 4, 0, 1), (6, 5, 0, 1), (8, 3, 0, 1), (8, 4, 0, 1), (8, 5, 0, 1), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (5, 3, 1, 1), (5, 4, 1, 1), (2, 0, 2, 0), (2, 1, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (2, 3, 2, 1), (2, 4, 2, 1), (2, 5, 2, 1), (9, 3, 2, 1), (9, 4, 2, 1), (9, 5, 2, 1), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (4, 3, 3, 1), (4, 5, 3, 1), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 0), (3, 6, 7, 0), (3, 7, 7, 0), (3, 8, 7, 0), (3, 9, 7, 0), (3, 4, 7, 1), (3, 5, 7, 1)]
excute 13:48:58.590665 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:48:58.593656 line       505                     if (self.RELOCATE):
excute 13:48:58.598643 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:48:58.601635 line       505                     if (self.RELOCATE):
excute 13:48:58.607619 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:48:58.612607 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -1, 0)
excute 13:48:58.616595 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:48:58.620585 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:58.624574 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.628564 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -1, 0)
excute 13:48:58.632554 line       556                     i = i_j[0]
excute 13:48:58.637540 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:58.640532 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.648510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -1, 0)
excute 13:48:58.653497 line       556                     i = i_j[0]
excute 13:48:58.658483 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:58.661475 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.666462 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -1, 0)
excute 13:48:58.670450 line       556                     i = i_j[0]
excute 13:48:58.674440 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:58.677432 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.681421 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -1, 0)
excute 13:48:58.685410 line       556                     i = i_j[0]
excute 13:48:58.689400 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:58.692392 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.696381 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -1, 0)
excute 13:48:58.699373 line       556                     i = i_j[0]
excute 13:48:58.703363 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:58.707353 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.710344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -1, 1)
excute 13:48:58.714333 line       556                     i = i_j[0]
excute 13:48:58.718336 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:58.721315 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.725304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -1, 1)
excute 13:48:58.729294 line       556                     i = i_j[0]
excute 13:48:58.732285 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:58.736275 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.739266 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -1, 1)
excute 13:48:58.743256 line       556                     i = i_j[0]
excute 13:48:58.747245 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:58.750237 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.754227 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 151
excute 13:48:58.758216 line       560                         if (t_tmp > self.TIME):
excute 13:48:58.762207 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:58.766195 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:58.771183 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:58.774174 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:58.778163 line       569                                     available_vhecles[i][t],
excute 13:48:58.782153 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:58.785145 line       571                                     self.S_capacities[j],
excute 13:48:58.789134 line       572                                     demands[t][i][j],
excute 13:48:58.792125 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = 4
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 136
calc_contract     13:48:58.796115 call       352     def caluculate_contract(
calc_contract     13:48:58.799109 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:58.799109 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:58.800106 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:58.802099 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:58.802099 line       369                 can_contract = capacity_target - available_vhecles_target
calc_contract     New var:....... can_contract = -1
calc_contract     13:48:58.803097 line       370                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 2
calc_contract     13:48:58.803097 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:58.804095 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-1, 2, 0]
excute Modified var:.. can_contract = -1
excute Modified var:.. rsf_tmp = 2
excute 13:48:58.805098 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 174
excute 13:48:58.810078 line       576                                 rse += rse_tmp
excute 13:48:58.814068 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 7
move_cars     Starting var:.. j = 5
move_cars     Starting var:.. t = 136
move_cars     Starting var:.. t_tmp = 151
move_cars     Starting var:.. can_contract = -1
move_cars     13:48:58.817090 call       388     def move_cars(
move_cars     13:48:58.822046 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:58.823044 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:48:58.824041 line       399         return available_vhecles
move_cars     13:48:58.826036 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:48:58.828029 line       579                                 success += can_contract
excute Modified var:.. success = 57
excute 13:48:58.832019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:48:58.836008 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:58.839997 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:58.843987 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.847976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:48:58.850968 line       556                     i = i_j[0]
excute 13:48:58.854958 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:58.857949 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.861939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:48:58.864931 line       556                     i = i_j[0]
excute 13:48:58.869919 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:58.873907 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.877897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:48:58.881886 line       556                     i = i_j[0]
excute 13:48:58.885876 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:58.888867 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.892859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:48:58.895848 line       556                     i = i_j[0]
excute 13:48:58.899838 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:58.903827 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.907818 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:48:58.910808 line       556                     i = i_j[0]
excute 13:48:58.914798 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:58.918787 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.922799 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:48:58.925800 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:58.929761 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:58.933748 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.937773 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:48:58.940759 line       556                     i = i_j[0]
excute 13:48:58.944726 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:58.949721 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.953695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:48:58.957706 line       556                     i = i_j[0]
excute 13:48:58.960707 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:58.964665 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.968653 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:48:58.972643 line       556                     i = i_j[0]
excute 13:48:58.978630 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:58.982616 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:58.986608 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:48:58.989597 line       556                     i = i_j[0]
excute 13:48:58.994585 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:59.001565 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.005556 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:48:59.009544 line       556                     i = i_j[0]
excute 13:48:59.013534 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:59.016526 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.020515 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 0, 0)
excute 13:48:59.023507 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:59.027496 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:59.031485 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.035476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 0, 0)
excute 13:48:59.038467 line       556                     i = i_j[0]
excute 13:48:59.042456 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:59.045448 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.049437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 0, 0)
excute 13:48:59.053426 line       556                     i = i_j[0]
excute 13:48:59.057416 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:59.060408 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.064397 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 0, 0)
excute 13:48:59.067390 line       556                     i = i_j[0]
excute 13:48:59.071379 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:59.075369 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.081365 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 0, 0)
excute 13:48:59.084381 line       556                     i = i_j[0]
excute 13:48:59.088366 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:59.092325 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.100303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 0, 0)
excute 13:48:59.103325 line       556                     i = i_j[0]
excute 13:48:59.108283 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:59.112283 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.117265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:48:59.120280 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:59.124238 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:59.128228 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.132217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:48:59.136207 line       556                     i = i_j[0]
excute 13:48:59.139231 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:59.143218 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.147178 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 0)
excute 13:48:59.151199 line       556                     i = i_j[0]
excute 13:48:59.155189 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:59.159144 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.162136 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:48:59.166125 line       556                     i = i_j[0]
excute 13:48:59.170115 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:59.173107 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.177096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 0)
excute 13:48:59.180088 line       556                     i = i_j[0]
excute 13:48:59.185075 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:59.189064 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.193091 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:48:59.196077 line       556                     i = i_j[0]
excute 13:48:59.200041 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:59.203058 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.207048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 1)
excute 13:48:59.211038 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:48:59.214998 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:59.218988 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.222975 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 1)
excute 13:48:59.225968 line       556                     i = i_j[0]
excute 13:48:59.229955 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:59.233946 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.237935 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 1)
excute 13:48:59.241924 line       556                     i = i_j[0]
excute 13:48:59.246913 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:59.249904 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.254893 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 1)
excute 13:48:59.258880 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:48:59.261901 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:59.265891 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.269880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 1)
excute 13:48:59.273870 line       556                     i = i_j[0]
excute 13:48:59.277829 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:59.280853 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.285816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 1)
excute 13:48:59.289803 line       556                     i = i_j[0]
excute 13:48:59.292819 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:59.296810 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.300766 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 0, 1)
excute 13:48:59.303789 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:48:59.307783 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:59.312748 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.315728 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 0, 1)
excute 13:48:59.319717 line       556                     i = i_j[0]
excute 13:48:59.323707 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:59.330688 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.340662 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 152
excute 13:48:59.343682 line       560                         if (t_tmp > self.TIME):
excute 13:48:59.347677 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:59.351663 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:59.357615 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:59.360608 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:59.364596 line       569                                     available_vhecles[i][t],
excute 13:48:59.368587 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:59.372575 line       571                                     self.S_capacities[j],
excute 13:48:59.376565 line       572                                     demands[t][i][j],
excute 13:48:59.380554 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 4
calc_contract     Starting var:.. available_vhecles_target = -1
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 136
calc_contract     13:48:59.384544 call       352     def caluculate_contract(
calc_contract     13:48:59.389529 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:59.390561 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:59.391525 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:59.392522 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:59.392522 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:48:59.393520 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:59.394517 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. can_contract = 1
excute Modified var:.. rsf_tmp = 0
excute 13:48:59.395514 line       575                                 rsf += rsf_tmp
excute 13:48:59.400501 line       576                                 rse += rse_tmp
excute 13:48:59.405494 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 6
move_cars     Starting var:.. j = 4
move_cars     Starting var:.. t = 136
move_cars     Starting var:.. t_tmp = 152
move_cars     Starting var:.. can_contract = 1
move_cars     13:48:59.409536 call       388     def move_cars(
move_cars     13:48:59.413492 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:59.414520 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:48:59.416515 line       399         return available_vhecles
move_cars     13:48:59.417482 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:48:59.419476 line       579                                 success += can_contract
excute Modified var:.. success = 58
excute 13:48:59.423495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 0, 1)
excute 13:48:59.427485 line       556                     i = i_j[0]
excute 13:48:59.431474 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:59.435447 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.439423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 1)
excute 13:48:59.442445 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:48:59.446405 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:59.451390 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.455411 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 1)
excute 13:48:59.459400 line       556                     i = i_j[0]
excute 13:48:59.466353 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:59.470371 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.474329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 1)
excute 13:48:59.478318 line       556                     i = i_j[0]
excute 13:48:59.481343 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:59.485299 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.490287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:48:59.494306 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:48:59.498296 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:59.502285 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.506275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:48:59.510266 line       556                     i = i_j[0]
excute 13:48:59.514253 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:59.518243 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.522201 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:48:59.525225 line       556                     i = i_j[0]
excute 13:48:59.529216 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:59.533202 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.537161 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:48:59.540188 line       556                     i = i_j[0]
excute 13:48:59.544142 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:59.547165 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.551155 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:48:59.555147 line       556                     i = i_j[0]
excute 13:48:59.559102 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:59.562125 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.566115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:48:59.570104 line       556                     i = i_j[0]
excute 13:48:59.574064 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:59.577087 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.581075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:48:59.585033 line       556                     i = i_j[0]
excute 13:48:59.589026 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:59.594009 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.597997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 1)
excute 13:48:59.601986 line       556                     i = i_j[0]
excute 13:48:59.604979 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:59.608971 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.613955 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 145
excute 13:48:59.616949 line       560                         if (t_tmp > self.TIME):
excute 13:48:59.620936 line       563                             if (available_vhecles[i][t] == 0):
excute 13:48:59.624925 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:48:59.627917 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:48:59.630910 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:48:59.634898 line       569                                     available_vhecles[i][t],
excute 13:48:59.638897 line       570                                     available_vhecles[j][t_tmp],
excute 13:48:59.641911 line       571                                     self.S_capacities[j],
excute 13:48:59.644903 line       572                                     demands[t][i][j],
excute 13:48:59.648896 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = -2
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 136
calc_contract     13:48:59.651885 call       352     def caluculate_contract(
calc_contract     13:48:59.655875 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:48:59.655875 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:48:59.656842 line       362         if (available_vhecles_start >= demand):
calc_contract     13:48:59.657870 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:48:59.658869 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:48:59.658869 line       385         return [can_contract, rsf, rse]
calc_contract     13:48:59.659865 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:48:59.660863 line       575                                 rsf += rsf_tmp
excute 13:48:59.664820 line       576                                 rse += rse_tmp
excute 13:48:59.668841 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 5
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 136
move_cars     Starting var:.. t_tmp = 145
move_cars     Starting var:.. can_contract = 1
move_cars     13:48:59.671831 call       388     def move_cars(
move_cars     13:48:59.675790 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:48:59.677785 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:48:59.678781 line       399         return available_vhecles
move_cars     13:48:59.679779 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:48:59.681774 line       579                                 success += can_contract
excute Modified var:.. success = 59
excute 13:48:59.686761 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 1)
excute 13:48:59.689751 line       556                     i = i_j[0]
excute 13:48:59.693741 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:59.698731 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.702719 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:48:59.705741 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:59.709711 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:59.713720 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.717709 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:48:59.721698 line       556                     i = i_j[0]
excute 13:48:59.725658 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:59.728682 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.732670 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:48:59.736628 line       556                     i = i_j[0]
excute 13:48:59.739650 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:59.743640 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.747630 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:48:59.750620 line       556                     i = i_j[0]
excute 13:48:59.754611 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:59.758600 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.762558 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:48:59.765582 line       556                     i = i_j[0]
excute 13:48:59.769570 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:59.773560 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.777524 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:48:59.780541 line       556                     i = i_j[0]
excute 13:48:59.784534 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:48:59.788489 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.792477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:48:59.795501 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:59.801457 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:48:59.805444 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.809433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:48:59.812424 line       556                     i = i_j[0]
excute 13:48:59.816413 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:48:59.819405 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.823395 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:48:59.827384 line       556                     i = i_j[0]
excute 13:48:59.830376 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:48:59.834365 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.842347 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:48:59.849326 line       556                     i = i_j[0]
excute 13:48:59.854313 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:48:59.857304 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.865308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:48:59.872297 line       556                     i = i_j[0]
excute 13:48:59.876254 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:48:59.879271 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.883250 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:48:59.887224 line       556                     i = i_j[0]
excute 13:48:59.891214 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:48:59.894205 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.898195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 1)
excute 13:48:59.902185 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:48:59.907172 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:59.910162 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.914152 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 1)
excute 13:48:59.918142 line       556                     i = i_j[0]
excute 13:48:59.921133 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:59.924126 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.929146 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 1)
excute 13:48:59.933104 line       556                     i = i_j[0]
excute 13:48:59.937091 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:59.941080 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.949063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 1)
excute 13:48:59.955045 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:48:59.959032 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:48:59.964020 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.967010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 1)
excute 13:48:59.971000 line       556                     i = i_j[0]
excute 13:48:59.974998 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:48:59.977981 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.981971 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 1)
excute 13:48:59.985960 line       556                     i = i_j[0]
excute 13:48:59.989950 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:48:59.992941 line       558                     if (i != j and demands[t][i][j]):
excute 13:48:59.996932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:48:59.999923 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:00.009900 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:00.016879 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.021866 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:49:00.026852 line       556                     i = i_j[0]
excute 13:49:00.033833 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:00.036825 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.040814 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:49:00.044803 line       556                     i = i_j[0]
excute 13:49:00.048793 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:00.051785 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.055775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:49:00.059764 line       556                     i = i_j[0]
excute 13:49:00.063755 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:00.066744 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.070735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:49:00.073758 line       556                     i = i_j[0]
excute 13:49:00.077747 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:00.081725 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.085695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:49:00.088717 line       556                     i = i_j[0]
excute 13:49:00.092676 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:00.095701 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.099690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:49:00.103677 line       556                     i = i_j[0]
excute 13:49:00.110628 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:00.115616 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.119616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 1)
excute 13:49:00.122595 line       556                     i = i_j[0]
excute 13:49:00.126584 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:00.130573 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.134569 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 1)
excute 13:49:00.138552 line       556                     i = i_j[0]
excute 13:49:00.141576 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:00.145566 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.149557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 7, 0)
excute 13:49:00.152547 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:00.156536 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:00.160530 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.164527 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 7, 0)
excute 13:49:00.168511 line       556                     i = i_j[0]
excute 13:49:00.171501 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:00.175489 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.179444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 7, 0)
excute 13:49:00.182471 line       556                     i = i_j[0]
excute 13:49:00.186424 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:00.190414 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.193406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 7, 0)
excute 13:49:00.197395 line       556                     i = i_j[0]
excute 13:49:00.201384 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:00.204376 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.208365 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 7, 0)
excute 13:49:00.211358 line       556                     i = i_j[0]
excute 13:49:00.216345 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:00.220368 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.224355 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 7, 0)
excute 13:49:00.228313 line       556                     i = i_j[0]
excute 13:49:00.231339 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:00.235326 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.239284 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 7, 0)
excute 13:49:00.242306 line       556                     i = i_j[0]
excute 13:49:00.246265 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:00.249288 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.253278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 7, 1)
excute 13:49:00.257267 line       556                     i = i_j[0]
excute 13:49:00.261257 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:00.265215 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.268237 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 7, 1)
excute 13:49:00.272228 line       556                     i = i_j[0]
excute 13:49:00.276186 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:00.280175 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:00.284163 line       555                 for i_j in i_j_list:
excute 13:49:00.287155 line       581             self.write_matrix(
excute 13:49:00.291144 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:00.294136 line       583                 result_file_path,
excute 13:49:00.298126 line       584                 mode='a'
excute 13:49:00.304112 line       488         for t in time_steps:
excute Modified var:.. t = 137
excute 13:49:00.309128 line       489             if (t != self.TIME + 1):
excute 13:49:00.316079 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:00.323092 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:00.331040 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:00.341013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:00.346999 line       494                         if (i == j):
excute 13:49:00.350995 line       495                             continue
excute 13:49:00.358000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:00.361957 line       494                         if (i == j):
excute 13:49:00.368937 line       496                         i_j_list.append((
excute 13:49:00.374955 line       497                             i, j,
excute 13:49:00.379910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.392873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:49:00.399856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:00.407835 line       494                         if (i == j):
excute 13:49:00.414817 line       496                         i_j_list.append((
excute 13:49:00.418806 line       497                             i, j,
excute 13:49:00.423790 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.430783 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1)]
excute 13:49:00.433766 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:00.440747 line       494                         if (i == j):
excute 13:49:00.446732 line       496                         i_j_list.append((
excute 13:49:00.450751 line       497                             i, j,
excute 13:49:00.455705 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.463684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0)]
excute 13:49:00.467673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:00.472692 line       494                         if (i == j):
excute 13:49:00.476674 line       496                         i_j_list.append((
excute 13:49:00.483431 line       497                             i, j,
excute 13:49:00.487422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.490453 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:49:00.494404 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:00.497432 line       494                         if (i == j):
excute 13:49:00.501386 line       496                         i_j_list.append((
excute 13:49:00.505374 line       497                             i, j,
excute 13:49:00.509374 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.512392 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2)]
excute 13:49:00.515380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:00.519371 line       494                         if (i == j):
excute 13:49:00.524326 line       496                         i_j_list.append((
excute 13:49:00.528344 line       497                             i, j,
excute 13:49:00.531336 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.535327 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0)]
excute 13:49:00.538318 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:00.542276 line       494                         if (i == j):
excute 13:49:00.546266 line       496                         i_j_list.append((
excute 13:49:00.549291 line       497                             i, j,
excute 13:49:00.552280 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.556270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1)]
excute 13:49:00.560229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:00.563251 line       494                         if (i == j):
excute 13:49:00.567208 line       496                         i_j_list.append((
excute 13:49:00.570201 line       497                             i, j,
excute 13:49:00.574190 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.577182 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1)]
excute 13:49:00.581171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:00.584163 line       494                         if (i == j):
excute 13:49:00.589151 line       496                         i_j_list.append((
excute 13:49:00.592144 line       497                             i, j,
excute 13:49:00.595134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.599123 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0)]
excute 13:49:00.603115 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:00.608100 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:00.613087 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:00.617078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:00.622094 line       494                         if (i == j):
excute 13:49:00.627050 line       496                         i_j_list.append((
excute 13:49:00.631070 line       497                             i, j,
excute 13:49:00.634062 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.638051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0)]
excute 13:49:00.641043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:00.645002 line       494                         if (i == j):
excute 13:49:00.649023 line       495                             continue
excute 13:49:00.652018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:00.656009 line       494                         if (i == j):
excute 13:49:00.659963 line       496                         i_j_list.append((
excute 13:49:00.662955 line       497                             i, j,
excute 13:49:00.665945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.669934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1)]
excute 13:49:00.672926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:00.676915 line       494                         if (i == j):
excute 13:49:00.680916 line       496                         i_j_list.append((
excute 13:49:00.683897 line       497                             i, j,
excute 13:49:00.687886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.690878 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0)]
excute 13:49:00.693870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:00.697859 line       494                         if (i == j):
excute 13:49:00.701849 line       496                         i_j_list.append((
excute 13:49:00.704841 line       497                             i, j,
excute 13:49:00.711847 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.717806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:49:00.720800 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:00.724789 line       494                         if (i == j):
excute 13:49:00.731770 line       496                         i_j_list.append((
excute 13:49:00.735760 line       497                             i, j,
excute 13:49:00.739748 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.742772 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2)]
excute 13:49:00.745763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:00.749722 line       494                         if (i == j):
excute 13:49:00.753712 line       496                         i_j_list.append((
excute 13:49:00.757699 line       497                             i, j,
excute 13:49:00.760723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.764697 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0)]
excute 13:49:00.767704 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:00.771699 line       494                         if (i == j):
excute 13:49:00.774686 line       496                         i_j_list.append((
excute 13:49:00.778675 line       497                             i, j,
excute 13:49:00.781668 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.785658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1)]
excute 13:49:00.788651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:00.792607 line       494                         if (i == j):
excute 13:49:00.796597 line       496                         i_j_list.append((
excute 13:49:00.799619 line       497                             i, j,
excute 13:49:00.802612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.806571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1)]
excute 13:49:00.810559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:00.814549 line       494                         if (i == j):
excute 13:49:00.818570 line       496                         i_j_list.append((
excute 13:49:00.821531 line       497                             i, j,
excute 13:49:00.825518 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.828510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0)]
excute 13:49:00.832501 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:00.836523 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:00.840511 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:00.844469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:00.847491 line       494                         if (i == j):
excute 13:49:00.851450 line       496                         i_j_list.append((
excute 13:49:00.854472 line       497                             i, j,
excute 13:49:00.858462 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.861453 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:49:00.865412 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:00.868438 line       494                         if (i == j):
excute 13:49:00.872425 line       496                         i_j_list.append((
excute 13:49:00.876386 line       497                             i, j,
excute 13:49:00.879374 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.882366 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:49:00.886355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:00.890346 line       494                         if (i == j):
excute 13:49:00.894335 line       495                             continue
excute 13:49:00.897326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:00.900318 line       494                         if (i == j):
excute 13:49:00.904307 line       496                         i_j_list.append((
excute 13:49:00.907300 line       497                             i, j,
excute 13:49:00.911289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.914281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:49:00.918270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:00.921295 line       494                         if (i == j):
excute 13:49:00.925283 line       496                         i_j_list.append((
excute 13:49:00.929273 line       497                             i, j,
excute 13:49:00.934232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.938251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:00.942238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:00.946228 line       494                         if (i == j):
excute 13:49:00.950185 line       496                         i_j_list.append((
excute 13:49:00.955172 line       497                             i, j,
excute 13:49:00.958164 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.962153 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2)]
excute 13:49:00.969138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:00.973156 line       494                         if (i == j):
excute 13:49:00.977115 line       496                         i_j_list.append((
excute 13:49:00.981102 line       497                             i, j,
excute 13:49:00.984094 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:00.988084 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0)]
excute 13:49:00.991076 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:00.995069 line       494                         if (i == j):
excute 13:49:00.999056 line       496                         i_j_list.append((
excute 13:49:01.003076 line       497                             i, j,
excute 13:49:01.006067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.010056 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1)]
excute 13:49:01.014016 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:01.017038 line       494                         if (i == j):
excute 13:49:01.021027 line       496                         i_j_list.append((
excute 13:49:01.025016 line       497                             i, j,
excute 13:49:01.028012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.031999 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1)]
excute 13:49:01.035993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:01.039948 line       494                         if (i == j):
excute 13:49:01.043934 line       496                         i_j_list.append((
excute 13:49:01.047923 line       497                             i, j,
excute 13:49:01.050916 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.054905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0)]
excute 13:49:01.057898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:01.061886 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:01.065876 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:01.069865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:01.072857 line       494                         if (i == j):
excute 13:49:01.076847 line       496                         i_j_list.append((
excute 13:49:01.079839 line       497                             i, j,
excute 13:49:01.083828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.086821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0)]
excute 13:49:01.090809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:01.094799 line       494                         if (i == j):
excute 13:49:01.097792 line       496                         i_j_list.append((
excute 13:49:01.101786 line       497                             i, j,
excute 13:49:01.104771 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.107764 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0)]
excute 13:49:01.110756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:01.114745 line       494                         if (i == j):
excute 13:49:01.118734 line       496                         i_j_list.append((
excute 13:49:01.121727 line       497                             i, j,
excute 13:49:01.125716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.129706 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1)]
excute 13:49:01.132697 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:01.136687 line       494                         if (i == j):
excute 13:49:01.141673 line       495                             continue
excute 13:49:01.144666 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:01.147657 line       494                         if (i == j):
excute 13:49:01.151648 line       496                         i_j_list.append((
excute 13:49:01.155636 line       497                             i, j,
excute 13:49:01.158628 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.162616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0)]
excute 13:49:01.165610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:01.169598 line       494                         if (i == j):
excute 13:49:01.173588 line       496                         i_j_list.append((
excute 13:49:01.176580 line       497                             i, j,
excute 13:49:01.179572 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.183561 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2)]
excute 13:49:01.186553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:01.190543 line       494                         if (i == j):
excute 13:49:01.193534 line       496                         i_j_list.append((
excute 13:49:01.197536 line       497                             i, j,
excute 13:49:01.200516 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.204506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0)]
excute 13:49:01.207497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:01.211489 line       494                         if (i == j):
excute 13:49:01.215477 line       496                         i_j_list.append((
excute 13:49:01.218468 line       497                             i, j,
excute 13:49:01.221460 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.224452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1)]
excute 13:49:01.228441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:01.232431 line       494                         if (i == j):
excute 13:49:01.236421 line       496                         i_j_list.append((
excute 13:49:01.239412 line       497                             i, j,
excute 13:49:01.245396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.248388 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1)]
excute 13:49:01.252377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:01.256381 line       494                         if (i == j):
excute 13:49:01.260355 line       496                         i_j_list.append((
excute 13:49:01.264346 line       497                             i, j,
excute 13:49:01.267337 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.270329 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0)]
excute 13:49:01.273321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:01.278308 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:01.281300 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:01.285291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:01.289279 line       494                         if (i == j):
excute 13:49:01.296261 line       496                         i_j_list.append((
excute 13:49:01.303241 line       497                             i, j,
excute 13:49:01.307231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.311220 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0)]
excute 13:49:01.314212 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:01.318202 line       494                         if (i == j):
excute 13:49:01.322190 line       496                         i_j_list.append((
excute 13:49:01.327179 line       497                             i, j,
excute 13:49:01.337154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.343135 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:49:01.350117 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:01.358096 line       494                         if (i == j):
excute 13:49:01.366107 line       496                         i_j_list.append((
excute 13:49:01.371064 line       497                             i, j,
excute 13:49:01.378073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.383028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1)]
excute 13:49:01.391011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:01.394998 line       494                         if (i == j):
excute 13:49:01.402976 line       496                         i_j_list.append((
excute 13:49:01.410954 line       497                             i, j,
excute 13:49:01.417935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.426912 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0)]
excute 13:49:01.433893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:01.438880 line       494                         if (i == j):
excute 13:49:01.443867 line       495                             continue
excute 13:49:01.451845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:01.456833 line       494                         if (i == j):
excute 13:49:01.462847 line       496                         i_j_list.append((
excute 13:49:01.466806 line       497                             i, j,
excute 13:49:01.471793 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.478774 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2)]
excute 13:49:01.486751 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:01.493733 line       494                         if (i == j):
excute 13:49:01.502710 line       496                         i_j_list.append((
excute 13:49:01.507695 line       497                             i, j,
excute 13:49:01.514680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.519663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0)]
excute 13:49:01.527642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:01.533625 line       494                         if (i == j):
excute 13:49:01.539611 line       496                         i_j_list.append((
excute 13:49:01.545593 line       497                             i, j,
excute 13:49:01.551580 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.557562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1)]
excute 13:49:01.563546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:01.569531 line       494                         if (i == j):
excute 13:49:01.578506 line       496                         i_j_list.append((
excute 13:49:01.586484 line       497                             i, j,
excute 13:49:01.591471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.599452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1)]
excute 13:49:01.604436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:01.612416 line       494                         if (i == j):
excute 13:49:01.621391 line       496                         i_j_list.append((
excute 13:49:01.628373 line       497                             i, j,
excute 13:49:01.634357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.640342 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0)]
excute 13:49:01.647322 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:01.654303 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:01.663280 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:01.670261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:01.676245 line       494                         if (i == j):
excute 13:49:01.685221 line       496                         i_j_list.append((
excute 13:49:01.690209 line       497                             i, j,
excute 13:49:01.697188 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.705167 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0)]
excute 13:49:01.712149 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:01.719130 line       494                         if (i == j):
excute 13:49:01.725115 line       496                         i_j_list.append((
excute 13:49:01.731099 line       497                             i, j,
excute 13:49:01.738081 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.746058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:49:01.752041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:01.759024 line       494                         if (i == j):
excute 13:49:01.766004 line       496                         i_j_list.append((
excute 13:49:01.771988 line       497                             i, j,
excute 13:49:01.777973 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.783957 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1)]
excute 13:49:01.788942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:01.796932 line       494                         if (i == j):
excute 13:49:01.800912 line       496                         i_j_list.append((
excute 13:49:01.804901 line       497                             i, j,
excute 13:49:01.807892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.811882 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0)]
excute 13:49:01.814873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:01.818863 line       494                         if (i == j):
excute 13:49:01.824869 line       496                         i_j_list.append((
excute 13:49:01.827860 line       497                             i, j,
excute 13:49:01.830852 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.834842 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:49:01.837833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:01.841823 line       494                         if (i == j):
excute 13:49:01.845813 line       495                             continue
excute 13:49:01.848805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:01.851827 line       494                         if (i == j):
excute 13:49:01.855826 line       496                         i_j_list.append((
excute 13:49:01.859807 line       497                             i, j,
excute 13:49:01.862799 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.867755 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:49:01.871750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:01.875733 line       494                         if (i == j):
excute 13:49:01.878756 line       496                         i_j_list.append((
excute 13:49:01.882748 line       497                             i, j,
excute 13:49:01.885740 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.889726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1)]
excute 13:49:01.892719 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:01.896676 line       494                         if (i == j):
excute 13:49:01.900666 line       496                         i_j_list.append((
excute 13:49:01.904656 line       497                             i, j,
excute 13:49:01.907679 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.910670 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1)]
excute 13:49:01.914660 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:01.918619 line       494                         if (i == j):
excute 13:49:01.922612 line       496                         i_j_list.append((
excute 13:49:01.925633 line       497                             i, j,
excute 13:49:01.928631 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.932611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0)]
excute 13:49:01.935608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:01.939598 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:01.943552 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:01.947542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:01.951532 line       494                         if (i == j):
excute 13:49:01.955521 line       496                         i_j_list.append((
excute 13:49:01.958547 line       497                             i, j,
excute 13:49:01.963499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.966521 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0)]
excute 13:49:01.971476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:01.975465 line       494                         if (i == j):
excute 13:49:01.979455 line       496                         i_j_list.append((
excute 13:49:01.982447 line       497                             i, j,
excute 13:49:01.986436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:01.989428 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0)]
excute 13:49:01.993420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:01.998404 line       494                         if (i == j):
excute 13:49:02.002395 line       496                         i_j_list.append((
excute 13:49:02.005385 line       497                             i, j,
excute 13:49:02.008377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.012366 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1)]
excute 13:49:02.015359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:02.019352 line       494                         if (i == j):
excute 13:49:02.023337 line       496                         i_j_list.append((
excute 13:49:02.026361 line       497                             i, j,
excute 13:49:02.030351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.033343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0)]
excute 13:49:02.037335 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:02.041291 line       494                         if (i == j):
excute 13:49:02.045279 line       496                         i_j_list.append((
excute 13:49:02.048304 line       497                             i, j,
excute 13:49:02.051294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.055284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0)]
excute 13:49:02.059274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:02.063264 line       494                         if (i == j):
excute 13:49:02.067221 line       496                         i_j_list.append((
excute 13:49:02.070213 line       497                             i, j,
excute 13:49:02.074236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.080187 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2)]
excute 13:49:02.083209 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:02.087169 line       494                         if (i == j):
excute 13:49:02.091156 line       495                             continue
excute 13:49:02.095145 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:02.098169 line       494                         if (i == j):
excute 13:49:02.102142 line       496                         i_j_list.append((
excute 13:49:02.105151 line       497                             i, j,
excute 13:49:02.109142 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.112136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1)]
excute 13:49:02.116121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:02.122106 line       494                         if (i == j):
excute 13:49:02.127093 line       496                         i_j_list.append((
excute 13:49:02.131081 line       497                             i, j,
excute 13:49:02.134073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.138063 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1)]
excute 13:49:02.142021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:02.145044 line       494                         if (i == j):
excute 13:49:02.150002 line       496                         i_j_list.append((
excute 13:49:02.153022 line       497                             i, j,
excute 13:49:02.157014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.160008 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0)]
excute 13:49:02.163993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:02.167952 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:02.170976 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:02.175930 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:02.178922 line       494                         if (i == j):
excute 13:49:02.182911 line       496                         i_j_list.append((
excute 13:49:02.185903 line       497                             i, j,
excute 13:49:02.189892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.192884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0)]
excute 13:49:02.196887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:02.200864 line       494                         if (i == j):
excute 13:49:02.204853 line       496                         i_j_list.append((
excute 13:49:02.207880 line       497                             i, j,
excute 13:49:02.210868 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.214858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:49:02.217849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:02.221839 line       494                         if (i == j):
excute 13:49:02.225828 line       496                         i_j_list.append((
excute 13:49:02.228822 line       497                             i, j,
excute 13:49:02.232809 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.235801 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1)]
excute 13:49:02.243748 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:02.247739 line       494                         if (i == j):
excute 13:49:02.251730 line       496                         i_j_list.append((
excute 13:49:02.255720 line       497                             i, j,
excute 13:49:02.259709 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.262699 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0)]
excute 13:49:02.266720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:02.270677 line       494                         if (i == j):
excute 13:49:02.274667 line       496                         i_j_list.append((
excute 13:49:02.279654 line       497                             i, j,
excute 13:49:02.282644 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.286666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:02.289657 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:02.293647 line       494                         if (i == j):
excute 13:49:02.297610 line       496                         i_j_list.append((
excute 13:49:02.300630 line       497                             i, j,
excute 13:49:02.304617 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.307610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2)]
excute 13:49:02.311598 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:02.315558 line       494                         if (i == j):
excute 13:49:02.319547 line       496                         i_j_list.append((
excute 13:49:02.322570 line       497                             i, j,
excute 13:49:02.326559 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.334506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0)]
excute 13:49:02.344512 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:02.348469 line       494                         if (i == j):
excute 13:49:02.353458 line       495                             continue
excute 13:49:02.358444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:02.362431 line       494                         if (i == j):
excute 13:49:02.366423 line       496                         i_j_list.append((
excute 13:49:02.370412 line       497                             i, j,
excute 13:49:02.374400 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.377391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1)]
excute 13:49:02.382381 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:02.387366 line       494                         if (i == j):
excute 13:49:02.390357 line       496                         i_j_list.append((
excute 13:49:02.394345 line       497                             i, j,
excute 13:49:02.397338 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.401329 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0)]
excute 13:49:02.404353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:02.409307 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:02.412331 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:02.416288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:02.420311 line       494                         if (i == j):
excute 13:49:02.424266 line       496                         i_j_list.append((
excute 13:49:02.427290 line       497                             i, j,
excute 13:49:02.431278 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.434270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0)]
excute 13:49:02.438261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:02.442245 line       494                         if (i == j):
excute 13:49:02.446209 line       496                         i_j_list.append((
excute 13:49:02.450196 line       497                             i, j,
excute 13:49:02.454186 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.457178 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0)]
excute 13:49:02.461167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:02.468185 line       494                         if (i == j):
excute 13:49:02.473135 line       496                         i_j_list.append((
excute 13:49:02.476127 line       497                             i, j,
excute 13:49:02.480116 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.484140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1)]
excute 13:49:02.488127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:02.492119 line       494                         if (i == j):
excute 13:49:02.496074 line       496                         i_j_list.append((
excute 13:49:02.500069 line       497                             i, j,
excute 13:49:02.503087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.507077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0)]
excute 13:49:02.511036 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:02.515048 line       494                         if (i == j):
excute 13:49:02.519013 line       496                         i_j_list.append((
excute 13:49:02.522036 line       497                             i, j,
excute 13:49:02.526025 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.529985 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0)]
excute 13:49:02.533008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:02.536965 line       494                         if (i == j):
excute 13:49:02.540955 line       496                         i_j_list.append((
excute 13:49:02.543977 line       497                             i, j,
excute 13:49:02.547969 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.550959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2)]
excute 13:49:02.554949 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:02.558907 line       494                         if (i == j):
excute 13:49:02.562896 line       496                         i_j_list.append((
excute 13:49:02.566886 line       497                             i, j,
excute 13:49:02.569908 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.573876 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0)]
excute 13:49:02.576889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:02.580848 line       494                         if (i == j):
excute 13:49:02.585835 line       496                         i_j_list.append((
excute 13:49:02.589825 line       497                             i, j,
excute 13:49:02.592815 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.596804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1)]
excute 13:49:02.600825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:02.604798 line       494                         if (i == j):
excute 13:49:02.608778 line       495                             continue
excute 13:49:02.611798 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:02.615755 line       494                         if (i == j):
excute 13:49:02.619770 line       496                         i_j_list.append((
excute 13:49:02.626725 line       497                             i, j,
excute 13:49:02.629750 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.633706 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0)]
excute 13:49:02.636729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:02.640718 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:02.644708 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:02.648701 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:02.652668 line       494                         if (i == j):
excute 13:49:02.656645 line       496                         i_j_list.append((
excute 13:49:02.659670 line       497                             i, j,
excute 13:49:02.663657 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.667650 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 2, 0)]
excute 13:49:02.670643 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:02.674628 line       494                         if (i == j):
excute 13:49:02.678617 line       496                         i_j_list.append((
excute 13:49:02.682607 line       497                             i, j,
excute 13:49:02.686567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.690586 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:49:02.693578 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:02.697567 line       494                         if (i == j):
excute 13:49:02.701556 line       496                         i_j_list.append((
excute 13:49:02.705515 line       497                             i, j,
excute 13:49:02.708538 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.712497 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1)]
excute 13:49:02.715521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:02.719509 line       494                         if (i == j):
excute 13:49:02.723500 line       496                         i_j_list.append((
excute 13:49:02.727457 line       497                             i, j,
excute 13:49:02.731445 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.734438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0)]
excute 13:49:02.738427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:02.742417 line       494                         if (i == j):
excute 13:49:02.747415 line       496                         i_j_list.append((
excute 13:49:02.750425 line       497                             i, j,
excute 13:49:02.753418 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.757407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:49:02.761396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:02.765355 line       494                         if (i == j):
excute 13:49:02.769344 line       496                         i_j_list.append((
excute 13:49:02.772368 line       497                             i, j,
excute 13:49:02.776356 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.779350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 2)]
excute 13:49:02.783337 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:02.787297 line       494                         if (i == j):
excute 13:49:02.792283 line       496                         i_j_list.append((
excute 13:49:02.796304 line       497                             i, j,
excute 13:49:02.799294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.803256 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 2), (9, 6, 2, 0)]
excute 13:49:02.806275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:02.810234 line       494                         if (i == j):
excute 13:49:02.814224 line       496                         i_j_list.append((
excute 13:49:02.817247 line       497                             i, j,
excute 13:49:02.821237 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.824196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 2), (9, 6, 2, 0), (9, 7, 2, 1)]
excute 13:49:02.828185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:02.832176 line       494                         if (i == j):
excute 13:49:02.836165 line       496                         i_j_list.append((
excute 13:49:02.840185 line       497                             i, j,
excute 13:49:02.843180 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:02.847136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 2), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 1), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 1), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 2), (1, 6, 0, 0), (1, 7, 0, 1), (1, 8, 0, 1), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 2), (2, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (2, 9, 2, 0), (3, 0, 7, 0), (3, 1, 7, 0), (3, 2, 7, 1), (3, 4, 7, 0), (3, 5, 7, 2), (3, 6, 7, 0), (3, 7, 7, 1), (3, 8, 7, 1), (3, 9, 7, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 1), (4, 3, 3, 0), (4, 5, 3, 2), (4, 6, 3, 0), (4, 7, 3, 1), (4, 8, 3, 1), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 1), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 1), (5, 8, 2, 1), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 2, 1, 1), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 2), (6, 7, 1, 1), (6, 8, 1, 1), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 1), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 2), (7, 6, -2, 0), (7, 8, -2, 1), (7, 9, -2, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 2, 0, 1), (8, 3, 0, 0), (8, 4, 0, 0), (8, 5, 0, 2), (8, 6, 0, 0), (8, 7, 0, 1), (8, 9, 0, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 1), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 2), (9, 6, 2, 0), (9, 7, 2, 1), (9, 8, 2, 1)]
excute 13:49:02.850165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:02.854126 line       494                         if (i == j):
excute 13:49:02.858107 line       495                             continue
excute 13:49:02.861134 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:02.865125 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:02.868116 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 6, -2, 0), (7, 9, -2, 0), (7, 2, -2, 1), (7, 8, -2, 1), (7, 5, -2, 2), (1, 0, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 6, 0, 0), (1, 9, 0, 0), (8, 0, 0, 0), (8, 1, 0, 0), (8, 3, 0, 0), (8, 4, 0, 0), (8, 6, 0, 0), (8, 9, 0, 0), (1, 2, 0, 1), (1, 7, 0, 1), (1, 8, 0, 1), (8, 2, 0, 1), (8, 7, 0, 1), (1, 5, 0, 2), (8, 5, 0, 2), (0, 1, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 6, 1, 0), (0, 9, 1, 0), (6, 0, 1, 0), (6, 1, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 9, 1, 0), (0, 2, 1, 1), (0, 7, 1, 1), (0, 8, 1, 1), (6, 2, 1, 1), (6, 7, 1, 1), (6, 8, 1, 1), (0, 5, 1, 2), (6, 5, 1, 2), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 6, 2, 0), (2, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 6, 2, 0), (2, 7, 2, 1), (2, 8, 2, 1), (5, 2, 2, 1), (5, 7, 2, 1), (5, 8, 2, 1), (9, 2, 2, 1), (9, 7, 2, 1), (9, 8, 2, 1), (2, 5, 2, 2), (9, 5, 2, 2), (4, 0, 3, 0), (4, 1, 3, 0), (4, 3, 3, 0), (4, 6, 3, 0), (4, 9, 3, 0), (4, 2, 3, 1), (4, 7, 3, 1), (4, 8, 3, 1), (4, 5, 3, 2), (3, 0, 7, 0), (3, 1, 7, 0), (3, 4, 7, 0), (3, 6, 7, 0), (3, 9, 7, 0), (3, 2, 7, 1), (3, 7, 7, 1), (3, 8, 7, 1), (3, 5, 7, 2)]
excute 13:49:02.872108 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:02.876059 line       505                     if (self.RELOCATE):
excute 13:49:02.880048 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:02.883073 line       505                     if (self.RELOCATE):
excute 13:49:02.887065 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:02.891019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:02.895039 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:02.898996 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:02.902989 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:02.906976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:02.910003 line       556                     i = i_j[0]
excute 13:49:02.913957 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:02.916983 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:02.920970 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:02.924959 line       556                     i = i_j[0]
excute 13:49:02.928918 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:02.931940 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:02.936897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:02.940885 line       556                     i = i_j[0]
excute 13:49:02.944875 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:02.948863 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:02.952853 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:49:02.956842 line       556                     i = i_j[0]
excute 13:49:02.960831 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:02.963823 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:02.967812 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:02.971834 line       556                     i = i_j[0]
excute 13:49:02.975823 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:02.979812 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:02.983771 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 1)
excute 13:49:02.986795 line       556                     i = i_j[0]
excute 13:49:02.990783 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:02.995773 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:02.999729 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 1)
excute 13:49:03.002755 line       556                     i = i_j[0]
excute 13:49:03.006740 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:03.010732 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.014689 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 2)
excute 13:49:03.018677 line       556                     i = i_j[0]
excute 13:49:03.021701 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:03.025690 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.029649 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:49:03.032670 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:03.036661 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:03.040630 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.044619 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:49:03.047599 line       556                     i = i_j[0]
excute 13:49:03.051589 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:03.055579 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.059567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:49:03.063557 line       556                     i = i_j[0]
excute 13:49:03.066548 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:03.070537 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.074527 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:49:03.078518 line       556                     i = i_j[0]
excute 13:49:03.082506 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:03.085498 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.089487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:49:03.093476 line       556                     i = i_j[0]
excute 13:49:03.098499 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:03.102485 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.106443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 0, 0)
excute 13:49:03.109465 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:03.113455 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:03.117414 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.121403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 0, 0)
excute 13:49:03.125406 line       556                     i = i_j[0]
excute 13:49:03.129381 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:03.132373 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.136362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 0, 0)
excute 13:49:03.140351 line       556                     i = i_j[0]
excute 13:49:03.144340 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:03.147333 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.151322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 0, 0)
excute 13:49:03.155311 line       556                     i = i_j[0]
excute 13:49:03.159301 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:03.162292 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.166281 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 0, 0)
excute 13:49:03.170271 line       556                     i = i_j[0]
excute 13:49:03.174261 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:03.177254 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.181242 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 0, 0)
excute 13:49:03.184234 line       556                     i = i_j[0]
excute 13:49:03.189221 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:03.192214 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.196202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 1)
excute 13:49:03.203202 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:03.207195 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:03.211185 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.215174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 1)
excute 13:49:03.218164 line       556                     i = i_j[0]
excute 13:49:03.222155 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:03.225146 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.229135 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 1)
excute 13:49:03.233125 line       556                     i = i_j[0]
excute 13:49:03.237115 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:03.240105 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.244095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 0, 1)
excute 13:49:03.248084 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:03.251076 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:03.255065 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.260052 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:49:03.263045 line       560                         if (t_tmp > self.TIME):
excute 13:49:03.266036 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:03.270027 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:03.273017 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:03.277007 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:03.281029 line       569                                     available_vhecles[i][t],
excute 13:49:03.284020 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:03.287979 line       571                                     self.S_capacities[j],
excute 13:49:03.291000 line       572                                     demands[t][i][j],
excute 13:49:03.293992 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 0
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 137
calc_contract     13:49:03.297982 call       352     def caluculate_contract(
calc_contract     13:49:03.301941 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:03.301941 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:03.303935 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:03.304949 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:03.305932 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:03.305932 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:03.306932 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:49:03.307925 line       575                                 rsf += rsf_tmp
excute 13:49:03.311914 line       576                                 rse += rse_tmp
excute 13:49:03.314906 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 8
move_cars     Starting var:.. j = 2
move_cars     Starting var:.. t = 137
move_cars     Starting var:.. t_tmp = 145
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:03.318896 call       388     def move_cars(
move_cars     13:49:03.323882 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:03.325880 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:03.328869 line       399         return available_vhecles
move_cars     13:49:03.332858 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -5, -5, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:49:03.335851 line       579                                 success += can_contract
excute Modified var:.. success = 60
excute 13:49:03.341836 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 0, 1)
excute 13:49:03.345835 line       556                     i = i_j[0]
excute 13:49:03.349813 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:03.352819 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.357793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 2)
excute 13:49:03.361779 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:03.365772 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:03.369759 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.373747 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 0, 2)
excute 13:49:03.377738 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:03.381728 line       557                     j = i_j[1]
excute 13:49:03.386715 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.390704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:49:03.394693 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:03.398683 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:03.402670 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.407657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:49:03.410651 line       556                     i = i_j[0]
excute 13:49:03.415650 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:03.418629 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.423615 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:49:03.426608 line       556                     i = i_j[0]
excute 13:49:03.430598 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:03.434587 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.438585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:49:03.442565 line       556                     i = i_j[0]
excute 13:49:03.446555 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:03.450542 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.455534 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:49:03.459518 line       556                     i = i_j[0]
excute 13:49:03.462511 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:03.466501 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.470492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:49:03.473481 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:03.477472 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:03.481461 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.485458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 0)
excute 13:49:03.488442 line       556                     i = i_j[0]
excute 13:49:03.492432 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:03.496419 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.503401 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:49:03.511380 line       556                     i = i_j[0]
excute 13:49:03.516367 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:03.519358 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.526340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:49:03.531359 line       556                     i = i_j[0]
excute 13:49:03.535317 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:03.538339 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.542297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:49:03.545320 line       556                     i = i_j[0]
excute 13:49:03.549309 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:03.553300 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.557258 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 1)
excute 13:49:03.561246 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:03.564270 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:03.568261 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.573215 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 1)
excute 13:49:03.576238 line       556                     i = i_j[0]
excute 13:49:03.580197 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:03.583219 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.587209 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 1)
excute 13:49:03.591198 line       556                     i = i_j[0]
excute 13:49:03.595157 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:03.599146 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.603134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 1)
excute 13:49:03.611115 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:03.615103 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:03.619092 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.624113 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 1)
excute 13:49:03.628076 line       556                     i = i_j[0]
excute 13:49:03.631091 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:03.635081 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.639050 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 1)
excute 13:49:03.643028 line       556                     i = i_j[0]
excute 13:49:03.646051 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:03.650041 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.654032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 2)
excute 13:49:03.657993 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:03.661011 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:03.665000 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.668990 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 2)
excute 13:49:03.672979 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:03.676939 line       557                     j = i_j[1]
excute 13:49:03.680928 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.683950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:49:03.687941 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:03.691898 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:03.694920 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.699876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:49:03.702899 line       556                     i = i_j[0]
excute 13:49:03.706859 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:03.709880 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.715836 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:03.719824 line       556                     i = i_j[0]
excute 13:49:03.724812 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:03.727803 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.731792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:03.735781 line       556                     i = i_j[0]
excute 13:49:03.740768 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:03.743760 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.747750 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:49:03.751740 line       556                     i = i_j[0]
excute 13:49:03.755729 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:03.759717 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.763707 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:03.767696 line       556                     i = i_j[0]
excute 13:49:03.772683 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:03.776673 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.780662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:49:03.783684 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:03.787645 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:03.791630 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.795652 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:49:03.799611 line       556                     i = i_j[0]
excute 13:49:03.803600 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:03.807589 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.811578 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:49:03.816565 line       556                     i = i_j[0]
excute 13:49:03.821553 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:03.825540 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.828534 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:49:03.832522 line       556                     i = i_j[0]
excute 13:49:03.836524 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:03.839503 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.843493 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:49:03.847483 line       556                     i = i_j[0]
excute 13:49:03.851471 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:03.854463 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.858456 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:49:03.861444 line       556                     i = i_j[0]
excute 13:49:03.865434 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:03.869434 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.873414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:49:03.876404 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:03.880393 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:03.884382 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.888373 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:49:03.892363 line       556                     i = i_j[0]
excute 13:49:03.897348 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:03.900341 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.904330 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:49:03.908320 line       556                     i = i_j[0]
excute 13:49:03.911312 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:03.915301 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.920287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:49:03.924277 line       556                     i = i_j[0]
excute 13:49:03.928277 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:03.931259 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.935248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:49:03.939238 line       556                     i = i_j[0]
excute 13:49:03.943228 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:03.946219 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.951206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 1)
excute 13:49:03.956191 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:03.960181 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:03.970154 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.977137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 1)
excute 13:49:03.984117 line       556                     i = i_j[0]
excute 13:49:03.988107 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:03.992094 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:03.996086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 1)
excute 13:49:03.999077 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:04.003068 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:04.007056 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.011046 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 1)
excute 13:49:04.015035 line       556                     i = i_j[0]
excute 13:49:04.019023 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:04.023012 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.027003 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 1)
excute 13:49:04.030992 line       556                     i = i_j[0]
excute 13:49:04.035980 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:04.039001 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.042990 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 1)
excute 13:49:04.046957 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:04.049972 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:04.054928 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.058917 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 1)
excute 13:49:04.061939 line       556                     i = i_j[0]
excute 13:49:04.065897 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:04.068921 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.072910 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 1)
excute 13:49:04.076901 line       556                     i = i_j[0]
excute 13:49:04.080860 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:04.083884 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.087870 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 2)
excute 13:49:04.091866 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:04.095820 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:04.099807 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.103799 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 148
excute 13:49:04.106820 line       560                         if (t_tmp > self.TIME):
excute 13:49:04.110779 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:04.113802 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 155
excute 13:49:04.117791 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:04.121748 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 176
excute 13:49:04.127735 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:04.135711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 2)
excute 13:49:04.139700 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:04.143692 line       557                     j = i_j[1]
excute 13:49:04.147679 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.150672 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:49:04.155660 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:04.159649 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:04.163639 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.167628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:49:04.170617 line       556                     i = i_j[0]
excute 13:49:04.174608 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:04.178597 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.183583 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:49:04.186577 line       556                     i = i_j[0]
excute 13:49:04.191562 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:04.194584 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.198543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:49:04.201566 line       556                     i = i_j[0]
excute 13:49:04.205556 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:04.209545 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.213504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:49:04.216527 line       556                     i = i_j[0]
excute 13:49:04.220516 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:04.224488 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.228466 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 1)
excute 13:49:04.232453 line       556                     i = i_j[0]
excute 13:49:04.236442 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:04.240432 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.244432 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 1)
excute 13:49:04.248411 line       556                     i = i_j[0]
excute 13:49:04.252400 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:04.256390 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.260378 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 158
excute 13:49:04.264369 line       560                         if (t_tmp > self.TIME):
excute 13:49:04.268390 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:04.271379 line       564                                 rse += demands[t][i][j]
excute Modified var:.. rse = 156
excute 13:49:04.274371 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:04.279327 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:04.283351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 1)
excute 13:49:04.286340 line       556                     i = i_j[0]
excute 13:49:04.290329 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:04.294286 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.298281 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 2)
excute 13:49:04.301299 line       556                     i = i_j[0]
excute 13:49:04.305259 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:04.308280 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.312270 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 7, 0)
excute 13:49:04.315262 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:04.319251 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:04.323240 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.333184 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 7, 0)
excute 13:49:04.341162 line       556                     i = i_j[0]
excute 13:49:04.345152 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:04.349141 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.355126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 7, 0)
excute 13:49:04.361108 line       556                     i = i_j[0]
excute 13:49:04.366097 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:04.370086 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.376072 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 7, 0)
excute 13:49:04.380067 line       556                     i = i_j[0]
excute 13:49:04.384080 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:04.388036 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.392057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 7, 0)
excute 13:49:04.396050 line       556                     i = i_j[0]
excute 13:49:04.400004 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:04.404008 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.407984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 7, 1)
excute 13:49:04.410977 line       556                     i = i_j[0]
excute 13:49:04.414965 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:04.418956 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.423943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 7, 1)
excute 13:49:04.427932 line       556                     i = i_j[0]
excute 13:49:04.431921 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:04.436906 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.440895 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 7, 1)
excute 13:49:04.443887 line       556                     i = i_j[0]
excute 13:49:04.448877 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:04.451867 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.456854 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 142
excute 13:49:04.459845 line       560                         if (t_tmp > self.TIME):
excute 13:49:04.463835 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:04.467825 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:04.470815 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:04.474806 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:04.477796 line       569                                     available_vhecles[i][t],
excute 13:49:04.481787 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:04.484810 line       571                                     self.S_capacities[j],
excute 13:49:04.488799 line       572                                     demands[t][i][j],
excute 13:49:04.491792 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = -5
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 137
calc_contract     13:49:04.495752 call       352     def caluculate_contract(
calc_contract     13:49:04.498752 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:04.498752 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:04.499740 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:04.500737 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:04.501733 line       375                 can_contract = available_vhecles_target
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:04.501733 line       376                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 6
calc_contract     13:49:04.502744 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:04.503727 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 6]
excute Modified var:.. rse_tmp = 6
excute 13:49:04.504726 line       575                                 rsf += rsf_tmp
excute 13:49:04.508716 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 162
excute 13:49:04.512729 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 3
move_cars     Starting var:.. j = 8
move_cars     Starting var:.. t = 137
move_cars     Starting var:.. t_tmp = 142
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:04.516693 call       388     def move_cars(
move_cars     13:49:04.520682 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:49:04.521712 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:04.523674 line       399         return available_vhecles
move_cars     13:49:04.524704 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
excute 13:49:04.526668 line       579                                 success += can_contract
excute Modified var:.. success = 61
excute 13:49:04.531653 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 7, 2)
excute 13:49:04.535642 line       556                     i = i_j[0]
excute 13:49:04.539631 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:04.543621 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:04.547612 line       555                 for i_j in i_j_list:
excute 13:49:04.552597 line       581             self.write_matrix(
excute 13:49:04.556585 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:04.560577 line       583                 result_file_path,
excute 13:49:04.563598 line       584                 mode='a'
excute 13:49:04.570322 line       488         for t in time_steps:
excute Modified var:.. t = 138
excute 13:49:04.574307 line       489             if (t != self.TIME + 1):
excute 13:49:04.578295 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:04.582285 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:04.586275 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:04.590267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:04.594256 line       494                         if (i == j):
excute 13:49:04.601236 line       495                             continue
excute 13:49:04.605225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:04.611208 line       494                         if (i == j):
excute 13:49:04.615198 line       496                         i_j_list.append((
excute 13:49:04.619187 line       497                             i, j,
excute 13:49:04.625172 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.629163 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1)]
excute 13:49:04.649109 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:04.657087 line       494                         if (i == j):
excute 13:49:04.662072 line       496                         i_j_list.append((
excute 13:49:04.665064 line       497                             i, j,
excute 13:49:04.672046 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.678029 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0)]
excute 13:49:04.682018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:04.686008 line       494                         if (i == j):
excute 13:49:04.690996 line       496                         i_j_list.append((
excute 13:49:04.693986 line       497                             i, j,
excute 13:49:04.699972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.703960 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:49:04.709947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:04.713934 line       494                         if (i == j):
excute 13:49:04.717923 line       496                         i_j_list.append((
excute 13:49:04.722910 line       497                             i, j,
excute 13:49:04.726899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.729891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:49:04.732882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:04.736872 line       494                         if (i == j):
excute 13:49:04.740862 line       496                         i_j_list.append((
excute 13:49:04.744852 line       497                             i, j,
excute 13:49:04.748842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.752835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:49:04.756819 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:04.760809 line       494                         if (i == j):
excute 13:49:04.764798 line       496                         i_j_list.append((
excute 13:49:04.767789 line       497                             i, j,
excute 13:49:04.771778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.776765 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1)]
excute 13:49:04.782749 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:04.786738 line       494                         if (i == j):
excute 13:49:04.791726 line       496                         i_j_list.append((
excute 13:49:04.795747 line       497                             i, j,
excute 13:49:04.798738 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.801730 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0)]
excute 13:49:04.805688 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:04.808680 line       494                         if (i == j):
excute 13:49:04.812669 line       496                         i_j_list.append((
excute 13:49:04.816659 line       497                             i, j,
excute 13:49:04.819650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.822642 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:49:04.826633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:04.829624 line       494                         if (i == j):
excute 13:49:04.833613 line       496                         i_j_list.append((
excute 13:49:04.837603 line       497                             i, j,
excute 13:49:04.840595 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.844585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:49:04.847576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:04.853562 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:04.856585 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:04.861540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:04.866528 line       494                         if (i == j):
excute 13:49:04.870515 line       496                         i_j_list.append((
excute 13:49:04.873507 line       497                             i, j,
excute 13:49:04.880489 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.884485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0)]
excute 13:49:04.890461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:04.894452 line       494                         if (i == j):
excute 13:49:04.898472 line       495                             continue
excute 13:49:04.902461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:04.905421 line       494                         if (i == j):
excute 13:49:04.909411 line       496                         i_j_list.append((
excute 13:49:04.912402 line       497                             i, j,
excute 13:49:04.916393 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.919385 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:49:04.922376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:04.926366 line       494                         if (i == j):
excute 13:49:04.930356 line       496                         i_j_list.append((
excute 13:49:04.933347 line       497                             i, j,
excute 13:49:04.936339 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.940329 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:49:04.943320 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:04.948322 line       494                         if (i == j):
excute 13:49:04.952297 line       496                         i_j_list.append((
excute 13:49:04.957284 line       497                             i, j,
excute 13:49:04.961273 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.964266 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:49:04.968255 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:04.972244 line       494                         if (i == j):
excute 13:49:04.977230 line       496                         i_j_list.append((
excute 13:49:04.980223 line       497                             i, j,
excute 13:49:04.984213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:04.988202 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:49:04.991194 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:04.996182 line       494                         if (i == j):
excute 13:49:05.000171 line       496                         i_j_list.append((
excute 13:49:05.003160 line       497                             i, j,
excute 13:49:05.006152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.010141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1)]
excute 13:49:05.013133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:05.017128 line       494                         if (i == j):
excute 13:49:05.021112 line       496                         i_j_list.append((
excute 13:49:05.024104 line       497                             i, j,
excute 13:49:05.027096 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.031085 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0)]
excute 13:49:05.034077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:05.038073 line       494                         if (i == j):
excute 13:49:05.041058 line       496                         i_j_list.append((
excute 13:49:05.044051 line       497                             i, j,
excute 13:49:05.048040 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.051032 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:49:05.055022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:05.060010 line       494                         if (i == j):
excute 13:49:05.063999 line       496                         i_j_list.append((
excute 13:49:05.066990 line       497                             i, j,
excute 13:49:05.070979 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.074969 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:49:05.078958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:05.082948 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:05.085939 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:05.090927 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:05.093919 line       494                         if (i == j):
excute 13:49:05.097908 line       496                         i_j_list.append((
excute 13:49:05.100900 line       497                             i, j,
excute 13:49:05.104889 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.107881 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:49:05.111872 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:05.115861 line       494                         if (i == j):
excute 13:49:05.119849 line       496                         i_j_list.append((
excute 13:49:05.122842 line       497                             i, j,
excute 13:49:05.126831 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.130821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1)]
excute 13:49:05.134808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:05.138831 line       494                         if (i == j):
excute 13:49:05.141822 line       495                             continue
excute 13:49:05.145810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:05.149774 line       494                         if (i == j):
excute 13:49:05.154758 line       496                         i_j_list.append((
excute 13:49:05.158744 line       497                             i, j,
excute 13:49:05.163733 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.167722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0)]
excute 13:49:05.170714 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:05.174703 line       494                         if (i == j):
excute 13:49:05.179690 line       496                         i_j_list.append((
excute 13:49:05.182682 line       497                             i, j,
excute 13:49:05.186671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.189663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:05.193652 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:05.197642 line       494                         if (i == j):
excute 13:49:05.201632 line       496                         i_j_list.append((
excute 13:49:05.205621 line       497                             i, j,
excute 13:49:05.208612 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.212602 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:05.216591 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:05.220579 line       494                         if (i == j):
excute 13:49:05.223570 line       496                         i_j_list.append((
excute 13:49:05.227560 line       497                             i, j,
excute 13:49:05.230552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.234542 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1)]
excute 13:49:05.237533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:05.241523 line       494                         if (i == j):
excute 13:49:05.245521 line       496                         i_j_list.append((
excute 13:49:05.248504 line       497                             i, j,
excute 13:49:05.251496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.255486 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0)]
excute 13:49:05.260473 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:05.267455 line       494                         if (i == j):
excute 13:49:05.271445 line       496                         i_j_list.append((
excute 13:49:05.277426 line       497                             i, j,
excute 13:49:05.281417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.284410 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:49:05.288399 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:05.292389 line       494                         if (i == j):
excute 13:49:05.296378 line       496                         i_j_list.append((
excute 13:49:05.300367 line       497                             i, j,
excute 13:49:05.304357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.307349 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:49:05.311338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:05.315327 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:05.319316 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:05.323307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:05.328294 line       494                         if (i == j):
excute 13:49:05.336271 line       496                         i_j_list.append((
excute 13:49:05.342256 line       497                             i, j,
excute 13:49:05.345246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.349236 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0)]
excute 13:49:05.352231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:05.357231 line       494                         if (i == j):
excute 13:49:05.361203 line       496                         i_j_list.append((
excute 13:49:05.365192 line       497                             i, j,
excute 13:49:05.369182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.373172 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1)]
excute 13:49:05.377162 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:05.382148 line       494                         if (i == j):
excute 13:49:05.386138 line       496                         i_j_list.append((
excute 13:49:05.390127 line       497                             i, j,
excute 13:49:05.393118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.397108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0)]
excute 13:49:05.401102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:05.404089 line       494                         if (i == j):
excute 13:49:05.408079 line       495                             continue
excute 13:49:05.412068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:05.415060 line       494                         if (i == j):
excute 13:49:05.419048 line       496                         i_j_list.append((
excute 13:49:05.422041 line       497                             i, j,
excute 13:49:05.425033 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.429023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0)]
excute 13:49:05.432014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:05.436005 line       494                         if (i == j):
excute 13:49:05.439992 line       496                         i_j_list.append((
excute 13:49:05.443016 line       497                             i, j,
excute 13:49:05.447007 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.449998 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0)]
excute 13:49:05.453990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:05.457944 line       494                         if (i == j):
excute 13:49:05.463931 line       496                         i_j_list.append((
excute 13:49:05.471908 line       497                             i, j,
excute 13:49:05.475931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.479905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1)]
excute 13:49:05.482877 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:05.486867 line       494                         if (i == j):
excute 13:49:05.490888 line       496                         i_j_list.append((
excute 13:49:05.494875 line       497                             i, j,
excute 13:49:05.497869 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.500862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0)]
excute 13:49:05.504851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:05.508810 line       494                         if (i == j):
excute 13:49:05.512799 line       496                         i_j_list.append((
excute 13:49:05.516789 line       497                             i, j,
excute 13:49:05.520778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.523770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0)]
excute 13:49:05.527759 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:05.532744 line       494                         if (i == j):
excute 13:49:05.536733 line       496                         i_j_list.append((
excute 13:49:05.540723 line       497                             i, j,
excute 13:49:05.543747 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.546739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0)]
excute 13:49:05.550730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:05.553722 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:05.557710 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:05.561699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:05.565657 line       494                         if (i == j):
excute 13:49:05.568680 line       496                         i_j_list.append((
excute 13:49:05.573637 line       497                             i, j,
excute 13:49:05.576627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.580616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0)]
excute 13:49:05.583642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:05.587632 line       494                         if (i == j):
excute 13:49:05.591619 line       496                         i_j_list.append((
excute 13:49:05.595576 line       497                             i, j,
excute 13:49:05.598602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.602557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1)]
excute 13:49:05.606547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:05.610551 line       494                         if (i == j):
excute 13:49:05.614527 line       496                         i_j_list.append((
excute 13:49:05.617519 line       497                             i, j,
excute 13:49:05.621509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.625498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0)]
excute 13:49:05.629487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:05.633477 line       494                         if (i == j):
excute 13:49:05.637498 line       496                         i_j_list.append((
excute 13:49:05.641485 line       497                             i, j,
excute 13:49:05.644477 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.648467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0)]
excute 13:49:05.651461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:05.655449 line       494                         if (i == j):
excute 13:49:05.659440 line       495                             continue
excute 13:49:05.663396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:05.667385 line       494                         if (i == j):
excute 13:49:05.671374 line       496                         i_j_list.append((
excute 13:49:05.675364 line       497                             i, j,
excute 13:49:05.679354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.683344 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:49:05.687333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:05.692318 line       494                         if (i == j):
excute 13:49:05.696307 line       496                         i_j_list.append((
excute 13:49:05.699333 line       497                             i, j,
excute 13:49:05.703288 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.706312 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1)]
excute 13:49:05.709303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:05.714260 line       494                         if (i == j):
excute 13:49:05.718249 line       496                         i_j_list.append((
excute 13:49:05.721240 line       497                             i, j,
excute 13:49:05.724232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.728222 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0)]
excute 13:49:05.731213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:05.735203 line       494                         if (i == j):
excute 13:49:05.738194 line       496                         i_j_list.append((
excute 13:49:05.742184 line       497                             i, j,
excute 13:49:05.745176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.748168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:49:05.752159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:05.756151 line       494                         if (i == j):
excute 13:49:05.760137 line       496                         i_j_list.append((
excute 13:49:05.763163 line       497                             i, j,
excute 13:49:05.766154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.770142 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0)]
excute 13:49:05.773133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:05.778090 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:05.782079 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:05.787067 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:05.791056 line       494                         if (i == j):
excute 13:49:05.795044 line       496                         i_j_list.append((
excute 13:49:05.798035 line       497                             i, j,
excute 13:49:05.801027 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.804019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0)]
excute 13:49:05.808008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:05.812000 line       494                         if (i == j):
excute 13:49:05.814990 line       496                         i_j_list.append((
excute 13:49:05.818984 line       497                             i, j,
excute 13:49:05.821972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.825961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1)]
excute 13:49:05.828952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:05.832942 line       494                         if (i == j):
excute 13:49:05.835933 line       496                         i_j_list.append((
excute 13:49:05.839923 line       497                             i, j,
excute 13:49:05.842915 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.846904 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0)]
excute 13:49:05.849896 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:05.853886 line       494                         if (i == j):
excute 13:49:05.857876 line       496                         i_j_list.append((
excute 13:49:05.860867 line       497                             i, j,
excute 13:49:05.863859 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.867849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:49:05.870840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:05.874845 line       494                         if (i == j):
excute 13:49:05.877822 line       496                         i_j_list.append((
excute 13:49:05.883808 line       497                             i, j,
excute 13:49:05.886829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.890788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:49:05.893813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:05.897802 line       494                         if (i == j):
excute 13:49:05.901793 line       495                             continue
excute 13:49:05.904781 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:05.908741 line       494                         if (i == j):
excute 13:49:05.911763 line       496                         i_j_list.append((
excute 13:49:05.915753 line       497                             i, j,
excute 13:49:05.920885 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.924893 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1)]
excute 13:49:05.927916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:05.931874 line       494                         if (i == j):
excute 13:49:05.936861 line       496                         i_j_list.append((
excute 13:49:05.939879 line       497                             i, j,
excute 13:49:05.942879 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.946834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0)]
excute 13:49:05.950823 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:05.954813 line       494                         if (i == j):
excute 13:49:05.958816 line       496                         i_j_list.append((
excute 13:49:05.961794 line       497                             i, j,
excute 13:49:05.965782 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.968775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:49:05.972764 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:05.976755 line       494                         if (i == j):
excute 13:49:05.981741 line       496                         i_j_list.append((
excute 13:49:05.985730 line       497                             i, j,
excute 13:49:05.989720 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:05.992710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:49:05.995703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:05.999703 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:06.002684 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:06.006673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:06.010663 line       494                         if (i == j):
excute 13:49:06.014653 line       496                         i_j_list.append((
excute 13:49:06.017644 line       497                             i, j,
excute 13:49:06.021633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.024625 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0)]
excute 13:49:06.028615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:06.031606 line       494                         if (i == j):
excute 13:49:06.035596 line       496                         i_j_list.append((
excute 13:49:06.039586 line       497                             i, j,
excute 13:49:06.043576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.046566 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1)]
excute 13:49:06.050557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:06.053548 line       494                         if (i == j):
excute 13:49:06.058538 line       496                         i_j_list.append((
excute 13:49:06.061527 line       497                             i, j,
excute 13:49:06.064519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.068508 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0)]
excute 13:49:06.073496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:06.080477 line       494                         if (i == j):
excute 13:49:06.088456 line       496                         i_j_list.append((
excute 13:49:06.096434 line       497                             i, j,
excute 13:49:06.099427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.103415 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0)]
excute 13:49:06.107406 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:06.110396 line       494                         if (i == j):
excute 13:49:06.114385 line       496                         i_j_list.append((
excute 13:49:06.117378 line       497                             i, j,
excute 13:49:06.121366 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.124359 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0)]
excute 13:49:06.127351 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:06.131340 line       494                         if (i == j):
excute 13:49:06.136351 line       496                         i_j_list.append((
excute 13:49:06.139318 line       497                             i, j,
excute 13:49:06.143310 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.146300 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0)]
excute 13:49:06.149292 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:06.153282 line       494                         if (i == j):
excute 13:49:06.158270 line       495                             continue
excute 13:49:06.161261 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:06.168242 line       494                         if (i == j):
excute 13:49:06.174227 line       496                         i_j_list.append((
excute 13:49:06.177218 line       497                             i, j,
excute 13:49:06.181207 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.184199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0)]
excute 13:49:06.189187 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:06.193185 line       494                         if (i == j):
excute 13:49:06.197164 line       496                         i_j_list.append((
excute 13:49:06.201154 line       497                             i, j,
excute 13:49:06.204146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.207138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0)]
excute 13:49:06.211127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:06.215118 line       494                         if (i == j):
excute 13:49:06.219106 line       496                         i_j_list.append((
excute 13:49:06.222097 line       497                             i, j,
excute 13:49:06.226087 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.229079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0)]
excute 13:49:06.232071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:06.236061 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:06.240069 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:06.244040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:06.247062 line       494                         if (i == j):
excute 13:49:06.251021 line       496                         i_j_list.append((
excute 13:49:06.254048 line       497                             i, j,
excute 13:49:06.258035 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.261996 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0)]
excute 13:49:06.264982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:06.268972 line       494                         if (i == j):
excute 13:49:06.272962 line       496                         i_j_list.append((
excute 13:49:06.276951 line       497                             i, j,
excute 13:49:06.279943 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.282935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1)]
excute 13:49:06.286924 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:06.291917 line       494                         if (i == j):
excute 13:49:06.295933 line       496                         i_j_list.append((
excute 13:49:06.298928 line       497                             i, j,
excute 13:49:06.302913 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.305905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0)]
excute 13:49:06.309884 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:06.313853 line       494                         if (i == j):
excute 13:49:06.316876 line       496                         i_j_list.append((
excute 13:49:06.320865 line       497                             i, j,
excute 13:49:06.324824 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.332802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:49:06.336793 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:06.342777 line       494                         if (i == j):
excute 13:49:06.350755 line       496                         i_j_list.append((
excute 13:49:06.357742 line       497                             i, j,
excute 13:49:06.361725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.366711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:06.374696 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:06.382670 line       494                         if (i == j):
excute 13:49:06.388653 line       496                         i_j_list.append((
excute 13:49:06.398626 line       497                             i, j,
excute 13:49:06.404611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.412620 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:49:06.417575 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:06.421568 line       494                         if (i == j):
excute 13:49:06.426554 line       496                         i_j_list.append((
excute 13:49:06.431538 line       497                             i, j,
excute 13:49:06.435527 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.439517 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1)]
excute 13:49:06.443507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:06.447496 line       494                         if (i == j):
excute 13:49:06.452484 line       495                             continue
excute 13:49:06.459464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:06.463455 line       494                         if (i == j):
excute 13:49:06.468440 line       496                         i_j_list.append((
excute 13:49:06.476419 line       497                             i, j,
excute 13:49:06.482403 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.490383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0)]
excute 13:49:06.499359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:06.507336 line       494                         if (i == j):
excute 13:49:06.517310 line       496                         i_j_list.append((
excute 13:49:06.522297 line       497                             i, j,
excute 13:49:06.530275 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.536259 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:49:06.541245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:06.547228 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:06.555210 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:06.562190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:06.569170 line       494                         if (i == j):
excute 13:49:06.578147 line       496                         i_j_list.append((
excute 13:49:06.586125 line       497                             i, j,
excute 13:49:06.591112 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.597096 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0)]
excute 13:49:06.605076 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:06.611058 line       494                         if (i == j):
excute 13:49:06.617042 line       496                         i_j_list.append((
excute 13:49:06.623027 line       497                             i, j,
excute 13:49:06.629011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.635992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1)]
excute 13:49:06.642974 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:06.649955 line       494                         if (i == j):
excute 13:49:06.656936 line       496                         i_j_list.append((
excute 13:49:06.662922 line       497                             i, j,
excute 13:49:06.670898 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.677880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0)]
excute 13:49:06.683864 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:06.691842 line       494                         if (i == j):
excute 13:49:06.698824 line       496                         i_j_list.append((
excute 13:49:06.706803 line       497                             i, j,
excute 13:49:06.712786 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.718769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:49:06.724754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:06.733731 line       494                         if (i == j):
excute 13:49:06.740712 line       496                         i_j_list.append((
excute 13:49:06.747694 line       497                             i, j,
excute 13:49:06.755672 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.762658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:49:06.768636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:06.775618 line       494                         if (i == j):
excute 13:49:06.782600 line       496                         i_j_list.append((
excute 13:49:06.787586 line       497                             i, j,
excute 13:49:06.794568 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.798557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:49:06.802546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:06.806539 line       494                         if (i == j):
excute 13:49:06.812519 line       496                         i_j_list.append((
excute 13:49:06.816508 line       497                             i, j,
excute 13:49:06.819501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.823490 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1)]
excute 13:49:06.827479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:06.831469 line       494                         if (i == j):
excute 13:49:06.835458 line       496                         i_j_list.append((
excute 13:49:06.838450 line       497                             i, j,
excute 13:49:06.842439 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.845431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0)]
excute 13:49:06.849420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:06.853410 line       494                         if (i == j):
excute 13:49:06.857399 line       495                             continue
excute 13:49:06.860391 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:06.864380 line       494                         if (i == j):
excute 13:49:06.867372 line       496                         i_j_list.append((
excute 13:49:06.871362 line       497                             i, j,
excute 13:49:06.874354 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.878343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:49:06.881335 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:06.885324 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:06.889314 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:06.893303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:06.897305 line       494                         if (i == j):
excute 13:49:06.902280 line       496                         i_j_list.append((
excute 13:49:06.906269 line       497                             i, j,
excute 13:49:06.911258 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.915245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0)]
excute 13:49:06.918236 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:06.922227 line       494                         if (i == j):
excute 13:49:06.926216 line       496                         i_j_list.append((
excute 13:49:06.929207 line       497                             i, j,
excute 13:49:06.932199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.936190 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1)]
excute 13:49:06.939180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:06.943170 line       494                         if (i == j):
excute 13:49:06.948157 line       496                         i_j_list.append((
excute 13:49:06.951181 line       497                             i, j,
excute 13:49:06.955174 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.959159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0)]
excute 13:49:06.963118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:06.970100 line       494                         if (i == j):
excute 13:49:06.974089 line       496                         i_j_list.append((
excute 13:49:06.978109 line       497                             i, j,
excute 13:49:06.982066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:06.985093 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:49:06.989080 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:06.993071 line       494                         if (i == j):
excute 13:49:06.997047 line       496                         i_j_list.append((
excute 13:49:07.001052 line       497                             i, j,
excute 13:49:07.004042 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:07.008024 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:49:07.010989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:07.015975 line       494                         if (i == j):
excute 13:49:07.019964 line       496                         i_j_list.append((
excute 13:49:07.023954 line       497                             i, j,
excute 13:49:07.026946 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:07.030935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0)]
excute 13:49:07.033927 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:07.037916 line       494                         if (i == j):
excute 13:49:07.049193 line       496                         i_j_list.append((
excute 13:49:07.053187 line       497                             i, j,
excute 13:49:07.057177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:07.060168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 1)]
excute 13:49:07.064157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:07.067183 line       494                         if (i == j):
excute 13:49:07.071169 line       496                         i_j_list.append((
excute 13:49:07.075162 line       497                             i, j,
excute 13:49:07.078154 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:07.082141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 1), (9, 7, 2, 0)]
excute 13:49:07.085133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:07.089089 line       494                         if (i == j):
excute 13:49:07.093079 line       496                         i_j_list.append((
excute 13:49:07.097068 line       497                             i, j,
excute 13:49:07.100060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:07.103052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 1), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 1), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 1), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 8, 0), (3, 1, 8, 1), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 6, 8, 1), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (4, 0, 3, 0), (4, 1, 3, 1), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 1), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 1), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 1), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 1, 0), (6, 1, 1, 1), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (7, 0, -2, 0), (7, 1, -2, 1), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 1), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 1), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 2, 0), (9, 1, 2, 1), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 6, 2, 1), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:49:07.107042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:07.110033 line       494                         if (i == j):
excute 13:49:07.115022 line       495                             continue
excute 13:49:07.119021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:07.122033 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:07.125025 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (7, 1, -2, 1), (7, 6, -2, 1), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (1, 6, 0, 1), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (6, 0, 1, 0), (6, 2, 1, 0), (6, 3, 1, 0), (6, 4, 1, 0), (6, 5, 1, 0), (6, 7, 1, 0), (6, 8, 1, 0), (6, 9, 1, 0), (8, 0, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (0, 1, 1, 1), (0, 6, 1, 1), (6, 1, 1, 1), (8, 1, 1, 1), (8, 6, 1, 1), (2, 0, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (5, 0, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (9, 0, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (2, 1, 2, 1), (2, 6, 2, 1), (5, 1, 2, 1), (5, 6, 2, 1), (9, 1, 2, 1), (9, 6, 2, 1), (4, 0, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (4, 1, 3, 1), (4, 6, 3, 1), (3, 0, 8, 0), (3, 2, 8, 0), (3, 4, 8, 0), (3, 5, 8, 0), (3, 7, 8, 0), (3, 8, 8, 0), (3, 9, 8, 0), (3, 1, 8, 1), (3, 6, 8, 1)]
excute 13:49:07.129015 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:07.132972 line       505                     if (self.RELOCATE):
excute 13:49:07.136994 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:07.140986 line       505                     if (self.RELOCATE):
excute 13:49:07.144942 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:07.147964 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:07.151954 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:07.155911 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:07.159901 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.163890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:07.168877 line       556                     i = i_j[0]
excute 13:49:07.174862 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:07.177884 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.181843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:07.184865 line       556                     i = i_j[0]
excute 13:49:07.188856 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:07.192821 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.196803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:07.200793 line       556                     i = i_j[0]
excute 13:49:07.204782 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:07.208770 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.212766 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:07.215783 line       556                     i = i_j[0]
excute 13:49:07.221736 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:07.224727 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.228716 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:07.232706 line       556                     i = i_j[0]
excute 13:49:07.235698 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:07.239687 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.243677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:07.246669 line       556                     i = i_j[0]
excute 13:49:07.250657 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:07.254647 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.258637 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 1)
excute 13:49:07.261629 line       556                     i = i_j[0]
excute 13:49:07.265617 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:07.269607 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.273597 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 1)
excute 13:49:07.277586 line       556                     i = i_j[0]
excute 13:49:07.281608 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:07.285600 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.289556 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:49:07.292577 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:07.296568 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:07.300557 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.304547 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:49:07.308521 line       556                     i = i_j[0]
excute 13:49:07.311528 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:07.315516 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.319475 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:49:07.323497 line       556                     i = i_j[0]
excute 13:49:07.332444 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:07.340420 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.345406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:49:07.348429 line       556                     i = i_j[0]
excute 13:49:07.352418 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:07.358373 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.362361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:49:07.366351 line       556                     i = i_j[0]
excute 13:49:07.370340 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:07.375327 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.379316 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:49:07.383305 line       556                     i = i_j[0]
excute 13:49:07.388293 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:07.392280 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.396270 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:49:07.399262 line       556                     i = i_j[0]
excute 13:49:07.403250 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:07.407240 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.410231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:49:07.414220 line       556                     i = i_j[0]
excute 13:49:07.418210 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:07.421202 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.426226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 1)
excute 13:49:07.430199 line       556                     i = i_j[0]
excute 13:49:07.434169 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:07.437195 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.441150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:49:07.444173 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:07.449129 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:07.453117 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.458105 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:49:07.462093 line       556                     i = i_j[0]
excute 13:49:07.466085 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:07.469076 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.473063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:49:07.477054 line       556                     i = i_j[0]
excute 13:49:07.481044 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:07.485034 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.489023 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:49:07.493012 line       556                     i = i_j[0]
excute 13:49:07.497001 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:07.500990 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.505986 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:49:07.509003 line       556                     i = i_j[0]
excute 13:49:07.512989 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:07.516981 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.520968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:49:07.523959 line       556                     i = i_j[0]
excute 13:49:07.528946 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:07.532939 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.536897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:49:07.539916 line       556                     i = i_j[0]
excute 13:49:07.543906 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:07.547895 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.551854 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 1, 0)
excute 13:49:07.555843 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:07.558865 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:07.562855 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.566844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 1, 0)
excute 13:49:07.570834 line       556                     i = i_j[0]
excute 13:49:07.574825 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:07.577817 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.581793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 1, 0)
excute 13:49:07.584796 line       556                     i = i_j[0]
excute 13:49:07.588790 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:07.592743 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.596733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 1, 0)
excute 13:49:07.599725 line       556                     i = i_j[0]
excute 13:49:07.607704 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:07.611694 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.618676 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 1, 0)
excute 13:49:07.625657 line       556                     i = i_j[0]
excute 13:49:07.633635 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:07.637656 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.641649 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 1, 0)
excute 13:49:07.644640 line       556                     i = i_j[0]
excute 13:49:07.648596 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:07.652584 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.656574 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 1, 0)
excute 13:49:07.659597 line       556                     i = i_j[0]
excute 13:49:07.663585 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:07.667548 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.671534 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 1, 0)
excute 13:49:07.674556 line       556                     i = i_j[0]
excute 13:49:07.678515 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:07.682506 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.687492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:49:07.691480 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:07.695469 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:07.701453 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.708435 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:49:07.712424 line       556                     i = i_j[0]
excute 13:49:07.717413 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:07.720404 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.725392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:49:07.728383 line       556                     i = i_j[0]
excute 13:49:07.742344 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:07.749326 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.753349 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:49:07.757305 line       556                     i = i_j[0]
excute 13:49:07.766280 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:07.775256 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.779246 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:49:07.783236 line       556                     i = i_j[0]
excute 13:49:07.787224 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:07.791213 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.795205 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:49:07.798196 line       556                     i = i_j[0]
excute 13:49:07.802189 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:07.806175 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.810165 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:49:07.813156 line       556                     i = i_j[0]
excute 13:49:07.817147 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:07.820136 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.824126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 1)
excute 13:49:07.828116 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:07.832104 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:07.836096 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.841079 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 146
excute 13:49:07.845069 line       560                         if (t_tmp > self.TIME):
excute 13:49:07.849060 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:07.852051 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:07.856040 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 177
excute 13:49:07.859032 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:07.863022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 1)
excute 13:49:07.867012 line       556                     i = i_j[0]
excute 13:49:07.871001 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:07.874023 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.877991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 1, 1)
excute 13:49:07.881008 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:07.884994 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:07.888986 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.892973 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 1)
excute 13:49:07.896964 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:07.900921 line       557                     j = i_j[1]
excute 13:49:07.904945 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.907936 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 1)
excute 13:49:07.910924 line       556                     i = i_j[0]
excute 13:49:07.914882 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:07.918871 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.921863 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:49:07.925852 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:07.929843 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:07.933834 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.937824 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:07.942840 line       556                     i = i_j[0]
excute 13:49:07.946829 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:07.951786 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.955775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:07.959764 line       556                     i = i_j[0]
excute 13:49:07.964763 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:07.967743 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.972731 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:49:07.976718 line       556                     i = i_j[0]
excute 13:49:07.981705 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:07.984698 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:07.988687 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:07.992676 line       556                     i = i_j[0]
excute 13:49:07.997662 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:08.001651 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.005640 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:08.010626 line       556                     i = i_j[0]
excute 13:49:08.014617 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:08.017607 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.021597 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:08.025586 line       556                     i = i_j[0]
excute 13:49:08.029576 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:08.032567 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.036557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:49:08.039549 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:08.044537 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:08.048527 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.052516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:49:08.056503 line       556                     i = i_j[0]
excute 13:49:08.060495 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:08.063517 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.067476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:49:08.070498 line       556                     i = i_j[0]
excute 13:49:08.074489 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:08.078477 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.082467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:49:08.085458 line       556                     i = i_j[0]
excute 13:49:08.089418 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:08.093406 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.097396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:49:08.101385 line       556                     i = i_j[0]
excute 13:49:08.105375 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:08.108367 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.112357 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:49:08.116344 line       556                     i = i_j[0]
excute 13:49:08.120335 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:08.124324 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.128314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:49:08.131306 line       556                     i = i_j[0]
excute 13:49:08.136292 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:08.140281 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.145268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:49:08.149288 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:08.153277 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:08.158250 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.161257 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:49:08.165244 line       556                     i = i_j[0]
excute 13:49:08.169204 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:08.172226 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.176218 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:49:08.180206 line       556                     i = i_j[0]
excute 13:49:08.184176 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:08.187190 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.191145 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:49:08.196163 line       556                     i = i_j[0]
excute 13:49:08.200154 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:08.204144 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.208110 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:49:08.211125 line       556                     i = i_j[0]
excute 13:49:08.215088 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:08.218103 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.222094 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:49:08.226082 line       556                     i = i_j[0]
excute 13:49:08.230067 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:08.233063 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.237023 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:49:08.240047 line       556                     i = i_j[0]
excute 13:49:08.244034 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:08.248026 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.253976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 1)
excute 13:49:08.257965 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:08.261957 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:08.265946 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.269935 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 1)
excute 13:49:08.273924 line       556                     i = i_j[0]
excute 13:49:08.278911 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:08.282900 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.286889 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 1)
excute 13:49:08.290879 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:08.294867 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:08.298857 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.303845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 1)
excute 13:49:08.307833 line       556                     i = i_j[0]
excute 13:49:08.311822 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:08.315812 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.319805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 1)
excute 13:49:08.323791 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:08.334761 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:08.343740 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.348725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 1)
excute 13:49:08.353711 line       556                     i = i_j[0]
excute 13:49:08.360691 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:08.365677 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.370665 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 149
excute 13:49:08.378642 line       560                         if (t_tmp > self.TIME):
excute 13:49:08.382632 line       563                             if (available_vhecles[i][t] == 0):
excute 13:49:08.387618 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:49:08.391609 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:49:08.395598 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:49:08.398590 line       569                                     available_vhecles[i][t],
excute 13:49:08.402584 line       570                                     available_vhecles[j][t_tmp],
excute 13:49:08.405572 line       571                                     self.S_capacities[j],
excute 13:49:08.409561 line       572                                     demands[t][i][j],
excute 13:49:08.412553 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 1
calc_contract     Starting var:.. available_vhecles_target = 3
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 138
calc_contract     13:49:08.416542 call       352     def caluculate_contract(
calc_contract     13:49:08.420531 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:49:08.421528 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:49:08.422529 line       362         if (available_vhecles_start >= demand):
calc_contract     13:49:08.423523 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:49:08.424520 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:49:08.424520 line       385         return [can_contract, rsf, rse]
calc_contract     13:49:08.425519 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute Modified var:.. rse_tmp = 0
excute 13:49:08.426517 line       575                                 rsf += rsf_tmp
excute 13:49:08.430537 line       576                                 rse += rse_tmp
excute 13:49:08.433528 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 138
move_cars     Starting var:.. t_tmp = 149
move_cars     Starting var:.. can_contract = 1
move_cars     13:49:08.437517 call       388     def move_cars(
move_cars     13:49:08.441508 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
move_cars     13:49:08.442508 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:49:08.444500 line       399         return available_vhecles
move_cars     13:49:08.445497 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
excute 13:49:08.448459 line       579                                 success += can_contract
excute Modified var:.. success = 62
excute 13:49:08.452445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:49:08.458431 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:08.462420 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:08.468437 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.473389 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:49:08.476381 line       556                     i = i_j[0]
excute 13:49:08.480370 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:08.484360 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.488382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:49:08.492338 line       556                     i = i_j[0]
excute 13:49:08.496328 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:08.499320 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.503309 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:49:08.507298 line       556                     i = i_j[0]
excute 13:49:08.511288 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:08.514280 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.518269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:49:08.522258 line       556                     i = i_j[0]
excute 13:49:08.526248 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:08.529271 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.533261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:49:08.537219 line       556                     i = i_j[0]
excute 13:49:08.540243 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:08.544232 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.548223 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:49:08.551216 line       556                     i = i_j[0]
excute 13:49:08.555173 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:08.560160 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.565144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 1)
excute 13:49:08.569135 line       556                     i = i_j[0]
excute 13:49:08.573123 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:08.577111 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.580104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 1)
excute 13:49:08.584093 line       556                     i = i_j[0]
excute 13:49:08.588083 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:08.592072 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.596063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 8, 0)
excute 13:49:08.599053 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:08.603042 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:08.608033 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.612019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 8, 0)
excute 13:49:08.616008 line       556                     i = i_j[0]
excute 13:49:08.619998 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:08.623989 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.627978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 8, 0)
excute 13:49:08.631967 line       556                     i = i_j[0]
excute 13:49:08.636953 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:08.640941 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.644932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 8, 0)
excute 13:49:08.648921 line       556                     i = i_j[0]
excute 13:49:08.655455 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:08.658474 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.662437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 8, 0)
excute 13:49:08.667420 line       556                     i = i_j[0]
excute 13:49:08.672408 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:08.675400 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.679388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 8, 0)
excute 13:49:08.683378 line       556                     i = i_j[0]
excute 13:49:08.687367 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:08.691356 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.697339 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 8, 0)
excute 13:49:08.701330 line       556                     i = i_j[0]
excute 13:49:08.706317 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:08.709308 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.714296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 8, 1)
excute 13:49:08.718282 line       556                     i = i_j[0]
excute 13:49:08.722273 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:08.727273 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.732248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 8, 1)
excute 13:49:08.737234 line       556                     i = i_j[0]
excute 13:49:08.743217 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:08.747205 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:08.751196 line       555                 for i_j in i_j_list:
excute 13:49:08.754187 line       581             self.write_matrix(
excute 13:49:08.758177 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:08.762168 line       583                 result_file_path,
excute 13:49:08.767155 line       584                 mode='a'
excute 13:49:08.775134 line       488         for t in time_steps:
excute Modified var:.. t = 139
excute 13:49:08.781115 line       489             if (t != self.TIME + 1):
excute 13:49:08.787099 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:08.792087 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:08.797074 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:08.801063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:08.804053 line       494                         if (i == j):
excute 13:49:08.811035 line       495                             continue
excute 13:49:08.816022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:08.823004 line       494                         if (i == j):
excute 13:49:08.826993 line       496                         i_j_list.append((
excute 13:49:08.829985 line       497                             i, j,
excute 13:49:08.833975 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:08.842950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:49:08.853921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:08.861900 line       494                         if (i == j):
excute 13:49:08.865888 line       496                         i_j_list.append((
excute 13:49:08.869878 line       497                             i, j,
excute 13:49:08.874866 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:08.881845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:49:08.885835 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:08.889824 line       494                         if (i == j):
excute 13:49:08.893815 line       496                         i_j_list.append((
excute 13:49:08.897804 line       497                             i, j,
excute 13:49:08.903787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:08.907778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:49:08.913761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:08.919745 line       494                         if (i == j):
excute 13:49:08.924731 line       496                         i_j_list.append((
excute 13:49:08.928721 line       497                             i, j,
excute 13:49:08.931712 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:08.934705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:49:08.938694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:08.942684 line       494                         if (i == j):
excute 13:49:08.947678 line       496                         i_j_list.append((
excute 13:49:08.950662 line       497                             i, j,
excute 13:49:08.954650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:08.958643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:49:08.961632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:08.965622 line       494                         if (i == j):
excute 13:49:08.969611 line       496                         i_j_list.append((
excute 13:49:08.973603 line       497                             i, j,
excute 13:49:08.978588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:08.981579 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:49:08.984571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:08.988560 line       494                         if (i == j):
excute 13:49:08.992550 line       496                         i_j_list.append((
excute 13:49:08.995542 line       497                             i, j,
excute 13:49:08.999530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.002523 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:49:09.005515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:09.009505 line       494                         if (i == j):
excute 13:49:09.014492 line       496                         i_j_list.append((
excute 13:49:09.018481 line       497                             i, j,
excute 13:49:09.022470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.026461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:49:09.030449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:09.034437 line       494                         if (i == j):
excute 13:49:09.038426 line       496                         i_j_list.append((
excute 13:49:09.041419 line       497                             i, j,
excute 13:49:09.045408 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.048400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:49:09.051392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:09.056380 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:09.059370 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:09.063360 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:09.066352 line       494                         if (i == j):
excute 13:49:09.070342 line       496                         i_j_list.append((
excute 13:49:09.075330 line       497                             i, j,
excute 13:49:09.080317 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.083306 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0)]
excute 13:49:09.087297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:09.090288 line       494                         if (i == j):
excute 13:49:09.094278 line       495                             continue
excute 13:49:09.097269 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:09.101259 line       494                         if (i == j):
excute 13:49:09.105250 line       496                         i_j_list.append((
excute 13:49:09.108241 line       497                             i, j,
excute 13:49:09.111232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.114224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:49:09.118214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:09.122207 line       494                         if (i == j):
excute 13:49:09.125194 line       496                         i_j_list.append((
excute 13:49:09.129184 line       497                             i, j,
excute 13:49:09.132176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.136197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:49:09.139189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:09.143166 line       494                         if (i == j):
excute 13:49:09.147138 line       496                         i_j_list.append((
excute 13:49:09.150159 line       497                             i, j,
excute 13:49:09.154150 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.157109 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:49:09.161100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:09.164090 line       494                         if (i == j):
excute 13:49:09.168081 line       496                         i_j_list.append((
excute 13:49:09.171072 line       497                             i, j,
excute 13:49:09.179051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.182043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:49:09.188060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:09.192029 line       494                         if (i == j):
excute 13:49:09.196007 line       496                         i_j_list.append((
excute 13:49:09.198998 line       497                             i, j,
excute 13:49:09.202987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.206977 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0)]
excute 13:49:09.210965 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:09.214955 line       494                         if (i == j):
excute 13:49:09.218978 line       496                         i_j_list.append((
excute 13:49:09.221967 line       497                             i, j,
excute 13:49:09.224928 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.228918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:49:09.231910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:09.235900 line       494                         if (i == j):
excute 13:49:09.239889 line       496                         i_j_list.append((
excute 13:49:09.242881 line       497                             i, j,
excute 13:49:09.245872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.249862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:49:09.252854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:09.256843 line       494                         if (i == j):
excute 13:49:09.260833 line       496                         i_j_list.append((
excute 13:49:09.263825 line       497                             i, j,
excute 13:49:09.267814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.270805 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:49:09.273829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:09.278785 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:09.281808 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:09.285769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:09.289787 line       494                         if (i == j):
excute 13:49:09.293777 line       496                         i_j_list.append((
excute 13:49:09.297768 line       497                             i, j,
excute 13:49:09.300758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.303750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:49:09.307740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:09.311731 line       494                         if (i == j):
excute 13:49:09.315686 line       496                         i_j_list.append((
excute 13:49:09.319677 line       497                             i, j,
excute 13:49:09.322669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.328666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:49:09.335636 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:09.340620 line       494                         if (i == j):
excute 13:49:09.345608 line       495                             continue
excute 13:49:09.349597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:09.353586 line       494                         if (i == j):
excute 13:49:09.358571 line       496                         i_j_list.append((
excute 13:49:09.361563 line       497                             i, j,
excute 13:49:09.365552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.368544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:49:09.372536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:09.376526 line       494                         if (i == j):
excute 13:49:09.380515 line       496                         i_j_list.append((
excute 13:49:09.384504 line       497                             i, j,
excute 13:49:09.388503 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.392512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:09.396502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:09.400460 line       494                         if (i == j):
excute 13:49:09.404454 line       496                         i_j_list.append((
excute 13:49:09.407472 line       497                             i, j,
excute 13:49:09.410464 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.414454 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:09.417446 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:09.421408 line       494                         if (i == j):
excute 13:49:09.425425 line       496                         i_j_list.append((
excute 13:49:09.428417 line       497                             i, j,
excute 13:49:09.431408 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.435398 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:49:09.438390 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:09.442347 line       494                         if (i == j):
excute 13:49:09.446370 line       496                         i_j_list.append((
excute 13:49:09.450358 line       497                             i, j,
excute 13:49:09.453349 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.457339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:49:09.461328 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:09.465320 line       494                         if (i == j):
excute 13:49:09.469276 line       496                         i_j_list.append((
excute 13:49:09.472299 line       497                             i, j,
excute 13:49:09.475293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.479282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:49:09.482272 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:09.486262 line       494                         if (i == j):
excute 13:49:09.490220 line       496                         i_j_list.append((
excute 13:49:09.494242 line       497                             i, j,
excute 13:49:09.498199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.502189 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:49:09.506178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:09.510168 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:09.514157 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:09.518146 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:09.522136 line       494                         if (i == j):
excute 13:49:09.526125 line       496                         i_j_list.append((
excute 13:49:09.530114 line       497                             i, j,
excute 13:49:09.534102 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.537126 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0)]
excute 13:49:09.540118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:09.544106 line       494                         if (i == j):
excute 13:49:09.548064 line       496                         i_j_list.append((
excute 13:49:09.551056 line       497                             i, j,
excute 13:49:09.555045 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.558038 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0)]
excute 13:49:09.562038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:09.565051 line       494                         if (i == j):
excute 13:49:09.569040 line       496                         i_j_list.append((
excute 13:49:09.572997 line       497                             i, j,
excute 13:49:09.575989 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.578982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:49:09.582971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:09.585963 line       494                         if (i == j):
excute 13:49:09.589952 line       495                             continue
excute 13:49:09.593942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:09.598932 line       494                         if (i == j):
excute 13:49:09.602923 line       496                         i_j_list.append((
excute 13:49:09.606908 line       497                             i, j,
excute 13:49:09.609899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.613888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:49:09.616880 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:09.620870 line       494                         if (i == j):
excute 13:49:09.624859 line       496                         i_j_list.append((
excute 13:49:09.627851 line       497                             i, j,
excute 13:49:09.631843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.634833 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:49:09.638823 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:09.641813 line       494                         if (i == j):
excute 13:49:09.645804 line       496                         i_j_list.append((
excute 13:49:09.648795 line       497                             i, j,
excute 13:49:09.652786 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.655778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0)]
excute 13:49:09.659765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:09.662757 line       494                         if (i == j):
excute 13:49:09.666759 line       496                         i_j_list.append((
excute 13:49:09.670738 line       497                             i, j,
excute 13:49:09.673729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.676720 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0)]
excute 13:49:09.680710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:09.684701 line       494                         if (i == j):
excute 13:49:09.688690 line       496                         i_j_list.append((
excute 13:49:09.691681 line       497                             i, j,
excute 13:49:09.695670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.702652 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0)]
excute 13:49:09.706641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:09.710630 line       494                         if (i == j):
excute 13:49:09.715618 line       496                         i_j_list.append((
excute 13:49:09.718641 line       497                             i, j,
excute 13:49:09.721633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.725622 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:49:09.728613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:09.732572 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:09.735594 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:09.739569 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:09.742576 line       494                         if (i == j):
excute 13:49:09.746567 line       496                         i_j_list.append((
excute 13:49:09.750555 line       497                             i, j,
excute 13:49:09.753549 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.757537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0)]
excute 13:49:09.760528 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:09.764492 line       494                         if (i == j):
excute 13:49:09.768477 line       496                         i_j_list.append((
excute 13:49:09.771499 line       497                             i, j,
excute 13:49:09.775488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.778481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0)]
excute 13:49:09.782469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:09.786439 line       494                         if (i == j):
excute 13:49:09.790417 line       496                         i_j_list.append((
excute 13:49:09.793440 line       497                             i, j,
excute 13:49:09.797407 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.801389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0)]
excute 13:49:09.804379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:09.808369 line       494                         if (i == j):
excute 13:49:09.812358 line       496                         i_j_list.append((
excute 13:49:09.815350 line       497                             i, j,
excute 13:49:09.819339 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.822333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0)]
excute 13:49:09.826321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:09.831308 line       494                         if (i == j):
excute 13:49:09.835297 line       495                             continue
excute 13:49:09.839287 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:09.843277 line       494                         if (i == j):
excute 13:49:09.848264 line       496                         i_j_list.append((
excute 13:49:09.851256 line       497                             i, j,
excute 13:49:09.855245 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.858237 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0)]
excute 13:49:09.862226 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:09.866215 line       494                         if (i == j):
excute 13:49:09.870205 line       496                         i_j_list.append((
excute 13:49:09.873197 line       497                             i, j,
excute 13:49:09.877186 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.881174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0)]
excute 13:49:09.884197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:09.888155 line       494                         if (i == j):
excute 13:49:09.892146 line       496                         i_j_list.append((
excute 13:49:09.895168 line       497                             i, j,
excute 13:49:09.899158 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.902153 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0)]
excute 13:49:09.907107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:09.911096 line       494                         if (i == j):
excute 13:49:09.916081 line       496                         i_j_list.append((
excute 13:49:09.920069 line       497                             i, j,
excute 13:49:09.924059 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.928050 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0)]
excute 13:49:09.932039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:09.936029 line       494                         if (i == j):
excute 13:49:09.941017 line       496                         i_j_list.append((
excute 13:49:09.944008 line       497                             i, j,
excute 13:49:09.947997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.952984 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0)]
excute 13:49:09.956972 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:09.960962 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:09.966949 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:09.971939 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:09.975952 line       494                         if (i == j):
excute 13:49:09.979911 line       496                         i_j_list.append((
excute 13:49:09.982934 line       497                             i, j,
excute 13:49:09.986923 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:09.990915 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0)]
excute 13:49:09.993905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:09.997863 line       494                         if (i == j):
excute 13:49:10.002850 line       496                         i_j_list.append((
excute 13:49:10.006841 line       497                             i, j,
excute 13:49:10.011857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.014848 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:49:10.018808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:10.022812 line       494                         if (i == j):
excute 13:49:10.028207 line       496                         i_j_list.append((
excute 13:49:10.031201 line       497                             i, j,
excute 13:49:10.034193 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.038183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:49:10.041174 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:10.045164 line       494                         if (i == j):
excute 13:49:10.049154 line       496                         i_j_list.append((
excute 13:49:10.052145 line       497                             i, j,
excute 13:49:10.056135 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.059126 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:49:10.062118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:10.066121 line       494                         if (i == j):
excute 13:49:10.070099 line       496                         i_j_list.append((
excute 13:49:10.073121 line       497                             i, j,
excute 13:49:10.077111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.080102 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:49:10.084091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:10.088053 line       494                         if (i == j):
excute 13:49:10.092040 line       495                             continue
excute 13:49:10.095030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:10.098023 line       494                         if (i == j):
excute 13:49:10.102013 line       496                         i_j_list.append((
excute 13:49:10.105004 line       497                             i, j,
excute 13:49:10.108995 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.113015 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:49:10.116006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:10.119995 line       494                         if (i == j):
excute 13:49:10.123985 line       496                         i_j_list.append((
excute 13:49:10.127946 line       497                             i, j,
excute 13:49:10.130966 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.134925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:49:10.137948 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:10.141907 line       494                         if (i == j):
excute 13:49:10.145929 line       496                         i_j_list.append((
excute 13:49:10.148918 line       497                             i, j,
excute 13:49:10.152877 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.156867 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:49:10.160856 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:10.164846 line       494                         if (i == j):
excute 13:49:10.168835 line       496                         i_j_list.append((
excute 13:49:10.172824 line       497                             i, j,
excute 13:49:10.176814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.180808 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:49:10.183796 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:10.187785 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:10.191773 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:10.195763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:10.199753 line       494                         if (i == j):
excute 13:49:10.204737 line       496                         i_j_list.append((
excute 13:49:10.207729 line       497                             i, j,
excute 13:49:10.211722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.215740 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0)]
excute 13:49:10.219729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:10.223718 line       494                         if (i == j):
excute 13:49:10.226710 line       496                         i_j_list.append((
excute 13:49:10.230703 line       497                             i, j,
excute 13:49:10.233692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.237651 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0)]
excute 13:49:10.240673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:10.244632 line       494                         if (i == j):
excute 13:49:10.248621 line       496                         i_j_list.append((
excute 13:49:10.252610 line       497                             i, j,
excute 13:49:10.255633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.259624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0)]
excute 13:49:10.263580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:10.266603 line       494                         if (i == j):
excute 13:49:10.270594 line       496                         i_j_list.append((
excute 13:49:10.274584 line       497                             i, j,
excute 13:49:10.277574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.281564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:49:10.284556 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:10.288546 line       494                         if (i == j):
excute 13:49:10.292511 line       496                         i_j_list.append((
excute 13:49:10.295526 line       497                             i, j,
excute 13:49:10.299516 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.302508 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:49:10.306497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:10.310491 line       494                         if (i == j):
excute 13:49:10.314447 line       496                         i_j_list.append((
excute 13:49:10.318465 line       497                             i, j,
excute 13:49:10.321458 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.325447 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0)]
excute 13:49:10.335389 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:10.342370 line       494                         if (i == j):
excute 13:49:10.347390 line       495                             continue
excute 13:49:10.350379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:10.354342 line       494                         if (i == j):
excute 13:49:10.358359 line       496                         i_j_list.append((
excute 13:49:10.362348 line       497                             i, j,
excute 13:49:10.365339 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.369330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0)]
excute 13:49:10.372321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:10.377277 line       494                         if (i == j):
excute 13:49:10.381265 line       496                         i_j_list.append((
excute 13:49:10.385257 line       497                             i, j,
excute 13:49:10.390241 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.394231 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0)]
excute 13:49:10.400214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:10.407197 line       494                         if (i == j):
excute 13:49:10.414178 line       496                         i_j_list.append((
excute 13:49:10.418167 line       497                             i, j,
excute 13:49:10.424151 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.427143 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0)]
excute 13:49:10.430135 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:10.434124 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:10.437116 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:10.442104 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:10.445094 line       494                         if (i == j):
excute 13:49:10.449089 line       496                         i_j_list.append((
excute 13:49:10.453075 line       497                             i, j,
excute 13:49:10.457065 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.461054 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0)]
excute 13:49:10.465043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:10.469034 line       494                         if (i == j):
excute 13:49:10.473026 line       496                         i_j_list.append((
excute 13:49:10.477011 line       497                             i, j,
excute 13:49:10.480003 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.483992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:49:10.487982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:10.491970 line       494                         if (i == j):
excute 13:49:10.495958 line       496                         i_j_list.append((
excute 13:49:10.499949 line       497                             i, j,
excute 13:49:10.502941 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.506931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:49:10.509923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:10.514909 line       494                         if (i == j):
excute 13:49:10.518900 line       496                         i_j_list.append((
excute 13:49:10.522887 line       497                             i, j,
excute 13:49:10.526876 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.530865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:49:10.533857 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:10.537846 line       494                         if (i == j):
excute 13:49:10.541839 line       496                         i_j_list.append((
excute 13:49:10.544828 line       497                             i, j,
excute 13:49:10.547820 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.551809 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:10.555800 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:10.558791 line       494                         if (i == j):
excute 13:49:10.562780 line       496                         i_j_list.append((
excute 13:49:10.565772 line       497                             i, j,
excute 13:49:10.569772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.572786 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:49:10.576775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:10.580734 line       494                         if (i == j):
excute 13:49:10.584723 line       496                         i_j_list.append((
excute 13:49:10.587745 line       497                             i, j,
excute 13:49:10.591727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.594726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0)]
excute 13:49:10.598707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:10.601708 line       494                         if (i == j):
excute 13:49:10.605697 line       495                             continue
excute 13:49:10.609687 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:10.612679 line       494                         if (i == j):
excute 13:49:10.616636 line       496                         i_j_list.append((
excute 13:49:10.619660 line       497                             i, j,
excute 13:49:10.623650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.627639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:49:10.631629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:10.635587 line       494                         if (i == j):
excute 13:49:10.639576 line       496                         i_j_list.append((
excute 13:49:10.642598 line       497                             i, j,
excute 13:49:10.646588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.649579 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:49:10.653569 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:10.660175 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:10.663166 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:10.668154 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:10.671145 line       494                         if (i == j):
excute 13:49:10.675134 line       496                         i_j_list.append((
excute 13:49:10.678126 line       497                             i, j,
excute 13:49:10.682116 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.685107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0)]
excute 13:49:10.688099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:10.692089 line       494                         if (i == j):
excute 13:49:10.696078 line       496                         i_j_list.append((
excute 13:49:10.700068 line       497                             i, j,
excute 13:49:10.704060 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.708048 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:49:10.711070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:10.716029 line       494                         if (i == j):
excute 13:49:10.720029 line       496                         i_j_list.append((
excute 13:49:10.723042 line       497                             i, j,
excute 13:49:10.726999 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.731984 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:49:10.734976 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:10.739961 line       494                         if (i == j):
excute 13:49:10.742955 line       496                         i_j_list.append((
excute 13:49:10.746944 line       497                             i, j,
excute 13:49:10.750932 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.753955 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:49:10.757944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:10.761903 line       494                         if (i == j):
excute 13:49:10.765893 line       496                         i_j_list.append((
excute 13:49:10.768883 line       497                             i, j,
excute 13:49:10.771875 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.775875 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:49:10.778892 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:10.782878 line       494                         if (i == j):
excute 13:49:10.786845 line       496                         i_j_list.append((
excute 13:49:10.790825 line       497                             i, j,
excute 13:49:10.794816 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.798805 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:49:10.802795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:10.806784 line       494                         if (i == j):
excute 13:49:10.810773 line       496                         i_j_list.append((
excute 13:49:10.814762 line       497                             i, j,
excute 13:49:10.818752 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.822739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:49:10.826729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:10.831720 line       494                         if (i == j):
excute 13:49:10.835705 line       496                         i_j_list.append((
excute 13:49:10.839696 line       497                             i, j,
excute 13:49:10.842686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.845678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:49:10.849685 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:10.853658 line       494                         if (i == j):
excute 13:49:10.857647 line       495                             continue
excute 13:49:10.860638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:10.863630 line       494                         if (i == j):
excute 13:49:10.867622 line       496                         i_j_list.append((
excute 13:49:10.870612 line       497                             i, j,
excute 13:49:10.874602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.877625 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:49:10.880616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:10.884606 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:10.888595 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:10.892554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:10.896544 line       494                         if (i == j):
excute 13:49:10.900533 line       496                         i_j_list.append((
excute 13:49:10.903558 line       497                             i, j,
excute 13:49:10.907545 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.910536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0)]
excute 13:49:10.914530 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:10.918516 line       494                         if (i == j):
excute 13:49:10.922474 line       496                         i_j_list.append((
excute 13:49:10.925497 line       497                             i, j,
excute 13:49:10.928488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.933445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:49:10.936438 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:10.940426 line       494                         if (i == j):
excute 13:49:10.944416 line       496                         i_j_list.append((
excute 13:49:10.949402 line       497                             i, j,
excute 13:49:10.952424 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.956414 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:49:10.960377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:10.964362 line       494                         if (i == j):
excute 13:49:10.968353 line       496                         i_j_list.append((
excute 13:49:10.971374 line       497                             i, j,
excute 13:49:10.975365 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:10.979356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:49:10.982345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:10.986338 line       494                         if (i == j):
excute 13:49:10.990323 line       496                         i_j_list.append((
excute 13:49:10.994316 line       497                             i, j,
excute 13:49:10.997305 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:11.001295 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:49:11.004286 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:11.008273 line       494                         if (i == j):
excute 13:49:11.012238 line       496                         i_j_list.append((
excute 13:49:11.016223 line       497                             i, j,
excute 13:49:11.019246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:11.022238 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:49:11.026231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:11.030187 line       494                         if (i == j):
excute 13:49:11.034177 line       496                         i_j_list.append((
excute 13:49:11.038196 line       497                             i, j,
excute 13:49:11.042188 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:11.045177 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:49:11.049167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:11.053125 line       494                         if (i == j):
excute 13:49:11.057145 line       496                         i_j_list.append((
excute 13:49:11.061104 line       497                             i, j,
excute 13:49:11.065093 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:11.069083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:49:11.073073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:11.077062 line       494                         if (i == j):
excute 13:49:11.081051 line       496                         i_j_list.append((
excute 13:49:11.085040 line       497                             i, j,
excute 13:49:11.089029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:11.093019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:49:11.097008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:11.101000 line       494                         if (i == j):
excute 13:49:11.104987 line       495                             continue
excute 13:49:11.108976 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:11.112966 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:11.116955 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (4, 0, 3, 0), (4, 1, 3, 0), (4, 2, 3, 0), (4, 3, 3, 0), (4, 5, 3, 0), (4, 6, 3, 0), (4, 7, 3, 0), (4, 8, 3, 0), (4, 9, 3, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:49:11.119947 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:11.124932 line       505                     if (self.RELOCATE):
excute 13:49:11.128923 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:11.131915 line       505                     if (self.RELOCATE):
excute 13:49:11.136901 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:11.140921 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:11.144911 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:11.148877 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:11.152863 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.156848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:11.159870 line       556                     i = i_j[0]
excute 13:49:11.163859 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:11.167849 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.171816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:11.174832 line       556                     i = i_j[0]
excute 13:49:11.178789 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:11.181811 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.185805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:11.189759 line       556                     i = i_j[0]
excute 13:49:11.192783 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:11.196771 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.203722 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:11.207742 line       556                     i = i_j[0]
excute 13:49:11.211700 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:11.215689 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.218681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:11.222670 line       556                     i = i_j[0]
excute 13:49:11.226660 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:11.229652 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.233641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:49:11.236633 line       556                     i = i_j[0]
excute 13:49:11.241621 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:11.245641 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.249599 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:11.253617 line       556                     i = i_j[0]
excute 13:49:11.257579 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:11.261566 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.264558 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:11.268547 line       556                     i = i_j[0]
excute 13:49:11.272538 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:11.275529 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.279518 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:49:11.283507 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:11.287497 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:11.291520 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.295510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:49:11.298499 line       556                     i = i_j[0]
excute 13:49:11.302457 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:11.306449 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.314426 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:49:11.321407 line       556                     i = i_j[0]
excute 13:49:11.325396 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:11.336367 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.345345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:49:11.353323 line       556                     i = i_j[0]
excute 13:49:11.359313 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:11.365292 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.372272 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:49:11.377259 line       556                     i = i_j[0]
excute 13:49:11.381250 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:11.389229 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.395210 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:49:11.403188 line       556                     i = i_j[0]
excute 13:49:11.410169 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:11.415158 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.420143 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:49:11.425130 line       556                     i = i_j[0]
excute 13:49:11.435103 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:11.445077 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.453057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:49:11.458042 line       556                     i = i_j[0]
excute 13:49:11.469013 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:11.477988 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.487963 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:49:11.495940 line       556                     i = i_j[0]
excute 13:49:11.502924 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:11.510901 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.516884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:49:11.523866 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:11.531846 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:11.537829 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.544810 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:49:11.551791 line       556                     i = i_j[0]
excute 13:49:11.558773 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:11.563759 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.571738 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:49:11.580714 line       556                     i = i_j[0]
excute 13:49:11.586698 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:11.592684 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.598666 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:49:11.603652 line       556                     i = i_j[0]
excute 13:49:11.612628 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:11.618614 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.626592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:49:11.635568 line       556                     i = i_j[0]
excute 13:49:11.644545 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:11.650529 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.658508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:49:11.663491 line       556                     i = i_j[0]
excute 13:49:11.669478 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:11.674462 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.681445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:49:11.689424 line       556                     i = i_j[0]
excute 13:49:11.697403 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:11.704383 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.713360 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:49:11.721337 line       556                     i = i_j[0]
excute 13:49:11.729316 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:11.737296 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.743279 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:49:11.750262 line       556                     i = i_j[0]
excute 13:49:11.757242 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:11.765221 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.771204 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:49:11.779183 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:11.784170 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:11.791152 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.799130 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:49:11.804118 line       556                     i = i_j[0]
excute 13:49:11.809105 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:11.813093 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.817083 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:49:11.821071 line       556                     i = i_j[0]
excute 13:49:11.825060 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:11.828052 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.832041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:49:11.836032 line       556                     i = i_j[0]
excute 13:49:11.839023 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:11.843012 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.847002 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:49:11.849993 line       556                     i = i_j[0]
excute 13:49:11.853983 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:11.857972 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.861962 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:49:11.865951 line       556                     i = i_j[0]
excute 13:49:11.869941 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:11.872932 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.876922 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:49:11.879913 line       556                     i = i_j[0]
excute 13:49:11.883903 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:11.887892 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.890884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:49:11.894874 line       556                     i = i_j[0]
excute 13:49:11.898864 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:11.901854 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.905845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:49:11.908836 line       556                     i = i_j[0]
excute 13:49:11.912826 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:11.916815 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.920806 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:49:11.924795 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:11.928786 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:11.932773 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.936761 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:49:11.939787 line       556                     i = i_j[0]
excute 13:49:11.943779 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:11.947733 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.951723 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:11.956711 line       556                     i = i_j[0]
excute 13:49:11.960731 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:11.963722 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.968704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:11.972667 line       556                     i = i_j[0]
excute 13:49:11.976657 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:11.979680 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.983638 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:49:11.986659 line       556                     i = i_j[0]
excute 13:49:11.990649 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:11.994621 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:11.998603 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:49:12.001620 line       556                     i = i_j[0]
excute 13:49:12.005580 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:12.009567 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.012593 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:12.016579 line       556                     i = i_j[0]
excute 13:49:12.020573 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:12.023564 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.027551 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:12.031544 line       556                     i = i_j[0]
excute 13:49:12.035503 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:12.038521 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.042480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:12.045503 line       556                     i = i_j[0]
excute 13:49:12.049466 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:12.052486 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.057472 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:49:12.060464 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:12.064441 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:12.069410 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.073398 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:49:12.077397 line       556                     i = i_j[0]
excute 13:49:12.081377 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:12.084368 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.089354 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:49:12.092380 line       556                     i = i_j[0]
excute 13:49:12.096367 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:12.100360 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.104317 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:49:12.107337 line       556                     i = i_j[0]
excute 13:49:12.111296 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:12.114318 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.118308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:49:12.122298 line       556                     i = i_j[0]
excute 13:49:12.125289 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:12.129279 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.133237 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:49:12.137258 line       556                     i = i_j[0]
excute 13:49:12.141216 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:12.144239 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.148198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:49:12.151224 line       556                     i = i_j[0]
excute 13:49:12.156212 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:12.159202 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.163158 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:49:12.167146 line       556                     i = i_j[0]
excute 13:49:12.171169 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:12.175161 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.179115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:49:12.182137 line       556                     i = i_j[0]
excute 13:49:12.186102 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:12.190084 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.194085 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 0)
excute 13:49:12.197098 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:12.204048 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:12.208074 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.212049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 2, 0)
excute 13:49:12.217044 line       556                     i = i_j[0]
excute 13:49:12.221035 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:12.224025 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.228019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 2, 0)
excute 13:49:12.231974 line       556                     i = i_j[0]
excute 13:49:12.234996 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:12.238989 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.242943 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 2, 0)
excute 13:49:12.245966 line       556                     i = i_j[0]
excute 13:49:12.249955 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:12.253946 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.257903 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 2, 0)
excute 13:49:12.261892 line       556                     i = i_j[0]
excute 13:49:12.265882 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:12.268873 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.275857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 2, 0)
excute 13:49:12.279876 line       556                     i = i_j[0]
excute 13:49:12.283848 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:12.286861 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.290848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 2, 0)
excute 13:49:12.294840 line       556                     i = i_j[0]
excute 13:49:12.298827 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:12.301817 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.305776 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 2, 0)
excute 13:49:12.308798 line       556                     i = i_j[0]
excute 13:49:12.312788 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:12.316750 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.320736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 2, 0)
excute 13:49:12.323760 line       556                     i = i_j[0]
excute 13:49:12.330709 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:12.336725 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.340709 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 3, 0)
excute 13:49:12.345700 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:49:12.349658 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:12.353649 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.358634 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 3, 0)
excute 13:49:12.362624 line       556                     i = i_j[0]
excute 13:49:12.369605 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:12.372596 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.380576 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 3, 0)
excute 13:49:12.383568 line       556                     i = i_j[0]
excute 13:49:12.388554 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:12.391546 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.395535 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 3, 0)
excute 13:49:12.399524 line       556                     i = i_j[0]
excute 13:49:12.403516 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:12.407505 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.411495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 3, 0)
excute 13:49:12.414487 line       556                     i = i_j[0]
excute 13:49:12.419474 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:12.423462 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.427450 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 3, 0)
excute 13:49:12.430444 line       556                     i = i_j[0]
excute 13:49:12.434433 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:12.438422 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.442411 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 3, 0)
excute 13:49:12.446400 line       556                     i = i_j[0]
excute 13:49:12.451420 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:12.455406 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.460362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 3, 0)
excute 13:49:12.465348 line       556                     i = i_j[0]
excute 13:49:12.469337 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:12.473327 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.481307 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 3, 0)
excute 13:49:12.485296 line       556                     i = i_j[0]
excute 13:49:12.490284 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:12.493275 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.497265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:49:12.501254 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:49:12.505244 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:12.509234 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.513221 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:49:12.516244 line       556                     i = i_j[0]
excute 13:49:12.521200 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:12.524223 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.528182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:49:12.531206 line       556                     i = i_j[0]
excute 13:49:12.535193 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:12.539164 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.543141 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:49:12.546164 line       556                     i = i_j[0]
excute 13:49:12.550159 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:12.553145 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.557134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:49:12.561124 line       556                     i = i_j[0]
excute 13:49:12.565083 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:12.568105 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.572095 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:49:12.576052 line       556                     i = i_j[0]
excute 13:49:12.580043 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:12.584031 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.588020 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:49:12.592009 line       556                     i = i_j[0]
excute 13:49:12.596000 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:12.598991 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.602980 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 0)
excute 13:49:12.606969 line       556                     i = i_j[0]
excute 13:49:12.610963 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:12.613952 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.617973 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:49:12.621931 line       556                     i = i_j[0]
excute 13:49:12.625921 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:12.629910 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.634898 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 0)
excute 13:49:12.637887 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:49:12.641876 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:12.645865 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.649856 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:49:12.653856 line       556                     i = i_j[0]
excute 13:49:12.657835 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:12.660858 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.664829 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:49:12.668836 line       556                     i = i_j[0]
excute 13:49:12.672826 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:12.675818 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.679776 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:49:12.683766 line       556                     i = i_j[0]
excute 13:49:12.688785 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:12.691743 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.695732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:49:12.699722 line       556                     i = i_j[0]
excute 13:49:12.704711 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:12.707702 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.711691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 0)
excute 13:49:12.716711 line       556                     i = i_j[0]
excute 13:49:12.720667 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:12.723689 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.727647 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 0)
excute 13:49:12.731636 line       556                     i = i_j[0]
excute 13:49:12.735627 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:12.739617 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.743605 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:49:12.746596 line       556                     i = i_j[0]
excute 13:49:12.750586 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:12.753578 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.757567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:49:12.761556 line       556                     i = i_j[0]
excute 13:49:12.765554 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:12.768537 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:12.772527 line       555                 for i_j in i_j_list:
excute 13:49:12.775519 line       581             self.write_matrix(
excute 13:49:12.779508 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:49:12.782500 line       583                 result_file_path,
excute 13:49:12.785492 line       584                 mode='a'
excute 13:49:12.793492 line       488         for t in time_steps:
excute Modified var:.. t = 140
excute 13:49:12.799455 line       489             if (t != self.TIME + 1):
excute 13:49:12.805439 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:49:12.809430 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:49:12.816413 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:12.823391 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:12.828379 line       494                         if (i == j):
excute 13:49:12.832367 line       495                             continue
excute 13:49:12.835362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:12.841343 line       494                         if (i == j):
excute 13:49:12.845334 line       496                         i_j_list.append((
excute 13:49:12.849324 line       497                             i, j,
excute 13:49:12.854309 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:12.860293 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:49:12.869273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:12.873259 line       494                         if (i == j):
excute 13:49:12.878246 line       496                         i_j_list.append((
excute 13:49:12.882234 line       497                             i, j,
excute 13:49:12.888220 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:12.893207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:49:12.896197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:12.903179 line       494                         if (i == j):
excute 13:49:12.908165 line       496                         i_j_list.append((
excute 13:49:12.912154 line       497                             i, j,
excute 13:49:12.916144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:12.922128 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:49:12.925120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:12.931103 line       494                         if (i == j):
excute 13:49:12.939086 line       496                         i_j_list.append((
excute 13:49:12.944070 line       497                             i, j,
excute 13:49:12.948058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:12.952060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:49:12.956037 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:12.961034 line       494                         if (i == j):
excute 13:49:12.968005 line       496                         i_j_list.append((
excute 13:49:12.970996 line       497                             i, j,
excute 13:49:12.974987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:12.978976 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:49:12.982965 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:12.986955 line       494                         if (i == j):
excute 13:49:12.990944 line       496                         i_j_list.append((
excute 13:49:12.996933 line       497                             i, j,
excute 13:49:12.999919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.003909 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:49:13.006900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:13.010891 line       494                         if (i == j):
excute 13:49:13.014880 line       496                         i_j_list.append((
excute 13:49:13.017871 line       497                             i, j,
excute 13:49:13.021862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.024853 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:49:13.027845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:13.031835 line       494                         if (i == j):
excute 13:49:13.035823 line       496                         i_j_list.append((
excute 13:49:13.038815 line       497                             i, j,
excute 13:49:13.041807 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.045796 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:49:13.048788 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:13.052778 line       494                         if (i == j):
excute 13:49:13.056767 line       496                         i_j_list.append((
excute 13:49:13.059759 line       497                             i, j,
excute 13:49:13.062751 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.066740 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:49:13.069732 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:13.073722 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:49:13.076714 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:13.080703 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:13.083695 line       494                         if (i == j):
excute 13:49:13.088683 line       496                         i_j_list.append((
excute 13:49:13.095665 line       497                             i, j,
excute 13:49:13.100650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.104639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0)]
excute 13:49:13.107631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:13.111622 line       494                         if (i == j):
excute 13:49:13.114612 line       495                             continue
excute 13:49:13.118603 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:13.121594 line       494                         if (i == j):
excute 13:49:13.125584 line       496                         i_j_list.append((
excute 13:49:13.129573 line       497                             i, j,
excute 13:49:13.132565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.136555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0)]
excute 13:49:13.139577 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:13.143537 line       494                         if (i == j):
excute 13:49:13.147553 line       496                         i_j_list.append((
excute 13:49:13.150549 line       497                             i, j,
excute 13:49:13.154539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.157530 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0)]
excute 13:49:13.161488 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:13.164515 line       494                         if (i == j):
excute 13:49:13.168501 line       496                         i_j_list.append((
excute 13:49:13.172459 line       497                             i, j,
excute 13:49:13.175482 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.178473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0)]
excute 13:49:13.182432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:13.186424 line       494                         if (i == j):
excute 13:49:13.190413 line       496                         i_j_list.append((
excute 13:49:13.193436 line       497                             i, j,
excute 13:49:13.196429 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.201382 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0)]
excute 13:49:13.207365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:13.214350 line       494                         if (i == j):
excute 13:49:13.218367 line       496                         i_j_list.append((
excute 13:49:13.222356 line       497                             i, j,
excute 13:49:13.225351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.229338 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0)]
excute 13:49:13.232330 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:13.236289 line       494                         if (i == j):
excute 13:49:13.240278 line       496                         i_j_list.append((
excute 13:49:13.243301 line       497                             i, j,
excute 13:49:13.246293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.250281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0)]
excute 13:49:13.253274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:13.258241 line       494                         if (i == j):
excute 13:49:13.261252 line       496                         i_j_list.append((
excute 13:49:13.265211 line       497                             i, j,
excute 13:49:13.271194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.275185 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0)]
excute 13:49:13.282165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:13.289146 line       494                         if (i == j):
excute 13:49:13.293135 line       496                         i_j_list.append((
excute 13:49:13.298124 line       497                             i, j,
excute 13:49:13.302114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.307098 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0)]
excute 13:49:13.310090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:13.314079 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:49:13.317071 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:13.321061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:13.324053 line       494                         if (i == j):
excute 13:49:13.334028 line       496                         i_j_list.append((
excute 13:49:13.340013 line       497                             i, j,
excute 13:49:13.344997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.349018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0)]
excute 13:49:13.352976 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:13.356997 line       494                         if (i == j):
excute 13:49:13.361953 line       496                         i_j_list.append((
excute 13:49:13.364946 line       497                             i, j,
excute 13:49:13.368934 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.372922 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0)]
excute 13:49:13.376911 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:13.380902 line       494                         if (i == j):
excute 13:49:13.385890 line       495                             continue
excute 13:49:13.389885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:13.393866 line       494                         if (i == j):
excute 13:49:13.396889 line       496                         i_j_list.append((
excute 13:49:13.400882 line       497                             i, j,
excute 13:49:13.403874 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.407830 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0)]
excute 13:49:13.411821 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:13.415807 line       494                         if (i == j):
excute 13:49:13.419799 line       496                         i_j_list.append((
excute 13:49:13.422791 line       497                             i, j,
excute 13:49:13.427776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.430769 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0)]
excute 13:49:13.433761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:13.437750 line       494                         if (i == j):
excute 13:49:13.441740 line       496                         i_j_list.append((
excute 13:49:13.445729 line       497                             i, j,
excute 13:49:13.449717 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.453715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0)]
excute 13:49:13.456698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:13.460687 line       494                         if (i == j):
excute 13:49:13.464677 line       496                         i_j_list.append((
excute 13:49:13.468667 line       497                             i, j,
excute 13:49:13.471658 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.474650 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0)]
excute 13:49:13.478639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:13.482632 line       494                         if (i == j):
excute 13:49:13.485622 line       496                         i_j_list.append((
excute 13:49:13.489612 line       497                             i, j,
excute 13:49:13.492603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.495595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0)]
excute 13:49:13.499585 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:13.503608 line       494                         if (i == j):
excute 13:49:13.506597 line       496                         i_j_list.append((
excute 13:49:13.511552 line       497                             i, j,
excute 13:49:13.515540 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.518533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0)]
excute 13:49:13.522523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:13.526512 line       494                         if (i == j):
excute 13:49:13.529504 line       496                         i_j_list.append((
excute 13:49:13.532495 line       497                             i, j,
excute 13:49:13.536484 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.539477 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0)]
excute 13:49:13.542469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:13.546458 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:49:13.549450 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:13.553439 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:13.558428 line       494                         if (i == j):
excute 13:49:13.562416 line       496                         i_j_list.append((
excute 13:49:13.565408 line       497                             i, j,
excute 13:49:13.568399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.572389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0)]
excute 13:49:13.575381 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:13.579371 line       494                         if (i == j):
excute 13:49:13.583361 line       496                         i_j_list.append((
excute 13:49:13.586351 line       497                             i, j,
excute 13:49:13.590342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.593333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0)]
excute 13:49:13.596325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:13.600314 line       494                         if (i == j):
excute 13:49:13.604304 line       496                         i_j_list.append((
excute 13:49:13.607296 line       497                             i, j,
excute 13:49:13.611286 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.615307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:49:13.619298 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:13.623255 line       494                         if (i == j):
excute 13:49:13.627279 line       495                             continue
excute 13:49:13.630266 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:13.634257 line       494                         if (i == j):
excute 13:49:13.637247 line       496                         i_j_list.append((
excute 13:49:13.641236 line       497                             i, j,
excute 13:49:13.644229 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.648187 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:49:13.651214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:13.655201 line       494                         if (i == j):
excute 13:49:13.659192 line       496                         i_j_list.append((
excute 13:49:13.663179 line       497                             i, j,
excute 13:49:13.666170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.669162 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:49:13.673151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:13.677110 line       494                         if (i == j):
excute 13:49:13.681120 line       496                         i_j_list.append((
excute 13:49:13.684122 line       497                             i, j,
excute 13:49:13.687113 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.691107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0)]
excute 13:49:13.694095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:13.698084 line       494                         if (i == j):
excute 13:49:13.702075 line       496                         i_j_list.append((
excute 13:49:13.706032 line       497                             i, j,
excute 13:49:13.709055 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.713014 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0)]
excute 13:49:13.718003 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:13.721988 line       494                         if (i == j):
excute 13:49:13.725978 line       496                         i_j_list.append((
excute 13:49:13.729967 line       497                             i, j,
excute 13:49:13.732959 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.735952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0)]
excute 13:49:13.739941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:13.742933 line       494                         if (i == j):
excute 13:49:13.746922 line       496                         i_j_list.append((
excute 13:49:13.750911 line       497                             i, j,
excute 13:49:13.753904 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.757893 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:49:13.760885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:13.764874 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:49:13.767866 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:13.771855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:13.774848 line       494                         if (i == j):
excute 13:49:13.778836 line       496                         i_j_list.append((
excute 13:49:13.782826 line       497                             i, j,
excute 13:49:13.785818 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.788810 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0)]
excute 13:49:13.792801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:13.796789 line       494                         if (i == j):
excute 13:49:13.799815 line       496                         i_j_list.append((
excute 13:49:13.803802 line       497                             i, j,
excute 13:49:13.806794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.810768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0)]
excute 13:49:13.813775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:13.817735 line       494                         if (i == j):
excute 13:49:13.823720 line       496                         i_j_list.append((
excute 13:49:13.827707 line       497                             i, j,
excute 13:49:13.830700 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.834689 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0)]
excute 13:49:13.838679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:13.842669 line       494                         if (i == j):
excute 13:49:13.846669 line       496                         i_j_list.append((
excute 13:49:13.849680 line       497                             i, j,
excute 13:49:13.853669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.857658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0)]
excute 13:49:13.860650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:13.864608 line       494                         if (i == j):
excute 13:49:13.868611 line       495                             continue
excute 13:49:13.871623 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:13.875610 line       494                         if (i == j):
excute 13:49:13.878570 line       496                         i_j_list.append((
excute 13:49:13.882559 line       497                             i, j,
excute 13:49:13.886549 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.889541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0)]
excute 13:49:13.893532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:13.897520 line       494                         if (i == j):
excute 13:49:13.902508 line       496                         i_j_list.append((
excute 13:49:13.906510 line       497                             i, j,
excute 13:49:13.909490 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.912481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0)]
excute 13:49:13.916471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:13.921457 line       494                         if (i == j):
excute 13:49:13.926443 line       496                         i_j_list.append((
excute 13:49:13.929434 line       497                             i, j,
excute 13:49:13.932426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.935418 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0)]
excute 13:49:13.939407 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:13.943397 line       494                         if (i == j):
excute 13:49:13.947389 line       496                         i_j_list.append((
excute 13:49:13.951410 line       497                             i, j,
excute 13:49:13.955367 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.958389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0)]
excute 13:49:13.962383 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:13.966351 line       494                         if (i == j):
excute 13:49:13.970327 line       496                         i_j_list.append((
excute 13:49:13.973318 line       497                             i, j,
excute 13:49:13.978305 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:13.983290 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0)]
excute 13:49:13.986282 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:13.990271 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:49:13.994262 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:13.997284 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:14.001242 line       494                         if (i == j):
excute 13:49:14.005232 line       496                         i_j_list.append((
excute 13:49:14.008224 line       497                             i, j,
excute 13:49:14.012214 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.015205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0)]
excute 13:49:14.018197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:14.022187 line       494                         if (i == j):
excute 13:49:14.028204 line       496                         i_j_list.append((
excute 13:49:14.031196 line       497                             i, j,
excute 13:49:14.034190 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.038177 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:49:14.041170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:14.045126 line       494                         if (i == j):
excute 13:49:14.049148 line       496                         i_j_list.append((
excute 13:49:14.052138 line       497                             i, j,
excute 13:49:14.056127 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.059120 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:49:14.063111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:14.067079 line       494                         if (i == j):
excute 13:49:14.070058 line       496                         i_j_list.append((
excute 13:49:14.074047 line       497                             i, j,
excute 13:49:14.077040 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.081031 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:49:14.085020 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:14.089010 line       494                         if (i == j):
excute 13:49:14.092999 line       496                         i_j_list.append((
excute 13:49:14.095991 line       497                             i, j,
excute 13:49:14.102346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.106339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:49:14.109363 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:14.113322 line       494                         if (i == j):
excute 13:49:14.117311 line       495                             continue
excute 13:49:14.123334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:14.129320 line       494                         if (i == j):
excute 13:49:14.133311 line       496                         i_j_list.append((
excute 13:49:14.137316 line       497                             i, j,
excute 13:49:14.140291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.143283 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:49:14.147272 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:14.151262 line       494                         if (i == j):
excute 13:49:14.155252 line       496                         i_j_list.append((
excute 13:49:14.158243 line       497                             i, j,
excute 13:49:14.162233 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.165257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0)]
excute 13:49:14.168248 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:14.172238 line       494                         if (i == j):
excute 13:49:14.176227 line       496                         i_j_list.append((
excute 13:49:14.179218 line       497                             i, j,
excute 13:49:14.183208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.186201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:49:14.190191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:14.194180 line       494                         if (i == j):
excute 13:49:14.198138 line       496                         i_j_list.append((
excute 13:49:14.201161 line       497                             i, j,
excute 13:49:14.204153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.208142 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:49:14.211134 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:14.216090 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:49:14.219113 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:14.223102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:14.227091 line       494                         if (i == j):
excute 13:49:14.231055 line       496                         i_j_list.append((
excute 13:49:14.235069 line       497                             i, j,
excute 13:49:14.238062 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.242030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0)]
excute 13:49:14.245043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:14.249002 line       494                         if (i == j):
excute 13:49:14.252992 line       496                         i_j_list.append((
excute 13:49:14.256979 line       497                             i, j,
excute 13:49:14.260968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.263992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0)]
excute 13:49:14.266984 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:14.270974 line       494                         if (i == j):
excute 13:49:14.275930 line       496                         i_j_list.append((
excute 13:49:14.278923 line       497                             i, j,
excute 13:49:14.282912 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.285904 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0)]
excute 13:49:14.289893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:14.293884 line       494                         if (i == j):
excute 13:49:14.297872 line       496                         i_j_list.append((
excute 13:49:14.301861 line       497                             i, j,
excute 13:49:14.305850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.309840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0)]
excute 13:49:14.312832 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:14.317822 line       494                         if (i == j):
excute 13:49:14.321808 line       496                         i_j_list.append((
excute 13:49:14.324830 line       497                             i, j,
excute 13:49:14.331780 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.340757 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0)]
excute 13:49:14.345744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:14.349733 line       494                         if (i == j):
excute 13:49:14.354721 line       496                         i_j_list.append((
excute 13:49:14.358710 line       497                             i, j,
excute 13:49:14.362698 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.365690 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0)]
excute 13:49:14.369680 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:14.373669 line       494                         if (i == j):
excute 13:49:14.378657 line       495                             continue
excute 13:49:14.382644 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:14.385637 line       494                         if (i == j):
excute 13:49:14.390625 line       496                         i_j_list.append((
excute 13:49:14.393616 line       497                             i, j,
excute 13:49:14.397605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.401594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0)]
excute 13:49:14.405584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:14.409574 line       494                         if (i == j):
excute 13:49:14.412565 line       496                         i_j_list.append((
excute 13:49:14.417551 line       497                             i, j,
excute 13:49:14.420544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.423536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0)]
excute 13:49:14.427525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:14.431514 line       494                         if (i == j):
excute 13:49:14.436513 line       496                         i_j_list.append((
excute 13:49:14.440490 line       497                             i, j,
excute 13:49:14.443481 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.447471 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0)]
excute 13:49:14.451462 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:14.455449 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:49:14.458440 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:14.465425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:14.469412 line       494                         if (i == j):
excute 13:49:14.473403 line       496                         i_j_list.append((
excute 13:49:14.477392 line       497                             i, j,
excute 13:49:14.480383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.484372 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0)]
excute 13:49:14.487364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:14.491354 line       494                         if (i == j):
excute 13:49:14.496349 line       496                         i_j_list.append((
excute 13:49:14.499363 line       497                             i, j,
excute 13:49:14.503327 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.506344 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0)]
excute 13:49:14.510303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:14.514293 line       494                         if (i == j):
excute 13:49:14.518282 line       496                         i_j_list.append((
excute 13:49:14.522272 line       497                             i, j,
excute 13:49:14.526261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.529253 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0)]
excute 13:49:14.533243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:14.537230 line       494                         if (i == j):
excute 13:49:14.542217 line       496                         i_j_list.append((
excute 13:49:14.545209 line       497                             i, j,
excute 13:49:14.549199 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.552190 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0)]
excute 13:49:14.556185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:14.559171 line       494                         if (i == j):
excute 13:49:14.563160 line       496                         i_j_list.append((
excute 13:49:14.567150 line       497                             i, j,
excute 13:49:14.570144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.574133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0)]
excute 13:49:14.578123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:14.582113 line       494                         if (i == j):
excute 13:49:14.585104 line       496                         i_j_list.append((
excute 13:49:14.589093 line       497                             i, j,
excute 13:49:14.593083 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.597070 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0)]
excute 13:49:14.600064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:14.604053 line       494                         if (i == j):
excute 13:49:14.609040 line       496                         i_j_list.append((
excute 13:49:14.613029 line       497                             i, j,
excute 13:49:14.617018 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.621008 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0)]
excute 13:49:14.623998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:14.627987 line       494                         if (i == j):
excute 13:49:14.631977 line       495                             continue
excute 13:49:14.634969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:14.638957 line       494                         if (i == j):
excute 13:49:14.644942 line       496                         i_j_list.append((
excute 13:49:14.647934 line       497                             i, j,
excute 13:49:14.651923 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.655913 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0)]
excute 13:49:14.658905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:14.662894 line       494                         if (i == j):
excute 13:49:14.666884 line       496                         i_j_list.append((
excute 13:49:14.670872 line       497                             i, j,
excute 13:49:14.673864 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.676857 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0)]
excute 13:49:14.680847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:14.684838 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:49:14.687827 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:49:14.692815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:14.699795 line       494                         if (i == j):
excute 13:49:14.703787 line       496                         i_j_list.append((
excute 13:49:14.707774 line       497                             i, j,
excute 13:49:14.712762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.717748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0)]
excute 13:49:14.723750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:14.726757 line       494                         if (i == j):
excute 13:49:14.731712 line       496                         i_j_list.append((
excute 13:49:14.735700 line       497                             i, j,
excute 13:49:14.738692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.742681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:49:14.747668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:14.750659 line       494                         if (i == j):
excute 13:49:14.755654 line       496                         i_j_list.append((
excute 13:49:14.758639 line       497                             i, j,
excute 13:49:14.762628 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.765620 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:49:14.769610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:14.773600 line       494                         if (i == j):
excute 13:49:14.777589 line       496                         i_j_list.append((
excute 13:49:14.780580 line       497                             i, j,
excute 13:49:14.784583 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.787562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:49:14.790554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:14.794544 line       494                         if (i == j):
excute 13:49:14.799529 line       496                         i_j_list.append((
excute 13:49:14.802522 line       497                             i, j,
excute 13:49:14.808505 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.812496 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:49:14.815487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:14.819477 line       494                         if (i == j):
excute 13:49:14.823466 line       496                         i_j_list.append((
excute 13:49:14.827456 line       497                             i, j,
excute 13:49:14.830447 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.834437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:49:14.837461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:14.841449 line       494                         if (i == j):
excute 13:49:14.845438 line       496                         i_j_list.append((
excute 13:49:14.849397 line       497                             i, j,
excute 13:49:14.853385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.857374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:49:14.860365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:14.864355 line       494                         if (i == j):
excute 13:49:14.868345 line       496                         i_j_list.append((
excute 13:49:14.871337 line       497                             i, j,
excute 13:49:14.875326 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.878318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:49:14.882307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:14.886297 line       494                         if (i == j):
excute 13:49:14.890287 line       495                             continue
excute 13:49:14.893309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:14.896302 line       494                         if (i == j):
excute 13:49:14.901257 line       496                         i_j_list.append((
excute 13:49:14.904250 line       497                             i, j,
excute 13:49:14.908240 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.912227 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:49:14.915222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:14.919212 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:49:14.922203 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:49:14.927202 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:49:14.931177 line       494                         if (i == j):
excute 13:49:14.935167 line       496                         i_j_list.append((
excute 13:49:14.938160 line       497                             i, j,
excute 13:49:14.941152 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.945141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0)]
excute 13:49:14.949131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:49:14.955115 line       494                         if (i == j):
excute 13:49:14.960100 line       496                         i_j_list.append((
excute 13:49:14.963093 line       497                             i, j,
excute 13:49:14.967094 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.970074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:49:14.975074 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:49:14.979051 line       494                         if (i == j):
excute 13:49:14.983040 line       496                         i_j_list.append((
excute 13:49:14.987029 line       497                             i, j,
excute 13:49:14.991018 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:14.994011 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:49:14.998000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:49:15.001990 line       494                         if (i == j):
excute 13:49:15.005979 line       496                         i_j_list.append((
excute 13:49:15.009968 line       497                             i, j,
excute 13:49:15.012960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:15.016949 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:49:15.020938 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:49:15.025926 line       494                         if (i == j):
excute 13:49:15.029914 line       496                         i_j_list.append((
excute 13:49:15.032907 line       497                             i, j,
excute 13:49:15.036896 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:15.039888 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:49:15.043881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:49:15.046869 line       494                         if (i == j):
excute 13:49:15.051857 line       496                         i_j_list.append((
excute 13:49:15.056842 line       497                             i, j,
excute 13:49:15.060831 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:15.063823 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:49:15.067813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:49:15.071804 line       494                         if (i == j):
excute 13:49:15.075790 line       496                         i_j_list.append((
excute 13:49:15.078782 line       497                             i, j,
excute 13:49:15.081774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:15.085764 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:49:15.088756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:49:15.092744 line       494                         if (i == j):
excute 13:49:15.096735 line       496                         i_j_list.append((
excute 13:49:15.099726 line       497                             i, j,
excute 13:49:15.103715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:15.106707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0)]
excute 13:49:15.109700 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:49:15.113688 line       494                         if (i == j):
excute 13:49:15.117678 line       496                         i_j_list.append((
excute 13:49:15.120670 line       497                             i, j,
excute 13:49:15.124659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:49:15.127651 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0)]
excute 13:49:15.131640 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:49:15.135666 line       494                         if (i == j):
excute 13:49:15.139652 line       495                             continue
excute 13:49:15.142643 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:49:15.146633 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:49:15.149624 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(7, 0, -2, 0), (7, 1, -2, 0), (7, 2, -2, 0), (7, 3, -2, 0), (7, 4, -2, 0), (7, 5, -2, 0), (7, 6, -2, 0), (7, 8, -2, 0), (7, 9, -2, 0), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 0, 0), (1, 2, 0, 0), (1, 3, 0, 0), (1, 4, 0, 0), (1, 5, 0, 0), (1, 6, 0, 0), (1, 7, 0, 0), (1, 8, 0, 0), (1, 9, 0, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (2, 0, 2, 0), (2, 1, 2, 0), (2, 3, 2, 0), (2, 4, 2, 0), (2, 5, 2, 0), (2, 6, 2, 0), (2, 7, 2, 0), (2, 8, 2, 0), (2, 9, 2, 0), (6, 0, 2, 0), (6, 1, 2, 0), (6, 2, 2, 0), (6, 3, 2, 0), (6, 4, 2, 0), (6, 5, 2, 0), (6, 7, 2, 0), (6, 8, 2, 0), (6, 9, 2, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 0), (9, 8, 3, 0), (4, 0, 4, 0), (4, 1, 4, 0), (4, 2, 4, 0), (4, 3, 4, 0), (4, 5, 4, 0), (4, 6, 4, 0), (4, 7, 4, 0), (4, 8, 4, 0), (4, 9, 4, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:49:15.153614 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:49:15.158571 line       505                     if (self.RELOCATE):
excute 13:49:15.164559 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:49:15.168543 line       505                     if (self.RELOCATE):
excute 13:49:15.172532 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:49:15.175523 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, -2, 0)
excute 13:49:15.179515 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:49:15.183505 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:15.186494 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.190485 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, -2, 0)
excute 13:49:15.194505 line       556                     i = i_j[0]
excute 13:49:15.198463 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:15.202459 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.205443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, -2, 0)
excute 13:49:15.209432 line       556                     i = i_j[0]
excute 13:49:15.213422 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:15.217415 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.221403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, -2, 0)
excute 13:49:15.225392 line       556                     i = i_j[0]
excute 13:49:15.229381 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:15.232373 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.237361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, -2, 0)
excute 13:49:15.240352 line       556                     i = i_j[0]
excute 13:49:15.244341 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:15.248331 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.252320 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, -2, 0)
excute 13:49:15.256309 line       556                     i = i_j[0]
excute 13:49:15.261297 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:15.266314 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.270302 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, -2, 0)
excute 13:49:15.274275 line       556                     i = i_j[0]
excute 13:49:15.278250 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:15.281272 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.285262 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, -2, 0)
excute 13:49:15.289251 line       556                     i = i_j[0]
excute 13:49:15.293210 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:15.296233 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.300197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, -2, 0)
excute 13:49:15.303214 line       556                     i = i_j[0]
excute 13:49:15.307205 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:15.311195 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.315152 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:49:15.318142 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:49:15.322131 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:15.328120 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.334100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:49:15.339121 line       556                     i = i_j[0]
excute 13:49:15.344076 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:15.348064 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.353050 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:49:15.356072 line       556                     i = i_j[0]
excute 13:49:15.361029 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:15.364052 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.370005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:49:15.373028 line       556                     i = i_j[0]
excute 13:49:15.377017 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:15.381006 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.384996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:49:15.388985 line       556                     i = i_j[0]
excute 13:49:15.392944 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:15.395965 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.399956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:49:15.403945 line       556                     i = i_j[0]
excute 13:49:15.407903 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:15.411892 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.417876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:49:15.421865 line       556                     i = i_j[0]
excute 13:49:15.425854 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:15.429876 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.433867 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:49:15.436827 line       556                     i = i_j[0]
excute 13:49:15.441815 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:15.444806 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.449824 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:49:15.453812 line       556                     i = i_j[0]
excute 13:49:15.459764 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:15.463753 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.467742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 0, 0)
excute 13:49:15.472729 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:49:15.476718 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:15.480707 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.484697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 0, 0)
excute 13:49:15.487689 line       556                     i = i_j[0]
excute 13:49:15.491678 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:15.495668 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.498660 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 0, 0)
excute 13:49:15.502649 line       556                     i = i_j[0]
excute 13:49:15.506638 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:15.510627 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.514617 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 0, 0)
excute 13:49:15.517609 line       556                     i = i_j[0]
excute 13:49:15.521598 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:15.525589 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.529577 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 0, 0)
excute 13:49:15.532569 line       556                     i = i_j[0]
excute 13:49:15.537557 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:15.540579 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.544569 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 0, 0)
excute 13:49:15.548559 line       556                     i = i_j[0]
excute 13:49:15.552516 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:15.555539 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.559532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 0, 0)
excute 13:49:15.563518 line       556                     i = i_j[0]
excute 13:49:15.567509 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:15.570499 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.575488 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 0, 0)
excute 13:49:15.579475 line       556                     i = i_j[0]
excute 13:49:15.583433 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:15.586425 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.590414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 0, 0)
excute 13:49:15.594403 line       556                     i = i_j[0]
excute 13:49:15.598393 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:15.601385 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.605375 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:49:15.609364 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:49:15.613353 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:15.617343 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.620367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:49:15.624356 line       556                     i = i_j[0]
excute 13:49:15.628316 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:15.631337 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.635327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:49:15.639316 line       556                     i = i_j[0]
excute 13:49:15.643275 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:15.646297 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.650286 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:49:15.654275 line       556                     i = i_j[0]
excute 13:49:15.658235 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:15.662224 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.666214 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:49:15.670203 line       556                     i = i_j[0]
excute 13:49:15.675190 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:15.679208 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.683199 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:49:15.687187 line       556                     i = i_j[0]
excute 13:49:15.691179 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:15.694172 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.699125 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:49:15.703114 line       556                     i = i_j[0]
excute 13:49:15.706136 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:15.710126 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.714087 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:49:15.720100 line       556                     i = i_j[0]
excute 13:49:15.724090 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:15.728049 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.731070 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:49:15.735059 line       556                     i = i_j[0]
excute 13:49:15.739023 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:15.742043 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.746030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:49:15.750004 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:49:15.753978 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:15.757966 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.761956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:49:15.764979 line       556                     i = i_j[0]
excute 13:49:15.768938 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:15.771962 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.776916 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:49:15.780907 line       556                     i = i_j[0]
excute 13:49:15.784927 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:49:15.788916 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.792888 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:49:15.795897 line       556                     i = i_j[0]
excute 13:49:15.799856 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:15.802878 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.807833 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:49:15.810857 line       556                     i = i_j[0]
excute 13:49:15.814843 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:15.817838 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.822794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:49:15.825817 line       556                     i = i_j[0]
excute 13:49:15.829776 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:15.832799 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.836758 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:49:15.840747 line       556                     i = i_j[0]
excute 13:49:15.844737 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:15.848725 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.852715 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:49:15.859723 line       556                     i = i_j[0]
excute 13:49:15.863686 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:15.866676 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.870667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:49:15.874656 line       556                     i = i_j[0]
excute 13:49:15.879641 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:15.884660 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.888649 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 2, 0)
excute 13:49:15.892638 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:49:15.896630 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:15.900586 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.904602 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 2, 0)
excute 13:49:15.907599 line       556                     i = i_j[0]
excute 13:49:15.911557 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:49:15.914579 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.918569 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 2, 0)
excute 13:49:15.922558 line       556                     i = i_j[0]
excute 13:49:15.926550 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:49:15.930507 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.934496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 2, 0)
excute 13:49:15.937486 line       556                     i = i_j[0]
excute 13:49:15.941485 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:49:15.944500 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.949456 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 2, 0)
excute 13:49:15.952446 line       556                     i = i_j[0]
excute 13:49:15.957435 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:49:15.961425 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.969404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 2, 0)
excute 13:49:15.975385 line       556                     i = i_j[0]
excute 13:49:15.979407 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:49:15.983396 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:15.988355 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 2, 0)
excute 13:49:15.991374 line       556                     i = i_j[0]
excute 13:49:15.996337 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:49:16.000319 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.003342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 2, 0)
excute 13:49:16.007332 line       556                     i = i_j[0]
excute 13:49:16.011289 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:49:16.015278 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.019269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 2, 0)
excute 13:49:16.022260 line       556                     i = i_j[0]
excute 13:49:16.026249 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:49:16.030239 line       558                     if (i != j and demands[t][i][j]):
excute 13:49:16.033230 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 2, 0)
excute 13:49:16.037220 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:49:16.041209 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:49:16.045199 line       558                     if (i != j and demands[t][i][j]):