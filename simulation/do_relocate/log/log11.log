excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:50:44.086048 line       556                     i = i_j[0]
excute 13:50:44.090009 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:44.096022 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.100012 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:50:44.103003 line       556                     i = i_j[0]
excute 13:50:44.106992 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:44.110982 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.114941 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:50:44.117963 line       556                     i = i_j[0]
excute 13:50:44.121952 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:44.125941 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.129900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:50:44.132891 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:44.137878 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:44.140869 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.144858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:50:44.148848 line       556                     i = i_j[0]
excute 13:50:44.152837 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:44.156827 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.160817 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:50:44.163808 line       556                     i = i_j[0]
excute 13:50:44.167797 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:44.172818 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.176774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:50:44.180764 line       556                     i = i_j[0]
excute 13:50:44.183786 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:44.187778 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.191736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:50:44.194757 line       556                     i = i_j[0]
excute 13:50:44.198747 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:44.202737 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.206696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:50:44.209718 line       556                     i = i_j[0]
excute 13:50:44.213707 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:44.217697 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.221688 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:50:44.225645 line       556                     i = i_j[0]
excute 13:50:44.229634 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:44.233621 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.237612 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:50:44.240602 line       556                     i = i_j[0]
excute 13:50:44.244603 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:44.247584 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.251584 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:50:44.255595 line       556                     i = i_j[0]
excute 13:50:44.259584 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:44.263573 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.267532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:50:44.270555 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:44.275542 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:44.279530 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.283520 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:50:44.287509 line       556                     i = i_j[0]
excute 13:50:44.292465 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:44.295487 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.299477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:50:44.303468 line       556                     i = i_j[0]
excute 13:50:44.307426 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:44.310448 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.314437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:50:44.318427 line       556                     i = i_j[0]
excute 13:50:44.322385 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:44.325408 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.335351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:50:44.341337 line       556                     i = i_j[0]
excute 13:50:44.346327 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:44.349314 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.355298 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:50:44.358320 line       556                     i = i_j[0]
excute 13:50:44.363277 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:44.366266 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.371254 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:50:44.375245 line       556                     i = i_j[0]
excute 13:50:44.381238 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:44.385217 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.393198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:44.396187 line       556                     i = i_j[0]
excute 13:50:44.400176 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:44.403168 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.407189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:50:44.411182 line       556                     i = i_j[0]
excute 13:50:44.415139 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:44.419129 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.423116 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:50:44.426138 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:44.430098 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:44.434087 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.438077 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:50:44.441098 line       556                     i = i_j[0]
excute 13:50:44.445069 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:44.451041 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.455030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:50:44.459021 line       556                     i = i_j[0]
excute 13:50:44.465004 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:44.471985 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.475973 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:50:44.481964 line       556                     i = i_j[0]
excute 13:50:44.485979 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:44.489938 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.494924 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:50:44.498913 line       556                     i = i_j[0]
excute 13:50:44.502902 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:44.506891 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.511882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:50:44.514872 line       556                     i = i_j[0]
excute 13:50:44.519857 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:44.523848 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.527836 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:50:44.530858 line       556                     i = i_j[0]
excute 13:50:44.534848 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:44.538841 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.542797 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:50:44.545819 line       556                     i = i_j[0]
excute 13:50:44.549813 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:44.553797 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.558752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:50:44.562742 line       556                     i = i_j[0]
excute 13:50:44.566736 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:44.570721 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.574721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:44.577733 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:44.581694 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:44.586680 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.591666 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:44.595654 line       556                     i = i_j[0]
excute 13:50:44.599643 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:44.603632 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.607622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:50:44.610614 line       556                     i = i_j[0]
excute 13:50:44.614603 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:44.619589 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.623579 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:44.626573 line       556                     i = i_j[0]
excute 13:50:44.631559 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:44.634581 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.638539 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:44.642539 line       556                     i = i_j[0]
excute 13:50:44.646519 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:44.649509 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.653499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:44.657493 line       556                     i = i_j[0]
excute 13:50:44.660480 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:44.664472 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.669456 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:50:44.672480 line       556                     i = i_j[0]
excute 13:50:44.676470 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:44.680440 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.685415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:44.689435 line       556                     i = i_j[0]
excute 13:50:44.693407 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:44.697382 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.701410 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:50:44.704395 line       556                     i = i_j[0]
excute 13:50:44.708352 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:44.712342 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.716364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:44.720352 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:44.724312 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:44.728300 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.732290 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:50:44.735313 line       556                     i = i_j[0]
excute 13:50:44.739271 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:44.743291 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.747250 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:50:44.750272 line       556                     i = i_j[0]
excute 13:50:44.754265 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:44.758251 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.762240 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:50:44.766229 line       556                     i = i_j[0]
excute 13:50:44.770220 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:44.773211 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.777200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:50:44.781190 line       556                     i = i_j[0]
excute 13:50:44.785181 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:44.789137 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.794125 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 0)
excute 13:50:44.797147 line       556                     i = i_j[0]
excute 13:50:44.801106 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:44.804128 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.808117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:44.812075 line       556                     i = i_j[0]
excute 13:50:44.816064 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:44.820053 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.824043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:50:44.827035 line       556                     i = i_j[0]
excute 13:50:44.831025 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:44.835013 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.839003 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:44.841995 line       556                     i = i_j[0]
excute 13:50:44.845984 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:44.849975 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.853964 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 4, 0)
excute 13:50:44.856955 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:44.860944 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:44.864933 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.868923 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 4, 0)
excute 13:50:44.872913 line       556                     i = i_j[0]
excute 13:50:44.875904 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:44.879893 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.883883 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 4, 0)
excute 13:50:44.886876 line       556                     i = i_j[0]
excute 13:50:44.891864 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:44.895884 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.899874 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 4, 0)
excute 13:50:44.902865 line       556                     i = i_j[0]
excute 13:50:44.906855 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:44.910828 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.914801 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 4, 0)
excute 13:50:44.917825 line       556                     i = i_j[0]
excute 13:50:44.921783 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:44.925803 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.929763 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 4, 0)
excute 13:50:44.932785 line       556                     i = i_j[0]
excute 13:50:44.936774 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:44.940732 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.944720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 4, 0)
excute 13:50:44.948711 line       556                     i = i_j[0]
excute 13:50:44.953698 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:44.959682 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.965697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 4, 0)
excute 13:50:44.969689 line       556                     i = i_j[0]
excute 13:50:44.973645 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:44.976667 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.981623 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 4, 0)
excute 13:50:44.984645 line       556                     i = i_j[0]
excute 13:50:44.988606 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:44.992595 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:44.997581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:50:45.000603 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:45.004593 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:45.009548 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:45.013539 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:50:45.017528 line       556                     i = i_j[0]
excute 13:50:45.021517 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:45.025506 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:45.030495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:50:45.033485 line       556                     i = i_j[0]
excute 13:50:45.038472 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:45.042459 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:45.046449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:50:45.049441 line       556                     i = i_j[0]
excute 13:50:45.053429 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:45.057419 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:45.061409 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:50:45.064400 line       556                     i = i_j[0]
excute 13:50:45.068390 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:45.072380 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:45.076369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:50:45.079361 line       556                     i = i_j[0]
excute 13:50:45.083349 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:45.088337 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:45.095323 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 0)
excute 13:50:45.099339 line       556                     i = i_j[0]
excute 13:50:45.103306 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:45.107286 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:45.110310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:50:45.114299 line       556                     i = i_j[0]
excute 13:50:45.118259 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:45.122250 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:45.126236 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:50:45.130227 line       556                     i = i_j[0]
excute 13:50:45.134221 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:45.138205 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:45.142195 line       555                 for i_j in i_j_list:
excute 13:50:45.146184 line       581             self.write_matrix(
excute 13:50:45.150172 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:45.154161 line       583                 result_file_path,
excute 13:50:45.158152 line       584                 mode='a'
excute 13:50:45.212673 line       488         for t in time_steps:
excute Modified var:.. t = 162
excute 13:50:45.223645 line       489             if (t != self.TIME + 1):
excute 13:50:45.232619 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:45.240604 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:45.244588 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:45.249573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:45.254561 line       494                         if (i == j):
excute 13:50:45.259549 line       495                             continue
excute 13:50:45.263536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:45.266528 line       494                         if (i == j):
excute 13:50:45.270519 line       496                         i_j_list.append((
excute 13:50:45.276502 line       497                             i, j,
excute 13:50:45.280491 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.286476 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:50:45.291464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:45.295452 line       494                         if (i == j):
excute 13:50:45.300437 line       496                         i_j_list.append((
excute 13:50:45.305426 line       497                             i, j,
excute 13:50:45.309415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.313403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:50:45.317392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:45.321414 line       494                         if (i == j):
excute 13:50:45.325371 line       496                         i_j_list.append((
excute 13:50:45.333350 line       497                             i, j,
excute 13:50:45.338337 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.343323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:50:45.346316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:45.350309 line       494                         if (i == j):
excute 13:50:45.355293 line       496                         i_j_list.append((
excute 13:50:45.359285 line       497                             i, j,
excute 13:50:45.362273 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.366263 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:50:45.369253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:45.374241 line       494                         if (i == j):
excute 13:50:45.378236 line       496                         i_j_list.append((
excute 13:50:45.381222 line       497                             i, j,
excute 13:50:45.385211 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.389201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1)]
excute 13:50:45.392192 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:45.396183 line       494                         if (i == j):
excute 13:50:45.400176 line       496                         i_j_list.append((
excute 13:50:45.403163 line       497                             i, j,
excute 13:50:45.408151 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.412140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0)]
excute 13:50:45.416162 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:45.420119 line       494                         if (i == j):
excute 13:50:45.424107 line       496                         i_j_list.append((
excute 13:50:45.427130 line       497                             i, j,
excute 13:50:45.431120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.437072 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:50:45.442061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:45.446049 line       494                         if (i == j):
excute 13:50:45.451037 line       496                         i_j_list.append((
excute 13:50:45.455026 line       497                             i, j,
excute 13:50:45.459015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.462007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:50:45.465996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:45.469987 line       494                         if (i == j):
excute 13:50:45.473974 line       496                         i_j_list.append((
excute 13:50:45.477963 line       497                             i, j,
excute 13:50:45.480955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.484945 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1)]
excute 13:50:45.487936 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:45.491927 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:45.494918 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:45.498907 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:45.502897 line       494                         if (i == j):
excute 13:50:45.506887 line       496                         i_j_list.append((
excute 13:50:45.511874 line       497                             i, j,
excute 13:50:45.515862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.518855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0)]
excute 13:50:45.522845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:45.526833 line       494                         if (i == j):
excute 13:50:45.530823 line       495                             continue
excute 13:50:45.534812 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:45.538806 line       494                         if (i == j):
excute 13:50:45.542792 line       496                         i_j_list.append((
excute 13:50:45.545783 line       497                             i, j,
excute 13:50:45.549772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.552764 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:50:45.557749 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:45.561739 line       494                         if (i == j):
excute 13:50:45.565730 line       496                         i_j_list.append((
excute 13:50:45.569719 line       497                             i, j,
excute 13:50:45.573708 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.577697 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:50:45.580690 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:45.584678 line       494                         if (i == j):
excute 13:50:45.589667 line       496                         i_j_list.append((
excute 13:50:45.596651 line       497                             i, j,
excute 13:50:45.600635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.605623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:50:45.609611 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:45.613599 line       494                         if (i == j):
excute 13:50:45.618589 line       496                         i_j_list.append((
excute 13:50:45.621580 line       497                             i, j,
excute 13:50:45.625570 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.628562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1)]
excute 13:50:45.632550 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:45.637539 line       494                         if (i == j):
excute 13:50:45.641526 line       496                         i_j_list.append((
excute 13:50:45.644518 line       497                             i, j,
excute 13:50:45.647510 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.651501 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0)]
excute 13:50:45.654491 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:45.658481 line       494                         if (i == j):
excute 13:50:45.662471 line       496                         i_j_list.append((
excute 13:50:45.666460 line       497                             i, j,
excute 13:50:45.670451 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.674439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:50:45.677430 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:45.681419 line       494                         if (i == j):
excute 13:50:45.685410 line       496                         i_j_list.append((
excute 13:50:45.688400 line       497                             i, j,
excute 13:50:45.692391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.696379 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:50:45.699371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:45.703361 line       494                         if (i == j):
excute 13:50:45.707349 line       496                         i_j_list.append((
excute 13:50:45.710342 line       497                             i, j,
excute 13:50:45.715329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.719318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1)]
excute 13:50:45.723307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:45.727299 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:45.730319 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:45.734310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:45.738267 line       494                         if (i == j):
excute 13:50:45.742258 line       496                         i_j_list.append((
excute 13:50:45.748242 line       497                             i, j,
excute 13:50:45.755225 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.759211 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0)]
excute 13:50:45.762205 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:45.766192 line       494                         if (i == j):
excute 13:50:45.770184 line       496                         i_j_list.append((
excute 13:50:45.774173 line       497                             i, j,
excute 13:50:45.777165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.781153 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0)]
excute 13:50:45.785143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:45.790131 line       494                         if (i == j):
excute 13:50:45.794119 line       495                             continue
excute 13:50:45.798108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:45.802097 line       494                         if (i == j):
excute 13:50:45.806087 line       496                         i_j_list.append((
excute 13:50:45.810076 line       497                             i, j,
excute 13:50:45.814066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.819051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0)]
excute 13:50:45.823040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:45.827032 line       494                         if (i == j):
excute 13:50:45.831022 line       496                         i_j_list.append((
excute 13:50:45.834011 line       497                             i, j,
excute 13:50:45.838000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.841992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0)]
excute 13:50:45.848971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:45.852963 line       494                         if (i == j):
excute 13:50:45.856949 line       496                         i_j_list.append((
excute 13:50:45.859942 line       497                             i, j,
excute 13:50:45.863932 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.866923 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1)]
excute 13:50:45.870945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:45.874904 line       494                         if (i == j):
excute 13:50:45.878892 line       496                         i_j_list.append((
excute 13:50:45.882881 line       497                             i, j,
excute 13:50:45.885903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.889893 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0)]
excute 13:50:45.892885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:45.896874 line       494                         if (i == j):
excute 13:50:45.900865 line       496                         i_j_list.append((
excute 13:50:45.904853 line       497                             i, j,
excute 13:50:45.907846 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.911834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0)]
excute 13:50:45.914826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:45.920780 line       494                         if (i == j):
excute 13:50:45.925766 line       496                         i_j_list.append((
excute 13:50:45.928759 line       497                             i, j,
excute 13:50:45.932757 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.936745 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0)]
excute 13:50:45.939730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:45.944715 line       494                         if (i == j):
excute 13:50:45.948708 line       496                         i_j_list.append((
excute 13:50:45.952725 line       497                             i, j,
excute 13:50:45.956714 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.959706 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1)]
excute 13:50:45.967655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:45.971643 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:45.975666 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:45.979622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:45.983644 line       494                         if (i == j):
excute 13:50:45.987602 line       496                         i_j_list.append((
excute 13:50:45.991621 line       497                             i, j,
excute 13:50:45.995580 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:45.998603 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0)]
excute 13:50:46.002592 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:46.006551 line       494                         if (i == j):
excute 13:50:46.010572 line       496                         i_j_list.append((
excute 13:50:46.014528 line       497                             i, j,
excute 13:50:46.017519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.021509 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0)]
excute 13:50:46.025499 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:46.030489 line       494                         if (i == j):
excute 13:50:46.034475 line       496                         i_j_list.append((
excute 13:50:46.037468 line       497                             i, j,
excute 13:50:46.041456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.045447 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0)]
excute 13:50:46.049435 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:46.053424 line       494                         if (i == j):
excute 13:50:46.057414 line       495                             continue
excute 13:50:46.061405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:46.064396 line       494                         if (i == j):
excute 13:50:46.068386 line       496                         i_j_list.append((
excute 13:50:46.072375 line       497                             i, j,
excute 13:50:46.076365 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.079357 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0)]
excute 13:50:46.083345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:46.087335 line       494                         if (i == j):
excute 13:50:46.091324 line       496                         i_j_list.append((
excute 13:50:46.094347 line       497                             i, j,
excute 13:50:46.098336 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.101328 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1)]
excute 13:50:46.106315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:46.113276 line       494                         if (i == j):
excute 13:50:46.117256 line       496                         i_j_list.append((
excute 13:50:46.120245 line       497                             i, j,
excute 13:50:46.125235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.129253 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0)]
excute 13:50:46.133215 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:46.137203 line       494                         if (i == j):
excute 13:50:46.141196 line       496                         i_j_list.append((
excute 13:50:46.144213 line       497                             i, j,
excute 13:50:46.148171 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.151194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0)]
excute 13:50:46.155187 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:46.159178 line       494                         if (i == j):
excute 13:50:46.163139 line       496                         i_j_list.append((
excute 13:50:46.166156 line       497                             i, j,
excute 13:50:46.170134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.173136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0)]
excute 13:50:46.177095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:46.181083 line       494                         if (i == j):
excute 13:50:46.184106 line       496                         i_j_list.append((
excute 13:50:46.188097 line       497                             i, j,
excute 13:50:46.191088 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.195079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1)]
excute 13:50:46.198071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:46.202059 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:46.206049 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:46.210007 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:46.213029 line       494                         if (i == j):
excute 13:50:46.217019 line       496                         i_j_list.append((
excute 13:50:46.220986 line       497                             i, j,
excute 13:50:46.224001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.227959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0)]
excute 13:50:46.232946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:46.236933 line       494                         if (i == j):
excute 13:50:46.240924 line       496                         i_j_list.append((
excute 13:50:46.244914 line       497                             i, j,
excute 13:50:46.248903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.251895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:50:46.256882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:46.260872 line       494                         if (i == j):
excute 13:50:46.264860 line       496                         i_j_list.append((
excute 13:50:46.267852 line       497                             i, j,
excute 13:50:46.271843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.274834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:50:46.278823 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:46.283809 line       494                         if (i == j):
excute 13:50:46.287798 line       496                         i_j_list.append((
excute 13:50:46.291820 line       497                             i, j,
excute 13:50:46.294810 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.298802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:50:46.301793 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:46.305781 line       494                         if (i == j):
excute 13:50:46.309772 line       495                             continue
excute 13:50:46.313741 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:46.316751 line       494                         if (i == j):
excute 13:50:46.320710 line       496                         i_j_list.append((
excute 13:50:46.324699 line       497                             i, j,
excute 13:50:46.333675 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.342657 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1)]
excute 13:50:46.346642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:46.351630 line       494                         if (i == j):
excute 13:50:46.356617 line       496                         i_j_list.append((
excute 13:50:46.361603 line       497                             i, j,
excute 13:50:46.367585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.372572 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0)]
excute 13:50:46.376560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:46.382548 line       494                         if (i == j):
excute 13:50:46.388529 line       496                         i_j_list.append((
excute 13:50:46.392518 line       497                             i, j,
excute 13:50:46.398502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.406482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:50:46.413462 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:46.419447 line       494                         if (i == j):
excute 13:50:46.424433 line       496                         i_j_list.append((
excute 13:50:46.429419 line       497                             i, j,
excute 13:50:46.433408 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.439393 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:50:46.448371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:46.453355 line       494                         if (i == j):
excute 13:50:46.459341 line       496                         i_j_list.append((
excute 13:50:46.463329 line       497                             i, j,
excute 13:50:46.466321 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.471312 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1)]
excute 13:50:46.475301 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:46.482279 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:46.490257 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:46.499233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:46.506214 line       494                         if (i == j):
excute 13:50:46.515191 line       496                         i_j_list.append((
excute 13:50:46.523171 line       497                             i, j,
excute 13:50:46.528155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.535138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0)]
excute 13:50:46.544114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:46.550096 line       494                         if (i == j):
excute 13:50:46.557078 line       496                         i_j_list.append((
excute 13:50:46.563062 line       497                             i, j,
excute 13:50:46.568049 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.576028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:50:46.581014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:46.589991 line       494                         if (i == j):
excute 13:50:46.596972 line       496                         i_j_list.append((
excute 13:50:46.601959 line       497                             i, j,
excute 13:50:46.607943 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.612930 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:50:46.619911 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:46.627889 line       494                         if (i == j):
excute 13:50:46.636866 line       496                         i_j_list.append((
excute 13:50:46.642848 line       497                             i, j,
excute 13:50:46.649832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.655816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0)]
excute 13:50:46.661799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:46.668779 line       494                         if (i == j):
excute 13:50:46.674763 line       496                         i_j_list.append((
excute 13:50:46.680748 line       497                             i, j,
excute 13:50:46.685734 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.692717 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0)]
excute 13:50:46.698699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:46.705681 line       494                         if (i == j):
excute 13:50:46.714657 line       495                             continue
excute 13:50:46.721638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:46.727623 line       494                         if (i == j):
excute 13:50:46.735600 line       496                         i_j_list.append((
excute 13:50:46.741585 line       497                             i, j,
excute 13:50:46.746572 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.754552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:46.762529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:46.770508 line       494                         if (i == j):
excute 13:50:46.776492 line       496                         i_j_list.append((
excute 13:50:46.796468 line       497                             i, j,
excute 13:50:46.800458 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.806443 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:50:46.811428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:46.815417 line       494                         if (i == j):
excute 13:50:46.819407 line       496                         i_j_list.append((
excute 13:50:46.823396 line       497                             i, j,
excute 13:50:46.827386 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.830377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:50:46.834367 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:46.838358 line       494                         if (i == j):
excute 13:50:46.842346 line       496                         i_j_list.append((
excute 13:50:46.846335 line       497                             i, j,
excute 13:50:46.850324 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.855313 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1)]
excute 13:50:46.859301 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:46.863290 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:46.866281 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:46.870271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:46.874261 line       494                         if (i == j):
excute 13:50:46.878249 line       496                         i_j_list.append((
excute 13:50:46.882239 line       497                             i, j,
excute 13:50:46.886228 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.889220 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0)]
excute 13:50:46.893210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:46.898196 line       494                         if (i == j):
excute 13:50:46.902185 line       496                         i_j_list.append((
excute 13:50:46.905178 line       497                             i, j,
excute 13:50:46.909167 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.913157 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:50:46.917148 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:46.921137 line       494                         if (i == j):
excute 13:50:46.925126 line       496                         i_j_list.append((
excute 13:50:46.928115 line       497                             i, j,
excute 13:50:46.932107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.935098 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:50:46.939088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:46.943078 line       494                         if (i == j):
excute 13:50:46.948064 line       496                         i_j_list.append((
excute 13:50:46.951056 line       497                             i, j,
excute 13:50:46.956045 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.960030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:50:46.964019 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:46.969009 line       494                         if (i == j):
excute 13:50:46.973010 line       496                         i_j_list.append((
excute 13:50:46.976987 line       497                             i, j,
excute 13:50:46.979977 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:46.983967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:50:46.987957 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:46.991947 line       494                         if (i == j):
excute 13:50:46.995936 line       496                         i_j_list.append((
excute 13:50:46.999925 line       497                             i, j,
excute 13:50:47.003914 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.007904 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1)]
excute 13:50:47.012890 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:47.016881 line       494                         if (i == j):
excute 13:50:47.020870 line       495                             continue
excute 13:50:47.023861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:47.027850 line       494                         if (i == j):
excute 13:50:47.031840 line       496                         i_j_list.append((
excute 13:50:47.035829 line       497                             i, j,
excute 13:50:47.039818 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.043808 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0)]
excute 13:50:47.047797 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:47.051787 line       494                         if (i == j):
excute 13:50:47.056774 line       496                         i_j_list.append((
excute 13:50:47.060762 line       497                             i, j,
excute 13:50:47.064752 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.067744 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0)]
excute 13:50:47.071733 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:47.075723 line       494                         if (i == j):
excute 13:50:47.079711 line       496                         i_j_list.append((
excute 13:50:47.083700 line       497                             i, j,
excute 13:50:47.087691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.090681 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1)]
excute 13:50:47.094672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:47.098662 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:47.101652 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:47.105645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:47.109631 line       494                         if (i == j):
excute 13:50:47.113621 line       496                         i_j_list.append((
excute 13:50:47.117611 line       497                             i, j,
excute 13:50:47.120602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.124590 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0)]
excute 13:50:47.127583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:47.131574 line       494                         if (i == j):
excute 13:50:47.136559 line       496                         i_j_list.append((
excute 13:50:47.139551 line       497                             i, j,
excute 13:50:47.142543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.146533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:50:47.150523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:47.154513 line       494                         if (i == j):
excute 13:50:47.158503 line       496                         i_j_list.append((
excute 13:50:47.162490 line       497                             i, j,
excute 13:50:47.166478 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.169506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:50:47.173460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:47.177451 line       494                         if (i == j):
excute 13:50:47.181438 line       496                         i_j_list.append((
excute 13:50:47.184462 line       497                             i, j,
excute 13:50:47.188451 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.191443 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:50:47.195433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:47.199391 line       494                         if (i == j):
excute 13:50:47.203382 line       496                         i_j_list.append((
excute 13:50:47.206405 line       497                             i, j,
excute 13:50:47.210392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.214386 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:50:47.217377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:47.221363 line       494                         if (i == j):
excute 13:50:47.225356 line       496                         i_j_list.append((
excute 13:50:47.229342 line       497                             i, j,
excute 13:50:47.232334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.236323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1)]
excute 13:50:47.240313 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:47.244272 line       494                         if (i == j):
excute 13:50:47.248261 line       496                         i_j_list.append((
excute 13:50:47.251283 line       497                             i, j,
excute 13:50:47.255273 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.259262 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0)]
excute 13:50:47.263219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:47.267212 line       494                         if (i == j):
excute 13:50:47.272198 line       495                             continue
excute 13:50:47.275189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:47.279179 line       494                         if (i == j):
excute 13:50:47.283169 line       496                         i_j_list.append((
excute 13:50:47.286158 line       497                             i, j,
excute 13:50:47.290149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.295136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:50:47.299124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:47.303115 line       494                         if (i == j):
excute 13:50:47.308102 line       496                         i_j_list.append((
excute 13:50:47.312091 line       497                             i, j,
excute 13:50:47.315083 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.319072 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1)]
excute 13:50:47.323061 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:47.331040 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:47.338036 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:47.343006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:47.347028 line       494                         if (i == j):
excute 13:50:47.351017 line       496                         i_j_list.append((
excute 13:50:47.355005 line       497                             i, j,
excute 13:50:47.358996 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.362984 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0)]
excute 13:50:47.366944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:47.371930 line       494                         if (i == j):
excute 13:50:47.376916 line       496                         i_j_list.append((
excute 13:50:47.379907 line       497                             i, j,
excute 13:50:47.385892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.392873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:50:47.396864 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:47.401850 line       494                         if (i == j):
excute 13:50:47.405842 line       496                         i_j_list.append((
excute 13:50:47.408832 line       497                             i, j,
excute 13:50:47.411824 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.415813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:47.420806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:47.423792 line       494                         if (i == j):
excute 13:50:47.428789 line       496                         i_j_list.append((
excute 13:50:47.431771 line       497                             i, j,
excute 13:50:47.435760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.439750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:50:47.443739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:47.448724 line       494                         if (i == j):
excute 13:50:47.452713 line       496                         i_j_list.append((
excute 13:50:47.457701 line       497                             i, j,
excute 13:50:47.461696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.467674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:50:47.473689 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:47.477681 line       494                         if (i == j):
excute 13:50:47.482639 line       496                         i_j_list.append((
excute 13:50:47.485659 line       497                             i, j,
excute 13:50:47.489647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.493604 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1)]
excute 13:50:47.496630 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:47.500617 line       494                         if (i == j):
excute 13:50:47.504611 line       496                         i_j_list.append((
excute 13:50:47.508595 line       497                             i, j,
excute 13:50:47.512589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.515576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0)]
excute 13:50:47.519566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:47.523526 line       494                         if (i == j):
excute 13:50:47.527515 line       496                         i_j_list.append((
excute 13:50:47.530537 line       497                             i, j,
excute 13:50:47.534530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.537518 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:50:47.541477 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:47.545501 line       494                         if (i == j):
excute 13:50:47.549488 line       495                             continue
excute 13:50:47.553449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:47.556467 line       494                         if (i == j):
excute 13:50:47.560460 line       496                         i_j_list.append((
excute 13:50:47.564446 line       497                             i, j,
excute 13:50:47.568439 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.573392 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1)]
excute 13:50:47.577380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:47.581371 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:47.585360 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:47.589348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:47.593339 line       494                         if (i == j):
excute 13:50:47.597328 line       496                         i_j_list.append((
excute 13:50:47.602314 line       497                             i, j,
excute 13:50:47.605308 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.612289 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0)]
excute 13:50:47.615280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:47.620273 line       494                         if (i == j):
excute 13:50:47.624256 line       496                         i_j_list.append((
excute 13:50:47.628276 line       497                             i, j,
excute 13:50:47.631236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.635257 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:50:47.639246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:47.643206 line       494                         if (i == j):
excute 13:50:47.647195 line       496                         i_j_list.append((
excute 13:50:47.650216 line       497                             i, j,
excute 13:50:47.654206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.658197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:50:47.661190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:47.666143 line       494                         if (i == j):
excute 13:50:47.669168 line       496                         i_j_list.append((
excute 13:50:47.673156 line       497                             i, j,
excute 13:50:47.677116 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.681104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0)]
excute 13:50:47.685094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:47.689084 line       494                         if (i == j):
excute 13:50:47.693073 line       496                         i_j_list.append((
excute 13:50:47.697061 line       497                             i, j,
excute 13:50:47.700054 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.704043 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0)]
excute 13:50:47.708032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:47.713019 line       494                         if (i == j):
excute 13:50:47.717007 line       496                         i_j_list.append((
excute 13:50:47.720997 line       497                             i, j,
excute 13:50:47.724986 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.729007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 1)]
excute 13:50:47.731998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:47.735991 line       494                         if (i == j):
excute 13:50:47.740958 line       496                         i_j_list.append((
excute 13:50:47.743969 line       497                             i, j,
excute 13:50:47.747929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.750947 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 0)]
excute 13:50:47.754937 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:47.758903 line       494                         if (i == j):
excute 13:50:47.762884 line       496                         i_j_list.append((
excute 13:50:47.766874 line       497                             i, j,
excute 13:50:47.769897 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.772892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:50:47.776869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:47.782864 line       494                         if (i == j):
excute 13:50:47.786822 line       496                         i_j_list.append((
excute 13:50:47.790810 line       497                             i, j,
excute 13:50:47.793803 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:47.797792 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 1), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 1), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 1), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:50:47.801781 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:47.805771 line       494                         if (i == j):
excute 13:50:47.809760 line       495                             continue
excute 13:50:47.812786 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:47.816771 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:47.819763 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 0), (2, 4, -1, 0), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (2, 5, -1, 1), (2, 9, -1, 1), (8, 5, -1, 1), (8, 9, -1, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (0, 5, 0, 1), (0, 9, 0, 1), (7, 5, 0, 1), (7, 9, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 0), (9, 4, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (1, 5, 2, 1), (1, 9, 2, 1), (4, 5, 2, 1), (4, 9, 2, 1), (5, 9, 2, 1), (9, 5, 2, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 5, 4, 1), (3, 9, 4, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 5, 5, 1), (6, 9, 5, 1)]
excute 13:50:47.823756 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:47.827742 line       505                     if (self.RELOCATE):
excute 13:50:47.831735 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:47.835690 line       505                     if (self.RELOCATE):
excute 13:50:47.840683 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:47.843699 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, -1, 0)
excute 13:50:47.847666 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:47.851661 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:47.855638 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:47.859628 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, -1, 0)
excute 13:50:47.862649 line       556                     i = i_j[0]
excute 13:50:47.866608 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:47.870628 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:47.874586 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, -1, 0)
excute 13:50:47.877612 line       556                     i = i_j[0]
excute 13:50:47.882566 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:47.886555 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:47.890545 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, -1, 0)
excute 13:50:47.894534 line       556                     i = i_j[0]
excute 13:50:47.898524 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:47.902512 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:47.909517 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, -1, 0)
excute 13:50:47.913483 line       556                     i = i_j[0]
excute 13:50:47.917470 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:47.921459 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:47.925451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, -1, 0)
excute 13:50:47.929440 line       556                     i = i_j[0]
excute 13:50:47.933430 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:47.937419 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:47.942405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, -1, 0)
excute 13:50:47.945398 line       556                     i = i_j[0]
excute 13:50:47.951381 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:47.955372 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:47.959360 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:50:47.965342 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:47.969334 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:47.973323 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:47.977343 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:50:47.981332 line       556                     i = i_j[0]
excute 13:50:47.986319 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:47.989312 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:47.994266 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:50:47.997292 line       556                     i = i_j[0]
excute 13:50:48.001279 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:48.005267 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.009258 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:50:48.013246 line       556                     i = i_j[0]
excute 13:50:48.017206 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:48.020229 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.024218 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:50:48.028209 line       556                     i = i_j[0]
excute 13:50:48.032166 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:48.035187 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.039186 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:50:48.043166 line       556                     i = i_j[0]
excute 13:50:48.047125 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:48.050147 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.054137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:50:48.058126 line       556                     i = i_j[0]
excute 13:50:48.062088 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:48.066073 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.069097 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, -1, 1)
excute 13:50:48.073086 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:48.077056 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:48.081044 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.085025 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, -1, 1)
excute 13:50:48.089013 line       556                     i = i_j[0]
excute 13:50:48.094002 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:48.096993 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.101978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 1)
excute 13:50:48.105970 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:48.110989 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:48.114974 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.118967 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 1)
excute 13:50:48.122954 line       556                     i = i_j[0]
excute 13:50:48.126912 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:48.130901 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.134891 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 175
excute 13:50:48.137913 line       560                         if (t_tmp > self.TIME):
excute 13:50:48.141902 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:48.145892 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:48.155362 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 198
excute 13:50:48.158386 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:48.162382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:50:48.166375 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:48.170325 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:48.174316 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.178305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:50:48.181332 line       556                     i = i_j[0]
excute 13:50:48.185316 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:48.190279 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.194263 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:50:48.198252 line       556                     i = i_j[0]
excute 13:50:48.202241 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:48.206230 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.210219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:50:48.214209 line       556                     i = i_j[0]
excute 13:50:48.219195 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:48.223183 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.227184 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:50:48.231193 line       556                     i = i_j[0]
excute 13:50:48.235154 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:48.239142 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.245124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:50:48.250114 line       556                     i = i_j[0]
excute 13:50:48.256096 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:48.260085 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.265075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:50:48.269061 line       556                     i = i_j[0]
excute 13:50:48.274047 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:48.278064 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.282053 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:50:48.286043 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:48.291004 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:48.295991 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.298982 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:50:48.302972 line       556                     i = i_j[0]
excute 13:50:48.307960 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:48.310950 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.314940 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:50:48.318929 line       556                     i = i_j[0]
excute 13:50:48.323917 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:48.331895 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.336880 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:50:48.341867 line       556                     i = i_j[0]
excute 13:50:48.346861 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:48.349879 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.354832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:50:48.358858 line       556                     i = i_j[0]
excute 13:50:48.362812 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:48.365837 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.370794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:50:48.373815 line       556                     i = i_j[0]
excute 13:50:48.378770 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:48.382758 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.386747 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:50:48.390737 line       556                     i = i_j[0]
excute 13:50:48.395724 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:48.399743 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.403703 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 1)
excute 13:50:48.406725 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:48.410722 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:48.415693 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.419658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 1)
excute 13:50:48.422687 line       556                     i = i_j[0]
excute 13:50:48.426640 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:48.430630 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.435615 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 1)
excute 13:50:48.438609 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:48.443594 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:48.447584 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.451575 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 1)
excute 13:50:48.456563 line       556                     i = i_j[0]
excute 13:50:48.460551 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:48.463542 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.467531 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:50:48.471521 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:48.476507 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:48.480498 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.484486 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:50:48.487508 line       556                     i = i_j[0]
excute 13:50:48.491498 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:48.495487 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.500475 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:50:48.504462 line       556                     i = i_j[0]
excute 13:50:48.508422 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:48.512411 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.515433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:50:48.519422 line       556                     i = i_j[0]
excute 13:50:48.523383 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:48.526404 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.530396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:50:48.534382 line       556                     i = i_j[0]
excute 13:50:48.538341 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:48.542363 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.546319 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:50:48.549346 line       556                     i = i_j[0]
excute 13:50:48.553332 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:48.557324 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.561312 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:48.564303 line       556                     i = i_j[0]
excute 13:50:48.568292 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:48.572281 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.576239 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:50:48.579262 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:48.584231 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:48.588208 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.592197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:50:48.596188 line       556                     i = i_j[0]
excute 13:50:48.601176 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:48.605164 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.612150 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:50:48.616133 line       556                     i = i_j[0]
excute 13:50:48.619156 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:48.623145 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.627106 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:50:48.630126 line       556                     i = i_j[0]
excute 13:50:48.635115 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:48.638106 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.642098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:50:48.646084 line       556                     i = i_j[0]
excute 13:50:48.650044 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:48.653068 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.657055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:50:48.661047 line       556                     i = i_j[0]
excute 13:50:48.665005 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:48.669027 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.672982 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:50:48.676006 line       556                     i = i_j[0]
excute 13:50:48.679994 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:48.683983 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.687972 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:48.691962 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:48.695921 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:48.699911 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.704899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:48.707889 line       556                     i = i_j[0]
excute 13:50:48.712877 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:48.716865 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.720854 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:50:48.724844 line       556                     i = i_j[0]
excute 13:50:48.729830 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:48.733819 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.737809 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 0)
excute 13:50:48.740833 line       556                     i = i_j[0]
excute 13:50:48.744789 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:48.748778 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.752768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:48.756759 line       556                     i = i_j[0]
excute 13:50:48.763746 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:48.767729 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.771716 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:48.775706 line       556                     i = i_j[0]
excute 13:50:48.780694 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:48.783715 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.787676 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:50:48.791696 line       556                     i = i_j[0]
excute 13:50:48.795686 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:48.798676 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.802635 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:48.806626 line       556                     i = i_j[0]
excute 13:50:48.810646 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:48.814633 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.818623 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:48.822613 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:48.826573 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:48.830561 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.834550 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:50:48.837541 line       556                     i = i_j[0]
excute 13:50:48.842530 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:48.845521 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.849508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:50:48.853498 line       556                     i = i_j[0]
excute 13:50:48.857487 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:48.861477 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.866465 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 0)
excute 13:50:48.869458 line       556                     i = i_j[0]
excute 13:50:48.874443 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:48.877434 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.881425 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:50:48.885414 line       556                     i = i_j[0]
excute 13:50:48.890400 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:48.893393 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.897382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:48.901371 line       556                     i = i_j[0]
excute 13:50:48.905360 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:48.910348 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.914336 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:50:48.918327 line       556                     i = i_j[0]
excute 13:50:48.922317 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:48.926312 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.930294 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:48.934284 line       556                     i = i_j[0]
excute 13:50:48.939270 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:48.943291 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.947248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 1)
excute 13:50:48.951237 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:48.956226 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:48.960214 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.968194 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 1)
excute 13:50:48.972183 line       556                     i = i_j[0]
excute 13:50:48.977169 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:48.981159 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:48.986146 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 1)
excute 13:50:48.989137 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:48.994125 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:48.998116 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.002103 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 1)
excute 13:50:49.006092 line       556                     i = i_j[0]
excute 13:50:49.012079 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:49.015066 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.020055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 1)
excute 13:50:49.023044 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:49.028034 line       557                     j = i_j[1]
excute 13:50:49.032022 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.036011 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 1)
excute 13:50:49.039003 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:49.042993 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:49.046982 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.050971 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:50:49.054961 line       560                         if (t_tmp > self.TIME):
excute 13:50:49.057952 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:49.061943 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:49.064933 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 199
excute 13:50:49.068924 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:49.072912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 4, 0)
excute 13:50:49.075904 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:49.079894 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:49.083883 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.087873 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 4, 0)
excute 13:50:49.091862 line       556                     i = i_j[0]
excute 13:50:49.095853 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:49.098843 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.102833 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 4, 0)
excute 13:50:49.107818 line       556                     i = i_j[0]
excute 13:50:49.112806 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:49.116826 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.120811 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 4, 0)
excute 13:50:49.124773 line       556                     i = i_j[0]
excute 13:50:49.128762 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:49.131788 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.135777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 4, 0)
excute 13:50:49.139769 line       556                     i = i_j[0]
excute 13:50:49.143725 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:49.146746 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.150735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 4, 0)
excute 13:50:49.154725 line       556                     i = i_j[0]
excute 13:50:49.159682 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:49.163671 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.167661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 4, 0)
excute 13:50:49.170682 line       556                     i = i_j[0]
excute 13:50:49.174671 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:49.178660 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.182631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 4, 1)
excute 13:50:49.185642 line       556                     i = i_j[0]
excute 13:50:49.190598 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:49.193621 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.197611 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 4, 1)
excute 13:50:49.201599 line       556                     i = i_j[0]
excute 13:50:49.205590 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:49.208584 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.212570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:50:49.216529 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:49.221547 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:49.225513 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.229496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:50:49.232487 line       556                     i = i_j[0]
excute 13:50:49.236476 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:49.240498 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.244488 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:50:49.248476 line       556                     i = i_j[0]
excute 13:50:49.252434 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:49.256420 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.260412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:50:49.264401 line       556                     i = i_j[0]
excute 13:50:49.268391 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:49.272380 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.276369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:50:49.280359 line       556                     i = i_j[0]
excute 13:50:49.284348 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:49.288337 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.293356 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 0)
excute 13:50:49.297334 line       556                     i = i_j[0]
excute 13:50:49.301302 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:49.304293 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.308284 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:50:49.312273 line       556                     i = i_j[0]
excute 13:50:49.316263 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:49.322245 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.328230 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 1)
excute 13:50:49.337207 line       556                     i = i_j[0]
excute 13:50:49.343191 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:49.347180 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.352167 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 1)
excute 13:50:49.356156 line       556                     i = i_j[0]
excute 13:50:49.360144 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:49.364134 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:49.368124 line       555                 for i_j in i_j_list:
excute 13:50:49.372113 line       581             self.write_matrix(
excute 13:50:49.376115 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:49.379095 line       583                 result_file_path,
excute 13:50:49.383083 line       584                 mode='a'
excute 13:50:49.390064 line       488         for t in time_steps:
excute Modified var:.. t = 163
excute 13:50:49.395085 line       489             if (t != self.TIME + 1):
excute 13:50:49.401037 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:49.405026 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:49.409014 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:49.413005 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:49.419987 line       494                         if (i == j):
excute 13:50:49.425970 line       495                             continue
excute 13:50:49.429958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:49.433949 line       494                         if (i == j):
excute 13:50:49.437937 line       496                         i_j_list.append((
excute 13:50:49.442958 line       497                             i, j,
excute 13:50:49.446914 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.457884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:50:49.465863 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:49.470850 line       494                         if (i == j):
excute 13:50:49.477832 line       496                         i_j_list.append((
excute 13:50:49.480821 line       497                             i, j,
excute 13:50:49.484828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.487804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:50:49.491794 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:49.496788 line       494                         if (i == j):
excute 13:50:49.503761 line       496                         i_j_list.append((
excute 13:50:49.507750 line       497                             i, j,
excute 13:50:49.513734 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.518722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1)]
excute 13:50:49.522709 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:49.528693 line       494                         if (i == j):
excute 13:50:49.532683 line       496                         i_j_list.append((
excute 13:50:49.535674 line       497                             i, j,
excute 13:50:49.539667 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.543654 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0)]
excute 13:50:49.546680 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:49.550637 line       494                         if (i == j):
excute 13:50:49.554626 line       496                         i_j_list.append((
excute 13:50:49.558615 line       497                             i, j,
excute 13:50:49.562605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.566592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1)]
excute 13:50:49.569591 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:49.574573 line       494                         if (i == j):
excute 13:50:49.577564 line       496                         i_j_list.append((
excute 13:50:49.581553 line       497                             i, j,
excute 13:50:49.585543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.588535 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0)]
excute 13:50:49.592525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:49.596513 line       494                         if (i == j):
excute 13:50:49.600503 line       496                         i_j_list.append((
excute 13:50:49.604491 line       497                             i, j,
excute 13:50:49.607482 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.611472 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:50:49.615463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:49.620451 line       494                         if (i == j):
excute 13:50:49.624438 line       496                         i_j_list.append((
excute 13:50:49.629424 line       497                             i, j,
excute 13:50:49.633414 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.637405 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:50:49.641411 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:49.645386 line       494                         if (i == j):
excute 13:50:49.649372 line       496                         i_j_list.append((
excute 13:50:49.653362 line       497                             i, j,
excute 13:50:49.656353 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.660343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:50:49.664333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:49.669319 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:49.674305 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:49.678307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:49.682283 line       494                         if (i == j):
excute 13:50:49.685275 line       496                         i_j_list.append((
excute 13:50:49.689265 line       497                             i, j,
excute 13:50:49.692256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.696247 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0)]
excute 13:50:49.700235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:49.703228 line       494                         if (i == j):
excute 13:50:49.707217 line       495                             continue
excute 13:50:49.711207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:49.714201 line       494                         if (i == j):
excute 13:50:49.719186 line       496                         i_j_list.append((
excute 13:50:49.722178 line       497                             i, j,
excute 13:50:49.726167 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.731153 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:50:49.735143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:49.739131 line       494                         if (i == j):
excute 13:50:49.743122 line       496                         i_j_list.append((
excute 13:50:49.747111 line       497                             i, j,
excute 13:50:49.751099 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.755089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1)]
excute 13:50:49.759079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:49.763066 line       494                         if (i == j):
excute 13:50:49.767056 line       496                         i_j_list.append((
excute 13:50:49.772044 line       497                             i, j,
excute 13:50:49.777030 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.780021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0)]
excute 13:50:49.784012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:49.788003 line       494                         if (i == j):
excute 13:50:49.791990 line       496                         i_j_list.append((
excute 13:50:49.794982 line       497                             i, j,
excute 13:50:49.798972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.801963 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1)]
excute 13:50:49.805953 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:49.809944 line       494                         if (i == j):
excute 13:50:49.813931 line       496                         i_j_list.append((
excute 13:50:49.816923 line       497                             i, j,
excute 13:50:49.819915 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.823906 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0)]
excute 13:50:49.826897 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:49.830887 line       494                         if (i == j):
excute 13:50:49.835873 line       496                         i_j_list.append((
excute 13:50:49.839863 line       497                             i, j,
excute 13:50:49.843864 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.846845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0)]
excute 13:50:49.850833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:49.854822 line       494                         if (i == j):
excute 13:50:49.858812 line       496                         i_j_list.append((
excute 13:50:49.861803 line       497                             i, j,
excute 13:50:49.865794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.869781 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:50:49.873773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:49.877763 line       494                         if (i == j):
excute 13:50:49.881750 line       496                         i_j_list.append((
excute 13:50:49.885771 line       497                             i, j,
excute 13:50:49.888762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.891755 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:50:49.895743 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:49.899703 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:49.902727 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:49.906689 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:49.910673 line       494                         if (i == j):
excute 13:50:49.913700 line       496                         i_j_list.append((
excute 13:50:49.917686 line       497                             i, j,
excute 13:50:49.920645 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.924637 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0)]
excute 13:50:49.927628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:49.931617 line       494                         if (i == j):
excute 13:50:49.936604 line       496                         i_j_list.append((
excute 13:50:49.940594 line       497                             i, j,
excute 13:50:49.943585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.948573 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0)]
excute 13:50:49.951564 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:49.956552 line       494                         if (i == j):
excute 13:50:49.960571 line       495                             continue
excute 13:50:49.964527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:49.968517 line       494                         if (i == j):
excute 13:50:49.972509 line       496                         i_j_list.append((
excute 13:50:49.976497 line       497                             i, j,
excute 13:50:49.980487 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:49.984476 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1)]
excute 13:50:49.987469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:49.992454 line       494                         if (i == j):
excute 13:50:49.996445 line       496                         i_j_list.append((
excute 13:50:49.999437 line       497                             i, j,
excute 13:50:50.003425 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.007413 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0)]
excute 13:50:50.011405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:50.015395 line       494                         if (i == j):
excute 13:50:50.019387 line       496                         i_j_list.append((
excute 13:50:50.023373 line       497                             i, j,
excute 13:50:50.026363 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.030354 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1)]
excute 13:50:50.033345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:50.039329 line       494                         if (i == j):
excute 13:50:50.044316 line       496                         i_j_list.append((
excute 13:50:50.047307 line       497                             i, j,
excute 13:50:50.051298 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.054288 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0)]
excute 13:50:50.058279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:50.062268 line       494                         if (i == j):
excute 13:50:50.066258 line       496                         i_j_list.append((
excute 13:50:50.069279 line       497                             i, j,
excute 13:50:50.073272 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.076262 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0)]
excute 13:50:50.080251 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:50.084210 line       494                         if (i == j):
excute 13:50:50.088199 line       496                         i_j_list.append((
excute 13:50:50.091221 line       497                             i, j,
excute 13:50:50.095210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.098202 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0)]
excute 13:50:50.102195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:50.106151 line       494                         if (i == j):
excute 13:50:50.112136 line       496                         i_j_list.append((
excute 13:50:50.116124 line       497                             i, j,
excute 13:50:50.119116 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.123119 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0)]
excute 13:50:50.127095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:50.131085 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:50.135073 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:50.139064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:50.144048 line       494                         if (i == j):
excute 13:50:50.148040 line       496                         i_j_list.append((
excute 13:50:50.152028 line       497                             i, j,
excute 13:50:50.156018 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.160007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0)]
excute 13:50:50.162999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:50.167995 line       494                         if (i == j):
excute 13:50:50.171976 line       496                         i_j_list.append((
excute 13:50:50.174967 line       497                             i, j,
excute 13:50:50.178956 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.182945 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0)]
excute 13:50:50.185969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:50.189925 line       494                         if (i == j):
excute 13:50:50.193918 line       496                         i_j_list.append((
excute 13:50:50.197904 line       497                             i, j,
excute 13:50:50.200897 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.203889 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0)]
excute 13:50:50.207879 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:50.211869 line       494                         if (i == j):
excute 13:50:50.214859 line       495                             continue
excute 13:50:50.218849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:50.222838 line       494                         if (i == j):
excute 13:50:50.225830 line       496                         i_j_list.append((
excute 13:50:50.229821 line       497                             i, j,
excute 13:50:50.232811 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.236802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0)]
excute 13:50:50.239793 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:50.244780 line       494                         if (i == j):
excute 13:50:50.248770 line       496                         i_j_list.append((
excute 13:50:50.252759 line       497                             i, j,
excute 13:50:50.257745 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.260738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1)]
excute 13:50:50.264727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:50.268717 line       494                         if (i == j):
excute 13:50:50.272705 line       496                         i_j_list.append((
excute 13:50:50.275697 line       497                             i, j,
excute 13:50:50.278689 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.282679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0)]
excute 13:50:50.285670 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:50.290659 line       494                         if (i == j):
excute 13:50:50.294647 line       496                         i_j_list.append((
excute 13:50:50.298637 line       497                             i, j,
excute 13:50:50.302625 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.305618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0)]
excute 13:50:50.309606 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:50.313595 line       494                         if (i == j):
excute 13:50:50.317586 line       496                         i_j_list.append((
excute 13:50:50.321575 line       497                             i, j,
excute 13:50:50.324567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.331549 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0)]
excute 13:50:50.338529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:50.343515 line       494                         if (i == j):
excute 13:50:50.349500 line       496                         i_j_list.append((
excute 13:50:50.353490 line       497                             i, j,
excute 13:50:50.357477 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.362464 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0)]
excute 13:50:50.365456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:50.370445 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:50.374434 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:50.378427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:50.382412 line       494                         if (i == j):
excute 13:50:50.386402 line       496                         i_j_list.append((
excute 13:50:50.390389 line       497                             i, j,
excute 13:50:50.394378 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.397372 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0)]
excute 13:50:50.401361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:50.405351 line       494                         if (i == j):
excute 13:50:50.409341 line       496                         i_j_list.append((
excute 13:50:50.413330 line       497                             i, j,
excute 13:50:50.417319 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.421309 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:50:50.424300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:50.428290 line       494                         if (i == j):
excute 13:50:50.432280 line       496                         i_j_list.append((
excute 13:50:50.436268 line       497                             i, j,
excute 13:50:50.440258 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.443250 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:50:50.448238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:50.453224 line       494                         if (i == j):
excute 13:50:50.458209 line       496                         i_j_list.append((
excute 13:50:50.461201 line       497                             i, j,
excute 13:50:50.468183 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.471175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1)]
excute 13:50:50.476161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:50.480152 line       494                         if (i == j):
excute 13:50:50.484141 line       495                             continue
excute 13:50:50.487131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:50.491123 line       494                         if (i == j):
excute 13:50:50.495110 line       496                         i_j_list.append((
excute 13:50:50.498103 line       497                             i, j,
excute 13:50:50.502095 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.505084 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1)]
excute 13:50:50.509074 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:50.514062 line       494                         if (i == j):
excute 13:50:50.518052 line       496                         i_j_list.append((
excute 13:50:50.522039 line       497                             i, j,
excute 13:50:50.526029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.529019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0)]
excute 13:50:50.533010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:50.537000 line       494                         if (i == j):
excute 13:50:50.540989 line       496                         i_j_list.append((
excute 13:50:50.543979 line       497                             i, j,
excute 13:50:50.547969 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.550961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:50:50.555950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:50.559938 line       494                         if (i == j):
excute 13:50:50.564924 line       496                         i_j_list.append((
excute 13:50:50.567915 line       497                             i, j,
excute 13:50:50.571905 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.575894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:50:50.578917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:50.582877 line       494                         if (i == j):
excute 13:50:50.586867 line       496                         i_j_list.append((
excute 13:50:50.589888 line       497                             i, j,
excute 13:50:50.593877 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.596872 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:50:50.600860 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:50.606843 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:50.611797 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:50.614821 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:50.618811 line       494                         if (i == j):
excute 13:50:50.622770 line       496                         i_j_list.append((
excute 13:50:50.625792 line       497                             i, j,
excute 13:50:50.629750 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.632743 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0)]
excute 13:50:50.636731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:50.640722 line       494                         if (i == j):
excute 13:50:50.645709 line       496                         i_j_list.append((
excute 13:50:50.648699 line       497                             i, j,
excute 13:50:50.652690 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.657690 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0)]
excute 13:50:50.660669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:50.665656 line       494                         if (i == j):
excute 13:50:50.669644 line       496                         i_j_list.append((
excute 13:50:50.672666 line       497                             i, j,
excute 13:50:50.676659 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.679651 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0)]
excute 13:50:50.683637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:50.687630 line       494                         if (i == j):
excute 13:50:50.691616 line       496                         i_j_list.append((
excute 13:50:50.695573 line       497                             i, j,
excute 13:50:50.700575 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.704550 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1)]
excute 13:50:50.708541 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:50.712531 line       494                         if (i == j):
excute 13:50:50.720508 line       496                         i_j_list.append((
excute 13:50:50.723501 line       497                             i, j,
excute 13:50:50.727490 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.731479 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0)]
excute 13:50:50.735469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:50.739458 line       494                         if (i == j):
excute 13:50:50.743447 line       495                             continue
excute 13:50:50.747437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:50.751426 line       494                         if (i == j):
excute 13:50:50.755416 line       496                         i_j_list.append((
excute 13:50:50.760400 line       497                             i, j,
excute 13:50:50.764391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.768379 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0)]
excute 13:50:50.771373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:50.775362 line       494                         if (i == j):
excute 13:50:50.779351 line       496                         i_j_list.append((
excute 13:50:50.783340 line       497                             i, j,
excute 13:50:50.787330 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.791318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0)]
excute 13:50:50.794312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:50.799297 line       494                         if (i == j):
excute 13:50:50.802288 line       496                         i_j_list.append((
excute 13:50:50.806277 line       497                             i, j,
excute 13:50:50.809271 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.813260 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0)]
excute 13:50:50.817250 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:50.821239 line       494                         if (i == j):
excute 13:50:50.825229 line       496                         i_j_list.append((
excute 13:50:50.829218 line       497                             i, j,
excute 13:50:50.833207 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.837197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0)]
excute 13:50:50.840189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:50.844179 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:50.848167 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:50.852157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:50.856146 line       494                         if (i == j):
excute 13:50:50.861132 line       496                         i_j_list.append((
excute 13:50:50.865120 line       497                             i, j,
excute 13:50:50.869110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.872103 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0)]
excute 13:50:50.885390 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:50.889407 line       494                         if (i == j):
excute 13:50:50.893377 line       496                         i_j_list.append((
excute 13:50:50.896392 line       497                             i, j,
excute 13:50:50.900349 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.903374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:50:50.906364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:50.911321 line       494                         if (i == j):
excute 13:50:50.915309 line       496                         i_j_list.append((
excute 13:50:50.918303 line       497                             i, j,
excute 13:50:50.922292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.927277 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:50:50.930271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:50.935256 line       494                         if (i == j):
excute 13:50:50.939247 line       496                         i_j_list.append((
excute 13:50:50.943236 line       497                             i, j,
excute 13:50:50.948223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.952232 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1)]
excute 13:50:50.955235 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:50.960189 line       494                         if (i == j):
excute 13:50:50.964180 line       496                         i_j_list.append((
excute 13:50:50.968201 line       497                             i, j,
excute 13:50:50.971192 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.975182 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0)]
excute 13:50:50.980167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:50.984158 line       494                         if (i == j):
excute 13:50:50.988145 line       496                         i_j_list.append((
excute 13:50:50.992137 line       497                             i, j,
excute 13:50:50.995128 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:50.999116 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1)]
excute 13:50:51.002108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:51.006098 line       494                         if (i == j):
excute 13:50:51.011054 line       495                             continue
excute 13:50:51.015044 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:51.019034 line       494                         if (i == j):
excute 13:50:51.023023 line       496                         i_j_list.append((
excute 13:50:51.027013 line       497                             i, j,
excute 13:50:51.031000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.033993 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0)]
excute 13:50:51.037983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:51.042970 line       494                         if (i == j):
excute 13:50:51.046959 line       496                         i_j_list.append((
excute 13:50:51.050948 line       497                             i, j,
excute 13:50:51.054937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.058927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0)]
excute 13:50:51.062916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:51.067901 line       494                         if (i == j):
excute 13:50:51.071891 line       496                         i_j_list.append((
excute 13:50:51.074882 line       497                             i, j,
excute 13:50:51.078871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.081864 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:50:51.085853 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:51.089843 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:51.092834 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:51.096824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:51.100813 line       494                         if (i == j):
excute 13:50:51.104803 line       496                         i_j_list.append((
excute 13:50:51.111784 line       497                             i, j,
excute 13:50:51.114778 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.118766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0)]
excute 13:50:51.122756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:51.126745 line       494                         if (i == j):
excute 13:50:51.130735 line       496                         i_j_list.append((
excute 13:50:51.134724 line       497                             i, j,
excute 13:50:51.139709 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.142703 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:50:51.146693 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:51.150682 line       494                         if (i == j):
excute 13:50:51.155670 line       496                         i_j_list.append((
excute 13:50:51.159658 line       497                             i, j,
excute 13:50:51.162649 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.167635 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:50:51.171624 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:51.175613 line       494                         if (i == j):
excute 13:50:51.179602 line       496                         i_j_list.append((
excute 13:50:51.182594 line       497                             i, j,
excute 13:50:51.186583 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.189576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1)]
excute 13:50:51.193565 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:51.196556 line       494                         if (i == j):
excute 13:50:51.200546 line       496                         i_j_list.append((
excute 13:50:51.204535 line       497                             i, j,
excute 13:50:51.207528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.210520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0)]
excute 13:50:51.214509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:51.218498 line       494                         if (i == j):
excute 13:50:51.222489 line       496                         i_j_list.append((
excute 13:50:51.225480 line       497                             i, j,
excute 13:50:51.229469 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.232460 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1)]
excute 13:50:51.235453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:51.239442 line       494                         if (i == j):
excute 13:50:51.243431 line       496                         i_j_list.append((
excute 13:50:51.247421 line       497                             i, j,
excute 13:50:51.250413 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.254402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0)]
excute 13:50:51.258393 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:51.261383 line       494                         if (i == j):
excute 13:50:51.266372 line       495                             continue
excute 13:50:51.271359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:51.275348 line       494                         if (i == j):
excute 13:50:51.280335 line       496                         i_j_list.append((
excute 13:50:51.283326 line       497                             i, j,
excute 13:50:51.287353 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.291304 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:50:51.294296 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:51.298285 line       494                         if (i == j):
excute 13:50:51.302274 line       496                         i_j_list.append((
excute 13:50:51.305267 line       497                             i, j,
excute 13:50:51.309255 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.312248 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:50:51.316237 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:51.320227 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:51.323219 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:51.332197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:51.337183 line       494                         if (i == j):
excute 13:50:51.341172 line       496                         i_j_list.append((
excute 13:50:51.346158 line       497                             i, j,
excute 13:50:51.349149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.353139 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:50:51.357129 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:51.364110 line       494                         if (i == j):
excute 13:50:51.370094 line       496                         i_j_list.append((
excute 13:50:51.379072 line       497                             i, j,
excute 13:50:51.386051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.391038 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:50:51.395030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:51.403006 line       494                         if (i == j):
excute 13:50:51.408989 line       496                         i_j_list.append((
excute 13:50:51.412979 line       497                             i, j,
excute 13:50:51.415974 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.420959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:51.424947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:51.429935 line       494                         if (i == j):
excute 13:50:51.433924 line       496                         i_j_list.append((
excute 13:50:51.442898 line       497                             i, j,
excute 13:50:51.446890 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.451878 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1)]
excute 13:50:51.455866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:51.460853 line       494                         if (i == j):
excute 13:50:51.464842 line       496                         i_j_list.append((
excute 13:50:51.468831 line       497                             i, j,
excute 13:50:51.472819 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.479802 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0)]
excute 13:50:51.487780 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:51.495758 line       494                         if (i == j):
excute 13:50:51.504735 line       496                         i_j_list.append((
excute 13:50:51.513710 line       497                             i, j,
excute 13:50:51.520691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.526675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1)]
excute 13:50:51.534654 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:51.541635 line       494                         if (i == j):
excute 13:50:51.547619 line       496                         i_j_list.append((
excute 13:50:51.554600 line       497                             i, j,
excute 13:50:51.562579 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.570558 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0)]
excute 13:50:51.578536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:51.585518 line       494                         if (i == j):
excute 13:50:51.591503 line       496                         i_j_list.append((
excute 13:50:51.597486 line       497                             i, j,
excute 13:50:51.603470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.611448 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:50:51.620426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:51.627406 line       494                         if (i == j):
excute 13:50:51.634387 line       495                             continue
excute 13:50:51.642366 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:51.647352 line       494                         if (i == j):
excute 13:50:51.655333 line       496                         i_j_list.append((
excute 13:50:51.663321 line       497                             i, j,
excute 13:50:51.670291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.678271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:50:51.687246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:51.694228 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:51.700210 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:51.709187 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:51.716169 line       494                         if (i == j):
excute 13:50:51.723150 line       496                         i_j_list.append((
excute 13:50:51.729135 line       497                             i, j,
excute 13:50:51.737112 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.742098 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0)]
excute 13:50:51.749081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:51.757059 line       494                         if (i == j):
excute 13:50:51.763044 line       496                         i_j_list.append((
excute 13:50:51.769027 line       497                             i, j,
excute 13:50:51.775013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.780997 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0)]
excute 13:50:51.787977 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:51.796953 line       494                         if (i == j):
excute 13:50:51.804932 line       496                         i_j_list.append((
excute 13:50:51.809918 line       497                             i, j,
excute 13:50:51.812909 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.816898 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0)]
excute 13:50:51.820888 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:51.824877 line       494                         if (i == j):
excute 13:50:51.828866 line       496                         i_j_list.append((
excute 13:50:51.832856 line       497                             i, j,
excute 13:50:51.835848 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.838840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1)]
excute 13:50:51.842829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:51.846820 line       494                         if (i == j):
excute 13:50:51.850808 line       496                         i_j_list.append((
excute 13:50:51.854798 line       497                             i, j,
excute 13:50:51.857794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.861779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 0)]
excute 13:50:51.864770 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:51.868761 line       494                         if (i == j):
excute 13:50:51.872750 line       496                         i_j_list.append((
excute 13:50:51.876739 line       497                             i, j,
excute 13:50:51.879731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.884719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 0), (9, 5, 2, 1)]
excute 13:50:51.887710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:51.893694 line       494                         if (i == j):
excute 13:50:51.897683 line       496                         i_j_list.append((
excute 13:50:51.900674 line       497                             i, j,
excute 13:50:51.903666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.907689 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 0)]
excute 13:50:51.910679 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:51.915636 line       494                         if (i == j):
excute 13:50:51.919627 line       496                         i_j_list.append((
excute 13:50:51.923615 line       497                             i, j,
excute 13:50:51.926608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.930597 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 0), (9, 7, 2, 0)]
excute 13:50:51.934586 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:51.938575 line       494                         if (i == j):
excute 13:50:51.942565 line       496                         i_j_list.append((
excute 13:50:51.947551 line       497                             i, j,
excute 13:50:51.951540 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:51.954563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 1), (0, 4, 0, 0), (0, 5, 0, 1), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 1), (1, 4, 2, 0), (1, 5, 2, 1), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, -1, 0), (2, 1, -1, 0), (2, 3, -1, 1), (2, 4, -1, 0), (2, 5, -1, 1), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 1), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 1), (4, 5, 2, 1), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 3, 2, 1), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 1), (6, 4, 5, 0), (6, 5, 5, 1), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 1), (7, 4, 0, 0), (7, 5, 0, 1), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 1), (8, 4, -1, 0), (8, 5, -1, 1), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 3, 2, 1), (9, 4, 2, 0), (9, 5, 2, 1), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0)]
excute 13:50:51.958552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:51.965502 line       494                         if (i == j):
excute 13:50:51.970488 line       495                             continue
excute 13:50:51.974480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:51.978467 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:51.982488 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(2, 0, -1, 0), (2, 1, -1, 0), (2, 4, -1, 0), (2, 6, -1, 0), (2, 7, -1, 0), (2, 8, -1, 0), (2, 9, -1, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 4, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (2, 3, -1, 1), (2, 5, -1, 1), (8, 3, -1, 1), (8, 5, -1, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 4, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 4, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (0, 3, 0, 1), (0, 5, 0, 1), (7, 3, 0, 1), (7, 5, 0, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 4, 2, 0), (1, 6, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 2, 0), (5, 1, 2, 0), (5, 2, 2, 0), (5, 4, 2, 0), (5, 6, 2, 0), (5, 7, 2, 0), (5, 8, 2, 0), (5, 9, 2, 0), (9, 0, 2, 0), (9, 1, 2, 0), (9, 2, 2, 0), (9, 4, 2, 0), (9, 6, 2, 0), (9, 7, 2, 0), (9, 8, 2, 0), (1, 3, 2, 1), (1, 5, 2, 1), (4, 3, 2, 1), (4, 5, 2, 1), (5, 3, 2, 1), (9, 3, 2, 1), (9, 5, 2, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (3, 5, 4, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 4, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (6, 3, 5, 1), (6, 5, 5, 1)]
excute 13:50:51.985480 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:51.990435 line       505                     if (self.RELOCATE):
excute 13:50:51.995457 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:51.999411 line       505                     if (self.RELOCATE):
excute 13:50:52.003400 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:52.006392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, -1, 0)
excute 13:50:52.010381 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:52.015371 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:52.018362 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.022351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, -1, 0)
excute 13:50:52.026340 line       556                     i = i_j[0]
excute 13:50:52.033321 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:52.037309 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.041300 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, -1, 0)
excute 13:50:52.044291 line       556                     i = i_j[0]
excute 13:50:52.048280 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:52.052270 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.056259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, -1, 0)
excute 13:50:52.059251 line       556                     i = i_j[0]
excute 13:50:52.063240 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:52.067230 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.071219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, -1, 0)
excute 13:50:52.074211 line       556                     i = i_j[0]
excute 13:50:52.078201 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:52.081192 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.085195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, -1, 0)
excute 13:50:52.089171 line       556                     i = i_j[0]
excute 13:50:52.093163 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:52.097150 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.101141 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, -1, 0)
excute 13:50:52.105129 line       556                     i = i_j[0]
excute 13:50:52.109121 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:52.113108 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.117098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:50:52.121087 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:52.125075 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:52.129064 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.133066 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:50:52.137060 line       556                     i = i_j[0]
excute 13:50:52.141034 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:52.144057 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.148029 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:50:52.151039 line       556                     i = i_j[0]
excute 13:50:52.155992 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:52.159015 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.163006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:50:52.166994 line       556                     i = i_j[0]
excute 13:50:52.170952 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:52.173975 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.177935 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:50:52.181924 line       556                     i = i_j[0]
excute 13:50:52.185914 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:52.189903 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.193893 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:50:52.198879 line       556                     i = i_j[0]
excute 13:50:52.205890 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:52.209880 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.213871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:50:52.216862 line       556                     i = i_j[0]
excute 13:50:52.221818 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:52.224841 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.229797 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, -1, 1)
excute 13:50:52.232819 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:52.236776 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:52.241765 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.245787 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 170
excute 13:50:52.248776 line       560                         if (t_tmp > self.TIME):
excute 13:50:52.252767 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:52.256757 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:52.260745 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:52.264704 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:52.267695 line       569                                     available_vhecles[i][t],
excute 13:50:52.271685 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:52.275674 line       571                                     self.S_capacities[j],
excute 13:50:52.282654 line       572                                     demands[t][i][j],
excute 13:50:52.290633 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 3
calc_contract     Starting var:.. available_vhecles_target = -2
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 163
calc_contract     13:50:52.295620 call       352     def caluculate_contract(
calc_contract     13:50:52.298612 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:52.298612 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:52.299608 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:52.300606 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:52.300606 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:50:52.301603 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:52.302601 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:50:52.304597 line       575                                 rsf += rsf_tmp
excute 13:50:52.308585 line       576                                 rse += rse_tmp
excute 13:50:52.311609 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 2
move_cars     Starting var:.. j = 3
move_cars     Starting var:.. t = 163
move_cars     Starting var:.. t_tmp = 170
move_cars     Starting var:.. can_contract = 1
move_cars     13:50:52.315567 call       388     def move_cars(
move_cars     13:50:52.319556 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:50:52.320587 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:50:52.321583 line       399         return available_vhecles
move_cars     13:50:52.323577 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 3, 3, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:50:52.325572 line       579                                 success += can_contract
excute Modified var:.. success = 79
excute 13:50:52.335514 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, -1, 1)
excute 13:50:52.341500 line       556                     i = i_j[0]
excute 13:50:52.346515 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:52.350504 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.354463 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 1)
excute 13:50:52.358451 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:52.362508 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:52.366463 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.371450 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 1)
excute 13:50:52.374440 line       556                     i = i_j[0]
excute 13:50:52.379396 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:52.382419 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.387374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:50:52.390365 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:52.394354 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:52.398344 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.402333 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:50:52.406324 line       556                     i = i_j[0]
excute 13:50:52.410345 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:52.414333 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.418291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:50:52.422293 line       556                     i = i_j[0]
excute 13:50:52.426271 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:52.429293 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.433251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:50:52.436276 line       556                     i = i_j[0]
excute 13:50:52.440264 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:52.444255 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.448213 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:50:52.452233 line       556                     i = i_j[0]
excute 13:50:52.457221 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:52.460213 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.464201 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:50:52.468191 line       556                     i = i_j[0]
excute 13:50:52.472149 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:52.476136 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.480132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:50:52.483118 line       556                     i = i_j[0]
excute 13:50:52.487106 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:52.491096 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.495086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:50:52.498078 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:52.502068 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:52.506056 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.511045 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:50:52.515064 line       556                     i = i_j[0]
excute 13:50:52.519023 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:52.522045 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.526034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:50:52.530024 line       556                     i = i_j[0]
excute 13:50:52.533983 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:52.536974 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.541960 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:50:52.544952 line       556                     i = i_j[0]
excute 13:50:52.548943 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:52.551934 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.556920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:50:52.559912 line       556                     i = i_j[0]
excute 13:50:52.563902 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:52.566926 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.571882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:50:52.574905 line       556                     i = i_j[0]
excute 13:50:52.578871 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:52.582851 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.585876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:50:52.589864 line       556                     i = i_j[0]
excute 13:50:52.593836 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:52.596845 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.600835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 1)
excute 13:50:52.604793 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:52.609812 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:52.614767 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.617757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 1)
excute 13:50:52.621746 line       556                     i = i_j[0]
excute 13:50:52.625736 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:52.628760 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.632749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 1)
excute 13:50:52.636739 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:52.640728 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:52.644717 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.648707 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 1)
excute 13:50:52.652682 line       556                     i = i_j[0]
excute 13:50:52.656654 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:52.659678 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.663635 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:50:52.667625 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:52.671613 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:52.675603 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.679592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:50:52.683582 line       556                     i = i_j[0]
excute 13:50:52.687571 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:52.691561 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.695550 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:50:52.698542 line       556                     i = i_j[0]
excute 13:50:52.702531 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:52.706521 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.710510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:50:52.714500 line       556                     i = i_j[0]
excute 13:50:52.719486 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:52.722478 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.726467 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:50:52.730457 line       556                     i = i_j[0]
excute 13:50:52.734446 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:52.737438 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.741427 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:52.745417 line       556                     i = i_j[0]
excute 13:50:52.748408 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:52.752397 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.756388 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:50:52.762371 line       556                     i = i_j[0]
excute 13:50:52.767359 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:52.774339 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.778329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:50:52.782317 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:52.786309 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:52.790297 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.794287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:50:52.797278 line       556                     i = i_j[0]
excute 13:50:52.801268 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:52.805257 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.808249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:50:52.812238 line       556                     i = i_j[0]
excute 13:50:52.817227 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:52.820216 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.824205 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:50:52.828195 line       556                     i = i_j[0]
excute 13:50:52.832184 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:52.835176 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.840163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:50:52.843155 line       556                     i = i_j[0]
excute 13:50:52.847144 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:52.851134 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.855123 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:50:52.859113 line       556                     i = i_j[0]
excute 13:50:52.863103 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:52.866094 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.870083 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:50:52.874073 line       556                     i = i_j[0]
excute 13:50:52.878063 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:52.881054 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.885043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 2, 0)
excute 13:50:52.889034 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:52.893023 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:52.896014 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.900004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 2, 0)
excute 13:50:52.903993 line       556                     i = i_j[0]
excute 13:50:52.907982 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:52.910974 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.914965 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 2, 0)
excute 13:50:52.920952 line       556                     i = i_j[0]
excute 13:50:52.924940 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:52.928927 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.933913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 2, 0)
excute 13:50:52.937904 line       556                     i = i_j[0]
excute 13:50:52.941894 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:52.945882 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.950869 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 2, 0)
excute 13:50:52.954862 line       556                     i = i_j[0]
excute 13:50:52.958878 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:52.962836 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.966824 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 2, 0)
excute 13:50:52.970813 line       556                     i = i_j[0]
excute 13:50:52.974803 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:52.978793 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.982784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 2, 0)
excute 13:50:52.986773 line       556                     i = i_j[0]
excute 13:50:52.991759 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:52.994751 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:52.999740 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 2, 0)
excute 13:50:53.003739 line       556                     i = i_j[0]
excute 13:50:53.007718 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:53.011704 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.014696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 2, 0)
excute 13:50:53.018686 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:53.023674 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:53.027673 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.031653 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 2, 0)
excute 13:50:53.034681 line       556                     i = i_j[0]
excute 13:50:53.038665 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:53.042655 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.046612 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 2, 0)
excute 13:50:53.049603 line       556                     i = i_j[0]
excute 13:50:53.053593 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:53.057582 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.061571 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 2, 0)
excute 13:50:53.064563 line       556                     i = i_j[0]
excute 13:50:53.068553 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:53.071545 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.075533 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 2, 0)
excute 13:50:53.079523 line       556                     i = i_j[0]
excute 13:50:53.083512 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:53.086505 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.090493 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 2, 0)
excute 13:50:53.094484 line       556                     i = i_j[0]
excute 13:50:53.097475 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:53.101464 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.106451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 2, 0)
excute 13:50:53.112436 line       556                     i = i_j[0]
excute 13:50:53.116426 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:53.119417 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.124405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 1)
excute 13:50:53.129390 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:53.133382 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:53.137369 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.141358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 1)
excute 13:50:53.145348 line       556                     i = i_j[0]
excute 13:50:53.149338 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:53.152329 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.157350 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 1)
excute 13:50:53.160307 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:53.164296 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:53.169286 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.173275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 1)
excute 13:50:53.177263 line       556                     i = i_j[0]
excute 13:50:53.180256 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:53.184245 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.189233 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:50:53.192224 line       560                         if (t_tmp > self.TIME):
excute 13:50:53.196213 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:53.200202 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:53.203194 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 200
excute 13:50:53.207183 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:53.211173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 2, 1)
excute 13:50:53.215162 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:53.219153 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:53.223142 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.227141 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 2, 1)
excute 13:50:53.233115 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:53.237104 line       557                     j = i_j[1]
excute 13:50:53.241110 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.245114 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 2, 1)
excute 13:50:53.248105 line       556                     i = i_j[0]
excute 13:50:53.252095 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:53.256083 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.261045 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 4, 0)
excute 13:50:53.264061 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:53.268022 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:53.272011 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.275999 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 4, 0)
excute 13:50:53.279021 line       556                     i = i_j[0]
excute 13:50:53.283011 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:53.287000 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.290959 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 4, 0)
excute 13:50:53.294949 line       556                     i = i_j[0]
excute 13:50:53.299937 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:53.303925 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.307914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 4, 0)
excute 13:50:53.310906 line       556                     i = i_j[0]
excute 13:50:53.315892 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:53.318885 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.322875 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 4, 0)
excute 13:50:53.327861 line       556                     i = i_j[0]
excute 13:50:53.339829 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:53.344816 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.348805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 4, 0)
excute 13:50:53.352794 line       556                     i = i_j[0]
excute 13:50:53.357782 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:53.361802 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.365791 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 4, 0)
excute 13:50:53.369747 line       556                     i = i_j[0]
excute 13:50:53.373771 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:53.377759 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.381717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 4, 0)
excute 13:50:53.385706 line       556                     i = i_j[0]
excute 13:50:53.389728 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:53.392718 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.396708 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 4, 1)
excute 13:50:53.400665 line       556                     i = i_j[0]
excute 13:50:53.404654 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:53.407646 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.411635 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:50:53.414627 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:53.419615 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:53.422606 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.426595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:50:53.429588 line       556                     i = i_j[0]
excute 13:50:53.438564 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:53.446547 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.451530 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:50:53.456516 line       556                     i = i_j[0]
excute 13:50:53.463498 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:53.469481 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.473470 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:50:53.477492 line       556                     i = i_j[0]
excute 13:50:53.481451 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:53.485451 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.489428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 0)
excute 13:50:53.492420 line       556                     i = i_j[0]
excute 13:50:53.496440 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:53.500401 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.504389 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:50:53.508378 line       556                     i = i_j[0]
excute 13:50:53.513367 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:53.516357 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.520347 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:50:53.524336 line       556                     i = i_j[0]
excute 13:50:53.528326 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:53.532315 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.536305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 1)
excute 13:50:53.543286 line       556                     i = i_j[0]
excute 13:50:53.547273 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:53.550264 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.555285 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 1)
excute 13:50:53.558275 line       556                     i = i_j[0]
excute 13:50:53.562265 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:53.566254 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:53.570245 line       555                 for i_j in i_j_list:
excute 13:50:53.574202 line       581             self.write_matrix(
excute 13:50:53.577225 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:53.581184 line       583                 result_file_path,
excute 13:50:53.584206 line       584                 mode='a'
excute 13:50:53.646169 line       488         for t in time_steps:
excute Modified var:.. t = 164
excute 13:50:53.655144 line       489             if (t != self.TIME + 1):
excute 13:50:53.661139 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:53.666114 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:53.671100 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:53.675122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:53.680076 line       494                         if (i == j):
excute 13:50:53.684066 line       495                             continue
excute 13:50:53.687059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:53.691049 line       494                         if (i == j):
excute 13:50:53.695039 line       496                         i_j_list.append((
excute 13:50:53.701019 line       497                             i, j,
excute 13:50:53.705012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.710994 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:50:53.717986 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:53.723960 line       494                         if (i == j):
excute 13:50:53.730943 line       496                         i_j_list.append((
excute 13:50:53.734931 line       497                             i, j,
excute 13:50:53.737950 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.741942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:50:53.746898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:53.750921 line       494                         if (i == j):
excute 13:50:53.754904 line       496                         i_j_list.append((
excute 13:50:53.758886 line       497                             i, j,
excute 13:50:53.761892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.764880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:50:53.768870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:53.772829 line       494                         if (i == j):
excute 13:50:53.776823 line       496                         i_j_list.append((
excute 13:50:53.779841 line       497                             i, j,
excute 13:50:53.783814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.786822 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:50:53.790781 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:53.794772 line       494                         if (i == j):
excute 13:50:53.798760 line       496                         i_j_list.append((
excute 13:50:53.801752 line       497                             i, j,
excute 13:50:53.805741 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.809732 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:50:53.812723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:53.817710 line       494                         if (i == j):
excute 13:50:53.821699 line       496                         i_j_list.append((
excute 13:50:53.825688 line       497                             i, j,
excute 13:50:53.828680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.832669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1)]
excute 13:50:53.836659 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:53.840648 line       494                         if (i == j):
excute 13:50:53.845634 line       496                         i_j_list.append((
excute 13:50:53.849635 line       497                             i, j,
excute 13:50:53.853644 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.856636 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0)]
excute 13:50:53.860625 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:53.864615 line       494                         if (i == j):
excute 13:50:53.868584 line       496                         i_j_list.append((
excute 13:50:53.871567 line       497                             i, j,
excute 13:50:53.876553 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.880571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:50:53.884530 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:53.887553 line       494                         if (i == j):
excute 13:50:53.892509 line       496                         i_j_list.append((
excute 13:50:53.895531 line       497                             i, j,
excute 13:50:53.898523 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.902482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:50:53.905508 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:53.909464 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:53.912485 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:53.916475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:53.920465 line       494                         if (i == j):
excute 13:50:53.923456 line       496                         i_j_list.append((
excute 13:50:53.927445 line       497                             i, j,
excute 13:50:53.930437 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.934429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1)]
excute 13:50:53.937423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:53.941391 line       494                         if (i == j):
excute 13:50:53.945368 line       495                             continue
excute 13:50:53.949355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:53.954345 line       494                         if (i == j):
excute 13:50:53.958332 line       496                         i_j_list.append((
excute 13:50:53.962323 line       497                             i, j,
excute 13:50:53.966312 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.970301 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0)]
excute 13:50:53.973294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:53.978281 line       494                         if (i == j):
excute 13:50:53.982270 line       496                         i_j_list.append((
excute 13:50:53.986259 line       497                             i, j,
excute 13:50:53.990246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:53.993241 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:50:53.997229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:54.001219 line       494                         if (i == j):
excute 13:50:54.006206 line       496                         i_j_list.append((
excute 13:50:54.009198 line       497                             i, j,
excute 13:50:54.013184 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.016177 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:50:54.019169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:54.023158 line       494                         if (i == j):
excute 13:50:54.027147 line       496                         i_j_list.append((
excute 13:50:54.030140 line       497                             i, j,
excute 13:50:54.034129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.037121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:50:54.041113 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:54.046098 line       494                         if (i == j):
excute 13:50:54.050091 line       496                         i_j_list.append((
excute 13:50:54.057069 line       497                             i, j,
excute 13:50:54.061058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.065047 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1)]
excute 13:50:54.069069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:54.073032 line       494                         if (i == j):
excute 13:50:54.077016 line       496                         i_j_list.append((
excute 13:50:54.080037 line       497                             i, j,
excute 13:50:54.084009 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.087020 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0)]
excute 13:50:54.090011 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:54.094002 line       494                         if (i == j):
excute 13:50:54.097979 line       496                         i_j_list.append((
excute 13:50:54.100982 line       497                             i, j,
excute 13:50:54.104940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.108936 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0)]
excute 13:50:54.111921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:54.117907 line       494                         if (i == j):
excute 13:50:54.121894 line       496                         i_j_list.append((
excute 13:50:54.124918 line       497                             i, j,
excute 13:50:54.128912 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.131899 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:50:54.135888 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:54.139849 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:54.142870 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:54.146859 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:54.150845 line       494                         if (i == j):
excute 13:50:54.153841 line       496                         i_j_list.append((
excute 13:50:54.158829 line       497                             i, j,
excute 13:50:54.161819 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.165778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1)]
excute 13:50:54.168769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:54.172758 line       494                         if (i == j):
excute 13:50:54.176748 line       496                         i_j_list.append((
excute 13:50:54.180737 line       497                             i, j,
excute 13:50:54.183760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.187750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0)]
excute 13:50:54.190742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:54.194732 line       494                         if (i == j):
excute 13:50:54.198722 line       495                             continue
excute 13:50:54.202710 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:54.205705 line       494                         if (i == j):
excute 13:50:54.209692 line       496                         i_j_list.append((
excute 13:50:54.213683 line       497                             i, j,
excute 13:50:54.216676 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.220663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:50:54.223653 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:54.227645 line       494                         if (i == j):
excute 13:50:54.232601 line       496                         i_j_list.append((
excute 13:50:54.235593 line       497                             i, j,
excute 13:50:54.239582 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.243571 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:50:54.247561 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:54.251548 line       494                         if (i == j):
excute 13:50:54.255540 line       496                         i_j_list.append((
excute 13:50:54.260524 line       497                             i, j,
excute 13:50:54.264553 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.267536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:50:54.271526 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:54.275487 line       494                         if (i == j):
excute 13:50:54.279477 line       496                         i_j_list.append((
excute 13:50:54.282497 line       497                             i, j,
excute 13:50:54.286486 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.289478 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1)]
excute 13:50:54.294434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:54.297425 line       494                         if (i == j):
excute 13:50:54.301414 line       496                         i_j_list.append((
excute 13:50:54.305403 line       497                             i, j,
excute 13:50:54.308396 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.311388 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0)]
excute 13:50:54.315377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:54.319367 line       494                         if (i == j):
excute 13:50:54.323356 line       496                         i_j_list.append((
excute 13:50:54.329342 line       497                             i, j,
excute 13:50:54.335325 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.339345 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:50:54.343308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:54.348321 line       494                         if (i == j):
excute 13:50:54.352314 line       496                         i_j_list.append((
excute 13:50:54.356269 line       497                             i, j,
excute 13:50:54.360259 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.366246 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:50:54.370232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:54.375219 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:54.379209 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:54.383196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:54.387187 line       494                         if (i == j):
excute 13:50:54.391176 line       496                         i_j_list.append((
excute 13:50:54.395166 line       497                             i, j,
excute 13:50:54.399156 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.402147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1)]
excute 13:50:54.406136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:54.410126 line       494                         if (i == j):
excute 13:50:54.415120 line       496                         i_j_list.append((
excute 13:50:54.418134 line       497                             i, j,
excute 13:50:54.421128 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.425115 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0)]
excute 13:50:54.428107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:54.432101 line       494                         if (i == j):
excute 13:50:54.436086 line       496                         i_j_list.append((
excute 13:50:54.440079 line       497                             i, j,
excute 13:50:54.443069 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.447025 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0)]
excute 13:50:54.451014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:54.455004 line       494                         if (i == j):
excute 13:50:54.458994 line       495                             continue
excute 13:50:54.462018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:54.466973 line       494                         if (i == j):
excute 13:50:54.470964 line       496                         i_j_list.append((
excute 13:50:54.473955 line       497                             i, j,
excute 13:50:54.478942 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.481934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0)]
excute 13:50:54.485923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:54.489913 line       494                         if (i == j):
excute 13:50:54.494897 line       496                         i_j_list.append((
excute 13:50:54.497891 line       497                             i, j,
excute 13:50:54.501880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.505870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0)]
excute 13:50:54.509859 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:54.513851 line       494                         if (i == j):
excute 13:50:54.517836 line       496                         i_j_list.append((
excute 13:50:54.520828 line       497                             i, j,
excute 13:50:54.524817 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.527844 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1)]
excute 13:50:54.531831 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:54.535824 line       494                         if (i == j):
excute 13:50:54.539777 line       496                         i_j_list.append((
excute 13:50:54.542802 line       497                             i, j,
excute 13:50:54.545793 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.549785 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0)]
excute 13:50:54.552774 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:54.557763 line       494                         if (i == j):
excute 13:50:54.561719 line       496                         i_j_list.append((
excute 13:50:54.564744 line       497                             i, j,
excute 13:50:54.568701 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.572689 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0)]
excute 13:50:54.577677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:54.581667 line       494                         if (i == j):
excute 13:50:54.585687 line       496                         i_j_list.append((
excute 13:50:54.588682 line       497                             i, j,
excute 13:50:54.592647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.595660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0)]
excute 13:50:54.599619 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:54.603608 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:54.609622 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:54.614578 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:54.617569 line       494                         if (i == j):
excute 13:50:54.621558 line       496                         i_j_list.append((
excute 13:50:54.624551 line       497                             i, j,
excute 13:50:54.628551 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.631568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1)]
excute 13:50:54.635554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:54.639512 line       494                         if (i == j):
excute 13:50:54.643501 line       496                         i_j_list.append((
excute 13:50:54.646524 line       497                             i, j,
excute 13:50:54.650513 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.653506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0)]
excute 13:50:54.657495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:54.661453 line       494                         if (i == j):
excute 13:50:54.665442 line       496                         i_j_list.append((
excute 13:50:54.669432 line       497                             i, j,
excute 13:50:54.673420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.677409 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:50:54.680401 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:54.684390 line       494                         if (i == j):
excute 13:50:54.688379 line       496                         i_j_list.append((
excute 13:50:54.692369 line       497                             i, j,
excute 13:50:54.695361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.699351 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:50:54.703340 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:54.707333 line       494                         if (i == j):
excute 13:50:54.710321 line       495                             continue
excute 13:50:54.714310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:54.717302 line       494                         if (i == j):
excute 13:50:54.722291 line       496                         i_j_list.append((
excute 13:50:54.726279 line       497                             i, j,
excute 13:50:54.729270 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.733260 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:50:54.736252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:54.740243 line       494                         if (i == j):
excute 13:50:54.744230 line       496                         i_j_list.append((
excute 13:50:54.747222 line       497                             i, j,
excute 13:50:54.750215 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.754203 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1)]
excute 13:50:54.758204 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:54.762185 line       494                         if (i == j):
excute 13:50:54.766175 line       496                         i_j_list.append((
excute 13:50:54.770163 line       497                             i, j,
excute 13:50:54.774151 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.778141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0)]
excute 13:50:54.781163 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:54.785131 line       494                         if (i == j):
excute 13:50:54.789111 line       496                         i_j_list.append((
excute 13:50:54.793101 line       497                             i, j,
excute 13:50:54.796127 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.799119 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:50:54.803105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:54.807064 line       494                         if (i == j):
excute 13:50:54.811085 line       496                         i_j_list.append((
excute 13:50:54.814076 line       497                             i, j,
excute 13:50:54.818034 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.821057 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:50:54.825048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:54.829005 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:54.831998 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:54.835985 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:54.839978 line       494                         if (i == j):
excute 13:50:54.843964 line       496                         i_j_list.append((
excute 13:50:54.846958 line       497                             i, j,
excute 13:50:54.850947 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.854937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1)]
excute 13:50:54.858926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:54.862914 line       494                         if (i == j):
excute 13:50:54.865905 line       496                         i_j_list.append((
excute 13:50:54.869894 line       497                             i, j,
excute 13:50:54.872887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.878872 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0)]
excute 13:50:54.881865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:54.885854 line       494                         if (i == j):
excute 13:50:54.889873 line       496                         i_j_list.append((
excute 13:50:54.893862 line       497                             i, j,
excute 13:50:54.896854 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.900812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:50:54.903803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:54.907793 line       494                         if (i == j):
excute 13:50:54.914775 line       496                         i_j_list.append((
excute 13:50:54.917766 line       497                             i, j,
excute 13:50:54.921756 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.924780 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:50:54.928770 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:54.932760 line       494                         if (i == j):
excute 13:50:54.936749 line       496                         i_j_list.append((
excute 13:50:54.940705 line       497                             i, j,
excute 13:50:54.943729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.947722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:50:54.951677 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:54.955703 line       494                         if (i == j):
excute 13:50:54.959688 line       495                             continue
excute 13:50:54.967635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:54.972622 line       494                         if (i == j):
excute 13:50:54.977608 line       496                         i_j_list.append((
excute 13:50:54.982630 line       497                             i, j,
excute 13:50:54.986583 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:54.989606 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1)]
excute 13:50:54.993564 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:54.997555 line       494                         if (i == j):
excute 13:50:55.001542 line       496                         i_j_list.append((
excute 13:50:55.005533 line       497                             i, j,
excute 13:50:55.009523 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.013512 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0)]
excute 13:50:55.017502 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:55.021491 line       494                         if (i == j):
excute 13:50:55.026478 line       496                         i_j_list.append((
excute 13:50:55.030481 line       497                             i, j,
excute 13:50:55.033459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.037449 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0)]
excute 13:50:55.041439 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:55.045426 line       494                         if (i == j):
excute 13:50:55.049417 line       496                         i_j_list.append((
excute 13:50:55.052409 line       497                             i, j,
excute 13:50:55.056398 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.060387 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:50:55.064376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:55.068364 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:55.072355 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:55.076345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:55.080334 line       494                         if (i == j):
excute 13:50:55.086319 line       496                         i_j_list.append((
excute 13:50:55.090306 line       497                             i, j,
excute 13:50:55.093299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.097288 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1)]
excute 13:50:55.101278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:55.107261 line       494                         if (i == j):
excute 13:50:55.113245 line       496                         i_j_list.append((
excute 13:50:55.117265 line       497                             i, j,
excute 13:50:55.120258 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.124216 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0)]
excute 13:50:55.128205 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:55.132226 line       494                         if (i == j):
excute 13:50:55.136185 line       496                         i_j_list.append((
excute 13:50:55.139176 line       497                             i, j,
excute 13:50:55.143166 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.146157 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:50:55.150145 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:55.154137 line       494                         if (i == j):
excute 13:50:55.158125 line       496                         i_j_list.append((
excute 13:50:55.162115 line       497                             i, j,
excute 13:50:55.166104 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.170094 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:50:55.174082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:55.178074 line       494                         if (i == j):
excute 13:50:55.181065 line       496                         i_j_list.append((
excute 13:50:55.186051 line       497                             i, j,
excute 13:50:55.190040 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.194042 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:50:55.197021 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:55.201011 line       494                         if (i == j):
excute 13:50:55.205000 line       496                         i_j_list.append((
excute 13:50:55.207992 line       497                             i, j,
excute 13:50:55.211981 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.214973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0)]
excute 13:50:55.218961 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:55.222954 line       494                         if (i == j):
excute 13:50:55.226953 line       495                             continue
excute 13:50:55.229932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:55.233921 line       494                         if (i == j):
excute 13:50:55.237911 line       496                         i_j_list.append((
excute 13:50:55.240903 line       497                             i, j,
excute 13:50:55.244892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.247884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0)]
excute 13:50:55.251873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:55.255863 line       494                         if (i == j):
excute 13:50:55.259852 line       496                         i_j_list.append((
excute 13:50:55.262844 line       497                             i, j,
excute 13:50:55.266833 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.269825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0)]
excute 13:50:55.273814 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:55.277804 line       494                         if (i == j):
excute 13:50:55.281795 line       496                         i_j_list.append((
excute 13:50:55.284785 line       497                             i, j,
excute 13:50:55.287777 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.292797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:50:55.296754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:55.300751 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:55.303767 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:55.307756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:55.311745 line       494                         if (i == j):
excute 13:50:55.315703 line       496                         i_j_list.append((
excute 13:50:55.318726 line       497                             i, j,
excute 13:50:55.322718 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.327673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1)]
excute 13:50:55.336649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:55.342632 line       494                         if (i == j):
excute 13:50:55.348618 line       496                         i_j_list.append((
excute 13:50:55.352605 line       497                             i, j,
excute 13:50:55.359629 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.363576 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0)]
excute 13:50:55.367568 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:55.371555 line       494                         if (i == j):
excute 13:50:55.375544 line       496                         i_j_list.append((
excute 13:50:55.379565 line       497                             i, j,
excute 13:50:55.382524 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.386515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:50:55.390503 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:55.395491 line       494                         if (i == j):
excute 13:50:55.399479 line       496                         i_j_list.append((
excute 13:50:55.402471 line       497                             i, j,
excute 13:50:55.406460 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.409452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:50:55.413441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:55.417431 line       494                         if (i == j):
excute 13:50:55.421420 line       496                         i_j_list.append((
excute 13:50:55.425410 line       497                             i, j,
excute 13:50:55.428401 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.431394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:50:55.435383 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:55.439373 line       494                         if (i == j):
excute 13:50:55.443362 line       496                         i_j_list.append((
excute 13:50:55.446354 line       497                             i, j,
excute 13:50:55.450377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.454334 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:50:55.458356 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:55.462340 line       494                         if (i == j):
excute 13:50:55.466302 line       496                         i_j_list.append((
excute 13:50:55.469327 line       497                             i, j,
excute 13:50:55.473313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.477308 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1)]
excute 13:50:55.480296 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:55.484284 line       494                         if (i == j):
excute 13:50:55.488274 line       495                             continue
excute 13:50:55.492263 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:55.496222 line       494                         if (i == j):
excute 13:50:55.500242 line       496                         i_j_list.append((
excute 13:50:55.504231 line       497                             i, j,
excute 13:50:55.507223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.512188 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0)]
excute 13:50:55.515171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:55.520157 line       494                         if (i == j):
excute 13:50:55.524148 line       496                         i_j_list.append((
excute 13:50:55.528137 line       497                             i, j,
excute 13:50:55.532126 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.536116 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:50:55.540105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:55.544094 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:55.548083 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:55.552073 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:55.557061 line       494                         if (i == j):
excute 13:50:55.561050 line       496                         i_j_list.append((
excute 13:50:55.565037 line       497                             i, j,
excute 13:50:55.568028 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.572018 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1)]
excute 13:50:55.576006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:55.579997 line       494                         if (i == j):
excute 13:50:55.582988 line       496                         i_j_list.append((
excute 13:50:55.586977 line       497                             i, j,
excute 13:50:55.589970 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.592962 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0)]
excute 13:50:55.596951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:55.601938 line       494                         if (i == j):
excute 13:50:55.607922 line       496                         i_j_list.append((
excute 13:50:55.611921 line       497                             i, j,
excute 13:50:55.614902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.617895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:55.621884 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:55.625873 line       494                         if (i == j):
excute 13:50:55.629863 line       496                         i_j_list.append((
excute 13:50:55.632886 line       497                             i, j,
excute 13:50:55.636880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.640834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:50:55.644823 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:55.648813 line       494                         if (i == j):
excute 13:50:55.652802 line       496                         i_j_list.append((
excute 13:50:55.656791 line       497                             i, j,
excute 13:50:55.659783 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.663773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:50:55.667764 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:55.671752 line       494                         if (i == j):
excute 13:50:55.675740 line       496                         i_j_list.append((
excute 13:50:55.679730 line       497                             i, j,
excute 13:50:55.682723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.686711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:50:55.690701 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:55.694691 line       494                         if (i == j):
excute 13:50:55.699678 line       496                         i_j_list.append((
excute 13:50:55.703665 line       497                             i, j,
excute 13:50:55.706658 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.710646 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1)]
excute 13:50:55.713639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:55.717644 line       494                         if (i == j):
excute 13:50:55.721617 line       496                         i_j_list.append((
excute 13:50:55.725608 line       497                             i, j,
excute 13:50:55.729597 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.732588 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0)]
excute 13:50:55.736577 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:55.740567 line       494                         if (i == j):
excute 13:50:55.744558 line       495                             continue
excute 13:50:55.747580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:55.751537 line       494                         if (i == j):
excute 13:50:55.755528 line       496                         i_j_list.append((
excute 13:50:55.758519 line       497                             i, j,
excute 13:50:55.762509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.765500 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:50:55.769490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:55.773480 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:55.776471 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:55.780461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:55.784449 line       494                         if (i == j):
excute 13:50:55.788439 line       496                         i_j_list.append((
excute 13:50:55.791431 line       497                             i, j,
excute 13:50:55.795420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.798412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1)]
excute 13:50:55.803399 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:55.808388 line       494                         if (i == j):
excute 13:50:55.812377 line       496                         i_j_list.append((
excute 13:50:55.816365 line       497                             i, j,
excute 13:50:55.820369 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.823346 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0)]
excute 13:50:55.827336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:55.831326 line       494                         if (i == j):
excute 13:50:55.835315 line       496                         i_j_list.append((
excute 13:50:55.838306 line       497                             i, j,
excute 13:50:55.841298 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.845287 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:50:55.849277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:55.853266 line       494                         if (i == j):
excute 13:50:55.858255 line       496                         i_j_list.append((
excute 13:50:55.861247 line       497                             i, j,
excute 13:50:55.865235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.869225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:50:55.873214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:55.877201 line       494                         if (i == j):
excute 13:50:55.881226 line       496                         i_j_list.append((
excute 13:50:55.885212 line       497                             i, j,
excute 13:50:55.888204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.892197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:50:55.895186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:55.899174 line       494                         if (i == j):
excute 13:50:55.903164 line       496                         i_j_list.append((
excute 13:50:55.908156 line       497                             i, j,
excute 13:50:55.911142 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.915134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:50:55.918124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:55.922115 line       494                         if (i == j):
excute 13:50:55.926103 line       496                         i_j_list.append((
excute 13:50:55.930060 line       497                             i, j,
excute 13:50:55.933052 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.937041 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1)]
excute 13:50:55.940034 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:55.945021 line       494                         if (i == j):
excute 13:50:55.949015 line       496                         i_j_list.append((
excute 13:50:55.953034 line       497                             i, j,
excute 13:50:55.955991 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.959980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0)]
excute 13:50:55.963969 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:55.967959 line       494                         if (i == j):
excute 13:50:55.971948 line       496                         i_j_list.append((
excute 13:50:55.974940 line       497                             i, j,
excute 13:50:55.980924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:55.983949 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 2, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 1), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 1), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 1), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:50:55.987941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:55.991897 line       494                         if (i == j):
excute 13:50:55.995886 line       495                             continue
excute 13:50:55.998908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:56.002867 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:50:56.005889 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (8, 0, -1, 1), (8, 6, -1, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (0, 6, 0, 1), (2, 0, 0, 1), (2, 6, 0, 1), (7, 0, 0, 1), (7, 6, 0, 1), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 7, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (5, 0, 1, 1), (5, 6, 1, 1), (9, 0, 1, 1), (9, 6, 1, 1), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 7, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (1, 0, 2, 1), (1, 6, 2, 1), (4, 0, 2, 1), (4, 6, 2, 1), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (3, 0, 4, 1), (3, 6, 4, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (6, 0, 5, 1)]
excute 13:50:56.010848 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:50:56.015834 line       505                     if (self.RELOCATE):
excute 13:50:56.019821 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:50:56.022844 line       505                     if (self.RELOCATE):
excute 13:50:56.026834 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:50:56.030824 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:50:56.033815 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:50:56.037773 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:56.041794 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.045783 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:50:56.049740 line       556                     i = i_j[0]
excute 13:50:56.053730 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:56.060711 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.064701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:50:56.067693 line       556                     i = i_j[0]
excute 13:50:56.071714 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:56.075706 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.079661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:50:56.082684 line       556                     i = i_j[0]
excute 13:50:56.086674 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:56.090662 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.094621 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:50:56.097645 line       556                     i = i_j[0]
excute 13:50:56.101634 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:56.107586 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.114568 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:50:56.117592 line       556                     i = i_j[0]
excute 13:50:56.121581 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:56.125538 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.129564 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:50:56.132551 line       556                     i = i_j[0]
excute 13:50:56.136509 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:56.140529 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.144489 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 1)
excute 13:50:56.147514 line       556                     i = i_j[0]
excute 13:50:56.151501 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:56.155493 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.159480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 1)
excute 13:50:56.163472 line       556                     i = i_j[0]
excute 13:50:56.167468 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:56.170449 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.174439 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:50:56.178428 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:56.182387 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:56.186377 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.190366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:50:56.193356 line       556                     i = i_j[0]
excute 13:50:56.198345 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:56.201335 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.205324 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:50:56.209320 line       556                     i = i_j[0]
excute 13:50:56.212306 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:56.218323 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.222311 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:50:56.226301 line       556                     i = i_j[0]
excute 13:50:56.230259 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:56.233281 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.237271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:50:56.241260 line       556                     i = i_j[0]
excute 13:50:56.245250 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:56.249220 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.253204 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:50:56.257186 line       556                     i = i_j[0]
excute 13:50:56.261176 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:56.264167 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.268156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:50:56.272146 line       556                     i = i_j[0]
excute 13:50:56.276136 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:56.279159 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.283153 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:50:56.287108 line       556                     i = i_j[0]
excute 13:50:56.292093 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:56.295085 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.299074 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:50:56.303063 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:56.307061 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:56.311075 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.315068 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:50:56.319022 line       556                     i = i_j[0]
excute 13:50:56.323010 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:56.329783 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.337767 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:50:56.342752 line       556                     i = i_j[0]
excute 13:50:56.347741 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:56.351760 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.355749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:50:56.360704 line       556                     i = i_j[0]
excute 13:50:56.367719 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:56.373669 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.380650 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:50:56.386634 line       556                     i = i_j[0]
excute 13:50:56.390624 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:56.394615 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.402591 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:50:56.406580 line       556                     i = i_j[0]
excute 13:50:56.410571 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:56.414562 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.419546 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:50:56.425531 line       556                     i = i_j[0]
excute 13:50:56.430518 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:56.434507 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.439495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:50:56.443485 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:56.448471 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:56.453457 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.457448 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:50:56.463429 line       556                     i = i_j[0]
excute 13:50:56.473403 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:56.479388 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.488363 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:50:56.496340 line       556                     i = i_j[0]
excute 13:50:56.505317 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:56.512299 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.520278 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:50:56.526262 line       556                     i = i_j[0]
excute 13:50:56.533244 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:56.539226 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.546208 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:50:56.551193 line       556                     i = i_j[0]
excute 13:50:56.558175 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:56.564160 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.570144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:50:56.576127 line       556                     i = i_j[0]
excute 13:50:56.583109 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:56.590091 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.597071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:50:56.603056 line       556                     i = i_j[0]
excute 13:50:56.610038 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:56.615023 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.622005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:50:56.627991 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:50:56.636965 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:56.642948 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.649930 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 175
excute 13:50:56.656911 line       560                         if (t_tmp > self.TIME):
excute 13:50:56.665887 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:56.671871 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:56.677856 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:56.686834 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:56.692817 line       569                                     available_vhecles[i][t],
excute 13:50:56.700794 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:56.708774 line       571                                     self.S_capacities[j],
excute 13:50:56.716751 line       572                                     demands[t][i][j],
excute 13:50:56.722737 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = -1
calc_contract     Starting var:.. capacity_target = 4
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 164
calc_contract     13:50:56.729716 call       352     def caluculate_contract(
calc_contract     13:50:56.736698 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:56.737696 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:56.738693 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:56.740687 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:56.741685 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:50:56.741685 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:56.743680 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:50:56.744678 line       575                                 rsf += rsf_tmp
excute 13:50:56.752656 line       576                                 rse += rse_tmp
excute 13:50:56.760635 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 2, 2... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 0
move_cars     Starting var:.. j = 6
move_cars     Starting var:.. t = 164
move_cars     Starting var:.. t_tmp = 175
move_cars     Starting var:.. can_contract = 1
move_cars     13:50:56.766617 call       388     def move_cars(
move_cars     13:50:56.773601 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     13:50:56.775594 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:50:56.778586 line       399         return available_vhecles
move_cars     13:50:56.781579 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 3, 3, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
excute 13:50:56.785567 line       579                                 success += can_contract
excute Modified var:.. success = 80
excute 13:50:56.791551 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 1)
excute 13:50:56.798533 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:50:56.806513 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:56.810501 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.814505 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 1)
excute 13:50:56.818479 line       556                     i = i_j[0]
excute 13:50:56.822470 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:56.826457 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.830447 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 1)
excute 13:50:56.833439 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:50:56.839424 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:56.843412 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.846404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 1)
excute 13:50:56.850393 line       556                     i = i_j[0]
excute 13:50:56.854383 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:56.858373 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.862362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:50:56.865354 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:56.870341 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:56.874331 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.878321 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:50:56.881311 line       556                     i = i_j[0]
excute 13:50:56.886299 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:56.889290 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.893279 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:50:56.897269 line       556                     i = i_j[0]
excute 13:50:56.900260 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:56.904250 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.908240 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:50:56.911262 line       556                     i = i_j[0]
excute 13:50:56.915254 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:56.919242 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.923234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 0)
excute 13:50:56.926224 line       556                     i = i_j[0]
excute 13:50:56.930181 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:56.934203 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.939158 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:50:56.942151 line       556                     i = i_j[0]
excute 13:50:56.947138 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:56.951157 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.956111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:50:56.959135 line       556                     i = i_j[0]
excute 13:50:56.963126 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:56.967113 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.971071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:50:56.974096 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:56.979051 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:56.987029 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:56.993014 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:50:56.997002 line       556                     i = i_j[0]
excute 13:50:56.999994 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:57.003983 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.007972 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:50:57.011962 line       556                     i = i_j[0]
excute 13:50:57.015951 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:57.019940 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.022932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:50:57.026921 line       556                     i = i_j[0]
excute 13:50:57.030911 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:57.033903 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.037892 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:50:57.043878 line       556                     i = i_j[0]
excute 13:50:57.046900 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:57.050891 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.054849 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:50:57.058870 line       556                     i = i_j[0]
excute 13:50:57.062859 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:57.065849 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.069823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:50:57.073805 line       556                     i = i_j[0]
excute 13:50:57.077821 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:57.080810 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.084800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 1)
excute 13:50:57.088789 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:50:57.092747 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:57.096737 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.100757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 1)
excute 13:50:57.103719 line       556                     i = i_j[0]
excute 13:50:57.110713 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:57.113721 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.117713 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 1)
excute 13:50:57.121700 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:50:57.125659 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:57.129648 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.133672 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 171
excute 13:50:57.136660 line       560                         if (t_tmp > self.TIME):
excute 13:50:57.140650 line       563                             if (available_vhecles[i][t] == 0):
excute 13:50:57.145636 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:50:57.149607 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:50:57.152618 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:50:57.156606 line       569                                     available_vhecles[i][t],
excute 13:50:57.160597 line       570                                     available_vhecles[j][t_tmp],
excute 13:50:57.163589 line       571                                     self.S_capacities[j],
excute 13:50:57.167578 line       572                                     demands[t][i][j],
excute 13:50:57.171536 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = 2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 164
calc_contract     13:50:57.174558 call       352     def caluculate_contract(
calc_contract     13:50:57.177521 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:50:57.178552 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:50:57.179538 line       362         if (available_vhecles_start >= demand):
calc_contract     13:50:57.180525 line       364             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:50:57.180525 line       366                 can_contract = demand
calc_contract     New var:....... can_contract = 1
calc_contract     13:50:57.180525 line       385         return [can_contract, rsf, rse]
calc_contract     13:50:57.181509 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 0]
excute 13:50:57.182521 line       575                                 rsf += rsf_tmp
excute 13:50:57.186529 line       576                                 rse += rse_tmp
excute 13:50:57.189520 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]
move_cars     Starting var:.. i = 9
move_cars     Starting var:.. j = 0
move_cars     Starting var:.. t = 164
move_cars     Starting var:.. t_tmp = 171
move_cars     Starting var:.. can_contract = 1
move_cars     13:50:57.193508 call       388     def move_cars(
move_cars     13:50:57.197467 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     13:50:57.199473 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:50:57.200491 line       399         return available_vhecles
move_cars     13:50:57.202466 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 3, 3, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:57.204480 line       579                                 success += can_contract
excute Modified var:.. success = 81
excute 13:50:57.208438 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 1)
excute 13:50:57.212428 line       556                     i = i_j[0]
excute 13:50:57.216417 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:57.219440 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.223428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:50:57.227418 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:57.231385 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:57.235366 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.239355 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:50:57.242379 line       556                     i = i_j[0]
excute 13:50:57.247366 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:57.251356 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.255331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:50:57.259333 line       556                     i = i_j[0]
excute 13:50:57.263324 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:57.266282 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.270271 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:50:57.274261 line       556                     i = i_j[0]
excute 13:50:57.277252 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:57.281242 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.285231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 0)
excute 13:50:57.288223 line       556                     i = i_j[0]
excute 13:50:57.293210 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:57.297199 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.301191 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:50:57.304183 line       556                     i = i_j[0]
excute 13:50:57.309167 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:57.312161 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.316151 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:50:57.320139 line       556                     i = i_j[0]
excute 13:50:57.325127 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:57.332108 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.338091 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:50:57.341115 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:57.346071 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:57.351093 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.356042 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:50:57.360031 line       556                     i = i_j[0]
excute 13:50:57.364021 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:57.368010 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.371999 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:50:57.374991 line       556                     i = i_j[0]
excute 13:50:57.378981 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:57.383001 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.386993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:50:57.390980 line       556                     i = i_j[0]
excute 13:50:57.394939 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:57.397961 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.402950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:50:57.405940 line       556                     i = i_j[0]
excute 13:50:57.409936 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:57.413920 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.417901 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:50:57.421897 line       556                     i = i_j[0]
excute 13:50:57.425859 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:57.428880 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.432843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:50:57.435861 line       556                     i = i_j[0]
excute 13:50:57.439850 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:57.443839 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.447798 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 1)
excute 13:50:57.452785 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:50:57.456776 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:57.460763 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.464751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 1)
excute 13:50:57.467743 line       556                     i = i_j[0]
excute 13:50:57.472742 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:57.476720 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.481707 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 1)
excute 13:50:57.485695 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:50:57.489686 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:57.494671 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.498661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 1)
excute 13:50:57.501684 line       556                     i = i_j[0]
excute 13:50:57.505642 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:57.509633 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.513623 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 4, 0)
excute 13:50:57.517612 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:50:57.521601 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:57.525590 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.530577 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 4, 0)
excute 13:50:57.533569 line       556                     i = i_j[0]
excute 13:50:57.537559 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:57.541548 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.545537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 4, 0)
excute 13:50:57.549526 line       556                     i = i_j[0]
excute 13:50:57.556508 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:57.559530 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.563489 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 4, 0)
excute 13:50:57.567476 line       556                     i = i_j[0]
excute 13:50:57.573462 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:57.576453 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.580442 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 4, 0)
excute 13:50:57.583434 line       556                     i = i_j[0]
excute 13:50:57.587423 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:57.591412 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.595402 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 4, 0)
excute 13:50:57.598394 line       556                     i = i_j[0]
excute 13:50:57.602384 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:57.606376 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.612358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 4, 0)
excute 13:50:57.616348 line       556                     i = i_j[0]
excute 13:50:57.620337 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:57.624326 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.629314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 4, 1)
excute 13:50:57.632306 line       556                     i = i_j[0]
excute 13:50:57.641430 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:57.644418 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.649404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 4, 1)
excute 13:50:57.653394 line       556                     i = i_j[0]
excute 13:50:57.658381 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:50:57.662368 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.666357 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:50:57.670347 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:50:57.673338 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:50:57.677327 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.681317 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:50:57.685306 line       556                     i = i_j[0]
excute 13:50:57.689296 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:50:57.693295 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.697275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:50:57.700267 line       556                     i = i_j[0]
excute 13:50:57.704256 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:50:57.708245 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.711237 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:50:57.715226 line       556                     i = i_j[0]
excute 13:50:57.719216 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:50:57.722208 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.726197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:50:57.730186 line       556                     i = i_j[0]
excute 13:50:57.734208 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:50:57.738166 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.742156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 0)
excute 13:50:57.745179 line       556                     i = i_j[0]
excute 13:50:57.749142 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:50:57.752128 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.757115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:50:57.761106 line       556                     i = i_j[0]
excute 13:50:57.765093 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:50:57.769082 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.773072 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:50:57.776063 line       556                     i = i_j[0]
excute 13:50:57.780053 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:50:57.783045 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.787034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 1)
excute 13:50:57.791024 line       556                     i = i_j[0]
excute 13:50:57.795013 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:50:57.798006 line       558                     if (i != j and demands[t][i][j]):
excute 13:50:57.801995 line       555                 for i_j in i_j_list:
excute 13:50:57.804987 line       581             self.write_matrix(
excute 13:50:57.808976 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:50:57.812966 line       583                 result_file_path,
excute 13:50:57.815957 line       584                 mode='a'
excute 13:50:57.822434 line       488         for t in time_steps:
excute Modified var:.. t = 165
excute 13:50:57.826425 line       489             if (t != self.TIME + 1):
excute 13:50:57.830414 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:50:57.834403 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:50:57.838393 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:57.842382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:57.846370 line       494                         if (i == j):
excute 13:50:57.849363 line       495                             continue
excute 13:50:57.853351 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:57.857340 line       494                         if (i == j):
excute 13:50:57.862328 line       496                         i_j_list.append((
excute 13:50:57.867318 line       497                             i, j,
excute 13:50:57.873299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:57.880280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:50:57.892247 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:57.898231 line       494                         if (i == j):
excute 13:50:57.902220 line       496                         i_j_list.append((
excute 13:50:57.906210 line       497                             i, j,
excute 13:50:57.909201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:57.913190 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:50:57.917180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:57.921169 line       494                         if (i == j):
excute 13:50:57.926156 line       496                         i_j_list.append((
excute 13:50:57.930147 line       497                             i, j,
excute 13:50:57.933137 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:57.940132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:50:57.944143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:57.949127 line       494                         if (i == j):
excute 13:50:57.954082 line       496                         i_j_list.append((
excute 13:50:57.957104 line       497                             i, j,
excute 13:50:57.961075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:57.968045 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:50:57.972065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:57.976056 line       494                         if (i == j):
excute 13:50:57.981010 line       496                         i_j_list.append((
excute 13:50:57.984033 line       497                             i, j,
excute 13:50:57.988023 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:57.991016 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:50:57.994971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:57.998993 line       494                         if (i == j):
excute 13:50:58.002953 line       496                         i_j_list.append((
excute 13:50:58.006941 line       497                             i, j,
excute 13:50:58.010931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.014950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:50:58.017941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:58.021931 line       494                         if (i == j):
excute 13:50:58.025922 line       496                         i_j_list.append((
excute 13:50:58.029911 line       497                             i, j,
excute 13:50:58.032909 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.036860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1)]
excute 13:50:58.039852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:58.043841 line       494                         if (i == j):
excute 13:50:58.047839 line       496                         i_j_list.append((
excute 13:50:58.051820 line       497                             i, j,
excute 13:50:58.054843 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.058803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0)]
excute 13:50:58.061824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:58.065782 line       494                         if (i == j):
excute 13:50:58.070773 line       496                         i_j_list.append((
excute 13:50:58.073794 line       497                             i, j,
excute 13:50:58.077782 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.080778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:50:58.084764 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:58.088723 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:50:58.091745 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:58.096702 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:58.100690 line       494                         if (i == j):
excute 13:50:58.104683 line       496                         i_j_list.append((
excute 13:50:58.109666 line       497                             i, j,
excute 13:50:58.115651 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.122631 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0)]
excute 13:50:58.128617 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:58.136595 line       494                         if (i == j):
excute 13:50:58.143575 line       495                             continue
excute 13:50:58.149558 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:58.152551 line       494                         if (i == j):
excute 13:50:58.157540 line       496                         i_j_list.append((
excute 13:50:58.161530 line       497                             i, j,
excute 13:50:58.165517 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.170502 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0)]
excute 13:50:58.176490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:58.181478 line       494                         if (i == j):
excute 13:50:58.185465 line       496                         i_j_list.append((
excute 13:50:58.189454 line       497                             i, j,
excute 13:50:58.192476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.195473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0)]
excute 13:50:58.199426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:58.203415 line       494                         if (i == j):
excute 13:50:58.207405 line       496                         i_j_list.append((
excute 13:50:58.210427 line       497                             i, j,
excute 13:50:58.214386 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.217408 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0)]
excute 13:50:58.221368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:58.225358 line       494                         if (i == j):
excute 13:50:58.229349 line       496                         i_j_list.append((
excute 13:50:58.232368 line       497                             i, j,
excute 13:50:58.236358 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.239350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0)]
excute 13:50:58.243340 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:58.247297 line       494                         if (i == j):
excute 13:50:58.250320 line       496                         i_j_list.append((
excute 13:50:58.254310 line       497                             i, j,
excute 13:50:58.257272 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.261261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0)]
excute 13:50:58.265251 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:58.270236 line       494                         if (i == j):
excute 13:50:58.274228 line       496                         i_j_list.append((
excute 13:50:58.278248 line       497                             i, j,
excute 13:50:58.281238 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.285196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1)]
excute 13:50:58.289185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:58.294173 line       494                         if (i == j):
excute 13:50:58.298164 line       496                         i_j_list.append((
excute 13:50:58.301155 line       497                             i, j,
excute 13:50:58.305144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.309134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0)]
excute 13:50:58.313123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:58.317144 line       494                         if (i == j):
excute 13:50:58.321128 line       496                         i_j_list.append((
excute 13:50:58.326099 line       497                             i, j,
excute 13:50:58.334066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.340053 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0)]
excute 13:50:58.344040 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:58.350025 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:50:58.354046 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:58.358012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:58.362024 line       494                         if (i == j):
excute 13:50:58.365980 line       496                         i_j_list.append((
excute 13:50:58.369003 line       497                             i, j,
excute 13:50:58.372993 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.375985 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0)]
excute 13:50:58.380973 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:58.384961 line       494                         if (i == j):
excute 13:50:58.389919 line       496                         i_j_list.append((
excute 13:50:58.392939 line       497                             i, j,
excute 13:50:58.395933 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.399891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:50:58.403881 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:58.407884 line       494                         if (i == j):
excute 13:50:58.411859 line       495                             continue
excute 13:50:58.415848 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:58.419836 line       494                         if (i == j):
excute 13:50:58.423828 line       496                         i_j_list.append((
excute 13:50:58.427817 line       497                             i, j,
excute 13:50:58.430808 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.434797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:50:58.438787 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:58.442776 line       494                         if (i == j):
excute 13:50:58.447763 line       496                         i_j_list.append((
excute 13:50:58.451753 line       497                             i, j,
excute 13:50:58.454743 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.458733 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:50:58.461725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:58.466713 line       494                         if (i == j):
excute 13:50:58.470702 line       496                         i_j_list.append((
excute 13:50:58.473692 line       497                             i, j,
excute 13:50:58.477682 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.481672 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:50:58.485670 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:58.489651 line       494                         if (i == j):
excute 13:50:58.493640 line       496                         i_j_list.append((
excute 13:50:58.496631 line       497                             i, j,
excute 13:50:58.500653 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.503643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:50:58.507634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:58.511591 line       494                         if (i == j):
excute 13:50:58.515580 line       496                         i_j_list.append((
excute 13:50:58.518572 line       497                             i, j,
excute 13:50:58.522561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.525553 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1)]
excute 13:50:58.529542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:58.533532 line       494                         if (i == j):
excute 13:50:58.537521 line       496                         i_j_list.append((
excute 13:50:58.540513 line       497                             i, j,
excute 13:50:58.544507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.547494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0)]
excute 13:50:58.551484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:58.555474 line       494                         if (i == j):
excute 13:50:58.559463 line       496                         i_j_list.append((
excute 13:50:58.562454 line       497                             i, j,
excute 13:50:58.566443 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.569436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:50:58.573426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:58.576417 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:50:58.580406 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:58.585395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:58.588417 line       494                         if (i == j):
excute 13:50:58.592407 line       496                         i_j_list.append((
excute 13:50:58.596383 line       497                             i, j,
excute 13:50:58.599387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.602380 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0)]
excute 13:50:58.606369 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:58.610364 line       494                         if (i == j):
excute 13:50:58.614317 line       496                         i_j_list.append((
excute 13:50:58.618307 line       497                             i, j,
excute 13:50:58.623292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.629276 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0)]
excute 13:50:58.633265 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:58.637255 line       494                         if (i == j):
excute 13:50:58.641244 line       496                         i_j_list.append((
excute 13:50:58.644236 line       497                             i, j,
excute 13:50:58.648236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.651217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0)]
excute 13:50:58.655207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:58.659196 line       494                         if (i == j):
excute 13:50:58.663186 line       495                             continue
excute 13:50:58.666177 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:58.670166 line       494                         if (i == j):
excute 13:50:58.674156 line       496                         i_j_list.append((
excute 13:50:58.677148 line       497                             i, j,
excute 13:50:58.681138 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.684129 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0)]
excute 13:50:58.688120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:58.693108 line       494                         if (i == j):
excute 13:50:58.697097 line       496                         i_j_list.append((
excute 13:50:58.700087 line       497                             i, j,
excute 13:50:58.704077 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.707069 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0)]
excute 13:50:58.711058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:58.715047 line       494                         if (i == j):
excute 13:50:58.719036 line       496                         i_j_list.append((
excute 13:50:58.724024 line       497                             i, j,
excute 13:50:58.728013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.732001 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0)]
excute 13:50:58.734994 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:58.739983 line       494                         if (i == j):
excute 13:50:58.743972 line       496                         i_j_list.append((
excute 13:50:58.746963 line       497                             i, j,
excute 13:50:58.750952 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.754942 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1)]
excute 13:50:58.758931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:58.762920 line       494                         if (i == j):
excute 13:50:58.766909 line       496                         i_j_list.append((
excute 13:50:58.770899 line       497                             i, j,
excute 13:50:58.773891 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.777911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0)]
excute 13:50:58.781869 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:58.784891 line       494                         if (i == j):
excute 13:50:58.790848 line       496                         i_j_list.append((
excute 13:50:58.794833 line       497                             i, j,
excute 13:50:58.797857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.800849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0)]
excute 13:50:58.804838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:58.808810 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:50:58.811820 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:58.815809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:58.819798 line       494                         if (i == j):
excute 13:50:58.823757 line       496                         i_j_list.append((
excute 13:50:58.826780 line       497                             i, j,
excute 13:50:58.830769 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.833761 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0)]
excute 13:50:58.837750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:58.841742 line       494                         if (i == j):
excute 13:50:58.845731 line       496                         i_j_list.append((
excute 13:50:58.848720 line       497                             i, j,
excute 13:50:58.852679 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.856668 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:50:58.859692 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:58.863682 line       494                         if (i == j):
excute 13:50:58.867671 line       496                         i_j_list.append((
excute 13:50:58.871630 line       497                             i, j,
excute 13:50:58.874652 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.878610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:50:58.881633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:58.885591 line       494                         if (i == j):
excute 13:50:58.889581 line       496                         i_j_list.append((
excute 13:50:58.893602 line       497                             i, j,
excute 13:50:58.897596 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.900582 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:50:58.904572 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:58.908562 line       494                         if (i == j):
excute 13:50:58.912533 line       495                             continue
excute 13:50:58.915542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:58.919532 line       494                         if (i == j):
excute 13:50:58.923492 line       496                         i_j_list.append((
excute 13:50:58.926517 line       497                             i, j,
excute 13:50:58.930502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.933494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:50:58.937484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:58.941442 line       494                         if (i == j):
excute 13:50:58.945431 line       496                         i_j_list.append((
excute 13:50:58.952412 line       497                             i, j,
excute 13:50:58.956401 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.960392 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:50:58.963382 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:58.971387 line       494                         if (i == j):
excute 13:50:58.975371 line       496                         i_j_list.append((
excute 13:50:58.979372 line       497                             i, j,
excute 13:50:58.983331 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:58.986323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1)]
excute 13:50:58.990312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:58.997292 line       494                         if (i == j):
excute 13:50:59.001281 line       496                         i_j_list.append((
excute 13:50:59.005272 line       497                             i, j,
excute 13:50:59.008262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.012284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0)]
excute 13:50:59.015275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:59.019265 line       494                         if (i == j):
excute 13:50:59.023254 line       496                         i_j_list.append((
excute 13:50:59.027243 line       497                             i, j,
excute 13:50:59.030235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.034225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:50:59.037217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:59.042174 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:50:59.045165 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:59.049155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:59.053144 line       494                         if (i == j):
excute 13:50:59.060133 line       496                         i_j_list.append((
excute 13:50:59.063116 line       497                             i, j,
excute 13:50:59.066108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.070097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0)]
excute 13:50:59.074087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:59.078077 line       494                         if (i == j):
excute 13:50:59.081068 line       496                         i_j_list.append((
excute 13:50:59.085057 line       497                             i, j,
excute 13:50:59.088049 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.092039 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:50:59.095031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:59.100020 line       494                         if (i == j):
excute 13:50:59.104040 line       496                         i_j_list.append((
excute 13:50:59.108030 line       497                             i, j,
excute 13:50:59.111021 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.115009 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:50:59.118005 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:59.121962 line       494                         if (i == j):
excute 13:50:59.127944 line       496                         i_j_list.append((
excute 13:50:59.131934 line       497                             i, j,
excute 13:50:59.135923 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.139912 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:50:59.143902 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:59.147892 line       494                         if (i == j):
excute 13:50:59.152890 line       496                         i_j_list.append((
excute 13:50:59.155900 line       497                             i, j,
excute 13:50:59.159889 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.162884 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0)]
excute 13:50:59.166870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:59.170860 line       494                         if (i == j):
excute 13:50:59.174849 line       495                             continue
excute 13:50:59.178808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:59.181830 line       494                         if (i == j):
excute 13:50:59.185796 line       496                         i_j_list.append((
excute 13:50:59.188814 line       497                             i, j,
excute 13:50:59.192802 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.195793 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0)]
excute 13:50:59.200750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:59.204772 line       494                         if (i == j):
excute 13:50:59.208728 line       496                         i_j_list.append((
excute 13:50:59.211751 line       497                             i, j,
excute 13:50:59.214742 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.218731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1)]
excute 13:50:59.221724 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:59.225713 line       494                         if (i == j):
excute 13:50:59.229702 line       496                         i_j_list.append((
excute 13:50:59.233662 line       497                             i, j,
excute 13:50:59.237654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.241640 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0)]
excute 13:50:59.245630 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:59.249619 line       494                         if (i == j):
excute 13:50:59.254619 line       496                         i_j_list.append((
excute 13:50:59.258626 line       497                             i, j,
excute 13:50:59.261617 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.265606 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:50:59.268599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:59.272588 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:50:59.276577 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:59.280536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:59.283558 line       494                         if (i == j):
excute 13:50:59.287547 line       496                         i_j_list.append((
excute 13:50:59.291539 line       497                             i, j,
excute 13:50:59.295528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.298518 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0)]
excute 13:50:59.303476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:59.307496 line       494                         if (i == j):
excute 13:50:59.311453 line       496                         i_j_list.append((
excute 13:50:59.314476 line       497                             i, j,
excute 13:50:59.318465 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.322454 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:50:59.326413 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:59.336387 line       494                         if (i == j):
excute 13:50:59.340407 line       496                         i_j_list.append((
excute 13:50:59.344397 line       497                             i, j,
excute 13:50:59.349383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.353341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:50:59.357352 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:59.361351 line       494                         if (i == j):
excute 13:50:59.365340 line       496                         i_j_list.append((
excute 13:50:59.369330 line       497                             i, j,
excute 13:50:59.372322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.376312 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:50:59.380301 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:59.384292 line       494                         if (i == j):
excute 13:50:59.388279 line       496                         i_j_list.append((
excute 13:50:59.392236 line       497                             i, j,
excute 13:50:59.397223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.405205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:50:59.413180 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:59.417170 line       494                         if (i == j):
excute 13:50:59.421160 line       496                         i_j_list.append((
excute 13:50:59.424151 line       497                             i, j,
excute 13:50:59.428140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.431132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0)]
excute 13:50:59.435121 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:59.439111 line       494                         if (i == j):
excute 13:50:59.443101 line       495                             continue
excute 13:50:59.447096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:59.450113 line       494                         if (i == j):
excute 13:50:59.455102 line       496                         i_j_list.append((
excute 13:50:59.458093 line       497                             i, j,
excute 13:50:59.462081 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.468037 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1)]
excute 13:50:59.472023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:59.476012 line       494                         if (i == j):
excute 13:50:59.481002 line       496                         i_j_list.append((
excute 13:50:59.483993 line       497                             i, j,
excute 13:50:59.487983 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.491971 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0)]
excute 13:50:59.496990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:59.500947 line       494                         if (i == j):
excute 13:50:59.504935 line       496                         i_j_list.append((
excute 13:50:59.509954 line       497                             i, j,
excute 13:50:59.513943 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.516935 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:50:59.520893 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:59.524883 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:50:59.528871 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:50:59.532861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:59.535885 line       494                         if (i == j):
excute 13:50:59.539844 line       496                         i_j_list.append((
excute 13:50:59.543831 line       497                             i, j,
excute 13:50:59.546823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.550812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0)]
excute 13:50:59.553804 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:59.558791 line       494                         if (i == j):
excute 13:50:59.561818 line       496                         i_j_list.append((
excute 13:50:59.565804 line       497                             i, j,
excute 13:50:59.568797 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.572788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:50:59.576775 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:59.580769 line       494                         if (i == j):
excute 13:50:59.584755 line       496                         i_j_list.append((
excute 13:50:59.587745 line       497                             i, j,
excute 13:50:59.591723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.594726 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:50:59.598717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:59.602708 line       494                         if (i == j):
excute 13:50:59.606664 line       496                         i_j_list.append((
excute 13:50:59.610655 line       497                             i, j,
excute 13:50:59.614641 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.617634 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:50:59.623618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:59.629603 line       494                         if (i == j):
excute 13:50:59.633592 line       496                         i_j_list.append((
excute 13:50:59.636614 line       497                             i, j,
excute 13:50:59.640604 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.643596 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:50:59.647586 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:59.651577 line       494                         if (i == j):
excute 13:50:59.656541 line       496                         i_j_list.append((
excute 13:50:59.659554 line       497                             i, j,
excute 13:50:59.663524 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.666536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:50:59.670524 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:59.674516 line       494                         if (i == j):
excute 13:50:59.678504 line       496                         i_j_list.append((
excute 13:50:59.681495 line       497                             i, j,
excute 13:50:59.689442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.693431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:50:59.699416 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:59.703406 line       494                         if (i == j):
excute 13:50:59.707395 line       495                             continue
excute 13:50:59.710418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:59.715408 line       494                         if (i == j):
excute 13:50:59.719395 line       496                         i_j_list.append((
excute 13:50:59.722386 line       497                             i, j,
excute 13:50:59.726375 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.730332 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:50:59.733324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:59.737313 line       494                         if (i == j):
excute 13:50:59.741303 line       496                         i_j_list.append((
excute 13:50:59.745292 line       497                             i, j,
excute 13:50:59.748284 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.752274 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:50:59.755267 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:59.759255 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:50:59.763244 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:50:59.767234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:50:59.771223 line       494                         if (i == j):
excute 13:50:59.775213 line       496                         i_j_list.append((
excute 13:50:59.778204 line       497                             i, j,
excute 13:50:59.782194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.788488 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:50:59.792480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:50:59.796469 line       494                         if (i == j):
excute 13:50:59.800459 line       496                         i_j_list.append((
excute 13:50:59.803450 line       497                             i, j,
excute 13:50:59.807440 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.810432 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:50:59.815420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:50:59.820407 line       494                         if (i == j):
excute 13:50:59.824396 line       496                         i_j_list.append((
excute 13:50:59.828386 line       497                             i, j,
excute 13:50:59.831378 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.835367 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:50:59.839355 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:50:59.843347 line       494                         if (i == j):
excute 13:50:59.847335 line       496                         i_j_list.append((
excute 13:50:59.851324 line       497                             i, j,
excute 13:50:59.855314 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.859303 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:50:59.863291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:50:59.867281 line       494                         if (i == j):
excute 13:50:59.871272 line       496                         i_j_list.append((
excute 13:50:59.874292 line       497                             i, j,
excute 13:50:59.878251 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.882240 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:50:59.885232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:50:59.889221 line       494                         if (i == j):
excute 13:50:59.893210 line       496                         i_j_list.append((
excute 13:50:59.897200 line       497                             i, j,
excute 13:50:59.900192 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.904181 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:50:59.907173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:50:59.911163 line       494                         if (i == j):
excute 13:50:59.915154 line       496                         i_j_list.append((
excute 13:50:59.919173 line       497                             i, j,
excute 13:50:59.923162 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.926157 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:50:59.930144 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:50:59.934102 line       494                         if (i == j):
excute 13:50:59.938093 line       496                         i_j_list.append((
excute 13:50:59.941085 line       497                             i, j,
excute 13:50:59.945074 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.950061 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1)]
excute 13:50:59.954052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:50:59.958038 line       494                         if (i == j):
excute 13:50:59.963041 line       495                             continue
excute 13:50:59.966050 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:50:59.970037 line       494                         if (i == j):
excute 13:50:59.973996 line       496                         i_j_list.append((
excute 13:50:59.977020 line       497                             i, j,
excute 13:50:59.980978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:50:59.984967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0)]
excute 13:50:59.987959 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:50:59.992945 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:50:59.995936 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:00.000923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:00.010897 line       494                         if (i == j):
excute 13:51:00.017916 line       496                         i_j_list.append((
excute 13:51:00.024858 line       497                             i, j,
excute 13:51:00.028851 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:00.032838 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0)]
excute 13:51:00.035861 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:00.040828 line       494                         if (i == j):
excute 13:51:00.044821 line       496                         i_j_list.append((
excute 13:51:00.047829 line       497                             i, j,
excute 13:51:00.051788 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:00.054810 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:51:00.058768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:00.062758 line       494                         if (i == j):
excute 13:51:00.066747 line       496                         i_j_list.append((
excute 13:51:00.069739 line       497                             i, j,
excute 13:51:00.072731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:00.076720 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:51:00.079712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:00.083701 line       494                         if (i == j):
excute 13:51:00.087690 line       496                         i_j_list.append((
excute 13:51:00.090683 line       497                             i, j,
excute 13:51:00.094672 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:00.097664 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:51:00.101653 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:00.105644 line       494                         if (i == j):
excute 13:51:00.109632 line       496                         i_j_list.append((
excute 13:51:00.113621 line       497                             i, j,
excute 13:51:00.116613 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:00.121600 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0)]
excute 13:51:00.130576 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:00.135565 line       494                         if (i == j):
excute 13:51:00.139552 line       496                         i_j_list.append((
excute 13:51:00.143541 line       497                             i, j,
excute 13:51:00.148528 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:00.152556 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0)]
excute 13:51:00.156539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:00.160499 line       494                         if (i == j):
excute 13:51:00.164487 line       496                         i_j_list.append((
excute 13:51:00.167509 line       497                             i, j,
excute 13:51:00.171498 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:00.174492 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:51:00.178480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:00.182438 line       494                         if (i == j):
excute 13:51:00.186428 line       496                         i_j_list.append((
excute 13:51:00.190417 line       497                             i, j,
excute 13:51:00.193410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:00.198400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 1)]
excute 13:51:00.201389 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:00.206374 line       494                         if (i == j):
excute 13:51:00.210370 line       496                         i_j_list.append((
excute 13:51:00.213389 line       497                             i, j,
excute 13:51:00.217377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:00.220368 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 7, 2, 1), (1, 8, 2, 0), (1, 9, 2, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 1), (9, 8, 3, 0)]
excute 13:51:00.224360 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:00.230344 line       494                         if (i == j):
excute 13:51:00.234332 line       495                             continue
excute 13:51:00.237325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:00.241282 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:00.244304 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 9, -1, 0), (8, 7, -1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (2, 7, 0, 1), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 0), (5, 6, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (0, 7, 1, 1), (5, 7, 1, 1), (1, 0, 2, 0), (1, 2, 2, 0), (1, 3, 2, 0), (1, 4, 2, 0), (1, 5, 2, 0), (1, 6, 2, 0), (1, 8, 2, 0), (1, 9, 2, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (1, 7, 2, 1), (4, 7, 2, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 8, 3, 0), (9, 7, 3, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (3, 7, 4, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (6, 7, 5, 1)]
excute 13:51:00.248263 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:00.252253 line       505                     if (self.RELOCATE):
excute 13:51:00.257240 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:00.261237 line       505                     if (self.RELOCATE):
excute 13:51:00.265218 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:00.269206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:51:00.272200 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:00.277198 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:00.281207 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.285164 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:51:00.288188 line       556                     i = i_j[0]
excute 13:51:00.293142 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:00.296135 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.300124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:51:00.304114 line       556                     i = i_j[0]
excute 13:51:00.309100 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:00.312093 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.317080 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:00.321067 line       556                     i = i_j[0]
excute 13:51:00.325059 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:00.331041 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.339022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:51:00.342012 line       556                     i = i_j[0]
excute 13:51:00.347002 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:00.350987 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.355975 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:00.358966 line       556                     i = i_j[0]
excute 13:51:00.363955 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:00.366945 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.370934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:51:00.374923 line       556                     i = i_j[0]
excute 13:51:00.378938 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:00.382902 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.386893 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:51:00.390912 line       556                     i = i_j[0]
excute 13:51:00.394871 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:00.397893 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.401882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 1)
excute 13:51:00.405871 line       556                     i = i_j[0]
excute 13:51:00.409832 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:00.412855 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.417812 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:00.422794 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:00.426817 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:00.430808 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.436760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:00.439783 line       556                     i = i_j[0]
excute 13:51:00.443773 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:00.447762 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.451751 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:00.455740 line       556                     i = i_j[0]
excute 13:51:00.459730 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:00.463721 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.467677 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:00.470699 line       556                     i = i_j[0]
excute 13:51:00.474690 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:00.478679 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.482637 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:00.486626 line       556                     i = i_j[0]
excute 13:51:00.490616 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:00.493639 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.497596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:00.501593 line       556                     i = i_j[0]
excute 13:51:00.505576 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:00.508599 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.512559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:00.516547 line       556                     i = i_j[0]
excute 13:51:00.521535 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:00.525522 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.529514 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:00.532505 line       556                     i = i_j[0]
excute 13:51:00.538487 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:00.542477 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.545468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:00.549457 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:00.553447 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:00.557436 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.561427 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:00.565446 line       556                     i = i_j[0]
excute 13:51:00.569436 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:00.572430 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.576417 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:00.580408 line       556                     i = i_j[0]
excute 13:51:00.584397 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:00.587387 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.591378 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:00.595367 line       556                     i = i_j[0]
excute 13:51:00.599339 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:00.602348 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.607303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:00.610295 line       556                     i = i_j[0]
excute 13:51:00.614284 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:00.618273 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.623260 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:00.629247 line       556                     i = i_j[0]
excute 13:51:00.634234 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:00.639219 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.644231 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:00.647229 line       556                     i = i_j[0]
excute 13:51:00.651217 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:00.655207 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.659164 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:00.663153 line       556                     i = i_j[0]
excute 13:51:00.667143 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:00.671134 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.675123 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:00.679112 line       556                     i = i_j[0]
excute 13:51:00.683100 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:00.687089 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.691079 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 1)
excute 13:51:00.694071 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:00.699058 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:00.703047 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.707036 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 181
excute 13:51:00.710059 line       560                         if (t_tmp > self.TIME):
excute 13:51:00.714049 line       561                             time_over += 1
excute Modified var:.. time_over = 1
excute 13:51:00.718038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:51:00.721997 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:00.726013 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:00.730007 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.733996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:51:00.737987 line       556                     i = i_j[0]
excute 13:51:00.741946 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:00.746931 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.750921 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:51:00.754910 line       556                     i = i_j[0]
excute 13:51:00.759897 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:00.763886 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.767876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:51:00.771864 line       556                     i = i_j[0]
excute 13:51:00.775854 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:00.779843 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.783832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:51:00.787822 line       556                     i = i_j[0]
excute 13:51:00.791810 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:00.795800 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.798790 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:51:00.802780 line       556                     i = i_j[0]
excute 13:51:00.806769 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:00.809761 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.813768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:51:00.816743 line       556                     i = i_j[0]
excute 13:51:00.821730 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:00.824721 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.828711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:51:00.831703 line       556                     i = i_j[0]
excute 13:51:00.835692 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:00.839681 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.843671 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:51:00.848659 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:00.853644 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:00.857633 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.861624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:51:00.864615 line       556                     i = i_j[0]
excute 13:51:00.868618 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:00.871596 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.875585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:51:00.879574 line       556                     i = i_j[0]
excute 13:51:00.883564 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:00.886556 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.890546 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:51:00.893537 line       556                     i = i_j[0]
excute 13:51:00.897526 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:00.901525 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.904508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 0)
excute 13:51:00.908498 line       556                     i = i_j[0]
excute 13:51:00.912487 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:00.915479 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.919481 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:51:00.923458 line       556                     i = i_j[0]
excute 13:51:00.927448 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:00.930439 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.934428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:51:00.938418 line       556                     i = i_j[0]
excute 13:51:00.942408 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:00.946397 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.951383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:51:00.955373 line       556                     i = i_j[0]
excute 13:51:00.959362 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:00.967342 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.971332 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 1)
excute 13:51:00.975323 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:00.980306 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:00.984327 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:00.988299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 1)
excute 13:51:00.992309 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:00.997260 line       557                     j = i_j[1]
excute 13:51:01.001250 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.004241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 2, 0)
excute 13:51:01.010226 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:01.018205 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:01.026185 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.030172 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 2, 0)
excute 13:51:01.034161 line       556                     i = i_j[0]
excute 13:51:01.038151 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:01.042173 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.046131 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 2, 0)
excute 13:51:01.049153 line       556                     i = i_j[0]
excute 13:51:01.055139 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:01.059128 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.063086 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 2, 0)
excute 13:51:01.066108 line       556                     i = i_j[0]
excute 13:51:01.070098 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:01.074087 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.078046 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 2, 0)
excute 13:51:01.081068 line       556                     i = i_j[0]
excute 13:51:01.085057 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:01.089046 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.093006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 2, 0)
excute 13:51:01.095997 line       556                     i = i_j[0]
excute 13:51:01.100983 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:01.106967 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.110959 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 2, 0)
excute 13:51:01.113949 line       556                     i = i_j[0]
excute 13:51:01.117939 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:01.121927 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.127911 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 2, 0)
excute 13:51:01.131900 line       556                     i = i_j[0]
excute 13:51:01.135891 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:01.138914 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.142902 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:51:01.146899 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:01.150851 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:01.154841 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.159831 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:51:01.163815 line       556                     i = i_j[0]
excute 13:51:01.167837 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:01.171826 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.175803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:51:01.178808 line       556                     i = i_j[0]
excute 13:51:01.182800 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:01.186787 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.190743 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:51:01.193768 line       556                     i = i_j[0]
excute 13:51:01.197757 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:01.201746 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.205704 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:51:01.208728 line       556                     i = i_j[0]
excute 13:51:01.212717 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:01.216706 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.220695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:51:01.223686 line       556                     i = i_j[0]
excute 13:51:01.227676 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:01.231633 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.235623 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:51:01.238615 line       556                     i = i_j[0]
excute 13:51:01.242604 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:01.246593 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.250583 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:51:01.253575 line       556                     i = i_j[0]
excute 13:51:01.258562 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:01.262588 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.266541 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 2, 1)
excute 13:51:01.270530 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:01.274520 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:01.277543 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.281532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 1)
excute 13:51:01.285522 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:01.289479 line       557                     j = i_j[1]
excute 13:51:01.293501 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.297489 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:51:01.300482 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:01.305438 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:01.308460 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.312449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:51:01.316439 line       556                     i = i_j[0]
excute 13:51:01.320419 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:01.324385 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.334361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:51:01.340345 line       556                     i = i_j[0]
excute 13:51:01.344334 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:01.349325 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.354308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:51:01.358296 line       556                     i = i_j[0]
excute 13:51:01.363283 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:01.370265 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.377279 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 0)
excute 13:51:01.384226 line       556                     i = i_j[0]
excute 13:51:01.391208 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:01.395196 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.401181 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:51:01.410156 line       556                     i = i_j[0]
excute 13:51:01.415147 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:01.421130 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.427112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:51:01.432099 line       556                     i = i_j[0]
excute 13:51:01.440077 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:01.445065 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.452077 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:51:01.460058 line       556                     i = i_j[0]
excute 13:51:01.465011 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:01.470998 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.475985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 1)
excute 13:51:01.480969 line       556                     i = i_j[0]
excute 13:51:01.486952 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:01.495928 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.503909 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 4, 0)
excute 13:51:01.509891 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:01.518867 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:01.524851 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.533826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 4, 0)
excute 13:51:01.540807 line       556                     i = i_j[0]
excute 13:51:01.549784 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:01.556766 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.563749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 4, 0)
excute 13:51:01.568733 line       556                     i = i_j[0]
excute 13:51:01.576711 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:01.585688 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.591672 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 4, 0)
excute 13:51:01.599651 line       556                     i = i_j[0]
excute 13:51:01.607629 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:01.613613 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.620595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 4, 0)
excute 13:51:01.627577 line       556                     i = i_j[0]
excute 13:51:01.633561 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:01.641539 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.649518 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 4, 0)
excute 13:51:01.655501 line       556                     i = i_j[0]
excute 13:51:01.662483 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:01.668467 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.675450 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 4, 0)
excute 13:51:01.682431 line       556                     i = i_j[0]
excute 13:51:01.689410 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:01.695396 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.702376 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 4, 0)
excute 13:51:01.707362 line       556                     i = i_j[0]
excute 13:51:01.715342 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:01.721325 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.729303 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 4, 1)
excute 13:51:01.736285 line       556                     i = i_j[0]
excute 13:51:01.743267 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:01.749250 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.755235 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:51:01.763215 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:01.772190 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:01.792124 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.799104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:51:01.805092 line       556                     i = i_j[0]
excute 13:51:01.813069 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:01.820048 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.827031 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:51:01.835008 line       556                     i = i_j[0]
excute 13:51:01.842003 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:01.844982 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.848971 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:51:01.852961 line       556                     i = i_j[0]
excute 13:51:01.856949 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:01.860939 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.864928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:51:01.867920 line       556                     i = i_j[0]
excute 13:51:01.871909 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:01.875899 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.879889 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:51:01.883880 line       556                     i = i_j[0]
excute 13:51:01.888866 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:01.891857 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.895846 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:51:01.898837 line       556                     i = i_j[0]
excute 13:51:01.902828 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:01.906817 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.909808 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:51:01.913799 line       556                     i = i_j[0]
excute 13:51:01.917787 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:01.920779 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.924769 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 1)
excute 13:51:01.928758 line       556                     i = i_j[0]
excute 13:51:01.932748 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:01.935740 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:01.939728 line       555                 for i_j in i_j_list:
excute 13:51:01.943717 line       581             self.write_matrix(
excute 13:51:01.946741 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:01.950733 line       583                 result_file_path,
excute 13:51:01.954720 line       584                 mode='a'
excute 13:51:01.960675 line       488         for t in time_steps:
excute Modified var:.. t = 166
excute 13:51:01.965663 line       489             if (t != self.TIME + 1):
excute 13:51:01.969649 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:01.973640 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:01.977629 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:01.981619 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:01.984610 line       494                         if (i == j):
excute 13:51:01.992589 line       495                             continue
excute 13:51:01.999571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:02.006551 line       494                         if (i == j):
excute 13:51:02.013532 line       496                         i_j_list.append((
excute 13:51:02.019516 line       497                             i, j,
excute 13:51:02.025511 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.034478 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:51:02.038464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:02.044452 line       494                         if (i == j):
excute 13:51:02.050435 line       496                         i_j_list.append((
excute 13:51:02.054422 line       497                             i, j,
excute 13:51:02.060406 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.064397 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:51:02.067389 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:02.071378 line       494                         if (i == j):
excute 13:51:02.079357 line       496                         i_j_list.append((
excute 13:51:02.083346 line       497                             i, j,
excute 13:51:02.088332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.096324 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:51:02.102294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:02.109276 line       494                         if (i == j):
excute 13:51:02.113266 line       496                         i_j_list.append((
excute 13:51:02.117254 line       497                             i, j,
excute 13:51:02.121243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.125234 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1)]
excute 13:51:02.128224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:02.135208 line       494                         if (i == j):
excute 13:51:02.139196 line       496                         i_j_list.append((
excute 13:51:02.142187 line       497                             i, j,
excute 13:51:02.146177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.150167 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0)]
excute 13:51:02.153159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:02.158146 line       494                         if (i == j):
excute 13:51:02.162135 line       496                         i_j_list.append((
excute 13:51:02.166124 line       497                             i, j,
excute 13:51:02.169116 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.172108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:51:02.176097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:02.180086 line       494                         if (i == j):
excute 13:51:02.184076 line       496                         i_j_list.append((
excute 13:51:02.188065 line       497                             i, j,
excute 13:51:02.191058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.196056 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1)]
excute 13:51:02.199035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:02.204022 line       494                         if (i == j):
excute 13:51:02.208014 line       496                         i_j_list.append((
excute 13:51:02.212002 line       497                             i, j,
excute 13:51:02.214995 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.218987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0)]
excute 13:51:02.221975 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:02.225965 line       494                         if (i == j):
excute 13:51:02.230952 line       496                         i_j_list.append((
excute 13:51:02.233944 line       497                             i, j,
excute 13:51:02.237933 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.240925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:51:02.244914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:02.249899 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:02.255884 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:02.261870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:02.265858 line       494                         if (i == j):
excute 13:51:02.269848 line       496                         i_j_list.append((
excute 13:51:02.273837 line       497                             i, j,
excute 13:51:02.276829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.280818 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0)]
excute 13:51:02.284807 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:02.289795 line       494                         if (i == j):
excute 13:51:02.293781 line       495                             continue
excute 13:51:02.298771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:02.301762 line       494                         if (i == j):
excute 13:51:02.306747 line       496                         i_j_list.append((
excute 13:51:02.309740 line       497                             i, j,
excute 13:51:02.312732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.316721 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:02.319713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:02.323703 line       494                         if (i == j):
excute 13:51:02.331682 line       496                         i_j_list.append((
excute 13:51:02.338663 line       497                             i, j,
excute 13:51:02.341655 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.344647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:02.350638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:02.354621 line       494                         if (i == j):
excute 13:51:02.358608 line       496                         i_j_list.append((
excute 13:51:02.361600 line       497                             i, j,
excute 13:51:02.365594 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.369579 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1)]
excute 13:51:02.372570 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:02.376561 line       494                         if (i == j):
excute 13:51:02.380550 line       496                         i_j_list.append((
excute 13:51:02.384573 line       497                             i, j,
excute 13:51:02.387562 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.391552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0)]
excute 13:51:02.394544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:02.399501 line       494                         if (i == j):
excute 13:51:02.403488 line       496                         i_j_list.append((
excute 13:51:02.406513 line       497                             i, j,
excute 13:51:02.410502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.413496 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:02.417484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:02.421442 line       494                         if (i == j):
excute 13:51:02.425463 line       496                         i_j_list.append((
excute 13:51:02.428454 line       497                             i, j,
excute 13:51:02.432412 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.435435 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1)]
excute 13:51:02.438427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:02.442416 line       494                         if (i == j):
excute 13:51:02.446406 line       496                         i_j_list.append((
excute 13:51:02.450395 line       497                             i, j,
excute 13:51:02.454385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.457376 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0)]
excute 13:51:02.462332 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:02.468316 line       494                         if (i == j):
excute 13:51:02.471309 line       496                         i_j_list.append((
excute 13:51:02.475298 line       497                             i, j,
excute 13:51:02.479288 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.484274 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:51:02.490326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:02.494254 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:02.498244 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:02.503232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:02.507225 line       494                         if (i == j):
excute 13:51:02.511245 line       496                         i_j_list.append((
excute 13:51:02.514237 line       497                             i, j,
excute 13:51:02.518222 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.521214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0)]
excute 13:51:02.525203 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:02.529168 line       494                         if (i == j):
excute 13:51:02.533161 line       496                         i_j_list.append((
excute 13:51:02.536175 line       497                             i, j,
excute 13:51:02.539166 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.543160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:51:02.546147 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:02.550137 line       494                         if (i == j):
excute 13:51:02.555118 line       495                             continue
excute 13:51:02.558115 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:02.562105 line       494                         if (i == j):
excute 13:51:02.566095 line       496                         i_j_list.append((
excute 13:51:02.569054 line       497                             i, j,
excute 13:51:02.573043 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.576035 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:02.580024 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:02.584015 line       494                         if (i == j):
excute 13:51:02.588004 line       496                         i_j_list.append((
excute 13:51:02.590995 line       497                             i, j,
excute 13:51:02.594985 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.597977 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1)]
excute 13:51:02.601967 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:02.606955 line       494                         if (i == j):
excute 13:51:02.610942 line       496                         i_j_list.append((
excute 13:51:02.613966 line       497                             i, j,
excute 13:51:02.617956 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.621913 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0)]
excute 13:51:02.628895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:02.633882 line       494                         if (i == j):
excute 13:51:02.637871 line       496                         i_j_list.append((
excute 13:51:02.641860 line       497                             i, j,
excute 13:51:02.644851 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.648871 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:02.651865 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:02.655856 line       494                         if (i == j):
excute 13:51:02.659843 line       496                         i_j_list.append((
excute 13:51:02.663833 line       497                             i, j,
excute 13:51:02.667793 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.670784 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1)]
excute 13:51:02.674773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:02.678761 line       494                         if (i == j):
excute 13:51:02.682759 line       496                         i_j_list.append((
excute 13:51:02.686741 line       497                             i, j,
excute 13:51:02.689733 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.693722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0)]
excute 13:51:02.697712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:02.702700 line       494                         if (i == j):
excute 13:51:02.707684 line       496                         i_j_list.append((
excute 13:51:02.710675 line       497                             i, j,
excute 13:51:02.713668 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.717656 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:51:02.720649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:02.724638 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:02.728627 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:02.732618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:02.738602 line       494                         if (i == j):
excute 13:51:02.742627 line       496                         i_j_list.append((
excute 13:51:02.745582 line       497                             i, j,
excute 13:51:02.748574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.752563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0)]
excute 13:51:02.755557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:02.760544 line       494                         if (i == j):
excute 13:51:02.764534 line       496                         i_j_list.append((
excute 13:51:02.768523 line       497                             i, j,
excute 13:51:02.771515 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.775504 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0)]
excute 13:51:02.778496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:02.783484 line       494                         if (i == j):
excute 13:51:02.787471 line       496                         i_j_list.append((
excute 13:51:02.791461 line       497                             i, j,
excute 13:51:02.794454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.798442 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0)]
excute 13:51:02.802431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:02.805424 line       494                         if (i == j):
excute 13:51:02.811406 line       495                             continue
excute 13:51:02.815395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:02.818387 line       494                         if (i == j):
excute 13:51:02.822377 line       496                         i_j_list.append((
excute 13:51:02.826370 line       497                             i, j,
excute 13:51:02.829359 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.832351 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1)]
excute 13:51:02.836341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:02.840330 line       494                         if (i == j):
excute 13:51:02.844320 line       496                         i_j_list.append((
excute 13:51:02.847311 line       497                             i, j,
excute 13:51:02.851301 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.855292 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0)]
excute 13:51:02.858282 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:02.862309 line       494                         if (i == j):
excute 13:51:02.866260 line       496                         i_j_list.append((
excute 13:51:02.869283 line       497                             i, j,
excute 13:51:02.873273 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.876265 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0)]
excute 13:51:02.880256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:02.884246 line       494                         if (i == j):
excute 13:51:02.888234 line       496                         i_j_list.append((
excute 13:51:02.891224 line       497                             i, j,
excute 13:51:02.895182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.898206 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1)]
excute 13:51:02.901198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:02.905188 line       494                         if (i == j):
excute 13:51:02.909177 line       496                         i_j_list.append((
excute 13:51:02.914136 line       497                             i, j,
excute 13:51:02.917156 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.921145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0)]
excute 13:51:02.924136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:02.928127 line       494                         if (i == j):
excute 13:51:02.932116 line       496                         i_j_list.append((
excute 13:51:02.936104 line       497                             i, j,
excute 13:51:02.939098 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.943062 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0)]
excute 13:51:02.946078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:02.951066 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:02.954059 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:02.958053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:02.962036 line       494                         if (i == j):
excute 13:51:02.965995 line       496                         i_j_list.append((
excute 13:51:02.969021 line       497                             i, j,
excute 13:51:02.973006 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.975998 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0)]
excute 13:51:02.979988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:02.983949 line       494                         if (i == j):
excute 13:51:02.987936 line       496                         i_j_list.append((
excute 13:51:02.990958 line       497                             i, j,
excute 13:51:02.994915 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:02.997910 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:51:03.001898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:03.006887 line       494                         if (i == j):
excute 13:51:03.011873 line       496                         i_j_list.append((
excute 13:51:03.015862 line       497                             i, j,
excute 13:51:03.019851 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.023840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:51:03.027829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:03.031827 line       494                         if (i == j):
excute 13:51:03.035809 line       496                         i_j_list.append((
excute 13:51:03.038800 line       497                             i, j,
excute 13:51:03.042790 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.046780 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:51:03.050768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:03.054758 line       494                         if (i == j):
excute 13:51:03.059746 line       495                             continue
excute 13:51:03.062736 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:03.066726 line       494                         if (i == j):
excute 13:51:03.070715 line       496                         i_j_list.append((
excute 13:51:03.074734 line       497                             i, j,
excute 13:51:03.077729 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.081715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:51:03.084708 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:03.088697 line       494                         if (i == j):
excute 13:51:03.092686 line       496                         i_j_list.append((
excute 13:51:03.096676 line       497                             i, j,
excute 13:51:03.099667 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.103658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:51:03.106649 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:03.110638 line       494                         if (i == j):
excute 13:51:03.116592 line       496                         i_j_list.append((
excute 13:51:03.119585 line       497                             i, j,
excute 13:51:03.126566 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.130555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1)]
excute 13:51:03.134544 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:03.139532 line       494                         if (i == j):
excute 13:51:03.143530 line       496                         i_j_list.append((
excute 13:51:03.149036 line       497                             i, j,
excute 13:51:03.152061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.156051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0)]
excute 13:51:03.160041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:03.163999 line       494                         if (i == j):
excute 13:51:03.168000 line       496                         i_j_list.append((
excute 13:51:03.171012 line       497                             i, j,
excute 13:51:03.175001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.177995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:51:03.181950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:03.184974 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:03.188963 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:03.192922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:03.195944 line       494                         if (i == j):
excute 13:51:03.199934 line       496                         i_j_list.append((
excute 13:51:03.203924 line       497                             i, j,
excute 13:51:03.206915 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.209910 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0)]
excute 13:51:03.213866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:03.225168 line       494                         if (i == j):
excute 13:51:03.229183 line       496                         i_j_list.append((
excute 13:51:03.234167 line       497                             i, j,
excute 13:51:03.237159 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.240151 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0)]
excute 13:51:03.244140 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:03.248130 line       494                         if (i == j):
excute 13:51:03.252120 line       496                         i_j_list.append((
excute 13:51:03.256108 line       497                             i, j,
excute 13:51:03.259101 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.263089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0)]
excute 13:51:03.266082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:03.270071 line       494                         if (i == j):
excute 13:51:03.274060 line       496                         i_j_list.append((
excute 13:51:03.277052 line       497                             i, j,
excute 13:51:03.281041 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.284033 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0)]
excute 13:51:03.287026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:03.292019 line       494                         if (i == j):
excute 13:51:03.296034 line       496                         i_j_list.append((
excute 13:51:03.299992 line       497                             i, j,
excute 13:51:03.303016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.306008 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1)]
excute 13:51:03.309997 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:03.313963 line       494                         if (i == j):
excute 13:51:03.318942 line       495                             continue
excute 13:51:03.323929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:03.332904 line       494                         if (i == j):
excute 13:51:03.337892 line       496                         i_j_list.append((
excute 13:51:03.341881 line       497                             i, j,
excute 13:51:03.344873 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.349860 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0)]
excute 13:51:03.353847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:03.357836 line       494                         if (i == j):
excute 13:51:03.361825 line       496                         i_j_list.append((
excute 13:51:03.365815 line       497                             i, j,
excute 13:51:03.369806 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.372830 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1)]
excute 13:51:03.376819 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:03.380777 line       494                         if (i == j):
excute 13:51:03.385765 line       496                         i_j_list.append((
excute 13:51:03.389753 line       497                             i, j,
excute 13:51:03.393744 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.396765 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0)]
excute 13:51:03.400724 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:03.404713 line       494                         if (i == j):
excute 13:51:03.408702 line       496                         i_j_list.append((
excute 13:51:03.412692 line       497                             i, j,
excute 13:51:03.416681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.420670 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0)]
excute 13:51:03.425655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:03.429652 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:03.432668 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:03.436626 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:03.439649 line       494                         if (i == j):
excute 13:51:03.443641 line       496                         i_j_list.append((
excute 13:51:03.447598 line       497                             i, j,
excute 13:51:03.451620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.455577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0)]
excute 13:51:03.458599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:03.462568 line       494                         if (i == j):
excute 13:51:03.466579 line       496                         i_j_list.append((
excute 13:51:03.470544 line       497                             i, j,
excute 13:51:03.473560 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.477519 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:51:03.480511 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:03.485495 line       494                         if (i == j):
excute 13:51:03.489485 line       496                         i_j_list.append((
excute 13:51:03.492478 line       497                             i, j,
excute 13:51:03.499460 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.506440 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:51:03.511427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:03.515416 line       494                         if (i == j):
excute 13:51:03.519405 line       496                         i_j_list.append((
excute 13:51:03.523397 line       497                             i, j,
excute 13:51:03.527417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.530407 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:51:03.534398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:03.538356 line       494                         if (i == j):
excute 13:51:03.542345 line       496                         i_j_list.append((
excute 13:51:03.545368 line       497                             i, j,
excute 13:51:03.549356 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.552348 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1)]
excute 13:51:03.556338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:03.560303 line       494                         if (i == j):
excute 13:51:03.564284 line       496                         i_j_list.append((
excute 13:51:03.568275 line       497                             i, j,
excute 13:51:03.571299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.575289 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0)]
excute 13:51:03.578279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:03.582270 line       494                         if (i == j):
excute 13:51:03.586258 line       495                             continue
excute 13:51:03.590228 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:03.593207 line       494                         if (i == j):
excute 13:51:03.597196 line       496                         i_j_list.append((
excute 13:51:03.601186 line       497                             i, j,
excute 13:51:03.607170 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.610162 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1)]
excute 13:51:03.614185 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:03.618148 line       494                         if (i == j):
excute 13:51:03.622131 line       496                         i_j_list.append((
excute 13:51:03.629122 line       497                             i, j,
excute 13:51:03.632136 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.636125 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0)]
excute 13:51:03.640114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:03.644107 line       494                         if (i == j):
excute 13:51:03.648093 line       496                         i_j_list.append((
excute 13:51:03.651087 line       497                             i, j,
excute 13:51:03.655073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.659046 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:51:03.662056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:03.667011 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:03.670004 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:03.673993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:03.678978 line       494                         if (i == j):
excute 13:51:03.682970 line       496                         i_j_list.append((
excute 13:51:03.685961 line       497                             i, j,
excute 13:51:03.689950 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.693940 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0)]
excute 13:51:03.697930 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:03.701917 line       494                         if (i == j):
excute 13:51:03.705906 line       496                         i_j_list.append((
excute 13:51:03.709897 line       497                             i, j,
excute 13:51:03.712890 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.716878 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:51:03.720868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:03.725854 line       494                         if (i == j):
excute 13:51:03.731839 line       496                         i_j_list.append((
excute 13:51:03.734862 line       497                             i, j,
excute 13:51:03.738852 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.741843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:03.745834 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:03.749822 line       494                         if (i == j):
excute 13:51:03.753810 line       496                         i_j_list.append((
excute 13:51:03.757800 line       497                             i, j,
excute 13:51:03.761768 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.764780 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:03.768772 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:03.772729 line       494                         if (i == j):
excute 13:51:03.777715 line       496                         i_j_list.append((
excute 13:51:03.780708 line       497                             i, j,
excute 13:51:03.784697 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.788686 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1)]
excute 13:51:03.793673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:03.798658 line       494                         if (i == j):
excute 13:51:03.802648 line       496                         i_j_list.append((
excute 13:51:03.806638 line       497                             i, j,
excute 13:51:03.810626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.814618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0)]
excute 13:51:03.819613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:03.824592 line       494                         if (i == j):
excute 13:51:03.828580 line       496                         i_j_list.append((
excute 13:51:03.833566 line       497                             i, j,
excute 13:51:03.838552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.842542 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:03.846533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:03.851517 line       494                         if (i == j):
excute 13:51:03.857502 line       495                             continue
excute 13:51:03.863330 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:03.867322 line       494                         if (i == j):
excute 13:51:03.871313 line       496                         i_j_list.append((
excute 13:51:03.878292 line       497                             i, j,
excute 13:51:03.885276 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.890260 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:51:03.895262 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:03.899238 line       494                         if (i == j):
excute 13:51:03.904226 line       496                         i_j_list.append((
excute 13:51:03.908212 line       497                             i, j,
excute 13:51:03.911206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.916193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:51:03.920181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:03.925168 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:03.929194 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:03.934143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:03.941125 line       494                         if (i == j):
excute 13:51:03.946113 line       496                         i_j_list.append((
excute 13:51:03.950102 line       497                             i, j,
excute 13:51:03.955089 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.958080 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:51:03.964064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:03.970050 line       494                         if (i == j):
excute 13:51:03.974039 line       496                         i_j_list.append((
excute 13:51:03.978026 line       497                             i, j,
excute 13:51:03.982029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:03.985007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:51:03.988997 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:03.992988 line       494                         if (i == j):
excute 13:51:03.996976 line       496                         i_j_list.append((
excute 13:51:04.000967 line       497                             i, j,
excute 13:51:04.003958 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.007948 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:51:04.012935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:04.016923 line       494                         if (i == j):
excute 13:51:04.020912 line       496                         i_j_list.append((
excute 13:51:04.024902 line       497                             i, j,
excute 13:51:04.027892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.031883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:51:04.035873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:04.041856 line       494                         if (i == j):
excute 13:51:04.045845 line       496                         i_j_list.append((
excute 13:51:04.048837 line       497                             i, j,
excute 13:51:04.051829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.055819 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1)]
excute 13:51:04.059808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:04.066885 line       494                         if (i == j):
excute 13:51:04.070875 line       496                         i_j_list.append((
excute 13:51:04.073866 line       497                             i, j,
excute 13:51:04.077857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.080879 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0)]
excute 13:51:04.084837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:04.088827 line       494                         if (i == j):
excute 13:51:04.091851 line       496                         i_j_list.append((
excute 13:51:04.095843 line       497                             i, j,
excute 13:51:04.098836 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.102822 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:51:04.106778 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:04.110768 line       494                         if (i == j):
excute 13:51:04.114758 line       496                         i_j_list.append((
excute 13:51:04.117749 line       497                             i, j,
excute 13:51:04.124731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.128753 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1)]
excute 13:51:04.132711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:04.136699 line       494                         if (i == j):
excute 13:51:04.140689 line       495                             continue
excute 13:51:04.144709 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:04.148698 line       494                         if (i == j):
excute 13:51:04.152656 line       496                         i_j_list.append((
excute 13:51:04.156677 line       497                             i, j,
excute 13:51:04.159671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.163658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0)]
excute 13:51:04.167616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:04.171605 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:04.174629 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:04.178592 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:04.182577 line       494                         if (i == j):
excute 13:51:04.186567 line       496                         i_j_list.append((
excute 13:51:04.189588 line       497                             i, j,
excute 13:51:04.193578 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.197539 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0)]
excute 13:51:04.200527 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:04.204517 line       494                         if (i == j):
excute 13:51:04.208520 line       496                         i_j_list.append((
excute 13:51:04.211498 line       497                             i, j,
excute 13:51:04.215488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.220475 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0)]
excute 13:51:04.224464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:04.230448 line       494                         if (i == j):
excute 13:51:04.235435 line       496                         i_j_list.append((
excute 13:51:04.240422 line       497                             i, j,
excute 13:51:04.245408 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.250399 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0)]
excute 13:51:04.255398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:04.260372 line       494                         if (i == j):
excute 13:51:04.264359 line       496                         i_j_list.append((
excute 13:51:04.269344 line       497                             i, j,
excute 13:51:04.273333 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.278322 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0)]
excute 13:51:04.283308 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:04.289292 line       494                         if (i == j):
excute 13:51:04.298281 line       496                         i_j_list.append((
excute 13:51:04.305249 line       497                             i, j,
excute 13:51:04.312229 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.317218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 1)]
excute 13:51:04.321209 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:04.327190 line       494                         if (i == j):
excute 13:51:04.339158 line       496                         i_j_list.append((
excute 13:51:04.354117 line       497                             i, j,
excute 13:51:04.364091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.372084 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 1), (9, 5, 3, 0)]
excute 13:51:04.378055 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:04.384038 line       494                         if (i == j):
excute 13:51:04.389027 line       496                         i_j_list.append((
excute 13:51:04.394011 line       497                             i, j,
excute 13:51:04.397999 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.402989 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 1), (9, 5, 3, 0), (9, 6, 3, 0)]
excute 13:51:04.407975 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:04.412960 line       494                         if (i == j):
excute 13:51:04.417948 line       496                         i_j_list.append((
excute 13:51:04.421949 line       497                             i, j,
excute 13:51:04.426923 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.431910 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 1), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 1)]
excute 13:51:04.435898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:04.440885 line       494                         if (i == j):
excute 13:51:04.445872 line       496                         i_j_list.append((
excute 13:51:04.453853 line       497                             i, j,
excute 13:51:04.458838 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:04.462827 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 1), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 1), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 1), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 1), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 1), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 4, 1, 1), (5, 6, 1, 0), (5, 7, 1, 1), (5, 8, 1, 0), (5, 9, 1, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 4, 3, 1), (9, 5, 3, 0), (9, 6, 3, 0), (9, 7, 3, 1), (9, 8, 3, 0)]
excute 13:51:04.466824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:04.472802 line       494                         if (i == j):
excute 13:51:04.476790 line       495                             continue
excute 13:51:04.480779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:04.485765 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:04.489755 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 9, -1, 0), (8, 4, -1, 1), (8, 7, -1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (2, 4, 0, 1), (2, 7, 0, 1), (7, 4, 0, 1), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (5, 0, 1, 0), (5, 1, 1, 0), (5, 2, 1, 0), (5, 3, 1, 0), (5, 6, 1, 0), (5, 8, 1, 0), (5, 9, 1, 0), (0, 4, 1, 1), (0, 7, 1, 1), (1, 4, 1, 1), (1, 7, 1, 1), (5, 4, 1, 1), (5, 7, 1, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (4, 7, 2, 1), (9, 0, 3, 0), (9, 1, 3, 0), (9, 2, 3, 0), (9, 3, 3, 0), (9, 5, 3, 0), (9, 6, 3, 0), (9, 8, 3, 0), (9, 4, 3, 1), (9, 7, 3, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (3, 4, 4, 1), (3, 7, 4, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 5, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (6, 4, 5, 1), (6, 7, 5, 1)]
excute 13:51:04.494746 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:04.499729 line       505                     if (self.RELOCATE):
excute 13:51:04.503718 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:04.506709 line       505                     if (self.RELOCATE):
excute 13:51:04.511696 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:04.515685 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:51:04.518677 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:04.522666 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:04.527653 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.531643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:51:04.534635 line       556                     i = i_j[0]
excute 13:51:04.539622 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:04.543611 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.547599 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:51:04.551589 line       556                     i = i_j[0]
excute 13:51:04.559569 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:04.566549 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.570538 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:04.574527 line       556                     i = i_j[0]
excute 13:51:04.578518 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:04.581509 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.588491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:04.595473 line       556                     i = i_j[0]
excute 13:51:04.599461 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:04.603452 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.607441 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:51:04.610432 line       556                     i = i_j[0]
excute 13:51:04.617414 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:04.621403 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.626390 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:51:04.630378 line       556                     i = i_j[0]
excute 13:51:04.634369 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:04.638358 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.643345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 1)
excute 13:51:04.646336 line       556                     i = i_j[0]
excute 13:51:04.651325 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:04.655313 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.660298 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 1)
excute 13:51:04.664287 line       556                     i = i_j[0]
excute 13:51:04.668277 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:04.672266 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.676255 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:04.680245 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:04.684234 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:04.688223 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.692213 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:04.696202 line       556                     i = i_j[0]
excute 13:51:04.700193 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:04.704182 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.709168 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:04.713158 line       556                     i = i_j[0]
excute 13:51:04.717147 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:04.720139 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.725126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:04.730112 line       556                     i = i_j[0]
excute 13:51:04.735101 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:04.738091 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.742079 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:04.746069 line       556                     i = i_j[0]
excute 13:51:04.750059 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:04.754048 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.758038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:04.764021 line       556                     i = i_j[0]
excute 13:51:04.768010 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:04.772001 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.774991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:04.778980 line       556                     i = i_j[0]
excute 13:51:04.782971 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:04.786960 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.790950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:04.794940 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:04.800923 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:04.804912 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.808900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:04.812890 line       556                     i = i_j[0]
excute 13:51:04.816880 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:04.820869 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.824859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:04.828849 line       556                     i = i_j[0]
excute 13:51:04.832838 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:04.836826 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.840817 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:04.844806 line       556                     i = i_j[0]
excute 13:51:04.848795 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:04.851786 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.856774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:04.859764 line       556                     i = i_j[0]
excute 13:51:04.864754 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:04.868742 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.872732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:04.875722 line       556                     i = i_j[0]
excute 13:51:04.879711 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:04.883701 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.887691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:04.891681 line       556                     i = i_j[0]
excute 13:51:04.898662 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:04.905642 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.909633 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:04.912624 line       556                     i = i_j[0]
excute 13:51:04.918610 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:04.922597 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.926587 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 1)
excute 13:51:04.929578 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:04.936560 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:04.940550 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.945538 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 1)
excute 13:51:04.950523 line       556                     i = i_j[0]
excute 13:51:04.954513 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:04.961493 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.968477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 1)
excute 13:51:04.972465 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:04.976454 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:04.981441 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:04.985430 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:51:04.989418 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:04.996400 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:05.003382 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.012358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:51:05.016346 line       556                     i = i_j[0]
excute 13:51:05.021334 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:05.024324 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.028314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:51:05.032303 line       556                     i = i_j[0]
excute 13:51:05.036294 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:05.040283 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.046267 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:51:05.051253 line       556                     i = i_j[0]
excute 13:51:05.056241 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:05.062224 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.067211 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:51:05.074192 line       556                     i = i_j[0]
excute 13:51:05.078183 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:05.084167 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.088156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:51:05.091147 line       556                     i = i_j[0]
excute 13:51:05.095136 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:05.099125 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.103115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:51:05.106106 line       556                     i = i_j[0]
excute 13:51:05.111094 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:05.114085 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.118075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:05.125057 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:05.130044 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:05.136028 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.140017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:05.143008 line       556                     i = i_j[0]
excute 13:51:05.147996 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:05.150987 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.154977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:05.158966 line       556                     i = i_j[0]
excute 13:51:05.162956 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:05.166945 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.170934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:05.175920 line       556                     i = i_j[0]
excute 13:51:05.180910 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:05.183901 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.188885 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:05.192877 line       556                     i = i_j[0]
excute 13:51:05.196867 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:05.199856 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.204844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:05.207835 line       556                     i = i_j[0]
excute 13:51:05.214817 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:05.220800 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.227782 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:05.231773 line       556                     i = i_j[0]
excute 13:51:05.235763 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:05.239751 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.243740 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 1, 0)
excute 13:51:05.247730 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:05.255709 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:05.259698 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.264683 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 1, 0)
excute 13:51:05.268673 line       556                     i = i_j[0]
excute 13:51:05.275655 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:05.280640 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.284629 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 1, 0)
excute 13:51:05.288619 line       556                     i = i_j[0]
excute 13:51:05.293607 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:05.299589 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.304577 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 1, 0)
excute 13:51:05.307567 line       556                     i = i_j[0]
excute 13:51:05.312556 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:05.319538 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.328517 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 1, 0)
excute 13:51:05.339484 line       556                     i = i_j[0]
excute 13:51:05.351452 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:05.359430 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.363419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 1, 0)
excute 13:51:05.369405 line       556                     i = i_j[0]
excute 13:51:05.373394 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:05.377383 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.385361 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 1, 0)
excute 13:51:05.389352 line       556                     i = i_j[0]
excute 13:51:05.393339 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:05.397330 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.401319 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 1)
excute 13:51:05.405309 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:05.410294 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:05.417275 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.424256 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 1)
excute 13:51:05.430240 line       556                     i = i_j[0]
excute 13:51:05.438219 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:05.444205 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.451186 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 1)
excute 13:51:05.457169 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:05.461160 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:05.469139 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.473127 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 1)
excute 13:51:05.477116 line       556                     i = i_j[0]
excute 13:51:05.483101 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:05.487091 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.491079 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 1, 1)
excute 13:51:05.495068 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:05.501061 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:05.506038 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.511024 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 1, 1)
excute 13:51:05.517008 line       556                     i = i_j[0]
excute 13:51:05.522995 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:05.526981 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.530972 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:51:05.537954 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:05.541943 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:05.545931 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.549920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:51:05.553910 line       556                     i = i_j[0]
excute 13:51:05.557898 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:05.561888 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.565878 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:51:05.569867 line       556                     i = i_j[0]
excute 13:51:05.575851 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:05.579840 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.583830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:51:05.589813 line       556                     i = i_j[0]
excute 13:51:05.593804 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:05.596795 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.604775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:51:05.607766 line       556                     i = i_j[0]
excute 13:51:05.614758 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:05.617739 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.622726 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:51:05.628710 line       556                     i = i_j[0]
excute 13:51:05.633697 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:05.636688 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.640678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:51:05.644668 line       556                     i = i_j[0]
excute 13:51:05.648657 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:05.651648 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.655639 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:51:05.659627 line       556                     i = i_j[0]
excute 13:51:05.663617 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:05.667607 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.671596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 1)
excute 13:51:05.674588 line       556                     i = i_j[0]
excute 13:51:05.678578 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:05.682567 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.686556 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 187
excute 13:51:05.690545 line       560                         if (t_tmp > self.TIME):
excute 13:51:05.695532 line       561                             time_over += 1
excute Modified var:.. time_over = 2
excute 13:51:05.699521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 3, 0)
excute 13:51:05.703510 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:05.707500 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:05.711489 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.716477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 3, 0)
excute 13:51:05.719469 line       556                     i = i_j[0]
excute 13:51:05.724454 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:05.727448 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.733430 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 3, 0)
excute 13:51:05.736423 line       556                     i = i_j[0]
excute 13:51:05.740412 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:05.744402 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.748392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 3, 0)
excute 13:51:05.751382 line       556                     i = i_j[0]
excute 13:51:05.756371 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:05.759361 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.763351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 3, 0)
excute 13:51:05.767340 line       556                     i = i_j[0]
excute 13:51:05.771330 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:05.774321 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.778309 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 3, 0)
excute 13:51:05.782299 line       556                     i = i_j[0]
excute 13:51:05.786288 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:05.790277 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.796263 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 3, 0)
excute 13:51:05.799253 line       556                     i = i_j[0]
excute 13:51:05.803242 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:05.807232 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.811228 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 3, 1)
excute 13:51:05.815211 line       556                     i = i_j[0]
excute 13:51:05.819201 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:05.822192 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.826181 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 3, 1)
excute 13:51:05.830170 line       556                     i = i_j[0]
excute 13:51:05.834161 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:05.837152 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.841141 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 4, 0)
excute 13:51:05.845131 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:05.849120 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:05.853110 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.858099 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 4, 0)
excute 13:51:05.862087 line       556                     i = i_j[0]
excute 13:51:05.866077 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:05.871064 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.875053 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 4, 0)
excute 13:51:05.879043 line       556                     i = i_j[0]
excute 13:51:05.883031 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:05.887021 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.891009 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 4, 0)
excute 13:51:05.895996 line       556                     i = i_j[0]
excute 13:51:05.900984 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:05.903974 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.907963 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 4, 0)
excute 13:51:05.911953 line       556                     i = i_j[0]
excute 13:51:05.916939 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:05.920930 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.924920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 4, 0)
excute 13:51:05.927909 line       556                     i = i_j[0]
excute 13:51:05.931899 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:05.935888 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.939878 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 4, 0)
excute 13:51:05.946861 line       556                     i = i_j[0]
excute 13:51:05.950883 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:05.955835 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.959826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 4, 1)
excute 13:51:05.962819 line       556                     i = i_j[0]
excute 13:51:05.967803 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:05.970796 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:05.974785 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 171
excute 13:51:05.978775 line       560                         if (t_tmp > self.TIME):
excute 13:51:05.982765 line       563                             if (available_vhecles[i][t] == 0):
excute 13:51:05.985756 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:51:05.989746 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:51:05.992738 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:51:05.996757 line       569                                     available_vhecles[i][t],
excute 13:51:06.002710 line       570                                     available_vhecles[j][t_tmp],
excute 13:51:06.005701 line       571                                     self.S_capacities[j],
excute 13:51:06.012683 line       572                                     demands[t][i][j],
excute 13:51:06.016673 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = -2
calc_contract     Starting var:.. available_vhecles_target = 1
calc_contract     Starting var:.. capacity_target = 3
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 166
calc_contract     13:51:06.019665 call       352     def caluculate_contract(
calc_contract     13:51:06.022657 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:51:06.023656 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:51:06.024653 line       362         if (available_vhecles_start >= demand):
calc_contract     13:51:06.025651 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:51:06.025651 line       375                 can_contract = available_vhecles_target
calc_contract     New var:....... can_contract = 1
calc_contract     13:51:06.026648 line       376                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 3
calc_contract     13:51:06.027644 line       385         return [can_contract, rsf, rse]
calc_contract     13:51:06.028643 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [1, 0, 3]
excute Modified var:.. rse_tmp = 3
excute 13:51:06.029639 line       575                                 rsf += rsf_tmp
excute 13:51:06.033628 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 181
excute 13:51:06.037618 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 3
move_cars     Starting var:.. j = 4
move_cars     Starting var:.. t = 166
move_cars     Starting var:.. t_tmp = 171
move_cars     Starting var:.. can_contract = 1
move_cars     13:51:06.043603 call       388     def move_cars(
move_cars     13:51:06.047590 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:51:06.048588 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:51:06.049586 line       399         return available_vhecles
move_cars     13:51:06.051579 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 3, 3, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:06.054571 line       579                                 success += can_contract
excute Modified var:.. success = 82
excute 13:51:06.061554 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 4, 1)
excute 13:51:06.065542 line       556                     i = i_j[0]
excute 13:51:06.072527 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:06.075516 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:06.082496 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:51:06.086487 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:06.090478 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:06.095463 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:06.099454 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:51:06.106435 line       556                     i = i_j[0]
excute 13:51:06.110421 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:06.114411 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:06.118401 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:51:06.125385 line       556                     i = i_j[0]
excute 13:51:06.129373 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:06.133361 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:06.138348 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:51:06.142337 line       556                     i = i_j[0]
excute 13:51:06.146328 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:06.150315 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:06.154305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:51:06.161288 line       556                     i = i_j[0]
excute 13:51:06.165277 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:06.169266 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:06.174253 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:51:06.178241 line       556                     i = i_j[0]
excute 13:51:06.182231 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:06.185222 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:06.190210 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:51:06.193200 line       556                     i = i_j[0]
excute 13:51:06.198189 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:06.202179 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:06.208165 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 1)
excute 13:51:06.212152 line       556                     i = i_j[0]
excute 13:51:06.216140 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:06.220132 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:06.224121 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 1)
excute 13:51:06.228111 line       556                     i = i_j[0]
excute 13:51:06.232100 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:06.238081 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:06.245062 line       555                 for i_j in i_j_list:
excute 13:51:06.252048 line       581             self.write_matrix(
excute 13:51:06.256033 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:06.261019 line       583                 result_file_path,
excute 13:51:06.267004 line       584                 mode='a'
excute 13:51:06.278972 line       488         for t in time_steps:
excute Modified var:.. t = 167
excute 13:51:06.287950 line       489             if (t != self.TIME + 1):
excute 13:51:06.295928 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:06.302909 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:06.311885 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:06.318867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:06.326844 line       494                         if (i == j):
excute 13:51:06.336819 line       495                             continue
excute 13:51:06.342801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:06.349783 line       494                         if (i == j):
excute 13:51:06.357768 line       496                         i_j_list.append((
excute 13:51:06.365740 line       497                             i, j,
excute 13:51:06.374716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.394662 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:51:06.403640 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:06.411619 line       494                         if (i == j):
excute 13:51:06.419597 line       496                         i_j_list.append((
excute 13:51:06.435554 line       497                             i, j,
excute 13:51:06.442535 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.449517 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:51:06.457495 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:06.465475 line       494                         if (i == j):
excute 13:51:06.473454 line       496                         i_j_list.append((
excute 13:51:06.481432 line       497                             i, j,
excute 13:51:06.488414 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.495396 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:51:06.507362 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:06.522323 line       494                         if (i == j):
excute 13:51:06.532296 line       496                         i_j_list.append((
excute 13:51:06.542278 line       497                             i, j,
excute 13:51:06.550247 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.560220 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:51:06.569196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:06.582161 line       494                         if (i == j):
excute 13:51:06.592135 line       496                         i_j_list.append((
excute 13:51:06.599117 line       497                             i, j,
excute 13:51:06.608092 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.616070 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:51:06.627042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:06.636018 line       494                         if (i == j):
excute 13:51:06.645991 line       496                         i_j_list.append((
excute 13:51:06.654967 line       497                             i, j,
excute 13:51:06.663943 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.673916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:51:06.681896 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:06.691868 line       494                         if (i == j):
excute 13:51:06.700845 line       496                         i_j_list.append((
excute 13:51:06.710818 line       497                             i, j,
excute 13:51:06.719794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.728770 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2)]
excute 13:51:06.738744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:06.748719 line       494                         if (i == j):
excute 13:51:06.758690 line       496                         i_j_list.append((
excute 13:51:06.768663 line       497                             i, j,
excute 13:51:06.777640 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.786616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0)]
excute 13:51:06.794594 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:06.804568 line       494                         if (i == j):
excute 13:51:06.815539 line       496                         i_j_list.append((
excute 13:51:06.823519 line       497                             i, j,
excute 13:51:06.832493 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.840473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:51:06.847453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:06.855432 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:06.862411 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:06.870394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:06.876375 line       494                         if (i == j):
excute 13:51:06.883358 line       496                         i_j_list.append((
excute 13:51:06.889341 line       497                             i, j,
excute 13:51:06.896323 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.903303 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0)]
excute 13:51:06.908289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:06.916269 line       494                         if (i == j):
excute 13:51:06.920258 line       495                             continue
excute 13:51:06.923249 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:06.926241 line       494                         if (i == j):
excute 13:51:06.930230 line       496                         i_j_list.append((
excute 13:51:06.935218 line       497                             i, j,
excute 13:51:06.938209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.942199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:06.945190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:06.950179 line       494                         if (i == j):
excute 13:51:06.954170 line       496                         i_j_list.append((
excute 13:51:06.957161 line       497                             i, j,
excute 13:51:06.962146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.966136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:06.972118 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:06.976108 line       494                         if (i == j):
excute 13:51:06.980096 line       496                         i_j_list.append((
excute 13:51:06.984086 line       497                             i, j,
excute 13:51:06.987078 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:06.991067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:06.994059 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:06.998049 line       494                         if (i == j):
excute 13:51:07.002038 line       496                         i_j_list.append((
excute 13:51:07.006028 line       497                             i, j,
excute 13:51:07.009019 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.013009 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:07.016998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:07.020989 line       494                         if (i == j):
excute 13:51:07.023979 line       496                         i_j_list.append((
excute 13:51:07.027968 line       497                             i, j,
excute 13:51:07.030961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.033953 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:07.038942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:07.042932 line       494                         if (i == j):
excute 13:51:07.046920 line       496                         i_j_list.append((
excute 13:51:07.049910 line       497                             i, j,
excute 13:51:07.052903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.056891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2)]
excute 13:51:07.060883 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:07.063873 line       494                         if (i == j):
excute 13:51:07.067863 line       496                         i_j_list.append((
excute 13:51:07.070855 line       497                             i, j,
excute 13:51:07.074844 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.077836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0)]
excute 13:51:07.081826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:07.084817 line       494                         if (i == j):
excute 13:51:07.088807 line       496                         i_j_list.append((
excute 13:51:07.091798 line       497                             i, j,
excute 13:51:07.095787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.098780 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:51:07.102769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:07.106760 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:07.109782 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:07.113773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:07.116764 line       494                         if (i == j):
excute 13:51:07.120753 line       496                         i_j_list.append((
excute 13:51:07.124742 line       497                             i, j,
excute 13:51:07.128732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.131723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0)]
excute 13:51:07.136681 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:07.142663 line       494                         if (i == j):
excute 13:51:07.147649 line       496                         i_j_list.append((
excute 13:51:07.152638 line       497                             i, j,
excute 13:51:07.158622 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.163607 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:51:07.169592 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:07.175575 line       494                         if (i == j):
excute 13:51:07.181559 line       495                             continue
excute 13:51:07.186548 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:07.192529 line       494                         if (i == j):
excute 13:51:07.197516 line       496                         i_j_list.append((
excute 13:51:07.202506 line       497                             i, j,
excute 13:51:07.207492 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.212476 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:07.216465 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:07.223448 line       494                         if (i == j):
excute 13:51:07.227439 line       496                         i_j_list.append((
excute 13:51:07.239675 line       497                             i, j,
excute 13:51:07.246660 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.252643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:07.256632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:07.260623 line       494                         if (i == j):
excute 13:51:07.264611 line       496                         i_j_list.append((
excute 13:51:07.268600 line       497                             i, j,
excute 13:51:07.271592 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.274585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:07.278573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:07.282563 line       494                         if (i == j):
excute 13:51:07.286553 line       496                         i_j_list.append((
excute 13:51:07.290543 line       497                             i, j,
excute 13:51:07.293534 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.297524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:07.300515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:07.304506 line       494                         if (i == j):
excute 13:51:07.308495 line       496                         i_j_list.append((
excute 13:51:07.311486 line       497                             i, j,
excute 13:51:07.315476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.318467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2)]
excute 13:51:07.322456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:07.326447 line       494                         if (i == j):
excute 13:51:07.339413 line       496                         i_j_list.append((
excute 13:51:07.342437 line       497                             i, j,
excute 13:51:07.345429 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.352377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0)]
excute 13:51:07.357364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:07.361354 line       494                         if (i == j):
excute 13:51:07.365343 line       496                         i_j_list.append((
excute 13:51:07.370330 line       497                             i, j,
excute 13:51:07.373322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.377310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:51:07.380302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:07.385302 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:07.389279 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:07.393303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:07.396290 line       494                         if (i == j):
excute 13:51:07.401249 line       496                         i_j_list.append((
excute 13:51:07.405237 line       497                             i, j,
excute 13:51:07.409226 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.416207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0)]
excute 13:51:07.419198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:07.427179 line       494                         if (i == j):
excute 13:51:07.432164 line       496                         i_j_list.append((
excute 13:51:07.435155 line       497                             i, j,
excute 13:51:07.439144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.442136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0)]
excute 13:51:07.446161 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:07.451114 line       494                         if (i == j):
excute 13:51:07.455135 line       496                         i_j_list.append((
excute 13:51:07.459123 line       497                             i, j,
excute 13:51:07.462118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.466105 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:51:07.469064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:07.473054 line       494                         if (i == j):
excute 13:51:07.477043 line       495                             continue
excute 13:51:07.481032 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:07.484025 line       494                         if (i == j):
excute 13:51:07.488015 line       496                         i_j_list.append((
excute 13:51:07.491006 line       497                             i, j,
excute 13:51:07.493998 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.497987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:51:07.500979 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:07.504969 line       494                         if (i == j):
excute 13:51:07.508958 line       496                         i_j_list.append((
excute 13:51:07.515939 line       497                             i, j,
excute 13:51:07.519928 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.522920 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:51:07.525913 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:07.529901 line       494                         if (i == j):
excute 13:51:07.533891 line       496                         i_j_list.append((
excute 13:51:07.536883 line       497                             i, j,
excute 13:51:07.540873 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.543865 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0)]
excute 13:51:07.547853 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:07.551851 line       494                         if (i == j):
excute 13:51:07.555834 line       496                         i_j_list.append((
excute 13:51:07.559822 line       497                             i, j,
excute 13:51:07.562814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.566803 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2)]
excute 13:51:07.572788 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:07.577776 line       494                         if (i == j):
excute 13:51:07.583760 line       496                         i_j_list.append((
excute 13:51:07.586752 line       497                             i, j,
excute 13:51:07.590740 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.595727 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0)]
excute 13:51:07.599716 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:07.605702 line       494                         if (i == j):
excute 13:51:07.610689 line       496                         i_j_list.append((
excute 13:51:07.614678 line       497                             i, j,
excute 13:51:07.620661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.625647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:51:07.629638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:07.635621 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:07.642601 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:07.649583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:07.652575 line       494                         if (i == j):
excute 13:51:07.658558 line       496                         i_j_list.append((
excute 13:51:07.662549 line       497                             i, j,
excute 13:51:07.668532 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.672523 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0)]
excute 13:51:07.677508 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:07.682497 line       494                         if (i == j):
excute 13:51:07.689476 line       496                         i_j_list.append((
excute 13:51:07.693467 line       497                             i, j,
excute 13:51:07.697456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.701445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:51:07.705434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:07.710421 line       494                         if (i == j):
excute 13:51:07.715408 line       496                         i_j_list.append((
excute 13:51:07.719396 line       497                             i, j,
excute 13:51:07.722388 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.726378 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:51:07.730368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:07.734356 line       494                         if (i == j):
excute 13:51:07.738346 line       496                         i_j_list.append((
excute 13:51:07.742336 line       497                             i, j,
excute 13:51:07.745328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.749317 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:51:07.752309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:07.757297 line       494                         if (i == j):
excute 13:51:07.762283 line       495                             continue
excute 13:51:07.765273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:07.769263 line       494                         if (i == j):
excute 13:51:07.773253 line       496                         i_j_list.append((
excute 13:51:07.776244 line       497                             i, j,
excute 13:51:07.780234 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.784224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:51:07.787216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:07.791205 line       494                         if (i == j):
excute 13:51:07.795194 line       496                         i_j_list.append((
excute 13:51:07.799184 line       497                             i, j,
excute 13:51:07.803173 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.807163 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:51:07.810155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:07.815142 line       494                         if (i == j):
excute 13:51:07.819131 line       496                         i_j_list.append((
excute 13:51:07.823119 line       497                             i, j,
excute 13:51:07.826111 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.830102 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2)]
excute 13:51:07.833092 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:07.837083 line       494                         if (i == j):
excute 13:51:07.841070 line       496                         i_j_list.append((
excute 13:51:07.845059 line       497                             i, j,
excute 13:51:07.848051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.852041 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0)]
excute 13:51:07.856031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:07.860021 line       494                         if (i == j):
excute 13:51:07.865006 line       496                         i_j_list.append((
excute 13:51:07.867999 line       497                             i, j,
excute 13:51:07.870991 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.874981 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:51:07.878004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:07.881993 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:07.885959 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:07.888974 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:07.892965 line       494                         if (i == j):
excute 13:51:07.896955 line       496                         i_j_list.append((
excute 13:51:07.899945 line       497                             i, j,
excute 13:51:07.902937 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.906926 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0)]
excute 13:51:07.909918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:07.913908 line       494                         if (i == j):
excute 13:51:07.917897 line       496                         i_j_list.append((
excute 13:51:07.921886 line       497                             i, j,
excute 13:51:07.924880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.928868 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:51:07.931859 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:07.935851 line       494                         if (i == j):
excute 13:51:07.939838 line       496                         i_j_list.append((
excute 13:51:07.943830 line       497                             i, j,
excute 13:51:07.946821 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.950778 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:51:07.954768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:07.958757 line       494                         if (i == j):
excute 13:51:07.967732 line       496                         i_j_list.append((
excute 13:51:07.970725 line       497                             i, j,
excute 13:51:07.974715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.977736 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:07.981728 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:07.985684 line       494                         if (i == j):
excute 13:51:07.988709 line       496                         i_j_list.append((
excute 13:51:07.992697 line       497                             i, j,
excute 13:51:07.995688 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:07.999680 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:08.002670 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:08.006659 line       494                         if (i == j):
excute 13:51:08.011614 line       495                             continue
excute 13:51:08.015605 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:08.020591 line       494                         if (i == j):
excute 13:51:08.026575 line       496                         i_j_list.append((
excute 13:51:08.030565 line       497                             i, j,
excute 13:51:08.033559 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.038544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:51:08.044561 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:08.049514 line       494                         if (i == j):
excute 13:51:08.054501 line       496                         i_j_list.append((
excute 13:51:08.059490 line       497                             i, j,
excute 13:51:08.066469 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.071455 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2)]
excute 13:51:08.076441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:08.080431 line       494                         if (i == j):
excute 13:51:08.084456 line       496                         i_j_list.append((
excute 13:51:08.087446 line       497                             i, j,
excute 13:51:08.091433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.094425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0)]
excute 13:51:08.098415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:08.102389 line       494                         if (i == j):
excute 13:51:08.105395 line       496                         i_j_list.append((
excute 13:51:08.109355 line       497                             i, j,
excute 13:51:08.113342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.116337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:51:08.120325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:08.124315 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:08.128304 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:08.133290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:08.136281 line       494                         if (i == j):
excute 13:51:08.141267 line       496                         i_j_list.append((
excute 13:51:08.145256 line       497                             i, j,
excute 13:51:08.148249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.152238 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0)]
excute 13:51:08.156228 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:08.160218 line       494                         if (i == j):
excute 13:51:08.163209 line       496                         i_j_list.append((
excute 13:51:08.167198 line       497                             i, j,
excute 13:51:08.171189 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.175211 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:51:08.178200 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:08.182190 line       494                         if (i == j):
excute 13:51:08.186179 line       496                         i_j_list.append((
excute 13:51:08.190169 line       497                             i, j,
excute 13:51:08.193161 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.197150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:51:08.201108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:08.205099 line       494                         if (i == j):
excute 13:51:08.209087 line       496                         i_j_list.append((
excute 13:51:08.213077 line       497                             i, j,
excute 13:51:08.216071 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.220059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:51:08.224046 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:08.228036 line       494                         if (i == j):
excute 13:51:08.231030 line       496                         i_j_list.append((
excute 13:51:08.235018 line       497                             i, j,
excute 13:51:08.239008 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.242997 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:51:08.245989 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:08.250974 line       494                         if (i == j):
excute 13:51:08.254965 line       496                         i_j_list.append((
excute 13:51:08.259952 line       497                             i, j,
excute 13:51:08.262944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.266933 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0)]
excute 13:51:08.270923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:08.275943 line       494                         if (i == j):
excute 13:51:08.279930 line       495                             continue
excute 13:51:08.283921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:08.286912 line       494                         if (i == j):
excute 13:51:08.290867 line       496                         i_j_list.append((
excute 13:51:08.294857 line       497                             i, j,
excute 13:51:08.297849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.301838 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2)]
excute 13:51:08.304862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:08.308820 line       494                         if (i == j):
excute 13:51:08.312810 line       496                         i_j_list.append((
excute 13:51:08.315835 line       497                             i, j,
excute 13:51:08.319824 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.323814 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0)]
excute 13:51:08.328768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:08.338741 line       494                         if (i == j):
excute 13:51:08.343760 line       496                         i_j_list.append((
excute 13:51:08.346718 line       497                             i, j,
excute 13:51:08.350713 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.355697 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:51:08.358688 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:08.363676 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:08.367662 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:08.371651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:08.375642 line       494                         if (i == j):
excute 13:51:08.381629 line       496                         i_j_list.append((
excute 13:51:08.386613 line       497                             i, j,
excute 13:51:08.390602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.394597 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0)]
excute 13:51:08.397584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:08.402569 line       494                         if (i == j):
excute 13:51:08.406561 line       496                         i_j_list.append((
excute 13:51:08.410547 line       497                             i, j,
excute 13:51:08.413541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.417531 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:51:08.421520 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:08.425510 line       494                         if (i == j):
excute 13:51:08.430494 line       496                         i_j_list.append((
excute 13:51:08.433488 line       497                             i, j,
excute 13:51:08.437477 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.441467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:08.445456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:08.450441 line       494                         if (i == j):
excute 13:51:08.454432 line       496                         i_j_list.append((
excute 13:51:08.458421 line       497                             i, j,
excute 13:51:08.464404 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.470389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:08.474379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:08.478369 line       494                         if (i == j):
excute 13:51:08.484353 line       496                         i_j_list.append((
excute 13:51:08.488340 line       497                             i, j,
excute 13:51:08.491332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.495343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:08.498314 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:08.503333 line       494                         if (i == j):
excute 13:51:08.507325 line       496                         i_j_list.append((
excute 13:51:08.511280 line       497                             i, j,
excute 13:51:08.514303 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.518267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:08.521284 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:08.525241 line       494                         if (i == j):
excute 13:51:08.529232 line       496                         i_j_list.append((
excute 13:51:08.532254 line       497                             i, j,
excute 13:51:08.536243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.539237 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:08.543225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:08.547190 line       494                         if (i == j):
excute 13:51:08.551172 line       495                             continue
excute 13:51:08.555196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:08.558186 line       494                         if (i == j):
excute 13:51:08.562174 line       496                         i_j_list.append((
excute 13:51:08.566165 line       497                             i, j,
excute 13:51:08.569155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.573145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:51:08.577134 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:08.581093 line       494                         if (i == j):
excute 13:51:08.586091 line       496                         i_j_list.append((
excute 13:51:08.589101 line       497                             i, j,
excute 13:51:08.593092 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.598119 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:51:08.601152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:08.605138 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:08.609131 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:08.613087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:08.617076 line       494                         if (i == j):
excute 13:51:08.621065 line       496                         i_j_list.append((
excute 13:51:08.625055 line       497                             i, j,
excute 13:51:08.628047 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.632036 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:51:08.636025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:08.642009 line       494                         if (i == j):
excute 13:51:08.645997 line       496                         i_j_list.append((
excute 13:51:08.649990 line       497                             i, j,
excute 13:51:08.653010 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.657002 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:51:08.659992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:08.663981 line       494                         if (i == j):
excute 13:51:08.668937 line       496                         i_j_list.append((
excute 13:51:08.671960 line       497                             i, j,
excute 13:51:08.674951 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.678941 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:51:08.681933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:08.686891 line       494                         if (i == j):
excute 13:51:08.690910 line       496                         i_j_list.append((
excute 13:51:08.694900 line       497                             i, j,
excute 13:51:08.697890 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.701848 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:51:08.704840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:08.708829 line       494                         if (i == j):
excute 13:51:08.712819 line       496                         i_j_list.append((
excute 13:51:08.716809 line       497                             i, j,
excute 13:51:08.719831 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.722825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:51:08.726813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:08.730773 line       494                         if (i == j):
excute 13:51:08.735758 line       496                         i_j_list.append((
excute 13:51:08.739749 line       497                             i, j,
excute 13:51:08.743738 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.746761 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:51:08.750749 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:08.754739 line       494                         if (i == j):
excute 13:51:08.758696 line       496                         i_j_list.append((
excute 13:51:08.761688 line       497                             i, j,
excute 13:51:08.765677 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.768670 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:51:08.772660 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:08.775650 line       494                         if (i == j):
excute 13:51:08.779640 line       496                         i_j_list.append((
excute 13:51:08.783629 line       497                             i, j,
excute 13:51:08.786621 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.791642 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2)]
excute 13:51:08.794632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:08.798622 line       494                         if (i == j):
excute 13:51:08.806635 line       495                             continue
excute 13:51:08.810631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:08.813623 line       494                         if (i == j):
excute 13:51:08.818610 line       496                         i_j_list.append((
excute 13:51:08.822599 line       497                             i, j,
excute 13:51:08.825591 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.829580 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2), (8, 9, -1, 0)]
excute 13:51:08.832572 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:08.836561 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:08.840551 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:08.844540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:08.848529 line       494                         if (i == j):
excute 13:51:08.852518 line       496                         i_j_list.append((
excute 13:51:08.856508 line       497                             i, j,
excute 13:51:08.860497 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.864485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2), (8, 9, -1, 0), (9, 0, 1, 0)]
excute 13:51:08.868475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:08.875456 line       494                         if (i == j):
excute 13:51:08.880445 line       496                         i_j_list.append((
excute 13:51:08.884434 line       497                             i, j,
excute 13:51:08.892412 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.896400 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:51:08.899431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:08.903412 line       494                         if (i == j):
excute 13:51:08.907402 line       496                         i_j_list.append((
excute 13:51:08.911392 line       497                             i, j,
excute 13:51:08.914383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.918343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:51:08.922333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:08.926322 line       494                         if (i == j):
excute 13:51:08.930310 line       496                         i_j_list.append((
excute 13:51:08.934300 line       497                             i, j,
excute 13:51:08.938289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.942279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:08.946268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:08.951253 line       494                         if (i == j):
excute 13:51:08.955243 line       496                         i_j_list.append((
excute 13:51:08.959231 line       497                             i, j,
excute 13:51:08.962224 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.966214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:08.970203 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:08.974192 line       494                         if (i == j):
excute 13:51:08.979180 line       496                         i_j_list.append((
excute 13:51:08.983167 line       497                             i, j,
excute 13:51:08.986160 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:08.990182 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:08.994139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:08.998127 line       494                         if (i == j):
excute 13:51:09.002117 line       496                         i_j_list.append((
excute 13:51:09.006106 line       497                             i, j,
excute 13:51:09.010100 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:09.013120 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:51:09.017110 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:09.021099 line       494                         if (i == j):
excute 13:51:09.025058 line       496                         i_j_list.append((
excute 13:51:09.028049 line       497                             i, j,
excute 13:51:09.032039 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:09.035031 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 2)]
excute 13:51:09.039020 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:09.043040 line       494                         if (i == j):
excute 13:51:09.047029 line       496                         i_j_list.append((
excute 13:51:09.051018 line       497                             i, j,
excute 13:51:09.055008 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:09.058000 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 2), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 2), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 2), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 2), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 2), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 2), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 2), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 2), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 2), (9, 8, 1, 0)]
excute 13:51:09.061990 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:09.065948 line       494                         if (i == j):
excute 13:51:09.069937 line       495                             continue
excute 13:51:09.072960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:09.076949 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:09.079940 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 9, -1, 0), (8, 7, -1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (2, 7, 0, 2), (5, 7, 0, 2), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 8, 1, 0), (0, 7, 1, 2), (1, 7, 1, 2), (9, 7, 1, 2), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (4, 7, 2, 2), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (3, 7, 5, 2), (6, 7, 5, 2)]
excute 13:51:09.083930 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:09.087888 line       505                     if (self.RELOCATE):
excute 13:51:09.091878 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:09.094900 line       505                     if (self.RELOCATE):
excute 13:51:09.099859 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:09.103846 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:51:09.106837 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:09.110838 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:09.114816 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.118805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:51:09.121797 line       556                     i = i_j[0]
excute 13:51:09.125787 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:09.128778 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.132768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:51:09.137758 line       556                     i = i_j[0]
excute 13:51:09.142743 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:09.145764 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.149755 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:09.153743 line       556                     i = i_j[0]
excute 13:51:09.157735 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:09.161690 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.164714 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:51:09.168705 line       556                     i = i_j[0]
excute 13:51:09.172662 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:09.175684 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.179674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:09.183631 line       556                     i = i_j[0]
excute 13:51:09.190613 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:09.194635 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.198596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:51:09.203610 line       556                     i = i_j[0]
excute 13:51:09.207599 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:09.211589 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.215548 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:51:09.218570 line       556                     i = i_j[0]
excute 13:51:09.222560 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:09.226548 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.230506 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 2)
excute 13:51:09.233530 line       556                     i = i_j[0]
excute 13:51:09.237520 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:09.241509 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.245468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:09.248491 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:09.252480 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:09.257455 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.261458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:09.264418 line       556                     i = i_j[0]
excute 13:51:09.269405 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:09.273394 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.277383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:09.281372 line       556                     i = i_j[0]
excute 13:51:09.286357 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:09.290348 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.294367 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:09.298357 line       556                     i = i_j[0]
excute 13:51:09.303314 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:09.306336 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.310325 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:09.314314 line       556                     i = i_j[0]
excute 13:51:09.318304 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:09.321295 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.326252 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:09.333234 line       556                     i = i_j[0]
excute 13:51:09.339249 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:09.343237 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.347196 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:09.351218 line       556                     i = i_j[0]
excute 13:51:09.355207 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:09.359194 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.363186 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:09.367141 line       556                     i = i_j[0]
excute 13:51:09.372128 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:09.375120 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.379109 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:09.383098 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:09.387087 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:09.391077 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.395066 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:09.399055 line       556                     i = i_j[0]
excute 13:51:09.403046 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:09.407066 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.411057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:09.415046 line       556                     i = i_j[0]
excute 13:51:09.419002 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:09.421995 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.425984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:09.430005 line       556                     i = i_j[0]
excute 13:51:09.433962 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:09.436987 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.440975 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:09.444934 line       556                     i = i_j[0]
excute 13:51:09.451926 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:09.458896 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.463884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:51:09.469868 line       556                     i = i_j[0]
excute 13:51:09.476862 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:09.483831 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.490811 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:09.496796 line       556                     i = i_j[0]
excute 13:51:09.503777 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:09.511757 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.515775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:51:09.519766 line       556                     i = i_j[0]
excute 13:51:09.524721 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:09.529709 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.535692 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:09.540678 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:09.547661 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:09.551649 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.562620 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:09.571603 line       556                     i = i_j[0]
excute 13:51:09.578577 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:09.582566 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.589549 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:09.596528 line       556                     i = i_j[0]
excute 13:51:09.600517 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:09.604506 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.610491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:09.619468 line       556                     i = i_j[0]
excute 13:51:09.628444 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:09.634428 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.644402 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:09.649388 line       556                     i = i_j[0]
excute 13:51:09.655372 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:09.660358 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.666342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:09.670331 line       556                     i = i_j[0]
excute 13:51:09.675318 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:09.679307 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.685291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:09.688283 line       556                     i = i_j[0]
excute 13:51:09.693270 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:09.698256 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.702245 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:09.706234 line       556                     i = i_j[0]
excute 13:51:09.710224 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:09.714213 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.719201 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:09.722192 line       556                     i = i_j[0]
excute 13:51:09.726182 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:09.730171 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.734161 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 2)
excute 13:51:09.737152 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:09.742139 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:09.746129 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.754108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 2)
excute 13:51:09.761089 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:09.766075 line       557                     j = i_j[1]
excute 13:51:09.771063 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.775052 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:51:09.781036 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:09.786023 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:09.793003 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.798988 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:51:09.803975 line       556                     i = i_j[0]
excute 13:51:09.808962 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:09.814945 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.821926 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:51:09.826913 line       556                     i = i_j[0]
excute 13:51:09.830902 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:09.834892 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.841873 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:51:09.848854 line       556                     i = i_j[0]
excute 13:51:09.853841 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:09.857831 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.861819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:51:09.866806 line       556                     i = i_j[0]
excute 13:51:09.871795 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:09.877776 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.881768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:51:09.886753 line       556                     i = i_j[0]
excute 13:51:09.891740 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:09.894731 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.902712 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:51:09.906700 line       556                     i = i_j[0]
excute 13:51:09.910689 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:09.915676 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.923654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:51:09.930638 line       556                     i = i_j[0]
excute 13:51:09.936620 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:09.940609 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.951580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:09.957564 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:09.966539 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:09.974518 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:09.980502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:09.984493 line       556                     i = i_j[0]
excute 13:51:09.991473 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:09.995462 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.000449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:10.004439 line       556                     i = i_j[0]
excute 13:51:10.010422 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:10.015409 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.020396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:10.025383 line       556                     i = i_j[0]
excute 13:51:10.034360 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:10.040343 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.048321 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:10.055302 line       556                     i = i_j[0]
excute 13:51:10.062283 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:10.067269 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.071259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:10.075248 line       556                     i = i_j[0]
excute 13:51:10.079238 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:10.082229 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.086219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:10.090208 line       556                     i = i_j[0]
excute 13:51:10.094199 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:10.097189 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.101179 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:10.105168 line       556                     i = i_j[0]
excute 13:51:10.109159 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:10.112149 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.116139 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:10.120129 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:10.124120 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:10.128108 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.133093 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:10.140107 line       556                     i = i_j[0]
excute 13:51:10.145063 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:10.149053 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.154040 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:10.158029 line       556                     i = i_j[0]
excute 13:51:10.162019 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:10.166008 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.169997 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:10.172987 line       556                     i = i_j[0]
excute 13:51:10.176977 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:10.180966 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.183958 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:10.187947 line       556                     i = i_j[0]
excute 13:51:10.191936 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:10.195925 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.199915 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:10.202907 line       556                     i = i_j[0]
excute 13:51:10.206896 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:10.210885 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.214875 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:51:10.217867 line       556                     i = i_j[0]
excute 13:51:10.221856 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:10.225849 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.229836 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:10.233825 line       556                     i = i_j[0]
excute 13:51:10.238811 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:10.241834 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.245794 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 2)
excute 13:51:10.249783 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:10.253772 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:10.257762 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.262749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 2)
excute 13:51:10.265741 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:10.269730 line       557                     j = i_j[1]
excute 13:51:10.274717 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.277709 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 2)
excute 13:51:10.281698 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:10.285687 line       557                     j = i_j[1]
excute 13:51:10.290683 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.293665 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:51:10.297656 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:10.301646 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:10.305635 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.308626 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:51:10.312615 line       556                     i = i_j[0]
excute 13:51:10.317603 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:10.321592 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.325579 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:51:10.336552 line       556                     i = i_j[0]
excute 13:51:10.344531 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:10.347522 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.353508 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:51:10.357493 line       556                     i = i_j[0]
excute 13:51:10.362480 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:10.365472 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.371458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:51:10.374452 line       556                     i = i_j[0]
excute 13:51:10.378439 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:10.382428 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.387414 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:51:10.390406 line       556                     i = i_j[0]
excute 13:51:10.394394 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:10.398384 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.402374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:51:10.406362 line       556                     i = i_j[0]
excute 13:51:10.410352 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:10.413344 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.418331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:51:10.421323 line       556                     i = i_j[0]
excute 13:51:10.425312 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:10.429301 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.433291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 2)
excute 13:51:10.436283 line       556                     i = i_j[0]
excute 13:51:10.441283 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:10.445292 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.449249 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 0)
excute 13:51:10.453272 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:10.457227 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:10.461216 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.465206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:51:10.468198 line       556                     i = i_j[0]
excute 13:51:10.472187 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:10.476176 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.480167 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:51:10.483158 line       556                     i = i_j[0]
excute 13:51:10.487147 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:10.490139 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.494128 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:51:10.498117 line       556                     i = i_j[0]
excute 13:51:10.502117 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:10.505099 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.509089 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:51:10.513077 line       556                     i = i_j[0]
excute 13:51:10.517067 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:10.520059 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.524048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 0)
excute 13:51:10.527040 line       556                     i = i_j[0]
excute 13:51:10.531030 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:10.534021 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.538010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:51:10.542001 line       556                     i = i_j[0]
excute 13:51:10.546987 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:10.549979 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.553968 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:51:10.557957 line       556                     i = i_j[0]
excute 13:51:10.561947 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:10.564939 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.568928 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:51:10.574912 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:10.579901 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:10.584887 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.588876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:51:10.592864 line       556                     i = i_j[0]
excute 13:51:10.597851 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:10.600843 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.604832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:51:10.608822 line       556                     i = i_j[0]
excute 13:51:10.612812 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:10.615803 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.619793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:51:10.623782 line       556                     i = i_j[0]
excute 13:51:10.627772 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:10.630763 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.634753 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:51:10.639740 line       556                     i = i_j[0]
excute 13:51:10.643730 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:10.648748 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.652705 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:51:10.656726 line       556                     i = i_j[0]
excute 13:51:10.660685 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:10.663706 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.667697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:51:10.671655 line       556                     i = i_j[0]
excute 13:51:10.675645 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:10.679634 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.683624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:51:10.687612 line       556                     i = i_j[0]
excute 13:51:10.696588 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:10.700578 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.708581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 2)
excute 13:51:10.712556 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:10.716544 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:10.720524 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.724528 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 2)
excute 13:51:10.728504 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:10.732494 line       557                     j = i_j[1]
excute 13:51:10.736480 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:10.739504 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 178
excute 13:51:10.743494 line       560                         if (t_tmp > self.TIME):
excute 13:51:10.747453 line       563                             if (available_vhecles[i][t] == 0):
excute 13:51:10.752439 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:51:10.756429 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 202
excute 13:51:10.761419 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:51:10.765436 line       555                 for i_j in i_j_list:
excute 13:51:10.768427 line       581             self.write_matrix(
excute 13:51:10.772417 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:10.775409 line       583                 result_file_path,
excute 13:51:10.779397 line       584                 mode='a'
excute 13:51:10.785352 line       488         for t in time_steps:
excute Modified var:.. t = 168
excute 13:51:10.790337 line       489             if (t != self.TIME + 1):
excute 13:51:10.796321 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:10.800311 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:10.804302 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:10.808289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:10.811282 line       494                         if (i == j):
excute 13:51:10.815272 line       495                             continue
excute 13:51:10.819262 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:10.824247 line       494                         if (i == j):
excute 13:51:10.828237 line       496                         i_j_list.append((
excute 13:51:10.832226 line       497                             i, j,
excute 13:51:10.837212 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:10.841204 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:51:10.854168 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:10.861148 line       494                         if (i == j):
excute 13:51:10.869138 line       496                         i_j_list.append((
excute 13:51:10.873115 line       497                             i, j,
excute 13:51:10.876108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:10.880097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:51:10.884099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:10.888084 line       494                         if (i == j):
excute 13:51:10.892065 line       496                         i_j_list.append((
excute 13:51:10.896054 line       497                             i, j,
excute 13:51:10.899046 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:10.904033 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:51:10.908025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:10.914009 line       494                         if (i == j):
excute 13:51:10.919993 line       496                         i_j_list.append((
excute 13:51:10.923981 line       497                             i, j,
excute 13:51:10.926973 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:10.930962 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:51:10.934952 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:10.938939 line       494                         if (i == j):
excute 13:51:10.942928 line       496                         i_j_list.append((
excute 13:51:10.946919 line       497                             i, j,
excute 13:51:10.950909 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:10.956891 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:51:10.959885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:10.963875 line       494                         if (i == j):
excute 13:51:10.968861 line       496                         i_j_list.append((
excute 13:51:10.975842 line       497                             i, j,
excute 13:51:10.978833 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:10.982831 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0)]
excute 13:51:10.985815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:10.989808 line       494                         if (i == j):
excute 13:51:10.993794 line       496                         i_j_list.append((
excute 13:51:10.996816 line       497                             i, j,
excute 13:51:11.000774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.003768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0)]
excute 13:51:11.007757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:11.011746 line       494                         if (i == j):
excute 13:51:11.015736 line       496                         i_j_list.append((
excute 13:51:11.019725 line       497                             i, j,
excute 13:51:11.023714 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.029730 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:51:11.033688 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:11.040670 line       494                         if (i == j):
excute 13:51:11.045655 line       496                         i_j_list.append((
excute 13:51:11.049645 line       497                             i, j,
excute 13:51:11.055628 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.059618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:51:11.063608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:11.068594 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:11.072585 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:11.077570 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:11.080593 line       494                         if (i == j):
excute 13:51:11.084581 line       496                         i_j_list.append((
excute 13:51:11.087577 line       497                             i, j,
excute 13:51:11.091564 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.094555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0)]
excute 13:51:11.098546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:11.102502 line       494                         if (i == j):
excute 13:51:11.105494 line       495                             continue
excute 13:51:11.109483 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:11.112475 line       494                         if (i == j):
excute 13:51:11.116466 line       496                         i_j_list.append((
excute 13:51:11.119456 line       497                             i, j,
excute 13:51:11.123446 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.126438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:11.129430 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:11.134450 line       494                         if (i == j):
excute 13:51:11.138406 line       496                         i_j_list.append((
excute 13:51:11.142396 line       497                             i, j,
excute 13:51:11.146385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.149377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:11.152369 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:11.158357 line       494                         if (i == j):
excute 13:51:11.163341 line       496                         i_j_list.append((
excute 13:51:11.166363 line       497                             i, j,
excute 13:51:11.169355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.173344 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:11.176342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:11.180294 line       494                         if (i == j):
excute 13:51:11.184285 line       496                         i_j_list.append((
excute 13:51:11.187308 line       497                             i, j,
excute 13:51:11.191289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.194288 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:11.197280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:11.201270 line       494                         if (i == j):
excute 13:51:11.205259 line       496                         i_j_list.append((
excute 13:51:11.209242 line       497                             i, j,
excute 13:51:11.212240 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.216210 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:11.219222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:11.223181 line       494                         if (i == j):
excute 13:51:11.227202 line       496                         i_j_list.append((
excute 13:51:11.230193 line       497                             i, j,
excute 13:51:11.234150 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.237174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:51:11.240167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:11.244157 line       494                         if (i == j):
excute 13:51:11.248113 line       496                         i_j_list.append((
excute 13:51:11.252104 line       497                             i, j,
excute 13:51:11.256092 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.259083 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:51:11.264071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:11.268072 line       494                         if (i == j):
excute 13:51:11.271084 line       496                         i_j_list.append((
excute 13:51:11.275073 line       497                             i, j,
excute 13:51:11.278064 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.282056 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:51:11.285046 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:11.289026 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:11.293992 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:11.296982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:11.300972 line       494                         if (i == j):
excute 13:51:11.304961 line       496                         i_j_list.append((
excute 13:51:11.307953 line       497                             i, j,
excute 13:51:11.310945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.314934 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0)]
excute 13:51:11.317926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:11.322913 line       494                         if (i == j):
excute 13:51:11.328898 line       496                         i_j_list.append((
excute 13:51:11.338872 line       497                             i, j,
excute 13:51:11.341862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.345851 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:51:11.348843 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:11.353832 line       494                         if (i == j):
excute 13:51:11.358817 line       495                             continue
excute 13:51:11.365800 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:11.371783 line       494                         if (i == j):
excute 13:51:11.381757 line       496                         i_j_list.append((
excute 13:51:11.388737 line       497                             i, j,
excute 13:51:11.395718 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.400706 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:11.408686 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:11.418658 line       494                         if (i == j):
excute 13:51:11.429628 line       496                         i_j_list.append((
excute 13:51:11.437607 line       497                             i, j,
excute 13:51:11.446584 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.451568 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:11.459548 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:11.472514 line       494                         if (i == j):
excute 13:51:11.486476 line       496                         i_j_list.append((
excute 13:51:11.493457 line       497                             i, j,
excute 13:51:11.497447 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.501436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:11.508427 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:11.519388 line       494                         if (i == j):
excute 13:51:11.529362 line       496                         i_j_list.append((
excute 13:51:11.538337 line       497                             i, j,
excute 13:51:11.547313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.555293 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:11.560279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:11.566263 line       494                         if (i == j):
excute 13:51:11.575240 line       496                         i_j_list.append((
excute 13:51:11.584215 line       497                             i, j,
excute 13:51:11.590200 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.596182 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0)]
excute 13:51:11.601170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:11.607153 line       494                         if (i == j):
excute 13:51:11.615132 line       496                         i_j_list.append((
excute 13:51:11.622114 line       497                             i, j,
excute 13:51:11.628098 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.634082 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:51:11.641063 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:11.648044 line       494                         if (i == j):
excute 13:51:11.657020 line       496                         i_j_list.append((
excute 13:51:11.663005 line       497                             i, j,
excute 13:51:11.671981 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.679958 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:51:11.687939 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:11.695916 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:11.703895 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:11.710876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:11.716863 line       494                         if (i == j):
excute 13:51:11.724839 line       496                         i_j_list.append((
excute 13:51:11.731821 line       497                             i, j,
excute 13:51:11.739798 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.746780 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0)]
excute 13:51:11.752765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:11.759746 line       494                         if (i == j):
excute 13:51:11.766727 line       496                         i_j_list.append((
excute 13:51:11.774710 line       497                             i, j,
excute 13:51:11.782684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.788668 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0)]
excute 13:51:11.796646 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:11.802631 line       494                         if (i == j):
excute 13:51:11.808616 line       496                         i_j_list.append((
excute 13:51:11.815596 line       497                             i, j,
excute 13:51:11.823574 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.830556 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:51:11.836542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:11.841528 line       494                         if (i == j):
excute 13:51:11.845516 line       495                             continue
excute 13:51:11.848508 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:11.852497 line       494                         if (i == j):
excute 13:51:11.857485 line       496                         i_j_list.append((
excute 13:51:11.861474 line       497                             i, j,
excute 13:51:11.865463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.868455 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:51:11.872444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:11.876434 line       494                         if (i == j):
excute 13:51:11.881421 line       496                         i_j_list.append((
excute 13:51:11.884412 line       497                             i, j,
excute 13:51:11.888401 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.891394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:51:11.894386 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:11.898375 line       494                         if (i == j):
excute 13:51:11.902366 line       496                         i_j_list.append((
excute 13:51:11.905357 line       497                             i, j,
excute 13:51:11.909345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.912338 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0)]
excute 13:51:11.915330 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:11.919320 line       494                         if (i == j):
excute 13:51:11.923310 line       496                         i_j_list.append((
excute 13:51:11.926300 line       497                             i, j,
excute 13:51:11.930290 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.934281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0)]
excute 13:51:11.937273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:11.942260 line       494                         if (i == j):
excute 13:51:11.946247 line       496                         i_j_list.append((
excute 13:51:11.949266 line       497                             i, j,
excute 13:51:11.953262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.957218 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0)]
excute 13:51:11.960211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:11.965198 line       494                         if (i == j):
excute 13:51:11.969220 line       496                         i_j_list.append((
excute 13:51:11.972209 line       497                             i, j,
excute 13:51:11.976201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:11.979190 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:51:11.984146 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:11.987136 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:11.991126 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:11.995123 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:11.998107 line       494                         if (i == j):
excute 13:51:12.002097 line       496                         i_j_list.append((
excute 13:51:12.005089 line       497                             i, j,
excute 13:51:12.008081 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.012102 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0)]
excute 13:51:12.016091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:12.020051 line       494                         if (i == j):
excute 13:51:12.023073 line       496                         i_j_list.append((
excute 13:51:12.027032 line       497                             i, j,
excute 13:51:12.030024 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.034013 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:51:12.037005 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:12.040994 line       494                         if (i == j):
excute 13:51:12.045982 line       496                         i_j_list.append((
excute 13:51:12.048973 line       497                             i, j,
excute 13:51:12.052993 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.055984 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:51:12.059975 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:12.063933 line       494                         if (i == j):
excute 13:51:12.067945 line       496                         i_j_list.append((
excute 13:51:12.070945 line       497                             i, j,
excute 13:51:12.074936 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.077927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:51:12.080919 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:12.085874 line       494                         if (i == j):
excute 13:51:12.089862 line       495                             continue
excute 13:51:12.092854 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:12.096843 line       494                         if (i == j):
excute 13:51:12.100834 line       496                         i_j_list.append((
excute 13:51:12.103825 line       497                             i, j,
excute 13:51:12.107815 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.110806 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:51:12.113799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:12.117787 line       494                         if (i == j):
excute 13:51:12.121777 line       496                         i_j_list.append((
excute 13:51:12.124769 line       497                             i, j,
excute 13:51:12.128758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.131750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0)]
excute 13:51:12.135742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:12.140730 line       494                         if (i == j):
excute 13:51:12.144750 line       496                         i_j_list.append((
excute 13:51:12.147739 line       497                             i, j,
excute 13:51:12.150732 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.154722 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0)]
excute 13:51:12.158678 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:12.162669 line       494                         if (i == j):
excute 13:51:12.166691 line       496                         i_j_list.append((
excute 13:51:12.169680 line       497                             i, j,
excute 13:51:12.173639 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.176663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:51:12.179655 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:12.183644 line       494                         if (i == j):
excute 13:51:12.188599 line       496                         i_j_list.append((
excute 13:51:12.192587 line       497                             i, j,
excute 13:51:12.195580 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.199569 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:51:12.202561 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:12.206551 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:12.209542 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:12.213531 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:12.217522 line       494                         if (i == j):
excute 13:51:12.220513 line       496                         i_j_list.append((
excute 13:51:12.224503 line       497                             i, j,
excute 13:51:12.227495 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.231484 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0)]
excute 13:51:12.234476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:12.238465 line       494                         if (i == j):
excute 13:51:12.242455 line       496                         i_j_list.append((
excute 13:51:12.245446 line       497                             i, j,
excute 13:51:12.248438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.252427 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:51:12.256418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:12.260409 line       494                         if (i == j):
excute 13:51:12.264397 line       496                         i_j_list.append((
excute 13:51:12.267419 line       497                             i, j,
excute 13:51:12.271409 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.274401 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:51:12.278360 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:12.282376 line       494                         if (i == j):
excute 13:51:12.285372 line       496                         i_j_list.append((
excute 13:51:12.290328 line       497                             i, j,
excute 13:51:12.294317 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.298307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:12.302296 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:12.306286 line       494                         if (i == j):
excute 13:51:12.310275 line       496                         i_j_list.append((
excute 13:51:12.314264 line       497                             i, j,
excute 13:51:12.318254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.322243 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:12.327229 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:12.335209 line       494                         if (i == j):
excute 13:51:12.341192 line       495                             continue
excute 13:51:12.345181 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:12.349171 line       494                         if (i == j):
excute 13:51:12.354157 line       496                         i_j_list.append((
excute 13:51:12.357181 line       497                             i, j,
excute 13:51:12.361168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.365127 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:51:12.368153 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:12.373107 line       494                         if (i == j):
excute 13:51:12.377099 line       496                         i_j_list.append((
excute 13:51:12.380088 line       497                             i, j,
excute 13:51:12.385076 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.389064 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:51:12.394052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:12.398041 line       494                         if (i == j):
excute 13:51:12.403025 line       496                         i_j_list.append((
excute 13:51:12.406019 line       497                             i, j,
excute 13:51:12.410008 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.413000 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:51:12.416988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:12.420977 line       494                         if (i == j):
excute 13:51:12.424966 line       496                         i_j_list.append((
excute 13:51:12.428956 line       497                             i, j,
excute 13:51:12.431948 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.435938 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:51:12.438929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:12.442918 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:12.445910 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:12.450900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:12.453890 line       494                         if (i == j):
excute 13:51:12.458877 line       496                         i_j_list.append((
excute 13:51:12.461870 line       497                             i, j,
excute 13:51:12.465858 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.468849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0)]
excute 13:51:12.472838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:12.477825 line       494                         if (i == j):
excute 13:51:12.482812 line       496                         i_j_list.append((
excute 13:51:12.485803 line       497                             i, j,
excute 13:51:12.489793 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.493787 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:51:12.497804 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:12.501763 line       494                         if (i == j):
excute 13:51:12.505752 line       496                         i_j_list.append((
excute 13:51:12.509743 line       497                             i, j,
excute 13:51:12.512734 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.516723 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:51:12.520713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:12.524699 line       494                         if (i == j):
excute 13:51:12.527694 line       496                         i_j_list.append((
excute 13:51:12.531683 line       497                             i, j,
excute 13:51:12.535672 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.539661 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:51:12.543651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:12.547640 line       494                         if (i == j):
excute 13:51:12.551630 line       496                         i_j_list.append((
excute 13:51:12.556617 line       497                             i, j,
excute 13:51:12.559608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.563597 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:51:12.568583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:12.572572 line       494                         if (i == j):
excute 13:51:12.576561 line       496                         i_j_list.append((
excute 13:51:12.580562 line       497                             i, j,
excute 13:51:12.583543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.587534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0)]
excute 13:51:12.590525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:12.594516 line       494                         if (i == j):
excute 13:51:12.599501 line       495                             continue
excute 13:51:12.602493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:12.605485 line       494                         if (i == j):
excute 13:51:12.609475 line       496                         i_j_list.append((
excute 13:51:12.613464 line       497                             i, j,
excute 13:51:12.616455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.620445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0)]
excute 13:51:12.623469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:12.627426 line       494                         if (i == j):
excute 13:51:12.631416 line       496                         i_j_list.append((
excute 13:51:12.635407 line       497                             i, j,
excute 13:51:12.639393 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.643384 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0)]
excute 13:51:12.647373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:12.652361 line       494                         if (i == j):
excute 13:51:12.656350 line       496                         i_j_list.append((
excute 13:51:12.660339 line       497                             i, j,
excute 13:51:12.664328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.668318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:51:12.672307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:12.676296 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:12.680286 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:12.693197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:12.697185 line       494                         if (i == j):
excute 13:51:12.702171 line       496                         i_j_list.append((
excute 13:51:12.706162 line       497                             i, j,
excute 13:51:12.710151 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.714141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0)]
excute 13:51:12.718130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:12.723119 line       494                         if (i == j):
excute 13:51:12.727106 line       496                         i_j_list.append((
excute 13:51:12.731096 line       497                             i, j,
excute 13:51:12.735085 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.739074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:51:12.743064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:12.747052 line       494                         if (i == j):
excute 13:51:12.751042 line       496                         i_j_list.append((
excute 13:51:12.755031 line       497                             i, j,
excute 13:51:12.759021 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.763010 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:12.766999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:12.770989 line       494                         if (i == j):
excute 13:51:12.774978 line       496                         i_j_list.append((
excute 13:51:12.778967 line       497                             i, j,
excute 13:51:12.782957 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.786945 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:12.790935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:12.794924 line       494                         if (i == j):
excute 13:51:12.798915 line       496                         i_j_list.append((
excute 13:51:12.803900 line       497                             i, j,
excute 13:51:12.807890 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.811880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:12.814872 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:12.819859 line       494                         if (i == j):
excute 13:51:12.823848 line       496                         i_j_list.append((
excute 13:51:12.827837 line       497                             i, j,
excute 13:51:12.831826 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.834818 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:12.838808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:12.843794 line       494                         if (i == j):
excute 13:51:12.847785 line       496                         i_j_list.append((
excute 13:51:12.851777 line       497                             i, j,
excute 13:51:12.855763 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.858754 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:12.862743 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:12.866733 line       494                         if (i == j):
excute 13:51:12.871721 line       495                             continue
excute 13:51:12.874712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:12.878701 line       494                         if (i == j):
excute 13:51:12.883686 line       496                         i_j_list.append((
excute 13:51:12.886680 line       497                             i, j,
excute 13:51:12.890669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.894658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:51:12.897650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:12.902649 line       494                         if (i == j):
excute 13:51:12.907625 line       496                         i_j_list.append((
excute 13:51:12.910616 line       497                             i, j,
excute 13:51:12.914605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.918595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:51:12.921586 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:12.925576 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:12.929565 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:12.933554 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:12.938542 line       494                         if (i == j):
excute 13:51:12.942532 line       496                         i_j_list.append((
excute 13:51:12.945523 line       497                             i, j,
excute 13:51:12.949512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.954498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:51:12.958489 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:12.964471 line       494                         if (i == j):
excute 13:51:12.969459 line       496                         i_j_list.append((
excute 13:51:12.972449 line       497                             i, j,
excute 13:51:12.977435 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:12.980429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:51:12.984417 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:12.988408 line       494                         if (i == j):
excute 13:51:12.992396 line       496                         i_j_list.append((
excute 13:51:12.995388 line       497                             i, j,
excute 13:51:12.999377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.003379 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:51:13.007356 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:13.012357 line       494                         if (i == j):
excute 13:51:13.015334 line       496                         i_j_list.append((
excute 13:51:13.019325 line       497                             i, j,
excute 13:51:13.024311 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.027302 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:51:13.033285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:13.037275 line       494                         if (i == j):
excute 13:51:13.042276 line       496                         i_j_list.append((
excute 13:51:13.045254 line       497                             i, j,
excute 13:51:13.049277 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.053268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:51:13.057223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:13.062210 line       494                         if (i == j):
excute 13:51:13.066199 line       496                         i_j_list.append((
excute 13:51:13.070189 line       497                             i, j,
excute 13:51:13.074178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.077170 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:51:13.081159 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:13.084152 line       494                         if (i == j):
excute 13:51:13.089139 line       496                         i_j_list.append((
excute 13:51:13.092130 line       497                             i, j,
excute 13:51:13.096120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.100108 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:51:13.103099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:13.108087 line       494                         if (i == j):
excute 13:51:13.112075 line       496                         i_j_list.append((
excute 13:51:13.116066 line       497                             i, j,
excute 13:51:13.120056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.123048 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:51:13.127037 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:13.135015 line       494                         if (i == j):
excute 13:51:13.141998 line       495                             continue
excute 13:51:13.145986 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:13.149975 line       494                         if (i == j):
excute 13:51:13.154962 line       496                         i_j_list.append((
excute 13:51:13.158951 line       497                             i, j,
excute 13:51:13.161944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.165932 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:51:13.169923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:13.173910 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:13.176903 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:13.180894 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:13.183884 line       494                         if (i == j):
excute 13:51:13.187874 line       496                         i_j_list.append((
excute 13:51:13.191864 line       497                             i, j,
excute 13:51:13.194855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.198845 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0)]
excute 13:51:13.201836 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:13.205826 line       494                         if (i == j):
excute 13:51:13.209847 line       496                         i_j_list.append((
excute 13:51:13.214803 line       497                             i, j,
excute 13:51:13.218792 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.221784 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:51:13.225773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:13.230763 line       494                         if (i == j):
excute 13:51:13.233750 line       496                         i_j_list.append((
excute 13:51:13.237741 line       497                             i, j,
excute 13:51:13.241731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.245718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:51:13.248712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:13.252701 line       494                         if (i == j):
excute 13:51:13.257687 line       496                         i_j_list.append((
excute 13:51:13.261678 line       497                             i, j,
excute 13:51:13.265667 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.269655 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:13.272648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:13.276638 line       494                         if (i == j):
excute 13:51:13.281625 line       496                         i_j_list.append((
excute 13:51:13.285613 line       497                             i, j,
excute 13:51:13.289604 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.293592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:13.296583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:13.300573 line       494                         if (i == j):
excute 13:51:13.304563 line       496                         i_j_list.append((
excute 13:51:13.308550 line       497                             i, j,
excute 13:51:13.311543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.315535 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:13.319522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:13.324510 line       494                         if (i == j):
excute 13:51:13.334482 line       496                         i_j_list.append((
excute 13:51:13.341464 line       497                             i, j,
excute 13:51:13.345455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.349443 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:51:13.353432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:13.359417 line       494                         if (i == j):
excute 13:51:13.363405 line       496                         i_j_list.append((
excute 13:51:13.368391 line       497                             i, j,
excute 13:51:13.373377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.381356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:51:13.385346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:13.389334 line       494                         if (i == j):
excute 13:51:13.393323 line       496                         i_j_list.append((
excute 13:51:13.397314 line       497                             i, j,
excute 13:51:13.401309 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:13.404295 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:51:13.408285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:13.412276 line       494                         if (i == j):
excute 13:51:13.416266 line       495                             continue
excute 13:51:13.421249 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:13.424243 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:13.428232 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:51:13.432221 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:13.437209 line       505                     if (self.RELOCATE):
excute 13:51:13.441197 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:13.445186 line       505                     if (self.RELOCATE):
excute 13:51:13.450173 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:13.454163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:51:13.458154 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:13.462140 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:13.466130 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.470121 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:51:13.474109 line       556                     i = i_j[0]
excute 13:51:13.479095 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:13.483085 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.487074 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:51:13.490067 line       556                     i = i_j[0]
excute 13:51:13.494057 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:13.497047 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.501037 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:13.505026 line       556                     i = i_j[0]
excute 13:51:13.509017 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:13.513005 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.516993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:51:13.520984 line       556                     i = i_j[0]
excute 13:51:13.524975 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:13.527964 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.531955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:13.535943 line       556                     i = i_j[0]
excute 13:51:13.539932 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:13.542925 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.546915 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:51:13.550935 line       556                     i = i_j[0]
excute 13:51:13.554893 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:13.557915 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.561904 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:51:13.565895 line       556                     i = i_j[0]
excute 13:51:13.570849 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:13.574838 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.578841 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:51:13.581851 line       556                     i = i_j[0]
excute 13:51:13.585809 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:13.588832 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.592822 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:13.596780 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:13.600770 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:13.604758 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.608749 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:13.611742 line       556                     i = i_j[0]
excute 13:51:13.617756 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:13.621714 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.627710 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:13.630691 line       556                     i = i_j[0]
excute 13:51:13.635678 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:13.639666 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.643686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:13.647677 line       556                     i = i_j[0]
excute 13:51:13.651634 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:13.655657 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.659643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:13.662605 line       556                     i = i_j[0]
excute 13:51:13.666594 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:13.670613 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.674572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:13.678593 line       556                     i = i_j[0]
excute 13:51:13.682550 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:13.685574 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.689563 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:51:13.693553 line       556                     i = i_j[0]
excute 13:51:13.697511 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:13.701531 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.705491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:13.708513 line       556                     i = i_j[0]
excute 13:51:13.712502 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:13.716491 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.720450 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:13.724442 line       556                     i = i_j[0]
excute 13:51:13.729426 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:13.732419 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.737405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:13.740397 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:13.744387 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:13.748376 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.753362 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:13.757351 line       556                     i = i_j[0]
excute 13:51:13.761341 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:13.764332 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.769320 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:13.772312 line       556                     i = i_j[0]
excute 13:51:13.776302 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:13.780290 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.785277 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:13.788270 line       556                     i = i_j[0]
excute 13:51:13.792259 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:13.796248 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.800238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:13.804227 line       556                     i = i_j[0]
excute 13:51:13.808216 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:13.812236 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.816195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:51:13.819217 line       556                     i = i_j[0]
excute 13:51:13.823209 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:13.827165 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.833149 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:51:13.836171 line       556                     i = i_j[0]
excute 13:51:13.840160 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:13.844150 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.848140 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:13.852128 line       556                     i = i_j[0]
excute 13:51:13.856120 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:13.860108 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.864065 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:51:13.867057 line       556                     i = i_j[0]
excute 13:51:13.871048 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:13.875037 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.879027 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:13.883017 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:13.887006 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:13.890995 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.894984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:13.898973 line       556                     i = i_j[0]
excute 13:51:13.902963 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:13.906952 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.910942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:13.914931 line       556                     i = i_j[0]
excute 13:51:13.918921 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:13.921943 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.925931 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:13.929923 line       556                     i = i_j[0]
excute 13:51:13.934876 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:13.937901 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.941858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:13.944880 line       556                     i = i_j[0]
excute 13:51:13.949868 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:13.953860 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.957839 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:13.961805 line       556                     i = i_j[0]
excute 13:51:13.965794 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:13.968817 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.973776 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:13.976796 line       556                     i = i_j[0]
excute 13:51:13.980786 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:13.984775 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:13.988733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:13.991756 line       556                     i = i_j[0]
excute 13:51:13.995745 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:13.999736 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.003692 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:14.006717 line       556                     i = i_j[0]
excute 13:51:14.010675 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:14.014717 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.018708 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:51:14.021699 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:14.025688 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:14.030677 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.036661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:51:14.040649 line       556                     i = i_j[0]
excute 13:51:14.044638 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:14.047630 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.052617 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:51:14.056605 line       556                     i = i_j[0]
excute 13:51:14.060595 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:14.063587 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.067576 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:51:14.071566 line       556                     i = i_j[0]
excute 13:51:14.075557 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:14.078548 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.082537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:51:14.086526 line       556                     i = i_j[0]
excute 13:51:14.090516 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:14.093507 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.097497 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 0)
excute 13:51:14.101487 line       556                     i = i_j[0]
excute 13:51:14.105476 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:14.108467 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.112457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:51:14.115449 line       556                     i = i_j[0]
excute 13:51:14.119438 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:14.123428 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.127431 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:51:14.130441 line       556                     i = i_j[0]
excute 13:51:14.134400 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:14.141381 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.145370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:51:14.148360 line       556                     i = i_j[0]
excute 13:51:14.152349 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:14.156339 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.160328 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:14.163320 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:14.167309 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:14.172296 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.177285 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:14.181273 line       556                     i = i_j[0]
excute 13:51:14.185263 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:14.188254 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.193241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:14.196232 line       556                     i = i_j[0]
excute 13:51:14.200236 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:14.204212 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.207203 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:14.211193 line       556                     i = i_j[0]
excute 13:51:14.215184 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:14.218174 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.222164 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:14.226153 line       556                     i = i_j[0]
excute 13:51:14.230143 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:14.233136 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.237124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:14.241113 line       556                     i = i_j[0]
excute 13:51:14.246100 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:14.249123 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.254113 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:51:14.257102 line       556                     i = i_j[0]
excute 13:51:14.262061 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:14.265081 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.269048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:14.273054 line       556                     i = i_j[0]
excute 13:51:14.277053 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:14.281008 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.284998 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:14.287989 line       556                     i = i_j[0]
excute 13:51:14.292975 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:14.296964 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.300954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:14.303976 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:14.310962 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:14.314952 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.318938 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:14.321929 line       556                     i = i_j[0]
excute 13:51:14.328880 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:14.335867 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.341847 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:14.346864 line       556                     i = i_j[0]
excute 13:51:14.350835 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:14.355807 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.359795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:14.363787 line       556                     i = i_j[0]
excute 13:51:14.367774 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:14.371763 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.375754 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:14.378776 line       556                     i = i_j[0]
excute 13:51:14.382766 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:14.395828 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.399817 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:14.402809 line       556                     i = i_j[0]
excute 13:51:14.406798 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:14.410787 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.414777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:51:14.418768 line       556                     i = i_j[0]
excute 13:51:14.422757 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:14.426778 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.430757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:51:14.433757 line       556                     i = i_j[0]
excute 13:51:14.437715 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:14.441705 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.445696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:14.450682 line       556                     i = i_j[0]
excute 13:51:14.455669 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:14.458659 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.465655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:51:14.470629 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:14.473652 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:14.478637 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.482618 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:51:14.485619 line       556                     i = i_j[0]
excute 13:51:14.490575 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:14.494565 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.499553 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:51:14.503542 line       556                     i = i_j[0]
excute 13:51:14.507531 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:14.511520 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.515510 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:51:14.519498 line       556                     i = i_j[0]
excute 13:51:14.523487 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:14.526480 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.531468 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:51:14.535456 line       556                     i = i_j[0]
excute 13:51:14.539444 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:14.543434 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.547423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 0)
excute 13:51:14.552410 line       556                     i = i_j[0]
excute 13:51:14.556400 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:14.559422 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.563412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:51:14.567401 line       556                     i = i_j[0]
excute 13:51:14.571359 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:14.575349 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.580337 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:51:14.583328 line       556                     i = i_j[0]
excute 13:51:14.587317 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:14.591307 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.595296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:51:14.599286 line       556                     i = i_j[0]
excute 13:51:14.603276 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:14.606266 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.610256 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 0)
excute 13:51:14.616240 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:14.620228 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:14.623220 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.627210 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:51:14.631199 line       556                     i = i_j[0]
excute 13:51:14.636186 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:14.640176 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.645162 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:51:14.649151 line       556                     i = i_j[0]
excute 13:51:14.654140 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:14.657130 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.661119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:51:14.665110 line       556                     i = i_j[0]
excute 13:51:14.669097 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:14.673086 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.677076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:51:14.680069 line       556                     i = i_j[0]
excute 13:51:14.684058 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:14.687050 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.691040 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 0)
excute 13:51:14.695029 line       556                     i = i_j[0]
excute 13:51:14.700015 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:14.703008 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.707994 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 0)
excute 13:51:14.710987 line       556                     i = i_j[0]
excute 13:51:14.715974 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:14.719963 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.724951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:51:14.727941 line       556                     i = i_j[0]
excute 13:51:14.731930 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:14.735920 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.739909 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:51:14.742900 line       556                     i = i_j[0]
excute 13:51:14.746890 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:14.750878 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.754871 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:51:14.759856 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:14.764844 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:14.768833 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.772822 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:51:14.776811 line       556                     i = i_j[0]
excute 13:51:14.780799 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:14.784790 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.788779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:51:14.792768 line       556                     i = i_j[0]
excute 13:51:14.797756 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:14.800747 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.804736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:51:14.808725 line       556                     i = i_j[0]
excute 13:51:14.812715 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:14.816704 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.821690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:51:14.824681 line       556                     i = i_j[0]
excute 13:51:14.828670 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:14.832659 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.836649 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:51:14.839641 line       556                     i = i_j[0]
excute 13:51:14.843630 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:14.846622 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.850611 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 0)
excute 13:51:14.854600 line       556                     i = i_j[0]
excute 13:51:14.858592 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:14.862580 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.866571 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:51:14.870560 line       556                     i = i_j[0]
excute 13:51:14.874549 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:14.877571 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.881560 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:51:14.885550 line       556                     i = i_j[0]
excute 13:51:14.889509 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:14.892531 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:14.896521 line       555                 for i_j in i_j_list:
excute 13:51:14.900510 line       581             self.write_matrix(
excute 13:51:14.903503 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:14.907491 line       583                 result_file_path,
excute 13:51:14.910483 line       584                 mode='a'
excute 13:51:14.917500 line       488         for t in time_steps:
excute Modified var:.. t = 169
excute 13:51:14.922486 line       489             if (t != self.TIME + 1):
excute 13:51:14.927475 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:14.930465 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:14.937448 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:14.941437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:14.945427 line       494                         if (i == j):
excute 13:51:14.951409 line       495                             continue
excute 13:51:14.955401 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:14.962381 line       494                         if (i == j):
excute 13:51:14.967366 line       496                         i_j_list.append((
excute 13:51:14.970361 line       497                             i, j,
excute 13:51:14.975346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:14.980333 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:51:14.990309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:14.997286 line       494                         if (i == j):
excute 13:51:15.002274 line       496                         i_j_list.append((
excute 13:51:15.007261 line       497                             i, j,
excute 13:51:15.010253 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.016235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0)]
excute 13:51:15.021225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:15.028205 line       494                         if (i == j):
excute 13:51:15.032206 line       496                         i_j_list.append((
excute 13:51:15.037180 line       497                             i, j,
excute 13:51:15.043165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.049148 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0)]
excute 13:51:15.055135 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:15.063112 line       494                         if (i == j):
excute 13:51:15.068097 line       496                         i_j_list.append((
excute 13:51:15.073084 line       497                             i, j,
excute 13:51:15.077076 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.080065 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:51:15.083056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:15.087047 line       494                         if (i == j):
excute 13:51:15.092034 line       496                         i_j_list.append((
excute 13:51:15.095025 line       497                             i, j,
excute 13:51:15.099015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.102006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:51:15.105995 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:15.109986 line       494                         if (i == j):
excute 13:51:15.112977 line       496                         i_j_list.append((
excute 13:51:15.116967 line       497                             i, j,
excute 13:51:15.119959 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.122951 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1)]
excute 13:51:15.126941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:15.130943 line       494                         if (i == j):
excute 13:51:15.135948 line       496                         i_j_list.append((
excute 13:51:15.139907 line       497                             i, j,
excute 13:51:15.146887 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.151873 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0)]
excute 13:51:15.155862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:15.163842 line       494                         if (i == j):
excute 13:51:15.168828 line       496                         i_j_list.append((
excute 13:51:15.172817 line       497                             i, j,
excute 13:51:15.176807 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.179799 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:51:15.183788 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:15.187778 line       494                         if (i == j):
excute 13:51:15.191767 line       496                         i_j_list.append((
excute 13:51:15.195756 line       497                             i, j,
excute 13:51:15.199746 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.203736 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:51:15.210716 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:15.215704 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:15.218694 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:15.222684 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:15.225677 line       494                         if (i == j):
excute 13:51:15.229666 line       496                         i_j_list.append((
excute 13:51:15.233654 line       497                             i, j,
excute 13:51:15.236647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.239639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0)]
excute 13:51:15.243630 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:15.247618 line       494                         if (i == j):
excute 13:51:15.251609 line       495                             continue
excute 13:51:15.256593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:15.263574 line       494                         if (i == j):
excute 13:51:15.267595 line       496                         i_j_list.append((
excute 13:51:15.271554 line       497                             i, j,
excute 13:51:15.275544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.279533 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:15.283523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:15.287513 line       494                         if (i == j):
excute 13:51:15.291502 line       496                         i_j_list.append((
excute 13:51:15.295491 line       497                             i, j,
excute 13:51:15.299480 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.303468 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:15.306461 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:15.310452 line       494                         if (i == j):
excute 13:51:15.314452 line       496                         i_j_list.append((
excute 13:51:15.318429 line       497                             i, j,
excute 13:51:15.321422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.326410 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:15.334387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:15.339372 line       494                         if (i == j):
excute 13:51:15.344358 line       496                         i_j_list.append((
excute 13:51:15.348349 line       497                             i, j,
excute 13:51:15.351342 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.356327 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:15.359319 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:15.363313 line       494                         if (i == j):
excute 13:51:15.367298 line       496                         i_j_list.append((
excute 13:51:15.371289 line       497                             i, j,
excute 13:51:15.376274 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.380262 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1)]
excute 13:51:15.384252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:15.388241 line       494                         if (i == j):
excute 13:51:15.391234 line       496                         i_j_list.append((
excute 13:51:15.395223 line       497                             i, j,
excute 13:51:15.398215 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.402205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0)]
excute 13:51:15.405196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:15.409186 line       494                         if (i == j):
excute 13:51:15.415169 line       496                         i_j_list.append((
excute 13:51:15.418160 line       497                             i, j,
excute 13:51:15.421153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.425143 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:51:15.428134 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:15.432124 line       494                         if (i == j):
excute 13:51:15.436116 line       496                         i_j_list.append((
excute 13:51:15.439105 line       497                             i, j,
excute 13:51:15.442097 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.446121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:51:15.450111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:15.454101 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:15.458086 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:15.462064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:15.465070 line       494                         if (i == j):
excute 13:51:15.469026 line       496                         i_j_list.append((
excute 13:51:15.472048 line       497                             i, j,
excute 13:51:15.477039 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.480995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0)]
excute 13:51:15.484984 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:15.488974 line       494                         if (i == j):
excute 13:51:15.492963 line       496                         i_j_list.append((
excute 13:51:15.495954 line       497                             i, j,
excute 13:51:15.499944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.503933 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:51:15.507923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:15.511912 line       494                         if (i == j):
excute 13:51:15.516900 line       495                             continue
excute 13:51:15.520900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:15.523910 line       494                         if (i == j):
excute 13:51:15.527868 line       496                         i_j_list.append((
excute 13:51:15.530892 line       497                             i, j,
excute 13:51:15.534880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.537874 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:15.541866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:15.545822 line       494                         if (i == j):
excute 13:51:15.549833 line       496                         i_j_list.append((
excute 13:51:15.552835 line       497                             i, j,
excute 13:51:15.556822 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.559815 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:15.563803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:15.567793 line       494                         if (i == j):
excute 13:51:15.571752 line       496                         i_j_list.append((
excute 13:51:15.574774 line       497                             i, j,
excute 13:51:15.579731 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.582753 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:15.586711 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:15.594690 line       494                         if (i == j):
excute 13:51:15.601671 line       496                         i_j_list.append((
excute 13:51:15.605660 line       497                             i, j,
excute 13:51:15.609649 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.613638 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1)]
excute 13:51:15.617627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:15.624612 line       494                         if (i == j):
excute 13:51:15.629598 line       496                         i_j_list.append((
excute 13:51:15.634583 line       497                             i, j,
excute 13:51:15.638572 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.642564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0)]
excute 13:51:15.646551 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:15.649545 line       494                         if (i == j):
excute 13:51:15.654532 line       496                         i_j_list.append((
excute 13:51:15.658519 line       497                             i, j,
excute 13:51:15.661544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.664537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:51:15.668524 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:15.672482 line       494                         if (i == j):
excute 13:51:15.676504 line       496                         i_j_list.append((
excute 13:51:15.679495 line       497                             i, j,
excute 13:51:15.683484 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.687472 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:51:15.690465 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:15.694454 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:15.698414 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:15.702432 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:15.706422 line       494                         if (i == j):
excute 13:51:15.710413 line       496                         i_j_list.append((
excute 13:51:15.713403 line       497                             i, j,
excute 13:51:15.716395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.720387 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0)]
excute 13:51:15.723376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:15.728341 line       494                         if (i == j):
excute 13:51:15.732324 line       496                         i_j_list.append((
excute 13:51:15.735315 line       497                             i, j,
excute 13:51:15.739304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.743293 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0)]
excute 13:51:15.746286 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:15.750275 line       494                         if (i == j):
excute 13:51:15.755270 line       496                         i_j_list.append((
excute 13:51:15.758283 line       497                             i, j,
excute 13:51:15.762242 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.765267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0)]
excute 13:51:15.768260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:15.772246 line       494                         if (i == j):
excute 13:51:15.776238 line       495                             continue
excute 13:51:15.780225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:15.784184 line       494                         if (i == j):
excute 13:51:15.788171 line       496                         i_j_list.append((
excute 13:51:15.792161 line       497                             i, j,
excute 13:51:15.795153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.798145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0)]
excute 13:51:15.802135 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:15.806125 line       494                         if (i == j):
excute 13:51:15.809115 line       496                         i_j_list.append((
excute 13:51:15.813106 line       497                             i, j,
excute 13:51:15.816097 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.819089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0)]
excute 13:51:15.823078 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:15.827068 line       494                         if (i == j):
excute 13:51:15.831057 line       496                         i_j_list.append((
excute 13:51:15.834049 line       497                             i, j,
excute 13:51:15.837041 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.841030 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1)]
excute 13:51:15.844024 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:15.848013 line       494                         if (i == j):
excute 13:51:15.853001 line       496                         i_j_list.append((
excute 13:51:15.857023 line       497                             i, j,
excute 13:51:15.860011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.864004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0)]
excute 13:51:15.866993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:15.870952 line       494                         if (i == j):
excute 13:51:15.874943 line       496                         i_j_list.append((
excute 13:51:15.877964 line       497                             i, j,
excute 13:51:15.881953 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.884947 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0)]
excute 13:51:15.889900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:15.892926 line       494                         if (i == j):
excute 13:51:15.896912 line       496                         i_j_list.append((
excute 13:51:15.900905 line       497                             i, j,
excute 13:51:15.903896 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.906886 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0)]
excute 13:51:15.914833 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:15.918824 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:15.926819 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:15.930791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:15.933782 line       494                         if (i == j):
excute 13:51:15.937772 line       496                         i_j_list.append((
excute 13:51:15.940764 line       497                             i, j,
excute 13:51:15.944753 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.948746 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0)]
excute 13:51:15.951769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:15.956756 line       494                         if (i == j):
excute 13:51:15.960722 line       496                         i_j_list.append((
excute 13:51:15.965699 line       497                             i, j,
excute 13:51:15.970685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.973711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:51:15.977697 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:15.981655 line       494                         if (i == j):
excute 13:51:15.985657 line       496                         i_j_list.append((
excute 13:51:15.990664 line       497                             i, j,
excute 13:51:15.993654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:15.997645 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0)]
excute 13:51:16.000635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:16.004627 line       494                         if (i == j):
excute 13:51:16.009581 line       496                         i_j_list.append((
excute 13:51:16.013570 line       497                             i, j,
excute 13:51:16.016563 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.020553 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0)]
excute 13:51:16.024562 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:16.030557 line       494                         if (i == j):
excute 13:51:16.037539 line       495                             continue
excute 13:51:16.040529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:16.044521 line       494                         if (i == j):
excute 13:51:16.048509 line       496                         i_j_list.append((
excute 13:51:16.051499 line       497                             i, j,
excute 13:51:16.055493 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.058481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:51:16.062470 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:16.066465 line       494                         if (i == j):
excute 13:51:16.070419 line       496                         i_j_list.append((
excute 13:51:16.073411 line       497                             i, j,
excute 13:51:16.077401 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.081387 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1)]
excute 13:51:16.085378 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:16.089366 line       494                         if (i == j):
excute 13:51:16.094353 line       496                         i_j_list.append((
excute 13:51:16.098342 line       497                             i, j,
excute 13:51:16.101334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.105324 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0)]
excute 13:51:16.108316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:16.112305 line       494                         if (i == j):
excute 13:51:16.116295 line       496                         i_j_list.append((
excute 13:51:16.119286 line       497                             i, j,
excute 13:51:16.123276 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.126268 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:51:16.130258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:16.134249 line       494                         if (i == j):
excute 13:51:16.138236 line       496                         i_j_list.append((
excute 13:51:16.143222 line       497                             i, j,
excute 13:51:16.146214 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.149207 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:51:16.153195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:16.157185 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:16.160177 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:16.164167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:16.168188 line       494                         if (i == j):
excute 13:51:16.172148 line       496                         i_j_list.append((
excute 13:51:16.175172 line       497                             i, j,
excute 13:51:16.179140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.182150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0)]
excute 13:51:16.186124 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:16.189132 line       494                         if (i == j):
excute 13:51:16.194091 line       496                         i_j_list.append((
excute 13:51:16.198078 line       497                             i, j,
excute 13:51:16.202067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.205059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:51:16.209049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:16.213036 line       494                         if (i == j):
excute 13:51:16.217027 line       496                         i_j_list.append((
excute 13:51:16.221016 line       497                             i, j,
excute 13:51:16.225006 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.228995 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:51:16.231987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:16.235977 line       494                         if (i == j):
excute 13:51:16.239966 line       496                         i_j_list.append((
excute 13:51:16.243956 line       497                             i, j,
excute 13:51:16.247945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.250937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:16.256920 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:16.261908 line       494                         if (i == j):
excute 13:51:16.265898 line       496                         i_j_list.append((
excute 13:51:16.268888 line       497                             i, j,
excute 13:51:16.272878 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.279858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:16.283847 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:16.288846 line       494                         if (i == j):
excute 13:51:16.292823 line       495                             continue
excute 13:51:16.297810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:16.300801 line       494                         if (i == j):
excute 13:51:16.304791 line       496                         i_j_list.append((
excute 13:51:16.307783 line       497                             i, j,
excute 13:51:16.311772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.314764 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1)]
excute 13:51:16.317756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:16.321746 line       494                         if (i == j):
excute 13:51:16.327730 line       496                         i_j_list.append((
excute 13:51:16.337704 line       497                             i, j,
excute 13:51:16.344685 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.348673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0)]
excute 13:51:16.352662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:16.357651 line       494                         if (i == j):
excute 13:51:16.362636 line       496                         i_j_list.append((
excute 13:51:16.367669 line       497                             i, j,
excute 13:51:16.374605 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.379592 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:51:16.383580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:16.389565 line       494                         if (i == j):
excute 13:51:16.393554 line       496                         i_j_list.append((
excute 13:51:16.398541 line       497                             i, j,
excute 13:51:16.404524 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.408515 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:51:16.414499 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:16.422478 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:16.426466 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:16.430455 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:16.434444 line       494                         if (i == j):
excute 13:51:16.440429 line       496                         i_j_list.append((
excute 13:51:16.449406 line       497                             i, j,
excute 13:51:16.456387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.467356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0)]
excute 13:51:16.471348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:16.476334 line       494                         if (i == j):
excute 13:51:16.481320 line       496                         i_j_list.append((
excute 13:51:16.488300 line       497                             i, j,
excute 13:51:16.496279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.506255 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:51:16.514232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:16.523208 line       494                         if (i == j):
excute 13:51:16.528196 line       496                         i_j_list.append((
excute 13:51:16.537170 line       497                             i, j,
excute 13:51:16.543155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.548140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:51:16.555122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:16.561106 line       494                         if (i == j):
excute 13:51:16.567090 line       496                         i_j_list.append((
excute 13:51:16.572077 line       497                             i, j,
excute 13:51:16.581052 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.590028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:51:16.595015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:16.601000 line       494                         if (i == j):
excute 13:51:16.609977 line       496                         i_j_list.append((
excute 13:51:16.615960 line       497                             i, j,
excute 13:51:16.621945 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.626931 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:51:16.633912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:16.640893 line       494                         if (i == j):
excute 13:51:16.650866 line       496                         i_j_list.append((
excute 13:51:16.657848 line       497                             i, j,
excute 13:51:16.665827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.673804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0)]
excute 13:51:16.678791 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:16.685774 line       494                         if (i == j):
excute 13:51:16.692755 line       495                             continue
excute 13:51:16.697740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:16.702727 line       494                         if (i == j):
excute 13:51:16.710707 line       496                         i_j_list.append((
excute 13:51:16.718684 line       497                             i, j,
excute 13:51:16.724670 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.732648 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0)]
excute 13:51:16.737633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:16.744618 line       494                         if (i == j):
excute 13:51:16.752603 line       496                         i_j_list.append((
excute 13:51:16.758578 line       497                             i, j,
excute 13:51:16.767554 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.773537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0)]
excute 13:51:16.782515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:16.788501 line       494                         if (i == j):
excute 13:51:16.796477 line       496                         i_j_list.append((
excute 13:51:16.800470 line       497                             i, j,
excute 13:51:16.806451 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.812435 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:51:16.818419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:16.822407 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:16.826396 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:16.830387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:16.833377 line       494                         if (i == j):
excute 13:51:16.837367 line       496                         i_j_list.append((
excute 13:51:16.841357 line       497                             i, j,
excute 13:51:16.844348 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.848340 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0)]
excute 13:51:16.851329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:16.856317 line       494                         if (i == j):
excute 13:51:16.859309 line       496                         i_j_list.append((
excute 13:51:16.863299 line       497                             i, j,
excute 13:51:16.866291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.870280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:51:16.873272 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:16.877262 line       494                         if (i == j):
excute 13:51:16.881261 line       496                         i_j_list.append((
excute 13:51:16.884242 line       497                             i, j,
excute 13:51:16.888232 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.891224 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:16.895245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:16.899202 line       494                         if (i == j):
excute 13:51:16.903206 line       496                         i_j_list.append((
excute 13:51:16.906217 line       497                             i, j,
excute 13:51:16.910204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.913164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:16.918152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:16.922143 line       494                         if (i == j):
excute 13:51:16.927128 line       496                         i_j_list.append((
excute 13:51:16.930121 line       497                             i, j,
excute 13:51:16.934110 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.937102 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:16.941091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:16.946092 line       494                         if (i == j):
excute 13:51:16.950102 line       496                         i_j_list.append((
excute 13:51:16.954091 line       497                             i, j,
excute 13:51:16.958076 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.961067 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:16.965060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:16.969017 line       494                         if (i == j):
excute 13:51:16.973006 line       496                         i_j_list.append((
excute 13:51:16.976028 line       497                             i, j,
excute 13:51:16.980983 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:16.983975 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1)]
excute 13:51:16.987965 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:16.991954 line       494                         if (i == j):
excute 13:51:16.994977 line       495                             continue
excute 13:51:16.998967 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:17.001960 line       494                         if (i == j):
excute 13:51:17.005949 line       496                         i_j_list.append((
excute 13:51:17.009940 line       497                             i, j,
excute 13:51:17.013895 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.016887 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0)]
excute 13:51:17.020877 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:17.025898 line       494                         if (i == j):
excute 13:51:17.032844 line       496                         i_j_list.append((
excute 13:51:17.036868 line       497                             i, j,
excute 13:51:17.040855 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.043847 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:51:17.047837 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:17.051830 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:17.055784 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:17.058807 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:17.062796 line       494                         if (i == j):
excute 13:51:17.066786 line       496                         i_j_list.append((
excute 13:51:17.070775 line       497                             i, j,
excute 13:51:17.073769 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.077756 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:51:17.080748 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:17.084740 line       494                         if (i == j):
excute 13:51:17.088726 line       496                         i_j_list.append((
excute 13:51:17.092718 line       497                             i, j,
excute 13:51:17.095708 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.099697 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:51:17.102689 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:17.106680 line       494                         if (i == j):
excute 13:51:17.110668 line       496                         i_j_list.append((
excute 13:51:17.114657 line       497                             i, j,
excute 13:51:17.117649 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.121641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:51:17.125631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:17.129620 line       494                         if (i == j):
excute 13:51:17.134574 line       496                         i_j_list.append((
excute 13:51:17.141554 line       497                             i, j,
excute 13:51:17.144546 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.148535 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:51:17.155518 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:17.163496 line       494                         if (i == j):
excute 13:51:17.168483 line       496                         i_j_list.append((
excute 13:51:17.172471 line       497                             i, j,
excute 13:51:17.175463 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.179452 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:51:17.182444 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:17.186433 line       494                         if (i == j):
excute 13:51:17.190456 line       496                         i_j_list.append((
excute 13:51:17.194444 line       497                             i, j,
excute 13:51:17.197436 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.201428 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:51:17.204420 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:17.208406 line       494                         if (i == j):
excute 13:51:17.212399 line       496                         i_j_list.append((
excute 13:51:17.216385 line       497                             i, j,
excute 13:51:17.219377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.223366 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1)]
excute 13:51:17.227326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:17.234632 line       494                         if (i == j):
excute 13:51:17.238621 line       496                         i_j_list.append((
excute 13:51:17.242610 line       497                             i, j,
excute 13:51:17.246599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.249623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0)]
excute 13:51:17.253615 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:17.257569 line       494                         if (i == j):
excute 13:51:17.261559 line       495                             continue
excute 13:51:17.265548 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:17.268541 line       494                         if (i == j):
excute 13:51:17.272530 line       496                         i_j_list.append((
excute 13:51:17.276519 line       497                             i, j,
excute 13:51:17.279511 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.283500 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:51:17.286493 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:17.291480 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:17.295501 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:17.299492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:17.302482 line       494                         if (i == j):
excute 13:51:17.306474 line       496                         i_j_list.append((
excute 13:51:17.310429 line       497                             i, j,
excute 13:51:17.313453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.316445 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0)]
excute 13:51:17.320434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:17.324425 line       494                         if (i == j):
excute 13:51:17.337371 line       496                         i_j_list.append((
excute 13:51:17.342377 line       497                             i, j,
excute 13:51:17.346367 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.349359 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:51:17.353346 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:17.359314 line       494                         if (i == j):
excute 13:51:17.363288 line       496                         i_j_list.append((
excute 13:51:17.367278 line       497                             i, j,
excute 13:51:17.370302 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.374258 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:51:17.378247 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:17.382237 line       494                         if (i == j):
excute 13:51:17.386226 line       496                         i_j_list.append((
excute 13:51:17.390252 line       497                             i, j,
excute 13:51:17.394239 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.397230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:17.401220 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:17.405181 line       494                         if (i == j):
excute 13:51:17.409166 line       496                         i_j_list.append((
excute 13:51:17.412188 line       497                             i, j,
excute 13:51:17.416178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.420137 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:17.424126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:17.428116 line       494                         if (i == j):
excute 13:51:17.433102 line       496                         i_j_list.append((
excute 13:51:17.437124 line       497                             i, j,
excute 13:51:17.441112 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.444103 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:17.449091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:17.453083 line       494                         if (i == j):
excute 13:51:17.457069 line       496                         i_j_list.append((
excute 13:51:17.461049 line       497                             i, j,
excute 13:51:17.466017 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.471001 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1)]
excute 13:51:17.474026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:17.478979 line       494                         if (i == j):
excute 13:51:17.482992 line       496                         i_j_list.append((
excute 13:51:17.485992 line       497                             i, j,
excute 13:51:17.489983 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.493970 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0)]
excute 13:51:17.496961 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:17.500953 line       494                         if (i == j):
excute 13:51:17.504941 line       496                         i_j_list.append((
excute 13:51:17.508932 line       497                             i, j,
excute 13:51:17.512902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:17.515911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 6, 5, 1), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:51:17.519870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:17.523891 line       494                         if (i == j):
excute 13:51:17.527861 line       495                             continue
excute 13:51:17.530871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:17.534830 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:17.539815 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (8, 6, -1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (2, 6, 0, 1), (5, 6, 0, 1), (7, 6, 0, 1), (0, 1, 1, 0), (0, 2, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (0, 6, 1, 1), (1, 6, 1, 1), (9, 6, 1, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (4, 6, 2, 1), (3, 0, 5, 0), (3, 1, 5, 0), (3, 2, 5, 0), (3, 4, 5, 0), (3, 5, 5, 0), (3, 7, 5, 0), (3, 8, 5, 0), (3, 9, 5, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (3, 6, 5, 1)]
excute 13:51:17.543806 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:17.546797 line       505                     if (self.RELOCATE):
excute 13:51:17.550786 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:17.554775 line       505                     if (self.RELOCATE):
excute 13:51:17.558765 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:17.562755 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:51:17.565746 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:17.569735 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:17.573725 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.577716 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:51:17.580740 line       556                     i = i_j[0]
excute 13:51:17.584727 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:17.588719 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.592676 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:51:17.595697 line       556                     i = i_j[0]
excute 13:51:17.600655 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:17.604643 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.607667 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:17.611655 line       556                     i = i_j[0]
excute 13:51:17.615614 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:17.619635 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.623624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:51:17.626615 line       556                     i = i_j[0]
excute 13:51:17.630606 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:17.634593 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.641580 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:17.645535 line       556                     i = i_j[0]
excute 13:51:17.649524 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:17.653513 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.658500 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:51:17.662489 line       556                     i = i_j[0]
excute 13:51:17.667475 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:17.671465 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.675455 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:51:17.679444 line       556                     i = i_j[0]
excute 13:51:17.684432 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:17.688420 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.692409 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 1)
excute 13:51:17.696399 line       556                     i = i_j[0]
excute 13:51:17.701386 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:17.705375 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.709365 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:17.712356 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:17.716346 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:17.720334 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.725320 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:17.729308 line       556                     i = i_j[0]
excute 13:51:17.733299 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:17.737289 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.742276 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:17.746295 line       556                     i = i_j[0]
excute 13:51:17.750285 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:17.754250 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.758233 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:17.761257 line       556                     i = i_j[0]
excute 13:51:17.765244 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:17.772329 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.776322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:17.779313 line       556                     i = i_j[0]
excute 13:51:17.783302 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:17.787292 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.791291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:51:17.794273 line       556                     i = i_j[0]
excute 13:51:17.798262 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:17.802251 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.806241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:17.809233 line       556                     i = i_j[0]
excute 13:51:17.813223 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:17.816215 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.820203 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:17.824193 line       556                     i = i_j[0]
excute 13:51:17.828182 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:17.831174 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.835176 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:17.839153 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:17.844141 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:17.848137 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.852121 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:17.856140 line       556                     i = i_j[0]
excute 13:51:17.860098 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:17.863120 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.867078 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:17.871068 line       556                     i = i_j[0]
excute 13:51:17.875057 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:17.878049 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.882038 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:17.886028 line       556                     i = i_j[0]
excute 13:51:17.890050 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:17.893041 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.897030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:17.901019 line       556                     i = i_j[0]
excute 13:51:17.904978 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:17.908001 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.911991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:51:17.915980 line       556                     i = i_j[0]
excute 13:51:17.919971 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:17.922963 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.926950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:17.930943 line       556                     i = i_j[0]
excute 13:51:17.934903 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:17.937921 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.941913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:51:17.947865 line       556                     i = i_j[0]
excute 13:51:17.951885 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:17.954878 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.959832 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:17.963822 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:17.967810 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:17.971801 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.975787 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:17.979777 line       556                     i = i_j[0]
excute 13:51:17.983767 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:17.986758 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:17.990747 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:17.994737 line       556                     i = i_j[0]
excute 13:51:17.998727 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:18.001750 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.005723 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:18.009699 line       556                     i = i_j[0]
excute 13:51:18.013686 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:18.017677 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.020702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:18.024657 line       556                     i = i_j[0]
excute 13:51:18.028680 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:18.032667 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.036627 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:18.039655 line       556                     i = i_j[0]
excute 13:51:18.044613 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:18.048595 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.053581 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:18.057569 line       556                     i = i_j[0]
excute 13:51:18.065548 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:18.073527 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.077518 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:18.081506 line       556                     i = i_j[0]
excute 13:51:18.085495 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:18.088518 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.092507 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 1)
excute 13:51:18.096498 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:18.100456 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:18.104446 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.108435 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 1)
excute 13:51:18.111456 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:18.115447 line       557                     j = i_j[1]
excute 13:51:18.119435 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.123426 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 1)
excute 13:51:18.126418 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:18.130408 line       557                     j = i_j[1]
excute 13:51:18.148469 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.154457 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:51:18.158442 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:18.163428 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:18.168415 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.172405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 0)
excute 13:51:18.175429 line       556                     i = i_j[0]
excute 13:51:18.179417 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:18.183407 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.187366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:51:18.190388 line       556                     i = i_j[0]
excute 13:51:18.194377 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:18.198368 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.202340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:51:18.205348 line       556                     i = i_j[0]
excute 13:51:18.209343 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:18.213327 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.217286 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:51:18.220309 line       556                     i = i_j[0]
excute 13:51:18.224298 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:18.228292 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.232260 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:51:18.235268 line       556                     i = i_j[0]
excute 13:51:18.239258 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:18.243247 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.247238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:51:18.250228 line       556                     i = i_j[0]
excute 13:51:18.255187 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:18.260170 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.264160 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:51:18.267183 line       556                     i = i_j[0]
excute 13:51:18.271173 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:18.275161 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.279121 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:18.282142 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:18.286132 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:18.291089 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.295077 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:18.299065 line       556                     i = i_j[0]
excute 13:51:18.303056 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:18.306047 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.310037 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:18.313029 line       556                     i = i_j[0]
excute 13:51:18.317018 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:18.321007 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.325996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:18.332988 line       556                     i = i_j[0]
excute 13:51:18.337965 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:18.342981 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.346939 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:18.349961 line       556                     i = i_j[0]
excute 13:51:18.354920 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:18.359936 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.363931 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:51:18.366916 line       556                     i = i_j[0]
excute 13:51:18.371872 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:18.374895 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.378884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:18.382875 line       556                     i = i_j[0]
excute 13:51:18.386863 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:18.390853 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.394810 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:18.397834 line       556                     i = i_j[0]
excute 13:51:18.401822 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:18.405813 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.409775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:18.412794 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:18.417755 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:18.421740 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.425729 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:18.428751 line       556                     i = i_j[0]
excute 13:51:18.432740 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:18.436731 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.440690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:18.443711 line       556                     i = i_j[0]
excute 13:51:18.448668 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:18.451690 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.456682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:18.460634 line       556                     i = i_j[0]
excute 13:51:18.464623 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:18.467615 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.471604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:18.475594 line       556                     i = i_j[0]
excute 13:51:18.479583 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:18.483572 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.487563 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:18.490554 line       556                     i = i_j[0]
excute 13:51:18.494543 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:18.498532 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.502522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:51:18.505514 line       556                     i = i_j[0]
excute 13:51:18.509503 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:18.513492 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.517482 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:18.520474 line       556                     i = i_j[0]
excute 13:51:18.524464 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:18.527455 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.531445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 1)
excute 13:51:18.535434 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:18.538426 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:18.543413 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.546405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 1)
excute 13:51:18.550394 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:18.554383 line       557                     j = i_j[1]
excute 13:51:18.558406 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.563393 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 1)
excute 13:51:18.566383 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:18.570372 line       557                     j = i_j[1]
excute 13:51:18.575361 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.578351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:51:18.582340 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:18.586299 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:18.590321 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.594310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:51:18.597300 line       556                     i = i_j[0]
excute 13:51:18.601291 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:18.605280 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.609238 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 0)
excute 13:51:18.612260 line       556                     i = i_j[0]
excute 13:51:18.616250 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:18.620239 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.624212 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:51:18.627221 line       556                     i = i_j[0]
excute 13:51:18.631209 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:18.635199 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.643147 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:51:18.647136 line       556                     i = i_j[0]
excute 13:51:18.651125 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:18.654116 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.658137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:51:18.662127 line       556                     i = i_j[0]
excute 13:51:18.667085 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:18.671074 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.675063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:51:18.679050 line       556                     i = i_j[0]
excute 13:51:18.683042 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:18.686033 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.691019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:51:18.694012 line       556                     i = i_j[0]
excute 13:51:18.698999 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:18.702988 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.706977 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 1)
excute 13:51:18.710966 line       556                     i = i_j[0]
excute 13:51:18.715954 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:18.719941 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.723932 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 185
excute 13:51:18.726954 line       560                         if (t_tmp > self.TIME):
excute 13:51:18.731909 line       561                             time_over += 1
excute Modified var:.. time_over = 3
excute 13:51:18.734901 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 5, 0)
excute 13:51:18.738890 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:18.742879 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:18.746869 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.750858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 5, 0)
excute 13:51:18.753850 line       556                     i = i_j[0]
excute 13:51:18.757839 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:18.761828 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.765819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 5, 0)
excute 13:51:18.770806 line       556                     i = i_j[0]
excute 13:51:18.774796 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:18.778785 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.782774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 5, 0)
excute 13:51:18.786764 line       556                     i = i_j[0]
excute 13:51:18.790752 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:18.794742 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.799730 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 5, 0)
excute 13:51:18.802721 line       556                     i = i_j[0]
excute 13:51:18.807707 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:18.810730 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.814720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 5, 0)
excute 13:51:18.818691 line       556                     i = i_j[0]
excute 13:51:18.822668 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:18.826657 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.830645 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 5, 0)
excute 13:51:18.833668 line       556                     i = i_j[0]
excute 13:51:18.837628 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:18.840650 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.845606 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 5, 0)
excute 13:51:18.848628 line       556                     i = i_j[0]
excute 13:51:18.852588 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:18.856609 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.860567 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:51:18.863588 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:18.867578 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:18.872546 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.876554 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:51:18.880512 line       556                     i = i_j[0]
excute 13:51:18.884501 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:18.887525 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.891483 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:51:18.894505 line       556                     i = i_j[0]
excute 13:51:18.898497 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:18.902484 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.906443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:51:18.909466 line       556                     i = i_j[0]
excute 13:51:18.913456 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:18.917444 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.921418 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:51:18.924425 line       556                     i = i_j[0]
excute 13:51:18.928416 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:18.932404 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.936364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:51:18.939385 line       556                     i = i_j[0]
excute 13:51:18.943375 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:18.947336 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.951322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 0)
excute 13:51:18.955312 line       556                     i = i_j[0]
excute 13:51:18.959300 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:18.965286 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.970274 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:51:18.975298 line       556                     i = i_j[0]
excute 13:51:18.979279 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:18.983268 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:18.987226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:51:18.991251 line       556                     i = i_j[0]
excute 13:51:18.995207 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:18.999226 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:19.003217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 5, 1)
excute 13:51:19.006207 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:19.011163 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:19.015152 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:19.019141 line       555                 for i_j in i_j_list:
excute 13:51:19.022133 line       581             self.write_matrix(
excute 13:51:19.026123 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:19.030112 line       583                 result_file_path,
excute 13:51:19.034101 line       584                 mode='a'
excute 13:51:19.044076 line       488         for t in time_steps:
excute Modified var:.. t = 170
excute 13:51:19.050059 line       489             if (t != self.TIME + 1):
excute 13:51:19.057040 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:19.060033 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:19.064022 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:19.068012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:19.072003 line       494                         if (i == j):
excute 13:51:19.078983 line       495                             continue
excute 13:51:19.081974 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:19.085963 line       494                         if (i == j):
excute 13:51:19.089953 line       496                         i_j_list.append((
excute 13:51:19.094938 line       497                             i, j,
excute 13:51:19.098929 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.108916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0)]
excute 13:51:19.118874 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:19.123868 line       494                         if (i == j):
excute 13:51:19.130845 line       496                         i_j_list.append((
excute 13:51:19.138822 line       497                             i, j,
excute 13:51:19.146801 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.153782 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1)]
excute 13:51:19.159766 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:19.167746 line       494                         if (i == j):
excute 13:51:19.175726 line       496                         i_j_list.append((
excute 13:51:19.181739 line       497                             i, j,
excute 13:51:19.184730 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.188691 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0)]
excute 13:51:19.192708 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:19.196699 line       494                         if (i == j):
excute 13:51:19.200655 line       496                         i_j_list.append((
excute 13:51:19.204644 line       497                             i, j,
excute 13:51:19.208635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.211658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0)]
excute 13:51:19.215647 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:19.219610 line       494                         if (i == j):
excute 13:51:19.223594 line       496                         i_j_list.append((
excute 13:51:19.227584 line       497                             i, j,
excute 13:51:19.230576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.234565 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0)]
excute 13:51:19.237557 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:19.241546 line       494                         if (i == j):
excute 13:51:19.245536 line       496                         i_j_list.append((
excute 13:51:19.249525 line       497                             i, j,
excute 13:51:19.252517 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.256506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1)]
excute 13:51:19.259498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:19.263487 line       494                         if (i == j):
excute 13:51:19.267477 line       496                         i_j_list.append((
excute 13:51:19.271466 line       497                             i, j,
excute 13:51:19.274458 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.278447 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0)]
excute 13:51:19.282439 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:19.286428 line       494                         if (i == j):
excute 13:51:19.290417 line       496                         i_j_list.append((
excute 13:51:19.294407 line       497                             i, j,
excute 13:51:19.298395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.302385 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0)]
excute 13:51:19.305377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:19.309366 line       494                         if (i == j):
excute 13:51:19.313355 line       496                         i_j_list.append((
excute 13:51:19.316346 line       497                             i, j,
excute 13:51:19.321334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.325322 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0)]
excute 13:51:19.335297 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:19.344274 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:19.347264 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:19.351257 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:19.355243 line       494                         if (i == j):
excute 13:51:19.361227 line       496                         i_j_list.append((
excute 13:51:19.364218 line       497                             i, j,
excute 13:51:19.367210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.371199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0)]
excute 13:51:19.375189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:19.379180 line       494                         if (i == j):
excute 13:51:19.383169 line       495                             continue
excute 13:51:19.388155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:19.392143 line       494                         if (i == j):
excute 13:51:19.396133 line       496                         i_j_list.append((
excute 13:51:19.399126 line       497                             i, j,
excute 13:51:19.403115 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.407104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1)]
excute 13:51:19.410095 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:19.414086 line       494                         if (i == j):
excute 13:51:19.418075 line       496                         i_j_list.append((
excute 13:51:19.421066 line       497                             i, j,
excute 13:51:19.425057 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.428049 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0)]
excute 13:51:19.432038 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:19.436027 line       494                         if (i == j):
excute 13:51:19.439019 line       496                         i_j_list.append((
excute 13:51:19.443008 line       497                             i, j,
excute 13:51:19.446000 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.449990 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:19.454012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:19.464443 line       494                         if (i == j):
excute 13:51:19.468422 line       496                         i_j_list.append((
excute 13:51:19.471444 line       497                             i, j,
excute 13:51:19.475403 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.479424 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:19.482414 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:19.486405 line       494                         if (i == j):
excute 13:51:19.491393 line       496                         i_j_list.append((
excute 13:51:19.495361 line       497                             i, j,
excute 13:51:19.498376 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.502330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1)]
excute 13:51:19.505354 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:19.510312 line       494                         if (i == j):
excute 13:51:19.514301 line       496                         i_j_list.append((
excute 13:51:19.517292 line       497                             i, j,
excute 13:51:19.521281 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.525271 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0)]
excute 13:51:19.529260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:19.533250 line       494                         if (i == j):
excute 13:51:19.537238 line       496                         i_j_list.append((
excute 13:51:19.541260 line       497                             i, j,
excute 13:51:19.544250 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.548239 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:51:19.551231 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:19.555222 line       494                         if (i == j):
excute 13:51:19.559178 line       496                         i_j_list.append((
excute 13:51:19.563167 line       497                             i, j,
excute 13:51:19.566160 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.569152 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:51:19.573141 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:19.577130 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:19.580122 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:19.584111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:19.587103 line       494                         if (i == j):
excute 13:51:19.592091 line       496                         i_j_list.append((
excute 13:51:19.597110 line       497                             i, j,
excute 13:51:19.600101 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.604059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0)]
excute 13:51:19.608047 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:19.612037 line       494                         if (i == j):
excute 13:51:19.616026 line       496                         i_j_list.append((
excute 13:51:19.620016 line       497                             i, j,
excute 13:51:19.623008 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.626998 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:51:19.629988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:19.633978 line       494                         if (i == j):
excute 13:51:19.637969 line       495                             continue
excute 13:51:19.640960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:19.644948 line       494                         if (i == j):
excute 13:51:19.648938 line       496                         i_j_list.append((
excute 13:51:19.651930 line       497                             i, j,
excute 13:51:19.655919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.658911 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:19.664895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:19.669883 line       494                         if (i == j):
excute 13:51:19.673885 line       496                         i_j_list.append((
excute 13:51:19.677861 line       497                             i, j,
excute 13:51:19.681851 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.685849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:19.688832 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:19.693818 line       494                         if (i == j):
excute 13:51:19.699802 line       496                         i_j_list.append((
excute 13:51:19.703792 line       497                             i, j,
excute 13:51:19.706783 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.710772 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:19.713765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:19.717755 line       494                         if (i == j):
excute 13:51:19.721744 line       496                         i_j_list.append((
excute 13:51:19.725733 line       497                             i, j,
excute 13:51:19.728725 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.732715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1)]
excute 13:51:19.735706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:19.739696 line       494                         if (i == j):
excute 13:51:19.743686 line       496                         i_j_list.append((
excute 13:51:19.746677 line       497                             i, j,
excute 13:51:19.750666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.753659 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0)]
excute 13:51:19.757647 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:19.761637 line       494                         if (i == j):
excute 13:51:19.765627 line       496                         i_j_list.append((
excute 13:51:19.769616 line       497                             i, j,
excute 13:51:19.772639 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.776610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:51:19.779620 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:19.783610 line       494                         if (i == j):
excute 13:51:19.787600 line       496                         i_j_list.append((
excute 13:51:19.791557 line       497                             i, j,
excute 13:51:19.794549 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.798539 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:51:19.802528 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:19.806517 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:19.809509 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:19.813498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:19.817487 line       494                         if (i == j):
excute 13:51:19.821477 line       496                         i_j_list.append((
excute 13:51:19.824502 line       497                             i, j,
excute 13:51:19.827494 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.831482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0)]
excute 13:51:19.834475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:19.838463 line       494                         if (i == j):
excute 13:51:19.842454 line       496                         i_j_list.append((
excute 13:51:19.846440 line       497                             i, j,
excute 13:51:19.849434 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.852426 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0)]
excute 13:51:19.856415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:19.860406 line       494                         if (i == j):
excute 13:51:19.864394 line       496                         i_j_list.append((
excute 13:51:19.868352 line       497                             i, j,
excute 13:51:19.871376 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.874368 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1)]
excute 13:51:19.878357 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:19.882315 line       494                         if (i == j):
excute 13:51:19.886337 line       495                             continue
excute 13:51:19.889328 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:19.893311 line       494                         if (i == j):
excute 13:51:19.896309 line       496                         i_j_list.append((
excute 13:51:19.900298 line       497                             i, j,
excute 13:51:19.904258 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.908247 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0)]
excute 13:51:19.912236 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:19.916225 line       494                         if (i == j):
excute 13:51:19.921212 line       496                         i_j_list.append((
excute 13:51:19.925202 line       497                             i, j,
excute 13:51:19.929191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.932183 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0)]
excute 13:51:19.936172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:19.941160 line       494                         if (i == j):
excute 13:51:19.945148 line       496                         i_j_list.append((
excute 13:51:19.949174 line       497                             i, j,
excute 13:51:19.953126 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.956149 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1)]
excute 13:51:19.960139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:19.964097 line       494                         if (i == j):
excute 13:51:19.968086 line       496                         i_j_list.append((
excute 13:51:19.971108 line       497                             i, j,
excute 13:51:19.975098 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:19.978090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0)]
excute 13:51:19.982079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:19.986038 line       494                         if (i == j):
excute 13:51:19.990028 line       496                         i_j_list.append((
excute 13:51:19.993050 line       497                             i, j,
excute 13:51:20.000001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.003993 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0)]
excute 13:51:20.008975 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:20.012965 line       494                         if (i == j):
excute 13:51:20.016954 line       496                         i_j_list.append((
excute 13:51:20.020943 line       497                             i, j,
excute 13:51:20.023936 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.027925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0)]
excute 13:51:20.030917 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:20.034908 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:20.037898 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:20.041887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:20.045879 line       494                         if (i == j):
excute 13:51:20.050874 line       496                         i_j_list.append((
excute 13:51:20.054886 line       497                             i, j,
excute 13:51:20.058842 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.061834 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0)]
excute 13:51:20.065824 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:20.068815 line       494                         if (i == j):
excute 13:51:20.072805 line       496                         i_j_list.append((
excute 13:51:20.076794 line       497                             i, j,
excute 13:51:20.079786 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.083775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0)]
excute 13:51:20.086768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:20.090757 line       494                         if (i == j):
excute 13:51:20.095760 line       496                         i_j_list.append((
excute 13:51:20.099735 line       497                             i, j,
excute 13:51:20.106717 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.114719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1)]
excute 13:51:20.117685 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:20.121707 line       494                         if (i == j):
excute 13:51:20.125695 line       496                         i_j_list.append((
excute 13:51:20.129685 line       497                             i, j,
excute 13:51:20.132677 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.136666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0)]
excute 13:51:20.140656 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:20.144646 line       494                         if (i == j):
excute 13:51:20.148604 line       495                             continue
excute 13:51:20.151626 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:20.155617 line       494                         if (i == j):
excute 13:51:20.159605 line       496                         i_j_list.append((
excute 13:51:20.163562 line       497                             i, j,
excute 13:51:20.166557 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.171541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0)]
excute 13:51:20.174533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:20.178540 line       494                         if (i == j):
excute 13:51:20.182512 line       496                         i_j_list.append((
excute 13:51:20.185504 line       497                             i, j,
excute 13:51:20.189493 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.193482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1)]
excute 13:51:20.198469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:20.202458 line       494                         if (i == j):
excute 13:51:20.207446 line       496                         i_j_list.append((
excute 13:51:20.213431 line       497                             i, j,
excute 13:51:20.216453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.220442 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0)]
excute 13:51:20.223434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:20.227425 line       494                         if (i == j):
excute 13:51:20.231413 line       496                         i_j_list.append((
excute 13:51:20.235406 line       497                             i, j,
excute 13:51:20.238394 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.242383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0)]
excute 13:51:20.245376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:20.249366 line       494                         if (i == j):
excute 13:51:20.254325 line       496                         i_j_list.append((
excute 13:51:20.257344 line       497                             i, j,
excute 13:51:20.261334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.265323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0)]
excute 13:51:20.268315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:20.272304 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:20.276293 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:20.280284 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:20.283274 line       494                         if (i == j):
excute 13:51:20.287231 line       496                         i_j_list.append((
excute 13:51:20.291256 line       497                             i, j,
excute 13:51:20.295210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.298202 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0)]
excute 13:51:20.302191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:20.305184 line       494                         if (i == j):
excute 13:51:20.309173 line       496                         i_j_list.append((
excute 13:51:20.313163 line       497                             i, j,
excute 13:51:20.318150 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.321143 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:51:20.326130 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:20.335105 line       494                         if (i == j):
excute 13:51:20.340094 line       496                         i_j_list.append((
excute 13:51:20.345110 line       497                             i, j,
excute 13:51:20.348101 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.352090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1)]
excute 13:51:20.356048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:20.361037 line       494                         if (i == j):
excute 13:51:20.365027 line       496                         i_j_list.append((
excute 13:51:20.369015 line       497                             i, j,
excute 13:51:20.373005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.376027 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0)]
excute 13:51:20.380016 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:20.384006 line       494                         if (i == j):
excute 13:51:20.387995 line       496                         i_j_list.append((
excute 13:51:20.391984 line       497                             i, j,
excute 13:51:20.394976 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.398965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:20.401959 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:20.405947 line       494                         if (i == j):
excute 13:51:20.409936 line       495                             continue
excute 13:51:20.413925 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:20.418881 line       494                         if (i == j):
excute 13:51:20.421903 line       496                         i_j_list.append((
excute 13:51:20.425893 line       497                             i, j,
excute 13:51:20.428884 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.432875 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1)]
excute 13:51:20.435866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:20.439857 line       494                         if (i == j):
excute 13:51:20.443845 line       496                         i_j_list.append((
excute 13:51:20.447835 line       497                             i, j,
excute 13:51:20.451792 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.454784 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0)]
excute 13:51:20.458773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:20.464759 line       494                         if (i == j):
excute 13:51:20.469745 line       496                         i_j_list.append((
excute 13:51:20.473736 line       497                             i, j,
excute 13:51:20.477723 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.481712 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:51:20.484704 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:20.488693 line       494                         if (i == j):
excute 13:51:20.493691 line       496                         i_j_list.append((
excute 13:51:20.497671 line       497                             i, j,
excute 13:51:20.501661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.504653 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:51:20.509637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:20.513627 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:20.516619 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:20.521638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:20.525596 line       494                         if (i == j):
excute 13:51:20.530582 line       496                         i_j_list.append((
excute 13:51:20.533575 line       497                             i, j,
excute 13:51:20.537564 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.542549 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0)]
excute 13:51:20.545543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:20.549533 line       494                         if (i == j):
excute 13:51:20.554520 line       496                         i_j_list.append((
excute 13:51:20.558534 line       497                             i, j,
excute 13:51:20.561530 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.565520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:51:20.568512 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:20.573499 line       494                         if (i == j):
excute 13:51:20.577457 line       496                         i_j_list.append((
excute 13:51:20.580479 line       497                             i, j,
excute 13:51:20.584438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.587461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1)]
excute 13:51:20.591451 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:20.595436 line       494                         if (i == j):
excute 13:51:20.599399 line       496                         i_j_list.append((
excute 13:51:20.602421 line       497                             i, j,
excute 13:51:20.606412 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.609403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0)]
excute 13:51:20.613392 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:20.617382 line       494                         if (i == j):
excute 13:51:20.621339 line       496                         i_j_list.append((
excute 13:51:20.626325 line       497                             i, j,
excute 13:51:20.629317 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.633307 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:51:20.637296 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:20.641318 line       494                         if (i == j):
excute 13:51:20.645307 line       496                         i_j_list.append((
excute 13:51:20.649265 line       497                             i, j,
excute 13:51:20.652258 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.656247 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0)]
excute 13:51:20.661233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:20.666220 line       494                         if (i == j):
excute 13:51:20.673200 line       495                             continue
excute 13:51:20.676192 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:20.680181 line       494                         if (i == j):
excute 13:51:20.684184 line       496                         i_j_list.append((
excute 13:51:20.687163 line       497                             i, j,
excute 13:51:20.690155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.694144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0)]
excute 13:51:20.698133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:20.702122 line       494                         if (i == j):
excute 13:51:20.706112 line       496                         i_j_list.append((
excute 13:51:20.709104 line       497                             i, j,
excute 13:51:20.713093 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.716085 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0)]
excute 13:51:20.720088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:20.725063 line       494                         if (i == j):
excute 13:51:20.730065 line       496                         i_j_list.append((
excute 13:51:20.733072 line       497                             i, j,
excute 13:51:20.737061 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.740053 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:51:20.744043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:20.748001 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:20.751023 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:20.756014 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:20.759002 line       494                         if (i == j):
excute 13:51:20.762992 line       496                         i_j_list.append((
excute 13:51:20.766982 line       497                             i, j,
excute 13:51:20.769973 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.773962 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0)]
excute 13:51:20.776954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:20.780944 line       494                         if (i == j):
excute 13:51:20.784901 line       496                         i_j_list.append((
excute 13:51:20.788892 line       497                             i, j,
excute 13:51:20.791915 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.795903 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:51:20.799862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:20.803853 line       494                         if (i == j):
excute 13:51:20.807843 line       496                         i_j_list.append((
excute 13:51:20.811831 line       497                             i, j,
excute 13:51:20.814823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.818813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1)]
excute 13:51:20.822802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:20.828785 line       494                         if (i == j):
excute 13:51:20.832806 line       496                         i_j_list.append((
excute 13:51:20.836794 line       497                             i, j,
excute 13:51:20.839787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.843777 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0)]
excute 13:51:20.846768 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:20.850758 line       494                         if (i == j):
excute 13:51:20.855713 line       496                         i_j_list.append((
excute 13:51:20.858736 line       497                             i, j,
excute 13:51:20.862693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.865721 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:20.869706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:20.873666 line       494                         if (i == j):
excute 13:51:20.877655 line       496                         i_j_list.append((
excute 13:51:20.880677 line       497                             i, j,
excute 13:51:20.884666 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.887659 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:20.891648 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:20.895607 line       494                         if (i == j):
excute 13:51:20.899596 line       496                         i_j_list.append((
excute 13:51:20.902619 line       497                             i, j,
excute 13:51:20.906608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.909599 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1)]
excute 13:51:20.913589 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:20.917547 line       494                         if (i == j):
excute 13:51:20.921536 line       495                             continue
excute 13:51:20.924559 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:20.928550 line       494                         if (i == j):
excute 13:51:20.933506 line       496                         i_j_list.append((
excute 13:51:20.936528 line       497                             i, j,
excute 13:51:20.940518 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.943510 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0)]
excute 13:51:20.947501 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:20.951489 line       494                         if (i == j):
excute 13:51:20.956444 line       496                         i_j_list.append((
excute 13:51:20.960449 line       497                             i, j,
excute 13:51:20.963456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:20.967415 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:51:20.970437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:20.974428 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:20.978416 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:20.982374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:20.986363 line       494                         if (i == j):
excute 13:51:20.990353 line       496                         i_j_list.append((
excute 13:51:20.993375 line       497                             i, j,
excute 13:51:20.997364 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.000358 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:51:21.004347 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:21.008305 line       494                         if (i == j):
excute 13:51:21.012295 line       496                         i_j_list.append((
excute 13:51:21.016315 line       497                             i, j,
excute 13:51:21.019306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.023297 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:51:21.027259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:21.031251 line       494                         if (i == j):
excute 13:51:21.035234 line       496                         i_j_list.append((
excute 13:51:21.039257 line       497                             i, j,
excute 13:51:21.043244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.046235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1)]
excute 13:51:21.050224 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:21.054184 line       494                         if (i == j):
excute 13:51:21.058203 line       496                         i_j_list.append((
excute 13:51:21.062192 line       497                             i, j,
excute 13:51:21.066164 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.069173 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0)]
excute 13:51:21.073164 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:21.077154 line       494                         if (i == j):
excute 13:51:21.081143 line       496                         i_j_list.append((
excute 13:51:21.084133 line       497                             i, j,
excute 13:51:21.088091 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.092081 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:51:21.095074 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:21.099063 line       494                         if (i == j):
excute 13:51:21.105048 line       496                         i_j_list.append((
excute 13:51:21.109036 line       497                             i, j,
excute 13:51:21.113054 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.117045 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:51:21.121002 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:21.125029 line       494                         if (i == j):
excute 13:51:21.129014 line       496                         i_j_list.append((
excute 13:51:21.131974 line       497                             i, j,
excute 13:51:21.136961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.140987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1)]
excute 13:51:21.144971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:21.148961 line       494                         if (i == j):
excute 13:51:21.152951 line       496                         i_j_list.append((
excute 13:51:21.156935 line       497                             i, j,
excute 13:51:21.159930 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.163920 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0)]
excute 13:51:21.167878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:21.171899 line       494                         if (i == j):
excute 13:51:21.175888 line       495                             continue
excute 13:51:21.179878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:21.182870 line       494                         if (i == j):
excute 13:51:21.186859 line       496                         i_j_list.append((
excute 13:51:21.190849 line       497                             i, j,
excute 13:51:21.194806 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.197830 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:51:21.201786 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:21.205777 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:21.212758 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:21.220738 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:21.227743 line       494                         if (i == j):
excute 13:51:21.231708 line       496                         i_j_list.append((
excute 13:51:21.234730 line       497                             i, j,
excute 13:51:21.238693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.242710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0)]
excute 13:51:21.246699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:21.250689 line       494                         if (i == j):
excute 13:51:21.254679 line       496                         i_j_list.append((
excute 13:51:21.258635 line       497                             i, j,
excute 13:51:21.261627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.265616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:51:21.269608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:21.273596 line       494                         if (i == j):
excute 13:51:21.277586 line       496                         i_j_list.append((
excute 13:51:21.281575 line       497                             i, j,
excute 13:51:21.285565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.289554 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1)]
excute 13:51:21.293541 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:21.297531 line       494                         if (i == j):
excute 13:51:21.301520 line       496                         i_j_list.append((
excute 13:51:21.305509 line       497                             i, j,
excute 13:51:21.308502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.312506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0)]
excute 13:51:21.315483 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:21.319472 line       494                         if (i == j):
excute 13:51:21.323461 line       496                         i_j_list.append((
excute 13:51:21.328450 line       497                             i, j,
excute 13:51:21.335430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.340418 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:21.346434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:21.350405 line       494                         if (i == j):
excute 13:51:21.354412 line       496                         i_j_list.append((
excute 13:51:21.360365 line       497                             i, j,
excute 13:51:21.367345 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.374338 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:21.378317 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:21.387292 line       494                         if (i == j):
excute 13:51:21.392278 line       496                         i_j_list.append((
excute 13:51:21.395271 line       497                             i, j,
excute 13:51:21.401254 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.405245 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1)]
excute 13:51:21.411228 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:21.416217 line       494                         if (i == j):
excute 13:51:21.422198 line       496                         i_j_list.append((
excute 13:51:21.426187 line       497                             i, j,
excute 13:51:21.430176 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.434166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0)]
excute 13:51:21.443144 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:21.450124 line       494                         if (i == j):
excute 13:51:21.455111 line       496                         i_j_list.append((
excute 13:51:21.459100 line       497                             i, j,
excute 13:51:21.463089 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:21.467078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 1, 0), (0, 2, 1, 1), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 6, 1, 1), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 2, 1, 1), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 1), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 1), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (4, 0, 2, 0), (4, 1, 2, 0), (4, 2, 2, 1), (4, 3, 2, 0), (4, 5, 2, 0), (4, 6, 2, 1), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 1), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 1), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 1), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 1), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 1), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:51:21.471068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:21.477052 line       494                         if (i == j):
excute 13:51:21.485032 line       495                             continue
excute 13:51:21.494006 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:21.500988 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:21.508966 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (8, 2, -1, 1), (8, 6, -1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (2, 6, 0, 1), (5, 2, 0, 1), (5, 6, 0, 1), (7, 2, 0, 1), (7, 6, 0, 1), (0, 1, 1, 0), (0, 3, 1, 0), (0, 4, 1, 0), (0, 5, 1, 0), (0, 7, 1, 0), (0, 8, 1, 0), (0, 9, 1, 0), (1, 0, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (0, 2, 1, 1), (0, 6, 1, 1), (1, 2, 1, 1), (1, 6, 1, 1), (9, 2, 1, 1), (9, 6, 1, 1), (4, 0, 2, 0), (4, 1, 2, 0), (4, 3, 2, 0), (4, 5, 2, 0), (4, 7, 2, 0), (4, 8, 2, 0), (4, 9, 2, 0), (4, 2, 2, 1), (4, 6, 2, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 7, 4, 0), (3, 8, 4, 0), (3, 9, 4, 0), (3, 2, 4, 1), (3, 6, 4, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (6, 2, 5, 1)]
excute 13:51:21.517942 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:21.524925 line       505                     if (self.RELOCATE):
excute 13:51:21.532902 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:21.540881 line       505                     if (self.RELOCATE):
excute 13:51:21.546865 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:21.553846 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:51:21.562823 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:21.568806 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:21.575788 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.584764 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:51:21.592741 line       556                     i = i_j[0]
excute 13:51:21.601718 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:21.607702 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.615681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:21.621665 line       556                     i = i_j[0]
excute 13:51:21.630641 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:21.635627 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.643607 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:51:21.649590 line       556                     i = i_j[0]
excute 13:51:21.658567 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:21.664550 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.671532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:21.678517 line       556                     i = i_j[0]
excute 13:51:21.688487 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:21.695467 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.702449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:51:21.709430 line       556                     i = i_j[0]
excute 13:51:21.717410 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:21.726385 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.733366 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:51:21.741345 line       556                     i = i_j[0]
excute 13:51:21.748327 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:21.753314 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.762289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 1)
excute 13:51:21.770267 line       556                     i = i_j[0]
excute 13:51:21.779246 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:21.784231 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.793206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 1)
excute 13:51:21.800190 line       556                     i = i_j[0]
excute 13:51:21.805174 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:21.809163 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.813152 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:21.817142 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:21.821132 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:21.825122 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.829111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:21.832102 line       556                     i = i_j[0]
excute 13:51:21.836091 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:21.840081 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.844071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:21.847062 line       556                     i = i_j[0]
excute 13:51:21.851051 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:21.855041 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.860028 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:21.864017 line       556                     i = i_j[0]
excute 13:51:21.869003 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:21.871996 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.876982 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:21.879975 line       556                     i = i_j[0]
excute 13:51:21.883965 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:21.887954 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.892942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:51:21.896931 line       556                     i = i_j[0]
excute 13:51:21.900920 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:21.903911 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.908903 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:21.911891 line       556                     i = i_j[0]
excute 13:51:21.916878 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:21.919869 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.923858 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:21.927847 line       556                     i = i_j[0]
excute 13:51:21.932836 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:21.936824 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.940814 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:21.943805 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:21.948793 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:21.952781 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.957768 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:21.960759 line       556                     i = i_j[0]
excute 13:51:21.968738 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:21.972728 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.977713 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:21.981708 line       556                     i = i_j[0]
excute 13:51:21.985692 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:21.988683 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:21.992678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:21.996663 line       556                     i = i_j[0]
excute 13:51:22.000653 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:22.004674 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.008633 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:51:22.012651 line       556                     i = i_j[0]
excute 13:51:22.016609 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:22.019632 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.023622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:22.027613 line       556                     i = i_j[0]
excute 13:51:22.031602 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:22.035590 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.039549 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:51:22.046536 line       556                     i = i_j[0]
excute 13:51:22.051521 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:22.055538 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.059495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:22.063515 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:22.068470 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:22.073457 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.078443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:22.082432 line       556                     i = i_j[0]
excute 13:51:22.086422 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:22.094401 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.098390 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:22.105404 line       556                     i = i_j[0]
excute 13:51:22.109368 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:22.112385 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.117342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:22.120363 line       556                     i = i_j[0]
excute 13:51:22.125320 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:22.128341 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.133329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:22.137288 line       556                     i = i_j[0]
excute 13:51:22.141277 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:22.144299 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.149260 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:22.153246 line       556                     i = i_j[0]
excute 13:51:22.158230 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:22.161254 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.166210 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:22.170198 line       556                     i = i_j[0]
excute 13:51:22.175185 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:22.179174 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.186155 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 1)
excute 13:51:22.193137 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:22.198155 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:22.203110 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.207101 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 1)
excute 13:51:22.211091 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:22.215078 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:22.219068 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.224055 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 1)
excute 13:51:22.227046 line       556                     i = i_j[0]
excute 13:51:22.231035 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:22.235025 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.240013 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 1)
excute 13:51:22.243003 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:22.247992 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:22.251979 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.256969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 1)
excute 13:51:22.260957 line       556                     i = i_j[0]
excute 13:51:22.264947 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:22.269936 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.274951 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 181
excute 13:51:22.277912 line       560                         if (t_tmp > self.TIME):
excute 13:51:22.282933 line       561                             time_over += 1
excute Modified var:.. time_over = 4
excute 13:51:22.285920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 1, 0)
excute 13:51:22.290885 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:22.294864 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:22.299853 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.303840 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 1, 0)
excute 13:51:22.307830 line       556                     i = i_j[0]
excute 13:51:22.311832 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:22.315841 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.319830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 1, 0)
excute 13:51:22.323820 line       556                     i = i_j[0]
excute 13:51:22.332765 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:22.339746 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.345760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 1, 0)
excute 13:51:22.349750 line       556                     i = i_j[0]
excute 13:51:22.354708 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:22.359692 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.363713 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 1, 0)
excute 13:51:22.367702 line       556                     i = i_j[0]
excute 13:51:22.372661 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:22.377645 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.382633 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 1, 0)
excute 13:51:22.386621 line       556                     i = i_j[0]
excute 13:51:22.391607 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:22.395595 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.399587 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 1, 0)
excute 13:51:22.403581 line       556                     i = i_j[0]
excute 13:51:22.407565 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:22.412552 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.417538 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:22.421558 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:22.425547 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:22.429538 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.433494 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:22.437484 line       556                     i = i_j[0]
excute 13:51:22.442475 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:22.445462 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.450450 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:22.454439 line       556                     i = i_j[0]
excute 13:51:22.459425 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:22.463414 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.467403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:22.470395 line       556                     i = i_j[0]
excute 13:51:22.475383 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:22.480369 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.484358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:51:22.487350 line       556                     i = i_j[0]
excute 13:51:22.492337 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:22.496359 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.500317 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:22.504305 line       556                     i = i_j[0]
excute 13:51:22.508327 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:22.513293 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.518268 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:22.522259 line       556                     i = i_j[0]
excute 13:51:22.526246 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:22.530793 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.534787 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:22.538776 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:22.543763 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:22.547752 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.552739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:22.556738 line       556                     i = i_j[0]
excute 13:51:22.560719 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:22.564706 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.568696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:22.572685 line       556                     i = i_j[0]
excute 13:51:22.577672 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:22.581691 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.585680 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:22.589674 line       556                     i = i_j[0]
excute 13:51:22.593631 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:22.596651 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.600641 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:22.604631 line       556                     i = i_j[0]
excute 13:51:22.608589 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:22.611612 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.615600 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:51:22.619590 line       556                     i = i_j[0]
excute 13:51:22.623549 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:22.626572 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.630560 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:22.634550 line       556                     i = i_j[0]
excute 13:51:22.638540 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:22.642529 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.646487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 1, 1)
excute 13:51:22.650507 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:22.654465 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:22.658486 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.662475 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 1, 1)
excute 13:51:22.666464 line       556                     i = i_j[0]
excute 13:51:22.670423 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:22.673446 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.678401 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 1)
excute 13:51:22.682395 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:22.686412 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:22.691399 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.695356 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 175
excute 13:51:22.700345 line       560                         if (t_tmp > self.TIME):
excute 13:51:22.704334 line       563                             if (available_vhecles[i][t] == 0):
excute 13:51:22.708323 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:51:22.712311 line       566                                 rsf += demands[t][i][j]
excute Modified var:.. rsf = 203
excute 13:51:22.716299 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:51:22.720291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 1)
excute 13:51:22.725278 line       556                     i = i_j[0]
excute 13:51:22.729282 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:22.733290 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.737244 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 1)
excute 13:51:22.740236 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:22.744224 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:22.748214 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.752236 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 1)
excute 13:51:22.756225 line       556                     i = i_j[0]
excute 13:51:22.760215 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:22.764205 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.768176 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 2, 0)
excute 13:51:22.771185 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:22.775174 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:22.779164 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.785119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 2, 0)
excute 13:51:22.788110 line       556                     i = i_j[0]
excute 13:51:22.793096 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:22.796118 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.800108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 2, 0)
excute 13:51:22.804066 line       556                     i = i_j[0]
excute 13:51:22.808057 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:22.811048 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.816036 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 2, 0)
excute 13:51:22.822017 line       556                     i = i_j[0]
excute 13:51:22.828001 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:22.831992 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.835979 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 2, 0)
excute 13:51:22.839970 line       556                     i = i_j[0]
excute 13:51:22.843960 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:22.846982 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.851937 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 2, 0)
excute 13:51:22.855958 line       556                     i = i_j[0]
excute 13:51:22.859917 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:22.862939 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.866930 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 2, 0)
excute 13:51:22.870918 line       556                     i = i_j[0]
excute 13:51:22.874877 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:22.877900 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.881889 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 2, 1)
excute 13:51:22.886848 line       556                     i = i_j[0]
excute 13:51:22.890834 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:22.894824 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.899825 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 2, 1)
excute 13:51:22.903800 line       556                     i = i_j[0]
excute 13:51:22.907790 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:22.911778 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.916764 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 4, 0)
excute 13:51:22.920754 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:22.928732 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:22.935713 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.939702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 4, 0)
excute 13:51:22.943692 line       556                     i = i_j[0]
excute 13:51:22.948680 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:22.952705 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.956657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 4, 0)
excute 13:51:22.960646 line       556                     i = i_j[0]
excute 13:51:22.964635 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:22.967628 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.971616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 4, 0)
excute 13:51:22.975607 line       556                     i = i_j[0]
excute 13:51:22.979596 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:22.983617 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:22.987578 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 4, 0)
excute 13:51:22.991596 line       556                     i = i_j[0]
excute 13:51:22.995585 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:22.999575 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.003533 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 4, 0)
excute 13:51:23.006555 line       556                     i = i_j[0]
excute 13:51:23.011511 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:23.015501 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.019491 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 4, 0)
excute 13:51:23.023479 line       556                     i = i_j[0]
excute 13:51:23.027468 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:23.030460 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.034449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 4, 1)
excute 13:51:23.038449 line       556                     i = i_j[0]
excute 13:51:23.042428 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:23.045453 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.049441 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 4, 1)
excute 13:51:23.053431 line       556                     i = i_j[0]
excute 13:51:23.057419 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:23.061409 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.065372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:51:23.069357 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:23.072380 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:23.076368 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.080358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:51:23.084347 line       556                     i = i_j[0]
excute 13:51:23.088306 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:23.092295 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.096283 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:51:23.100273 line       556                     i = i_j[0]
excute 13:51:23.104264 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:23.108252 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.112242 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:51:23.115233 line       556                     i = i_j[0]
excute 13:51:23.119222 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:23.123212 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.128199 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:51:23.131190 line       556                     i = i_j[0]
excute 13:51:23.135212 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:23.139201 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.143163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 0)
excute 13:51:23.147149 line       556                     i = i_j[0]
excute 13:51:23.151138 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:23.155158 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.159117 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:51:23.162140 line       556                     i = i_j[0]
excute 13:51:23.167096 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:23.171086 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.175075 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:51:23.179064 line       556                     i = i_j[0]
excute 13:51:23.183053 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:23.187043 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.192030 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 1)
excute 13:51:23.196050 line       556                     i = i_j[0]
excute 13:51:23.203997 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:23.208018 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:23.211981 line       555                 for i_j in i_j_list:
excute 13:51:23.214999 line       581             self.write_matrix(
excute 13:51:23.218988 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:23.222954 line       583                 result_file_path,
excute 13:51:23.225969 line       584                 mode='a'
excute 13:51:23.231923 line       488         for t in time_steps:
excute Modified var:.. t = 171
excute 13:51:23.237915 line       489             if (t != self.TIME + 1):
excute 13:51:23.244888 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:23.250871 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:23.255857 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:23.261842 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:23.265831 line       494                         if (i == j):
excute 13:51:23.269820 line       495                             continue
excute 13:51:23.273810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:23.279794 line       494                         if (i == j):
excute 13:51:23.283783 line       496                         i_j_list.append((
excute 13:51:23.287776 line       497                             i, j,
excute 13:51:23.292762 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.299741 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:51:23.307727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:23.314700 line       494                         if (i == j):
excute 13:51:23.319687 line       496                         i_j_list.append((
excute 13:51:23.325682 line       497                             i, j,
excute 13:51:23.333652 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.346615 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:51:23.353597 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:23.362583 line       494                         if (i == j):
excute 13:51:23.370551 line       496                         i_j_list.append((
excute 13:51:23.378531 line       497                             i, j,
excute 13:51:23.382519 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.387507 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:51:23.392497 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:23.400480 line       494                         if (i == j):
excute 13:51:23.424409 line       496                         i_j_list.append((
excute 13:51:23.430391 line       497                             i, j,
excute 13:51:23.434382 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.442360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:51:23.449342 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:23.453332 line       494                         if (i == j):
excute 13:51:23.459314 line       496                         i_j_list.append((
excute 13:51:23.466297 line       497                             i, j,
excute 13:51:23.472279 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.477266 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:51:23.481256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:23.485246 line       494                         if (i == j):
excute 13:51:23.490232 line       496                         i_j_list.append((
excute 13:51:23.497213 line       497                             i, j,
excute 13:51:23.501203 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.507187 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:51:23.512173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:23.516174 line       494                         if (i == j):
excute 13:51:23.519153 line       496                         i_j_list.append((
excute 13:51:23.526135 line       497                             i, j,
excute 13:51:23.532120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.535111 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:51:23.539100 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:23.544088 line       494                         if (i == j):
excute 13:51:23.548077 line       496                         i_j_list.append((
excute 13:51:23.551068 line       497                             i, j,
excute 13:51:23.555057 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.558049 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1)]
excute 13:51:23.561041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:23.565031 line       494                         if (i == j):
excute 13:51:23.569021 line       496                         i_j_list.append((
excute 13:51:23.573010 line       497                             i, j,
excute 13:51:23.576004 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.579993 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0)]
excute 13:51:23.583982 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:23.587970 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:23.597273 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:23.601266 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:23.605256 line       494                         if (i == j):
excute 13:51:23.611240 line       496                         i_j_list.append((
excute 13:51:23.614231 line       497                             i, j,
excute 13:51:23.617223 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.621212 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0)]
excute 13:51:23.625201 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:23.629193 line       494                         if (i == j):
excute 13:51:23.633181 line       495                             continue
excute 13:51:23.637170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:23.641160 line       494                         if (i == j):
excute 13:51:23.645150 line       496                         i_j_list.append((
excute 13:51:23.648141 line       497                             i, j,
excute 13:51:23.652131 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.656120 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:23.660111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:23.664100 line       494                         if (i == j):
excute 13:51:23.668089 line       496                         i_j_list.append((
excute 13:51:23.672076 line       497                             i, j,
excute 13:51:23.675069 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.679058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:23.683048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:23.687037 line       494                         if (i == j):
excute 13:51:23.692039 line       496                         i_j_list.append((
excute 13:51:23.695016 line       497                             i, j,
excute 13:51:23.700999 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.706982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:23.713966 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:23.718960 line       494                         if (i == j):
excute 13:51:23.722939 line       496                         i_j_list.append((
excute 13:51:23.726929 line       497                             i, j,
excute 13:51:23.730919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.733910 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:23.737900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:23.741890 line       494                         if (i == j):
excute 13:51:23.744880 line       496                         i_j_list.append((
excute 13:51:23.748870 line       497                             i, j,
excute 13:51:23.751862 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.755852 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:23.758843 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:23.762839 line       494                         if (i == j):
excute 13:51:23.766822 line       496                         i_j_list.append((
excute 13:51:23.769814 line       497                             i, j,
excute 13:51:23.773804 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.776795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:51:23.779788 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:23.783777 line       494                         if (i == j):
excute 13:51:23.787766 line       496                         i_j_list.append((
excute 13:51:23.791757 line       497                             i, j,
excute 13:51:23.794748 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.797740 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1)]
excute 13:51:23.801730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:23.804752 line       494                         if (i == j):
excute 13:51:23.809709 line       496                         i_j_list.append((
excute 13:51:23.812731 line       497                             i, j,
excute 13:51:23.816722 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.820711 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0)]
excute 13:51:23.823672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:23.828659 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:23.832647 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:23.835640 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:23.839630 line       494                         if (i == j):
excute 13:51:23.843620 line       496                         i_j_list.append((
excute 13:51:23.846611 line       497                             i, j,
excute 13:51:23.850600 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.854589 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0)]
excute 13:51:23.858579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:23.862573 line       494                         if (i == j):
excute 13:51:23.866557 line       496                         i_j_list.append((
excute 13:51:23.870547 line       497                             i, j,
excute 13:51:23.874536 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.877528 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:51:23.881521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:23.885507 line       494                         if (i == j):
excute 13:51:23.889494 line       495                             continue
excute 13:51:23.893483 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:23.896475 line       494                         if (i == j):
excute 13:51:23.900465 line       496                         i_j_list.append((
excute 13:51:23.903457 line       497                             i, j,
excute 13:51:23.907446 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.910438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:23.913430 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:23.918420 line       494                         if (i == j):
excute 13:51:23.923406 line       496                         i_j_list.append((
excute 13:51:23.926397 line       497                             i, j,
excute 13:51:23.930386 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.934376 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:23.938365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:23.942355 line       494                         if (i == j):
excute 13:51:23.947341 line       496                         i_j_list.append((
excute 13:51:23.951331 line       497                             i, j,
excute 13:51:23.955320 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.959310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:23.963299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:23.967289 line       494                         if (i == j):
excute 13:51:23.971276 line       496                         i_j_list.append((
excute 13:51:23.975267 line       497                             i, j,
excute 13:51:23.979256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:23.982249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:23.986237 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:23.990227 line       494                         if (i == j):
excute 13:51:23.995212 line       496                         i_j_list.append((
excute 13:51:23.998205 line       497                             i, j,
excute 13:51:24.002194 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.006184 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0)]
excute 13:51:24.010173 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:24.014165 line       494                         if (i == j):
excute 13:51:24.018152 line       496                         i_j_list.append((
excute 13:51:24.022142 line       497                             i, j,
excute 13:51:24.026129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.029121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1)]
excute 13:51:24.032113 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:24.036103 line       494                         if (i == j):
excute 13:51:24.040092 line       496                         i_j_list.append((
excute 13:51:24.044081 line       497                             i, j,
excute 13:51:24.047073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.051062 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0)]
excute 13:51:24.055053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:24.058043 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:24.062032 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:24.065024 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:24.069014 line       494                         if (i == j):
excute 13:51:24.073004 line       496                         i_j_list.append((
excute 13:51:24.075996 line       497                             i, j,
excute 13:51:24.079985 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.083010 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0)]
excute 13:51:24.086968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:24.089990 line       494                         if (i == j):
excute 13:51:24.093980 line       496                         i_j_list.append((
excute 13:51:24.097969 line       497                             i, j,
excute 13:51:24.100961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.104950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0)]
excute 13:51:24.107942 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:24.111932 line       494                         if (i == j):
excute 13:51:24.115921 line       496                         i_j_list.append((
excute 13:51:24.119910 line       497                             i, j,
excute 13:51:24.123869 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.127889 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0)]
excute 13:51:24.131878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:24.135837 line       494                         if (i == j):
excute 13:51:24.139827 line       495                             continue
excute 13:51:24.143816 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:24.147806 line       494                         if (i == j):
excute 13:51:24.150798 line       496                         i_j_list.append((
excute 13:51:24.155783 line       497                             i, j,
excute 13:51:24.158776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.162765 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0)]
excute 13:51:24.167752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:24.170744 line       494                         if (i == j):
excute 13:51:24.175739 line       496                         i_j_list.append((
excute 13:51:24.179719 line       497                             i, j,
excute 13:51:24.182712 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.186701 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0)]
excute 13:51:24.190690 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:24.194678 line       494                         if (i == j):
excute 13:51:24.198671 line       496                         i_j_list.append((
excute 13:51:24.201662 line       497                             i, j,
excute 13:51:24.205651 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.208643 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0)]
excute 13:51:24.212632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:24.217617 line       494                         if (i == j):
excute 13:51:24.221639 line       496                         i_j_list.append((
excute 13:51:24.225596 line       497                             i, j,
excute 13:51:24.229585 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.233574 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0)]
excute 13:51:24.236566 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:24.240556 line       494                         if (i == j):
excute 13:51:24.244545 line       496                         i_j_list.append((
excute 13:51:24.247537 line       497                             i, j,
excute 13:51:24.250529 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.254518 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1)]
excute 13:51:24.258510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:24.262499 line       494                         if (i == j):
excute 13:51:24.267485 line       496                         i_j_list.append((
excute 13:51:24.270478 line       497                             i, j,
excute 13:51:24.273470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.277459 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0)]
excute 13:51:24.281448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:24.285438 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:24.289427 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:24.294426 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:24.297406 line       494                         if (i == j):
excute 13:51:24.301395 line       496                         i_j_list.append((
excute 13:51:24.305384 line       497                             i, j,
excute 13:51:24.309372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.312363 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0)]
excute 13:51:24.316353 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:24.320343 line       494                         if (i == j):
excute 13:51:24.324332 line       496                         i_j_list.append((
excute 13:51:24.335323 line       497                             i, j,
excute 13:51:24.339292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.344281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:51:24.348269 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:24.353257 line       494                         if (i == j):
excute 13:51:24.358245 line       496                         i_j_list.append((
excute 13:51:24.361234 line       497                             i, j,
excute 13:51:24.365224 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.368215 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:51:24.372205 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:24.376195 line       494                         if (i == j):
excute 13:51:24.380184 line       496                         i_j_list.append((
excute 13:51:24.384173 line       497                             i, j,
excute 13:51:24.390159 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.394147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:51:24.398135 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:24.406114 line       494                         if (i == j):
excute 13:51:24.410108 line       495                             continue
excute 13:51:24.413094 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:24.417085 line       494                         if (i == j):
excute 13:51:24.421075 line       496                         i_j_list.append((
excute 13:51:24.425064 line       497                             i, j,
excute 13:51:24.428056 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.432046 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:51:24.436049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:24.440024 line       494                         if (i == j):
excute 13:51:24.444013 line       496                         i_j_list.append((
excute 13:51:24.447005 line       497                             i, j,
excute 13:51:24.450994 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.454984 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:51:24.458973 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:24.462964 line       494                         if (i == j):
excute 13:51:24.466952 line       496                         i_j_list.append((
excute 13:51:24.470942 line       497                             i, j,
excute 13:51:24.473934 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.478929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:51:24.481944 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:24.485935 line       494                         if (i == j):
excute 13:51:24.489922 line       496                         i_j_list.append((
excute 13:51:24.493878 line       497                             i, j,
excute 13:51:24.496870 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.500861 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1)]
excute 13:51:24.503852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:24.507850 line       494                         if (i == j):
excute 13:51:24.511830 line       496                         i_j_list.append((
excute 13:51:24.514823 line       497                             i, j,
excute 13:51:24.518811 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.521804 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0)]
excute 13:51:24.525794 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:24.528785 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:24.532774 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:24.536765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:24.540786 line       494                         if (i == j):
excute 13:51:24.544744 line       496                         i_j_list.append((
excute 13:51:24.548733 line       497                             i, j,
excute 13:51:24.551759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.555747 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0)]
excute 13:51:24.558737 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:24.562727 line       494                         if (i == j):
excute 13:51:24.566715 line       496                         i_j_list.append((
excute 13:51:24.570707 line       497                             i, j,
excute 13:51:24.574665 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.577656 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:51:24.581646 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:24.585635 line       494                         if (i == j):
excute 13:51:24.589623 line       496                         i_j_list.append((
excute 13:51:24.593613 line       497                             i, j,
excute 13:51:24.597603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.600595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:51:24.604584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:24.609571 line       494                         if (i == j):
excute 13:51:24.616552 line       496                         i_j_list.append((
excute 13:51:24.622534 line       497                             i, j,
excute 13:51:24.625560 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.629548 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:24.633539 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:24.637498 line       494                         if (i == j):
excute 13:51:24.642483 line       496                         i_j_list.append((
excute 13:51:24.646471 line       497                             i, j,
excute 13:51:24.649496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.653485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:24.657441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:24.661432 line       494                         if (i == j):
excute 13:51:24.665422 line       495                             continue
excute 13:51:24.668445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:24.672434 line       494                         if (i == j):
excute 13:51:24.676392 line       496                         i_j_list.append((
excute 13:51:24.679414 line       497                             i, j,
excute 13:51:24.683404 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.686396 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:51:24.690358 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:24.693377 line       494                         if (i == j):
excute 13:51:24.698333 line       496                         i_j_list.append((
excute 13:51:24.701356 line       497                             i, j,
excute 13:51:24.705346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.708338 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:51:24.712326 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:24.716285 line       494                         if (i == j):
excute 13:51:24.720307 line       496                         i_j_list.append((
excute 13:51:24.724264 line       497                             i, j,
excute 13:51:24.730247 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.733239 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1)]
excute 13:51:24.737227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:24.741217 line       494                         if (i == j):
excute 13:51:24.746206 line       496                         i_j_list.append((
excute 13:51:24.750195 line       497                             i, j,
excute 13:51:24.754185 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.757175 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0)]
excute 13:51:24.761164 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:24.765153 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:24.768145 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:24.772135 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:24.775127 line       494                         if (i == j):
excute 13:51:24.779116 line       496                         i_j_list.append((
excute 13:51:24.783105 line       497                             i, j,
excute 13:51:24.786097 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.790086 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0)]
excute 13:51:24.793079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:24.797069 line       494                         if (i == j):
excute 13:51:24.801057 line       496                         i_j_list.append((
excute 13:51:24.804050 line       497                             i, j,
excute 13:51:24.808038 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.811031 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:51:24.815025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:24.819028 line       494                         if (i == j):
excute 13:51:24.823000 line       496                         i_j_list.append((
excute 13:51:24.826022 line       497                             i, j,
excute 13:51:24.830012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.833005 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:51:24.836993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:24.840953 line       494                         if (i == j):
excute 13:51:24.844941 line       496                         i_j_list.append((
excute 13:51:24.849933 line       497                             i, j,
excute 13:51:24.853948 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.857907 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:51:24.860929 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:24.864887 line       494                         if (i == j):
excute 13:51:24.868878 line       496                         i_j_list.append((
excute 13:51:24.871900 line       497                             i, j,
excute 13:51:24.875892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.878885 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:51:24.882870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:24.886829 line       494                         if (i == j):
excute 13:51:24.890819 line       496                         i_j_list.append((
excute 13:51:24.893841 line       497                             i, j,
excute 13:51:24.897831 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.900824 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0)]
excute 13:51:24.904813 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:24.908771 line       494                         if (i == j):
excute 13:51:24.912760 line       495                             continue
excute 13:51:24.915783 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:24.919771 line       494                         if (i == j):
excute 13:51:24.923731 line       496                         i_j_list.append((
excute 13:51:24.926753 line       497                             i, j,
excute 13:51:24.930745 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.933735 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0)]
excute 13:51:24.937723 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:24.941683 line       494                         if (i == j):
excute 13:51:24.945672 line       496                         i_j_list.append((
excute 13:51:24.949665 line       497                             i, j,
excute 13:51:24.957789 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.961774 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1)]
excute 13:51:24.967757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:24.971778 line       494                         if (i == j):
excute 13:51:24.976743 line       496                         i_j_list.append((
excute 13:51:24.980722 line       497                             i, j,
excute 13:51:24.983746 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:24.987715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0)]
excute 13:51:24.990727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:24.995695 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:24.999676 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:25.003660 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:25.006654 line       494                         if (i == j):
excute 13:51:25.011646 line       496                         i_j_list.append((
excute 13:51:25.014664 line       497                             i, j,
excute 13:51:25.018652 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.021644 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0)]
excute 13:51:25.025634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:25.029593 line       494                         if (i == j):
excute 13:51:25.033586 line       496                         i_j_list.append((
excute 13:51:25.036608 line       497                             i, j,
excute 13:51:25.040561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.045550 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:51:25.048540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:25.053529 line       494                         if (i == j):
excute 13:51:25.061507 line       496                         i_j_list.append((
excute 13:51:25.068487 line       497                             i, j,
excute 13:51:25.072476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.076465 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:25.079458 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:25.083446 line       494                         if (i == j):
excute 13:51:25.087469 line       496                         i_j_list.append((
excute 13:51:25.091458 line       497                             i, j,
excute 13:51:25.094449 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.098440 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:25.101431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:25.105420 line       494                         if (i == j):
excute 13:51:25.109413 line       496                         i_j_list.append((
excute 13:51:25.113398 line       497                             i, j,
excute 13:51:25.116391 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.120380 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:25.123372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:25.127363 line       494                         if (i == j):
excute 13:51:25.131351 line       496                         i_j_list.append((
excute 13:51:25.135309 line       497                             i, j,
excute 13:51:25.139297 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.142290 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:25.146280 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:25.149271 line       494                         if (i == j):
excute 13:51:25.153261 line       496                         i_j_list.append((
excute 13:51:25.158247 line       497                             i, j,
excute 13:51:25.161239 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.165228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:25.169219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:25.172242 line       494                         if (i == j):
excute 13:51:25.177197 line       495                             continue
excute 13:51:25.180190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:25.184179 line       494                         if (i == j):
excute 13:51:25.192158 line       496                         i_j_list.append((
excute 13:51:25.197145 line       497                             i, j,
excute 13:51:25.205122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.208145 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1)]
excute 13:51:25.212135 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:25.216107 line       494                         if (i == j):
excute 13:51:25.220114 line       496                         i_j_list.append((
excute 13:51:25.223107 line       497                             i, j,
excute 13:51:25.227064 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.230058 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0)]
excute 13:51:25.235043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:25.238033 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:25.242023 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:25.246013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:25.250003 line       494                         if (i == j):
excute 13:51:25.253997 line       496                         i_j_list.append((
excute 13:51:25.257982 line       497                             i, j,
excute 13:51:25.262001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.265971 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:51:25.268983 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:25.272973 line       494                         if (i == j):
excute 13:51:25.276931 line       496                         i_j_list.append((
excute 13:51:25.280921 line       497                             i, j,
excute 13:51:25.284911 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.287900 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:51:25.291890 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:25.295879 line       494                         if (i == j):
excute 13:51:25.300867 line       496                         i_j_list.append((
excute 13:51:25.304856 line       497                             i, j,
excute 13:51:25.308853 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.311868 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:51:25.315849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:25.319816 line       494                         if (i == j):
excute 13:51:25.323827 line       496                         i_j_list.append((
excute 13:51:25.327795 line       497                             i, j,
excute 13:51:25.336771 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.342754 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:51:25.347773 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:25.351731 line       494                         if (i == j):
excute 13:51:25.355732 line       496                         i_j_list.append((
excute 13:51:25.359742 line       497                             i, j,
excute 13:51:25.364696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.367719 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:51:25.371712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:25.375668 line       494                         if (i == j):
excute 13:51:25.379661 line       496                         i_j_list.append((
excute 13:51:25.383677 line       497                             i, j,
excute 13:51:25.387669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.390658 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:51:25.394647 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:25.398605 line       494                         if (i == j):
excute 13:51:25.402609 line       496                         i_j_list.append((
excute 13:51:25.405618 line       497                             i, j,
excute 13:51:25.409608 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.412600 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:51:25.416588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:25.420552 line       494                         if (i == j):
excute 13:51:25.424536 line       496                         i_j_list.append((
excute 13:51:25.428556 line       497                             i, j,
excute 13:51:25.431548 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.435537 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:51:25.438530 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:25.442519 line       494                         if (i == j):
excute 13:51:25.447476 line       495                             continue
excute 13:51:25.451494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:25.454493 line       494                         if (i == j):
excute 13:51:25.459479 line       496                         i_j_list.append((
excute 13:51:25.462466 line       497                             i, j,
excute 13:51:25.467422 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.471422 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:51:25.474402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:25.478391 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:25.482412 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:25.486371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:25.489394 line       494                         if (i == j):
excute 13:51:25.493382 line       496                         i_j_list.append((
excute 13:51:25.497373 line       497                             i, j,
excute 13:51:25.500364 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.504353 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0)]
excute 13:51:25.507345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:25.512307 line       494                         if (i == j):
excute 13:51:25.516296 line       496                         i_j_list.append((
excute 13:51:25.519314 line       497                             i, j,
excute 13:51:25.523303 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.526296 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:51:25.530284 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:25.534261 line       494                         if (i == j):
excute 13:51:25.538232 line       496                         i_j_list.append((
excute 13:51:25.542255 line       497                             i, j,
excute 13:51:25.545244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.549235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:51:25.552225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:25.557182 line       494                         if (i == j):
excute 13:51:25.561170 line       496                         i_j_list.append((
excute 13:51:25.564193 line       497                             i, j,
excute 13:51:25.570146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.574136 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:25.577127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:25.593097 line       494                         if (i == j):
excute 13:51:25.597088 line       496                         i_j_list.append((
excute 13:51:25.601078 line       497                             i, j,
excute 13:51:25.605067 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.608060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:25.612048 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:25.616038 line       494                         if (i == j):
excute 13:51:25.620027 line       496                         i_j_list.append((
excute 13:51:25.624018 line       497                             i, j,
excute 13:51:25.627008 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.631000 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:25.635019 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:25.638978 line       494                         if (i == j):
excute 13:51:25.642968 line       496                         i_j_list.append((
excute 13:51:25.645989 line       497                             i, j,
excute 13:51:25.649985 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.653970 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:51:25.656961 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:25.660952 line       494                         if (i == j):
excute 13:51:25.664939 line       496                         i_j_list.append((
excute 13:51:25.668930 line       497                             i, j,
excute 13:51:25.672886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.676877 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:51:25.680866 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:25.684856 line       494                         if (i == j):
excute 13:51:25.689841 line       496                         i_j_list.append((
excute 13:51:25.692866 line       497                             i, j,
excute 13:51:25.696824 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:25.700814 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 0), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 8, 4, 1), (3, 9, 4, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 1), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 1)]
excute 13:51:25.703803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:25.707794 line       494                         if (i == j):
excute 13:51:25.712784 line       495                             continue
excute 13:51:25.716771 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:25.719762 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:25.723751 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 9, 0, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 9, 0, 0), (0, 8, 0, 1), (2, 8, 0, 1), (5, 8, 0, 1), (7, 8, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (1, 8, 1, 1), (4, 8, 1, 1), (9, 8, 1, 1), (3, 0, 4, 0), (3, 1, 4, 0), (3, 2, 4, 0), (3, 4, 4, 0), (3, 5, 4, 0), (3, 6, 4, 0), (3, 7, 4, 0), (3, 9, 4, 0), (3, 8, 4, 1), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 9, 5, 0), (6, 8, 5, 1)]
excute 13:51:25.727741 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:25.732727 line       505                     if (self.RELOCATE):
excute 13:51:25.737747 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:25.741704 line       505                     if (self.RELOCATE):
excute 13:51:25.745723 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:25.749712 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:51:25.752704 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:25.756696 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:25.761649 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.764674 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:51:25.768662 line       556                     i = i_j[0]
excute 13:51:25.772621 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:25.777608 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.781598 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:51:25.784589 line       556                     i = i_j[0]
excute 13:51:25.789577 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:25.792568 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.796557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:25.800546 line       556                     i = i_j[0]
excute 13:51:25.804537 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:25.808526 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.812548 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:51:25.815539 line       556                     i = i_j[0]
excute 13:51:25.819526 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:25.823517 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.827476 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:25.831462 line       556                     i = i_j[0]
excute 13:51:25.835453 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:25.838446 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.842436 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:51:25.846424 line       556                     i = i_j[0]
excute 13:51:25.850414 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:25.854402 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.858421 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:51:25.862412 line       556                     i = i_j[0]
excute 13:51:25.866371 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:25.869392 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.873382 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:51:25.878348 line       556                     i = i_j[0]
excute 13:51:25.882329 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:25.885320 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.890308 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:51:25.893299 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:25.898285 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:25.901277 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.905267 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:51:25.909256 line       556                     i = i_j[0]
excute 13:51:25.914243 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:25.917233 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.922220 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:51:25.925212 line       556                     i = i_j[0]
excute 13:51:25.929202 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:25.932194 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.937180 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:51:25.940172 line       556                     i = i_j[0]
excute 13:51:25.944163 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:25.948153 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.952142 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:51:25.958123 line       556                     i = i_j[0]
excute 13:51:25.963111 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:25.966102 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.971089 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:51:25.975088 line       556                     i = i_j[0]
excute 13:51:25.981064 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:25.985054 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:25.989043 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:51:25.992035 line       556                     i = i_j[0]
excute 13:51:25.997020 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:26.001011 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.004999 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:51:26.008991 line       556                     i = i_j[0]
excute 13:51:26.012978 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:26.016968 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.020973 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:26.024947 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:26.028935 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:26.032926 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.036914 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:26.040904 line       556                     i = i_j[0]
excute 13:51:26.044893 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:26.048882 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.053869 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:26.059853 line       556                     i = i_j[0]
excute 13:51:26.063842 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:26.067831 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.071835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:26.075811 line       556                     i = i_j[0]
excute 13:51:26.079801 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:26.085784 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.089774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:26.093762 line       556                     i = i_j[0]
excute 13:51:26.097752 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:26.101741 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.106732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:26.110718 line       556                     i = i_j[0]
excute 13:51:26.113709 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:26.117698 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.122686 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:51:26.126675 line       556                     i = i_j[0]
excute 13:51:26.130665 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:26.134653 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.138650 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:26.141635 line       556                     i = i_j[0]
excute 13:51:26.146622 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:26.149614 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.154599 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:26.158587 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:26.162580 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:26.166566 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.170556 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:26.174546 line       556                     i = i_j[0]
excute 13:51:26.177538 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:26.181528 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.186514 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:26.189505 line       556                     i = i_j[0]
excute 13:51:26.194506 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:26.197484 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.201473 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:26.205464 line       556                     i = i_j[0]
excute 13:51:26.209453 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:26.213443 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.217433 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:26.220424 line       556                     i = i_j[0]
excute 13:51:26.224414 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:26.228403 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.232391 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:51:26.238377 line       556                     i = i_j[0]
excute 13:51:26.242366 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:26.245358 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.250345 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:51:26.254333 line       556                     i = i_j[0]
excute 13:51:26.259321 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:26.262311 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.266301 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:51:26.270291 line       556                     i = i_j[0]
excute 13:51:26.274279 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:26.277271 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.281261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:26.284253 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:26.289239 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:26.294228 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.298215 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:26.301208 line       556                     i = i_j[0]
excute 13:51:26.306207 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:26.309187 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.313176 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:26.317165 line       556                     i = i_j[0]
excute 13:51:26.323148 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:26.329133 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.337128 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:26.341101 line       556                     i = i_j[0]
excute 13:51:26.346089 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:26.350077 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.354068 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:26.358056 line       556                     i = i_j[0]
excute 13:51:26.362045 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:26.371021 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.376007 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:26.383987 line       556                     i = i_j[0]
excute 13:51:26.389972 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:26.397949 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.403932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:26.407922 line       556                     i = i_j[0]
excute 13:51:26.414903 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:26.418895 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.423882 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:26.427873 line       556                     i = i_j[0]
excute 13:51:26.436844 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:26.442829 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.446819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 1)
excute 13:51:26.451805 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:26.456792 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:26.470755 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.479732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 1)
excute 13:51:26.486712 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:26.498680 line       557                     j = i_j[1]
excute 13:51:26.508656 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.515633 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 1)
excute 13:51:26.525607 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:26.531592 line       557                     j = i_j[1]
excute 13:51:26.537575 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.543559 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 1)
excute 13:51:26.547548 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:26.553533 line       557                     j = i_j[1]
excute 13:51:26.560515 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.566498 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:26.571483 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:26.578467 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:26.585448 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.591432 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:26.596420 line       556                     i = i_j[0]
excute 13:51:26.606392 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:26.613373 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.619357 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:26.624343 line       556                     i = i_j[0]
excute 13:51:26.632322 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:26.638306 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.644292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:26.652268 line       556                     i = i_j[0]
excute 13:51:26.662243 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:26.670221 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.677202 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:26.683186 line       556                     i = i_j[0]
excute 13:51:26.690167 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:26.698148 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.706128 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:26.712108 line       556                     i = i_j[0]
excute 13:51:26.718092 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:26.725074 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.733053 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:51:26.740036 line       556                     i = i_j[0]
excute 13:51:26.746018 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:26.751006 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.760980 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:26.768956 line       556                     i = i_j[0]
excute 13:51:26.775939 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:26.780928 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.788903 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:51:26.794887 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:26.800872 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:26.807853 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.817826 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:51:26.821816 line       556                     i = i_j[0]
excute 13:51:26.825806 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:26.828796 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.832786 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:51:26.836775 line       556                     i = i_j[0]
excute 13:51:26.840766 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:26.843756 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.847747 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:51:26.851735 line       556                     i = i_j[0]
excute 13:51:26.855727 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:26.858717 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.862707 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:51:26.866696 line       556                     i = i_j[0]
excute 13:51:26.870685 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:26.873677 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.877666 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:51:26.880658 line       556                     i = i_j[0]
excute 13:51:26.884647 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:26.888637 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.892627 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:51:26.895649 line       556                     i = i_j[0]
excute 13:51:26.899639 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:26.903628 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.907587 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:51:26.911608 line       556                     i = i_j[0]
excute 13:51:26.916562 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:26.920552 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.925538 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:26.928531 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:26.932520 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:26.937506 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.941495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:26.944514 line       556                     i = i_j[0]
excute 13:51:26.949474 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:26.952496 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.956488 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:26.960475 line       556                     i = i_j[0]
excute 13:51:26.964433 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:26.968422 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.972447 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:26.975435 line       556                     i = i_j[0]
excute 13:51:26.980421 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:26.983384 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:26.987374 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:26.991363 line       556                     i = i_j[0]
excute 13:51:26.995352 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:26.999342 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.003331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:27.007320 line       556                     i = i_j[0]
excute 13:51:27.012306 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:27.017293 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.021283 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:51:27.025272 line       556                     i = i_j[0]
excute 13:51:27.030260 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:27.033251 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.037240 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:51:27.041271 line       556                     i = i_j[0]
excute 13:51:27.045218 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:27.049207 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.052232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 1)
excute 13:51:27.057186 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:27.062175 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:27.066163 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.071149 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 1)
excute 13:51:27.074141 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:27.078130 line       557                     j = i_j[1]
excute 13:51:27.083117 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.087107 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 1)
excute 13:51:27.091096 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:27.096082 line       557                     j = i_j[1]
excute 13:51:27.100072 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.104061 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 4, 0)
excute 13:51:27.107054 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:27.111043 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:27.115033 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.121016 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 4, 0)
excute 13:51:27.125006 line       556                     i = i_j[0]
excute 13:51:27.128995 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:27.132984 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.137970 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 4, 0)
excute 13:51:27.141960 line       556                     i = i_j[0]
excute 13:51:27.144951 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:27.148941 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.152932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 4, 0)
excute 13:51:27.156920 line       556                     i = i_j[0]
excute 13:51:27.160909 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:27.163901 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.167891 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 4, 0)
excute 13:51:27.171880 line       556                     i = i_j[0]
excute 13:51:27.175869 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:27.178860 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.182851 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 4, 0)
excute 13:51:27.186840 line       556                     i = i_j[0]
excute 13:51:27.190830 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:27.194819 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.198809 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 4, 0)
excute 13:51:27.202798 line       556                     i = i_j[0]
excute 13:51:27.207785 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:27.211774 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.215763 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 4, 0)
excute 13:51:27.219752 line       556                     i = i_j[0]
excute 13:51:27.224739 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:27.228728 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.235725 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 4, 1)
excute 13:51:27.239699 line       556                     i = i_j[0]
excute 13:51:27.243689 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:27.247678 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.251669 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 176
excute 13:51:27.254657 line       560                         if (t_tmp > self.TIME):
excute 13:51:27.259646 line       563                             if (available_vhecles[i][t] == 0):
excute 13:51:27.262636 line       565                             if (available_vhecles[j][t_tmp] == self.S_capacities[j]):
excute 13:51:27.266627 line       567                             if ((available_vhecles[i][t] != 0) and (available_vhecles[j][t_tmp] != self.S_capacities[j])):
excute 13:51:27.270616 line       568                                 can_contract, rsf_tmp, rse_tmp = self.caluculate_contract(
excute 13:51:27.274605 line       569                                     available_vhecles[i][t],
excute 13:51:27.278595 line       570                                     available_vhecles[j][t_tmp],
excute 13:51:27.282585 line       571                                     self.S_capacities[j],
excute 13:51:27.286573 line       572                                     demands[t][i][j],
excute 13:51:27.290564 line       573                                     t
calc_contract     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
calc_contract     Starting var:.. available_vhecles_start = -2
calc_contract     Starting var:.. available_vhecles_target = 3
calc_contract     Starting var:.. capacity_target = 2
calc_contract     Starting var:.. demand = 1
calc_contract     Starting var:.. t = 171
calc_contract     13:51:27.293553 call       352     def caluculate_contract(
calc_contract     13:51:27.296548 line       360         rse = 0
calc_contract     New var:....... rse = 0
calc_contract     13:51:27.297544 line       361         rsf = 0
calc_contract     New var:....... rsf = 0
calc_contract     13:51:27.298549 line       362         if (available_vhecles_start >= demand):
calc_contract     13:51:27.299540 line       373             if (available_vhecles_target + demand <= capacity_target):
calc_contract     13:51:27.299540 line       379                 can_contract = min([
calc_contract     13:51:27.300537 line       380                     capacity_target - available_vhecles_target,
calc_contract     13:51:27.300537 line       381                     available_vhecles_start
calc_contract     New var:....... can_contract = -2
calc_contract     13:51:27.301535 line       383                 rsf += (available_vhecles_target + demand - capacity_target)
calc_contract     Modified var:.. rsf = 2
calc_contract     13:51:27.302532 line       384                 rse += (demand - available_vhecles_start)
calc_contract     Modified var:.. rse = 3
calc_contract     13:51:27.303530 line       385         return [can_contract, rsf, rse]
calc_contract     13:51:27.304525 return     385         return [can_contract, rsf, rse]
calc_contract     Return value:.. [-2, 2, 3]
excute Modified var:.. can_contract = -2
excute Modified var:.. rsf_tmp = 2
excute 13:51:27.305522 line       575                                 rsf += rsf_tmp
excute Modified var:.. rsf = 205
excute 13:51:27.309512 line       576                                 rse += rse_tmp
excute Modified var:.. rse = 184
excute 13:51:27.313502 line       577                                 available_vhecles = self.move_cars(available_vhecles, i, j, t, t_tmp, can_contract)
move_cars     Starting var:.. self = <simulation.Simulation object at 0x000001F4244F9EB8>
move_cars     Starting var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
move_cars     Starting var:.. i = 3
move_cars     Starting var:.. j = 8
move_cars     Starting var:.. t = 171
move_cars     Starting var:.. t_tmp = 176
move_cars     Starting var:.. can_contract = -2
move_cars     13:51:27.317490 call       388     def move_cars(
move_cars     13:51:27.321490 line       397         available_vhecles[i][t:] = list(map(lambda x: x - can_contract, available_vhecles[i][t:]))
move_cars     13:51:27.323477 line       398         available_vhecles[j][t_tmp:] = list(map(lambda x: x + can_contract, available_vhecles[j][t_tmp:]))
move_cars     13:51:27.325470 line       399         return available_vhecles
move_cars     13:51:27.327466 return     399         return available_vhecles
move_cars     Return value:.. [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1... 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute Modified var:.. available_vhecles = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, -1, -1, -1, -1, -1, -3, -3, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -10, -10, -13, -13, 0, 0, 2, 2, 2, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -13, -13, -13, -12, -12, -12, -12, -12, -12, -12, -11, -11, -12, -11, -11, -11, -11, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -10, -10, -10, -7, -6, -6, -6, -6, -6, -6, -5, -5, -6, -6, -3, -3, -3, -3, -3, -3, -2, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2, -2, -2, -2, -3, -3, -3, -3, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 3, 3, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:27.334447 line       579                                 success += can_contract
excute Modified var:.. success = 80
excute 13:51:27.339434 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:51:27.343423 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:27.348407 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:27.353396 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.357383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:51:27.361373 line       556                     i = i_j[0]
excute 13:51:27.366360 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:27.369351 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.373342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:51:27.377333 line       556                     i = i_j[0]
excute 13:51:27.381320 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:27.385309 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.389299 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:51:27.393320 line       556                     i = i_j[0]
excute 13:51:27.397279 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:27.400302 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.404289 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:51:27.408281 line       556                     i = i_j[0]
excute 13:51:27.412237 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:27.416225 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.424206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:51:27.430189 line       556                     i = i_j[0]
excute 13:51:27.435175 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:27.439166 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.443155 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 0)
excute 13:51:27.448142 line       556                     i = i_j[0]
excute 13:51:27.452132 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:27.457118 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.461108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:51:27.465096 line       556                     i = i_j[0]
excute 13:51:27.469086 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:27.473075 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.478063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 1)
excute 13:51:27.481052 line       556                     i = i_j[0]
excute 13:51:27.485044 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:27.489032 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:27.493022 line       555                 for i_j in i_j_list:
excute 13:51:27.497011 line       581             self.write_matrix(
excute 13:51:27.501014 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:27.503991 line       583                 result_file_path,
excute 13:51:27.507980 line       584                 mode='a'
excute 13:51:27.514962 line       488         for t in time_steps:
excute Modified var:.. t = 172
excute 13:51:27.520948 line       489             if (t != self.TIME + 1):
excute 13:51:27.526931 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:27.534910 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:27.541891 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:27.547874 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:27.552861 line       494                         if (i == j):
excute 13:51:27.556850 line       495                             continue
excute 13:51:27.560840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:27.564831 line       494                         if (i == j):
excute 13:51:27.568819 line       496                         i_j_list.append((
excute 13:51:27.573805 line       497                             i, j,
excute 13:51:27.581795 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.587767 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:51:27.591758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:27.597741 line       494                         if (i == j):
excute 13:51:27.601730 line       496                         i_j_list.append((
excute 13:51:27.605720 line       497                             i, j,
excute 13:51:27.609710 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.612700 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:51:27.616690 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:27.621684 line       494                         if (i == j):
excute 13:51:27.627662 line       496                         i_j_list.append((
excute 13:51:27.634643 line       497                             i, j,
excute 13:51:27.638632 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.643618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:51:27.649604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:27.656585 line       494                         if (i == j):
excute 13:51:27.661570 line       496                         i_j_list.append((
excute 13:51:27.665559 line       497                             i, j,
excute 13:51:27.668552 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.672541 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:51:27.675532 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:27.682513 line       494                         if (i == j):
excute 13:51:27.686503 line       496                         i_j_list.append((
excute 13:51:27.689496 line       497                             i, j,
excute 13:51:27.693484 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.697474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:51:27.701464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:27.704456 line       494                         if (i == j):
excute 13:51:27.708445 line       496                         i_j_list.append((
excute 13:51:27.712435 line       497                             i, j,
excute 13:51:27.715426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.718454 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:51:27.722441 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:27.726398 line       494                         if (i == j):
excute 13:51:27.730388 line       496                         i_j_list.append((
excute 13:51:27.734377 line       497                             i, j,
excute 13:51:27.741388 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.748371 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:51:27.754357 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:27.758312 line       494                         if (i == j):
excute 13:51:27.762301 line       496                         i_j_list.append((
excute 13:51:27.765324 line       497                             i, j,
excute 13:51:27.768316 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.772305 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:51:27.775300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:27.779287 line       494                         if (i == j):
excute 13:51:27.784242 line       496                         i_j_list.append((
excute 13:51:27.787235 line       497                             i, j,
excute 13:51:27.791224 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.795214 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:51:27.798206 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:27.803192 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:27.806187 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:27.812170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:27.818185 line       494                         if (i == j):
excute 13:51:27.822141 line       496                         i_j_list.append((
excute 13:51:27.825165 line       497                             i, j,
excute 13:51:27.829153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.832147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0)]
excute 13:51:27.836103 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:27.842089 line       494                         if (i == j):
excute 13:51:27.846078 line       495                             continue
excute 13:51:27.849099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:27.853091 line       494                         if (i == j):
excute 13:51:27.857048 line       496                         i_j_list.append((
excute 13:51:27.861038 line       497                             i, j,
excute 13:51:27.864030 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.868019 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:27.871012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:27.875002 line       494                         if (i == j):
excute 13:51:27.879988 line       496                         i_j_list.append((
excute 13:51:27.882980 line       497                             i, j,
excute 13:51:27.886968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.890958 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:27.893951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:27.897939 line       494                         if (i == j):
excute 13:51:27.901929 line       496                         i_j_list.append((
excute 13:51:27.905918 line       497                             i, j,
excute 13:51:27.908910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.912899 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:27.916892 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:27.920877 line       494                         if (i == j):
excute 13:51:27.924879 line       496                         i_j_list.append((
excute 13:51:27.928857 line       497                             i, j,
excute 13:51:27.931849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.935838 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:27.939827 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:27.944816 line       494                         if (i == j):
excute 13:51:27.949801 line       496                         i_j_list.append((
excute 13:51:27.952793 line       497                             i, j,
excute 13:51:27.956782 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.960771 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:27.966755 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:27.970746 line       494                         if (i == j):
excute 13:51:27.974733 line       496                         i_j_list.append((
excute 13:51:27.978723 line       497                             i, j,
excute 13:51:27.981715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:27.985705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:51:27.988696 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:27.992687 line       494                         if (i == j):
excute 13:51:27.997672 line       496                         i_j_list.append((
excute 13:51:28.001661 line       497                             i, j,
excute 13:51:28.005651 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.009640 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:51:28.012632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:28.016622 line       494                         if (i == j):
excute 13:51:28.020611 line       496                         i_j_list.append((
excute 13:51:28.023603 line       497                             i, j,
excute 13:51:28.027592 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.030584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:51:28.034574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:28.038565 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:28.041555 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:28.048538 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:28.051529 line       494                         if (i == j):
excute 13:51:28.055517 line       496                         i_j_list.append((
excute 13:51:28.059537 line       497                             i, j,
excute 13:51:28.063495 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.066518 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0)]
excute 13:51:28.069511 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:28.073502 line       494                         if (i == j):
excute 13:51:28.077489 line       496                         i_j_list.append((
excute 13:51:28.081481 line       497                             i, j,
excute 13:51:28.084471 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.088460 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:51:28.091457 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:28.095441 line       494                         if (i == j):
excute 13:51:28.099400 line       495                             continue
excute 13:51:28.102425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:28.106414 line       494                         if (i == j):
excute 13:51:28.110371 line       496                         i_j_list.append((
excute 13:51:28.113395 line       497                             i, j,
excute 13:51:28.117384 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.120375 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:28.124334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:28.127356 line       494                         if (i == j):
excute 13:51:28.131345 line       496                         i_j_list.append((
excute 13:51:28.135334 line       497                             i, j,
excute 13:51:28.139299 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.142318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:28.146307 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:28.151262 line       494                         if (i == j):
excute 13:51:28.156250 line       496                         i_j_list.append((
excute 13:51:28.159271 line       497                             i, j,
excute 13:51:28.163229 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.166221 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:28.170211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:28.175212 line       494                         if (i == j):
excute 13:51:28.179198 line       496                         i_j_list.append((
excute 13:51:28.182180 line       497                             i, j,
excute 13:51:28.186169 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.190159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:28.193150 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:28.197140 line       494                         if (i == j):
excute 13:51:28.201129 line       496                         i_j_list.append((
excute 13:51:28.205118 line       497                             i, j,
excute 13:51:28.209107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.213097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0)]
excute 13:51:28.217098 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:28.221075 line       494                         if (i == j):
excute 13:51:28.224068 line       496                         i_j_list.append((
excute 13:51:28.229053 line       497                             i, j,
excute 13:51:28.232076 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.235068 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:51:28.239058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:28.243017 line       494                         if (i == j):
excute 13:51:28.249997 line       496                         i_j_list.append((
excute 13:51:28.255015 line       497                             i, j,
excute 13:51:28.259004 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.262964 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:51:28.265956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:28.269945 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:28.273934 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:28.277924 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:28.281913 line       494                         if (i == j):
excute 13:51:28.285912 line       496                         i_j_list.append((
excute 13:51:28.288926 line       497                             i, j,
excute 13:51:28.292924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.295905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0)]
excute 13:51:28.299895 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:28.303854 line       494                         if (i == j):
excute 13:51:28.307846 line       496                         i_j_list.append((
excute 13:51:28.310869 line       497                             i, j,
excute 13:51:28.313857 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.317849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0)]
excute 13:51:28.320840 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:28.326793 line       494                         if (i == j):
excute 13:51:28.337765 line       496                         i_j_list.append((
excute 13:51:28.342783 line       497                             i, j,
excute 13:51:28.346738 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.350729 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0)]
excute 13:51:28.356712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:28.361700 line       494                         if (i == j):
excute 13:51:28.365690 line       495                             continue
excute 13:51:28.368712 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:28.372701 line       494                         if (i == j):
excute 13:51:28.376658 line       496                         i_j_list.append((
excute 13:51:28.380679 line       497                             i, j,
excute 13:51:28.384637 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.387660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0)]
excute 13:51:28.391618 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:28.394642 line       494                         if (i == j):
excute 13:51:28.398631 line       496                         i_j_list.append((
excute 13:51:28.402621 line       497                             i, j,
excute 13:51:28.405615 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.409570 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0)]
excute 13:51:28.412561 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:28.417550 line       494                         if (i == j):
excute 13:51:28.421540 line       496                         i_j_list.append((
excute 13:51:28.425529 line       497                             i, j,
excute 13:51:28.429518 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.432511 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0)]
excute 13:51:28.436500 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:28.441485 line       494                         if (i == j):
excute 13:51:28.445475 line       496                         i_j_list.append((
excute 13:51:28.451459 line       497                             i, j,
excute 13:51:28.455450 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.460435 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0)]
excute 13:51:28.465421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:28.470423 line       494                         if (i == j):
excute 13:51:28.474409 line       496                         i_j_list.append((
excute 13:51:28.477423 line       497                             i, j,
excute 13:51:28.481410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.484402 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0)]
excute 13:51:28.488394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:28.492350 line       494                         if (i == j):
excute 13:51:28.496341 line       496                         i_j_list.append((
excute 13:51:28.499362 line       497                             i, j,
excute 13:51:28.503351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.506343 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0)]
excute 13:51:28.510301 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:28.514292 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:28.517316 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:28.521303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:28.525295 line       494                         if (i == j):
excute 13:51:28.529264 line       496                         i_j_list.append((
excute 13:51:28.532274 line       497                             i, j,
excute 13:51:28.535266 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.539223 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0)]
excute 13:51:28.543213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:28.551192 line       494                         if (i == j):
excute 13:51:28.557177 line       496                         i_j_list.append((
excute 13:51:28.560168 line       497                             i, j,
excute 13:51:28.565155 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.569143 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:51:28.573134 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:28.577124 line       494                         if (i == j):
excute 13:51:28.581114 line       496                         i_j_list.append((
excute 13:51:28.584105 line       497                             i, j,
excute 13:51:28.588095 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.591087 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:51:28.595076 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:28.599065 line       494                         if (i == j):
excute 13:51:28.604053 line       496                         i_j_list.append((
excute 13:51:28.607044 line       497                             i, j,
excute 13:51:28.611033 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.615023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:51:28.618015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:28.623000 line       494                         if (i == j):
excute 13:51:28.626990 line       495                             continue
excute 13:51:28.630980 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:28.634970 line       494                         if (i == j):
excute 13:51:28.638960 line       496                         i_j_list.append((
excute 13:51:28.642948 line       497                             i, j,
excute 13:51:28.645940 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.650925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:51:28.654915 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:28.658906 line       494                         if (i == j):
excute 13:51:28.662895 line       496                         i_j_list.append((
excute 13:51:28.667881 line       497                             i, j,
excute 13:51:28.671902 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.674894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:51:28.678882 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:28.682846 line       494                         if (i == j):
excute 13:51:28.686830 line       496                         i_j_list.append((
excute 13:51:28.689852 line       497                             i, j,
excute 13:51:28.692846 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.696835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:51:28.700825 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:28.704782 line       494                         if (i == j):
excute 13:51:28.708806 line       496                         i_j_list.append((
excute 13:51:28.711795 line       497                             i, j,
excute 13:51:28.715752 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.718775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:51:28.721767 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:28.726754 line       494                         if (i == j):
excute 13:51:28.731710 line       496                         i_j_list.append((
excute 13:51:28.735700 line       497                             i, j,
excute 13:51:28.738693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.742682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:51:28.746672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:28.752656 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:28.756642 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:28.761631 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:28.764623 line       494                         if (i == j):
excute 13:51:28.770607 line       496                         i_j_list.append((
excute 13:51:28.774625 line       497                             i, j,
excute 13:51:28.777618 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.781607 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0)]
excute 13:51:28.784599 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:28.788591 line       494                         if (i == j):
excute 13:51:28.792560 line       496                         i_j_list.append((
excute 13:51:28.796538 line       497                             i, j,
excute 13:51:28.799561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.803517 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:51:28.806540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:28.810500 line       494                         if (i == j):
excute 13:51:28.814489 line       496                         i_j_list.append((
excute 13:51:28.817511 line       497                             i, j,
excute 13:51:28.821501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.825474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:51:28.828484 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:28.832440 line       494                         if (i == j):
excute 13:51:28.836429 line       496                         i_j_list.append((
excute 13:51:28.839455 line       497                             i, j,
excute 13:51:28.843443 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.846437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:28.850423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:28.854383 line       494                         if (i == j):
excute 13:51:28.858402 line       496                         i_j_list.append((
excute 13:51:28.862368 line       497                             i, j,
excute 13:51:28.865383 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.869341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:28.872365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:28.877321 line       494                         if (i == j):
excute 13:51:28.881311 line       495                             continue
excute 13:51:28.885300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:28.889289 line       494                         if (i == j):
excute 13:51:28.894284 line       496                         i_j_list.append((
excute 13:51:28.897298 line       497                             i, j,
excute 13:51:28.901293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.904284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:51:28.908238 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:28.911267 line       494                         if (i == j):
excute 13:51:28.915250 line       496                         i_j_list.append((
excute 13:51:28.919241 line       497                             i, j,
excute 13:51:28.922237 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.926225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:51:28.929219 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:28.933207 line       494                         if (i == j):
excute 13:51:28.937199 line       496                         i_j_list.append((
excute 13:51:28.941149 line       497                             i, j,
excute 13:51:28.944140 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.948164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:51:28.952120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:28.956111 line       494                         if (i == j):
excute 13:51:28.961097 line       496                         i_j_list.append((
excute 13:51:28.964090 line       497                             i, j,
excute 13:51:28.968078 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:28.972068 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:51:28.976057 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:28.982040 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:28.985063 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:28.989052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:28.993043 line       494                         if (i == j):
excute 13:51:28.997001 line       496                         i_j_list.append((
excute 13:51:29.000023 line       497                             i, j,
excute 13:51:29.004016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.007006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0)]
excute 13:51:29.010962 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:29.014954 line       494                         if (i == j):
excute 13:51:29.018942 line       496                         i_j_list.append((
excute 13:51:29.021964 line       497                             i, j,
excute 13:51:29.025955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.028946 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:51:29.032905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:29.035929 line       494                         if (i == j):
excute 13:51:29.039917 line       496                         i_j_list.append((
excute 13:51:29.058811 line       497                             i, j,
excute 13:51:29.061836 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.065823 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:51:29.068815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:29.073771 line       494                         if (i == j):
excute 13:51:29.077760 line       496                         i_j_list.append((
excute 13:51:29.081751 line       497                             i, j,
excute 13:51:29.084772 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.088761 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:51:29.091753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:29.095745 line       494                         if (i == j):
excute 13:51:29.099732 line       496                         i_j_list.append((
excute 13:51:29.103729 line       497                             i, j,
excute 13:51:29.106714 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.110702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:51:29.113694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:29.117685 line       494                         if (i == j):
excute 13:51:29.121641 line       496                         i_j_list.append((
excute 13:51:29.125631 line       497                             i, j,
excute 13:51:29.128656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.132613 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0)]
excute 13:51:29.135604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:29.139595 line       494                         if (i == j):
excute 13:51:29.143583 line       495                             continue
excute 13:51:29.147572 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:29.150564 line       494                         if (i == j):
excute 13:51:29.155555 line       496                         i_j_list.append((
excute 13:51:29.158543 line       497                             i, j,
excute 13:51:29.162532 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.165525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0)]
excute 13:51:29.168516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:29.172505 line       494                         if (i == j):
excute 13:51:29.176495 line       496                         i_j_list.append((
excute 13:51:29.180485 line       497                             i, j,
excute 13:51:29.184479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.191458 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0)]
excute 13:51:29.195445 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:29.199433 line       494                         if (i == j):
excute 13:51:29.203435 line       496                         i_j_list.append((
excute 13:51:29.207412 line       497                             i, j,
excute 13:51:29.210404 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.214394 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:51:29.217385 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:29.221375 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:29.224367 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:29.228356 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:29.232345 line       494                         if (i == j):
excute 13:51:29.235338 line       496                         i_j_list.append((
excute 13:51:29.239327 line       497                             i, j,
excute 13:51:29.243329 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.246309 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0)]
excute 13:51:29.252294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:29.256283 line       494                         if (i == j):
excute 13:51:29.260275 line       496                         i_j_list.append((
excute 13:51:29.263263 line       497                             i, j,
excute 13:51:29.267253 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.270244 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:51:29.274234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:29.278224 line       494                         if (i == j):
excute 13:51:29.282213 line       496                         i_j_list.append((
excute 13:51:29.286203 line       497                             i, j,
excute 13:51:29.290192 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.294181 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:29.298172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:29.302161 line       494                         if (i == j):
excute 13:51:29.305183 line       496                         i_j_list.append((
excute 13:51:29.309172 line       497                             i, j,
excute 13:51:29.312164 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.316154 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:29.319148 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:29.323135 line       494                         if (i == j):
excute 13:51:29.330089 line       496                         i_j_list.append((
excute 13:51:29.338066 line       497                             i, j,
excute 13:51:29.346043 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.350031 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:29.356015 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:29.361003 line       494                         if (i == j):
excute 13:51:29.364997 line       496                         i_j_list.append((
excute 13:51:29.368980 line       497                             i, j,
excute 13:51:29.371972 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.375961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:29.379953 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:29.384938 line       494                         if (i == j):
excute 13:51:29.389926 line       496                         i_j_list.append((
excute 13:51:29.393916 line       497                             i, j,
excute 13:51:29.396906 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.400895 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:29.403887 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:29.407876 line       494                         if (i == j):
excute 13:51:29.411866 line       495                             continue
excute 13:51:29.415855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:29.418884 line       494                         if (i == j):
excute 13:51:29.422871 line       496                         i_j_list.append((
excute 13:51:29.426859 line       497                             i, j,
excute 13:51:29.429850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.433839 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:51:29.437797 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:29.441788 line       494                         if (i == j):
excute 13:51:29.447772 line       496                         i_j_list.append((
excute 13:51:29.450793 line       497                             i, j,
excute 13:51:29.454782 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.458742 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:51:29.462732 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:29.468715 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:29.471737 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:29.475727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:29.480684 line       494                         if (i == j):
excute 13:51:29.484671 line       496                         i_j_list.append((
excute 13:51:29.488660 line       497                             i, j,
excute 13:51:29.492687 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.496641 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:51:29.500629 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:29.504618 line       494                         if (i == j):
excute 13:51:29.508607 line       496                         i_j_list.append((
excute 13:51:29.512628 line       497                             i, j,
excute 13:51:29.515620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.519610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:51:29.522602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:29.526594 line       494                         if (i == j):
excute 13:51:29.531546 line       496                         i_j_list.append((
excute 13:51:29.534572 line       497                             i, j,
excute 13:51:29.537561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.541551 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:51:29.545509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:29.549498 line       494                         if (i == j):
excute 13:51:29.553487 line       496                         i_j_list.append((
excute 13:51:29.557509 line       497                             i, j,
excute 13:51:29.560500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.564473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:51:29.567450 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:29.571445 line       494                         if (i == j):
excute 13:51:29.575429 line       496                         i_j_list.append((
excute 13:51:29.579418 line       497                             i, j,
excute 13:51:29.582410 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.586413 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:51:29.589391 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:29.594382 line       494                         if (i == j):
excute 13:51:29.598367 line       496                         i_j_list.append((
excute 13:51:29.601359 line       497                             i, j,
excute 13:51:29.605349 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.609339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:51:29.612329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:29.616325 line       494                         if (i == j):
excute 13:51:29.620310 line       496                         i_j_list.append((
excute 13:51:29.623300 line       497                             i, j,
excute 13:51:29.627289 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.630282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:51:29.634272 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:29.638261 line       494                         if (i == j):
excute 13:51:29.642250 line       496                         i_j_list.append((
excute 13:51:29.645242 line       497                             i, j,
excute 13:51:29.649249 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.652223 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0)]
excute 13:51:29.656213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:29.660202 line       494                         if (i == j):
excute 13:51:29.664224 line       495                             continue
excute 13:51:29.668213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:29.671204 line       494                         if (i == j):
excute 13:51:29.675194 line       496                         i_j_list.append((
excute 13:51:29.679184 line       497                             i, j,
excute 13:51:29.683173 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.686167 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:51:29.690154 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:29.694113 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:29.700097 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:29.704084 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:29.708074 line       494                         if (i == j):
excute 13:51:29.711066 line       496                         i_j_list.append((
excute 13:51:29.715055 line       497                             i, j,
excute 13:51:29.718047 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.722037 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0)]
excute 13:51:29.726026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:29.729017 line       494                         if (i == j):
excute 13:51:29.734005 line       496                         i_j_list.append((
excute 13:51:29.736997 line       497                             i, j,
excute 13:51:29.740987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.743977 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:51:29.746970 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:29.750960 line       494                         if (i == j):
excute 13:51:29.756946 line       496                         i_j_list.append((
excute 13:51:29.760932 line       497                             i, j,
excute 13:51:29.763925 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.767914 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:51:29.770906 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:29.774895 line       494                         if (i == j):
excute 13:51:29.778884 line       496                         i_j_list.append((
excute 13:51:29.781877 line       497                             i, j,
excute 13:51:29.785865 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.789856 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:29.793876 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:29.797835 line       494                         if (i == j):
excute 13:51:29.802821 line       496                         i_j_list.append((
excute 13:51:29.805813 line       497                             i, j,
excute 13:51:29.808805 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.812794 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:29.816784 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:29.820774 line       494                         if (i == j):
excute 13:51:29.824763 line       496                         i_j_list.append((
excute 13:51:29.827754 line       497                             i, j,
excute 13:51:29.831743 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.834735 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:29.838725 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:29.842715 line       494                         if (i == j):
excute 13:51:29.846704 line       496                         i_j_list.append((
excute 13:51:29.849695 line       497                             i, j,
excute 13:51:29.853719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.857708 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:51:29.861664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:29.864687 line       494                         if (i == j):
excute 13:51:29.868677 line       496                         i_j_list.append((
excute 13:51:29.872665 line       497                             i, j,
excute 13:51:29.875657 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.879647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:51:29.882639 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:29.887595 line       494                         if (i == j):
excute 13:51:29.890620 line       496                         i_j_list.append((
excute 13:51:29.894608 line       497                             i, j,
excute 13:51:29.897599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:29.904564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:51:29.907541 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:29.911530 line       494                         if (i == j):
excute 13:51:29.915522 line       495                             continue
excute 13:51:29.919509 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:29.922501 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:29.926490 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:51:29.929482 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:29.933471 line       505                     if (self.RELOCATE):
excute 13:51:29.937461 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:29.940453 line       505                     if (self.RELOCATE):
excute 13:51:29.944442 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:29.948434 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:51:29.952421 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:29.957411 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:29.962395 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:29.965386 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:51:29.969375 line       556                     i = i_j[0]
excute 13:51:29.973366 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:29.976357 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:29.981378 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:51:29.984367 line       556                     i = i_j[0]
excute 13:51:29.988356 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:29.992346 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:29.996305 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:29.999326 line       556                     i = i_j[0]
excute 13:51:30.003316 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:30.008273 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.013259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:51:30.016250 line       556                     i = i_j[0]
excute 13:51:30.020239 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:30.024261 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.028219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:30.031241 line       556                     i = i_j[0]
excute 13:51:30.035231 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:30.039220 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.043180 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:51:30.046201 line       556                     i = i_j[0]
excute 13:51:30.050191 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:30.054181 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.060132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:51:30.064122 line       556                     i = i_j[0]
excute 13:51:30.068111 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:30.071104 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.075092 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:51:30.079082 line       556                     i = i_j[0]
excute 13:51:30.083071 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:30.086063 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.090052 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:51:30.094043 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:30.098032 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:30.103018 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.108006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:51:30.115984 line       556                     i = i_j[0]
excute 13:51:30.122967 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:30.125957 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.129946 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:51:30.133937 line       556                     i = i_j[0]
excute 13:51:30.137925 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:30.141915 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.145905 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:51:30.148929 line       556                     i = i_j[0]
excute 13:51:30.152917 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:30.156911 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.160895 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:51:30.164884 line       556                     i = i_j[0]
excute 13:51:30.168843 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:30.171866 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.175860 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:51:30.179844 line       556                     i = i_j[0]
excute 13:51:30.183803 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:30.186827 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.190816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:51:30.194774 line       556                     i = i_j[0]
excute 13:51:30.202751 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:30.210731 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.215719 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:51:30.219706 line       556                     i = i_j[0]
excute 13:51:30.223695 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:30.226688 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.230676 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:51:30.234666 line       556                     i = i_j[0]
excute 13:51:30.238656 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:30.242648 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.250624 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:30.253616 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:30.258616 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:30.261594 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.265583 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:30.269572 line       556                     i = i_j[0]
excute 13:51:30.273562 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:30.276554 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.280544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:30.284533 line       556                     i = i_j[0]
excute 13:51:30.288523 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:30.291515 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.295503 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:30.299492 line       556                     i = i_j[0]
excute 13:51:30.303483 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:30.306474 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.310477 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:30.314454 line       556                     i = i_j[0]
excute 13:51:30.319442 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:30.323429 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.332406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:30.337409 line       556                     i = i_j[0]
excute 13:51:30.341381 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:30.345374 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.350357 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:51:30.353349 line       556                     i = i_j[0]
excute 13:51:30.358336 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:30.362324 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.366316 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:30.370304 line       556                     i = i_j[0]
excute 13:51:30.374293 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:30.377285 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.382272 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:30.385264 line       556                     i = i_j[0]
excute 13:51:30.389253 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:30.393245 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.397233 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:30.401222 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:30.405211 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:30.409201 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.413190 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:30.417180 line       556                     i = i_j[0]
excute 13:51:30.422165 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:30.426155 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.430144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:30.433136 line       556                     i = i_j[0]
excute 13:51:30.437125 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:30.441115 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.445104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:30.449097 line       556                     i = i_j[0]
excute 13:51:30.453095 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:30.457072 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.461061 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:30.465050 line       556                     i = i_j[0]
excute 13:51:30.469040 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:30.472032 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.476021 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:51:30.480011 line       556                     i = i_j[0]
excute 13:51:30.483999 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:30.487988 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.491978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:51:30.494970 line       556                     i = i_j[0]
excute 13:51:30.498959 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:30.502949 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.506938 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:30.509931 line       556                     i = i_j[0]
excute 13:51:30.513919 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:30.517909 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.522898 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:51:30.525888 line       556                     i = i_j[0]
excute 13:51:30.529877 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:30.533866 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.537856 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:30.541846 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:30.549826 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:30.553816 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.558800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:30.561792 line       556                     i = i_j[0]
excute 13:51:30.565781 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:30.569770 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.573760 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:30.576752 line       556                     i = i_j[0]
excute 13:51:30.580741 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:30.584731 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.587722 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:30.591711 line       556                     i = i_j[0]
excute 13:51:30.595701 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:30.598693 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.602682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:30.606671 line       556                     i = i_j[0]
excute 13:51:30.610663 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:30.613653 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.617642 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:30.621632 line       556                     i = i_j[0]
excute 13:51:30.627629 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:30.630608 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.635595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:30.638586 line       556                     i = i_j[0]
excute 13:51:30.642577 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:30.646566 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.649557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:30.653547 line       556                     i = i_j[0]
excute 13:51:30.657537 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:30.661525 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.665517 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:30.669504 line       556                     i = i_j[0]
excute 13:51:30.673494 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:30.676485 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.680505 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:30.684496 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:30.688455 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:30.692448 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.696435 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:30.700453 line       556                     i = i_j[0]
excute 13:51:30.704413 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:30.707438 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.711423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:30.715415 line       556                     i = i_j[0]
excute 13:51:30.719373 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:30.723361 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.729378 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:30.733333 line       556                     i = i_j[0]
excute 13:51:30.737325 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:30.740347 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.744335 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:30.748325 line       556                     i = i_j[0]
excute 13:51:30.754278 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:30.758299 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.762288 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:30.766279 line       556                     i = i_j[0]
excute 13:51:30.770237 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:30.773258 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.777248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:51:30.785220 line       556                     i = i_j[0]
excute 13:51:30.789184 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:30.793175 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.798159 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:30.802149 line       556                     i = i_j[0]
excute 13:51:30.806138 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:30.809131 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.813119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:30.817109 line       556                     i = i_j[0]
excute 13:51:30.821098 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:30.824090 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.830080 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:51:30.833066 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:30.837055 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:30.841045 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.845034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:51:30.849024 line       556                     i = i_j[0]
excute 13:51:30.853013 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:30.857002 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.861003 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:51:30.863984 line       556                     i = i_j[0]
excute 13:51:30.867973 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:30.871962 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.875954 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:51:30.879941 line       556                     i = i_j[0]
excute 13:51:30.883930 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:30.886923 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.890912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:51:30.893904 line       556                     i = i_j[0]
excute 13:51:30.897893 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:30.901883 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.905872 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:51:30.908864 line       556                     i = i_j[0]
excute 13:51:30.912854 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:30.916849 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.919834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:51:30.923823 line       556                     i = i_j[0]
excute 13:51:30.927813 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:30.931803 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.935792 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:51:30.939782 line       556                     i = i_j[0]
excute 13:51:30.942773 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:30.946762 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.951750 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:51:30.955739 line       556                     i = i_j[0]
excute 13:51:30.959729 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:30.965714 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.970700 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:30.973691 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:30.977681 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:30.982668 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:30.986657 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:30.989648 line       556                     i = i_j[0]
excute 13:51:30.993638 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:30.998625 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.002625 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:31.005606 line       556                     i = i_j[0]
excute 13:51:31.010592 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:31.013584 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.017573 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:31.021562 line       556                     i = i_j[0]
excute 13:51:31.025552 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:31.028544 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.033532 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:31.038519 line       556                     i = i_j[0]
excute 13:51:31.042506 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:31.045499 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.049488 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:31.052480 line       556                     i = i_j[0]
excute 13:51:31.057466 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:31.061456 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.065445 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:51:31.068437 line       556                     i = i_j[0]
excute 13:51:31.072426 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:31.076416 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.080405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:51:31.083397 line       556                     i = i_j[0]
excute 13:51:31.087393 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:31.090379 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.094368 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:31.098357 line       556                     i = i_j[0]
excute 13:51:31.102347 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:31.106340 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.110339 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 2, 0)
excute 13:51:31.113318 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:31.117306 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:31.121298 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.125286 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 2, 0)
excute 13:51:31.128277 line       556                     i = i_j[0]
excute 13:51:31.132267 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:31.137255 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.141243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 2, 0)
excute 13:51:31.145232 line       556                     i = i_j[0]
excute 13:51:31.149222 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:31.153211 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.157200 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 2, 0)
excute 13:51:31.160192 line       556                     i = i_j[0]
excute 13:51:31.164181 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:31.169168 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.174156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 2, 0)
excute 13:51:31.177147 line       556                     i = i_j[0]
excute 13:51:31.181136 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:31.185125 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.189115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 2, 0)
excute 13:51:31.192107 line       556                     i = i_j[0]
excute 13:51:31.197094 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:31.200085 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.204076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 2, 0)
excute 13:51:31.208065 line       556                     i = i_j[0]
excute 13:51:31.212054 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:31.215046 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.219035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 2, 0)
excute 13:51:31.223025 line       556                     i = i_j[0]
excute 13:51:31.226051 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:31.230036 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.234993 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 2, 0)
excute 13:51:31.237985 line       556                     i = i_j[0]
excute 13:51:31.246962 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:31.252947 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.256935 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:51:31.260955 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:31.265938 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:31.269900 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.273897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:51:31.276912 line       556                     i = i_j[0]
excute 13:51:31.280901 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:31.284890 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.288857 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:51:31.292869 line       556                     i = i_j[0]
excute 13:51:31.296828 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:31.299850 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.303843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:51:31.307830 line       556                     i = i_j[0]
excute 13:51:31.311788 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:31.314811 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.318800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:51:31.322790 line       556                     i = i_j[0]
excute 13:51:31.327746 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:31.339713 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.347693 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:51:31.351680 line       556                     i = i_j[0]
excute 13:51:31.355670 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:31.359659 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.364647 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 0)
excute 13:51:31.369632 line       556                     i = i_j[0]
excute 13:51:31.375623 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:31.380617 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.387592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:51:31.391574 line       556                     i = i_j[0]
excute 13:51:31.396561 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:31.402546 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.406534 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:51:31.410526 line       556                     i = i_j[0]
excute 13:51:31.415514 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:31.419501 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:31.424488 line       555                 for i_j in i_j_list:
excute 13:51:31.428476 line       581             self.write_matrix(
excute 13:51:31.435456 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:31.439446 line       583                 result_file_path,
excute 13:51:31.446428 line       584                 mode='a'
excute 13:51:31.456400 line       488         for t in time_steps:
excute Modified var:.. t = 173
excute 13:51:31.460391 line       489             if (t != self.TIME + 1):
excute 13:51:31.465377 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:31.469370 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:31.474354 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:31.479341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:31.488315 line       494                         if (i == j):
excute 13:51:31.498289 line       495                             continue
excute 13:51:31.508262 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:31.517239 line       494                         if (i == j):
excute 13:51:31.526215 line       496                         i_j_list.append((
excute 13:51:31.533196 line       497                             i, j,
excute 13:51:31.539179 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.546161 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:51:31.553143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:31.562118 line       494                         if (i == j):
excute 13:51:31.576089 line       496                         i_j_list.append((
excute 13:51:31.586054 line       497                             i, j,
excute 13:51:31.594034 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.600017 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:51:31.606998 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:31.611987 line       494                         if (i == j):
excute 13:51:31.617969 line       496                         i_j_list.append((
excute 13:51:31.623953 line       497                             i, j,
excute 13:51:31.630934 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.637917 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:51:31.643900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:31.650882 line       494                         if (i == j):
excute 13:51:31.658861 line       496                         i_j_list.append((
excute 13:51:31.666839 line       497                             i, j,
excute 13:51:31.675814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.682795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:51:31.689777 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:31.697756 line       494                         if (i == j):
excute 13:51:31.704742 line       496                         i_j_list.append((
excute 13:51:31.711718 line       497                             i, j,
excute 13:51:31.717711 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.724684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:51:31.730667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:31.737649 line       494                         if (i == j):
excute 13:51:31.743633 line       496                         i_j_list.append((
excute 13:51:31.750614 line       497                             i, j,
excute 13:51:31.757598 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.766572 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1)]
excute 13:51:31.773555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:31.779537 line       494                         if (i == j):
excute 13:51:31.787519 line       496                         i_j_list.append((
excute 13:51:31.795494 line       497                             i, j,
excute 13:51:31.801479 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.808460 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0)]
excute 13:51:31.816440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:31.823420 line       494                         if (i == j):
excute 13:51:31.830403 line       496                         i_j_list.append((
excute 13:51:31.836385 line       497                             i, j,
excute 13:51:31.841372 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.848355 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:51:31.853340 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:31.858327 line       494                         if (i == j):
excute 13:51:31.861318 line       496                         i_j_list.append((
excute 13:51:31.866306 line       497                             i, j,
excute 13:51:31.869296 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.873285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:51:31.876278 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:31.880266 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:31.884256 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:31.888246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:31.891238 line       494                         if (i == j):
excute 13:51:31.895227 line       496                         i_j_list.append((
excute 13:51:31.899216 line       497                             i, j,
excute 13:51:31.902209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.906198 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1)]
excute 13:51:31.909190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:31.913179 line       494                         if (i == j):
excute 13:51:31.917168 line       495                             continue
excute 13:51:31.921169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:31.924150 line       494                         if (i == j):
excute 13:51:31.928139 line       496                         i_j_list.append((
excute 13:51:31.931131 line       497                             i, j,
excute 13:51:31.935120 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.938112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0)]
excute 13:51:31.942102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:31.946091 line       494                         if (i == j):
excute 13:51:31.950081 line       496                         i_j_list.append((
excute 13:51:31.954071 line       497                             i, j,
excute 13:51:31.958059 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.961051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:31.965041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:31.970028 line       494                         if (i == j):
excute 13:51:31.974016 line       496                         i_j_list.append((
excute 13:51:31.977008 line       497                             i, j,
excute 13:51:31.980997 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:31.984987 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:31.988988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:31.992967 line       494                         if (i == j):
excute 13:51:31.995957 line       496                         i_j_list.append((
excute 13:51:31.999947 line       497                             i, j,
excute 13:51:32.002939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.006940 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:32.009921 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:32.013909 line       494                         if (i == j):
excute 13:51:32.017898 line       496                         i_j_list.append((
excute 13:51:32.020891 line       497                             i, j,
excute 13:51:32.024880 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.028870 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1)]
excute 13:51:32.031862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:32.035852 line       494                         if (i == j):
excute 13:51:32.039841 line       496                         i_j_list.append((
excute 13:51:32.042833 line       497                             i, j,
excute 13:51:32.046822 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.049813 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0)]
excute 13:51:32.053803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:32.058791 line       494                         if (i == j):
excute 13:51:32.062780 line       496                         i_j_list.append((
excute 13:51:32.065803 line       497                             i, j,
excute 13:51:32.069764 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.073752 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:51:32.077739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:32.080731 line       494                         if (i == j):
excute 13:51:32.084720 line       496                         i_j_list.append((
excute 13:51:32.088724 line       497                             i, j,
excute 13:51:32.091702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.099680 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:51:32.105667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:32.110652 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:32.114641 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:32.122620 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:32.128609 line       494                         if (i == j):
excute 13:51:32.133594 line       496                         i_j_list.append((
excute 13:51:32.136582 line       497                             i, j,
excute 13:51:32.139573 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.143563 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1)]
excute 13:51:32.147553 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:32.151543 line       494                         if (i == j):
excute 13:51:32.155532 line       496                         i_j_list.append((
excute 13:51:32.159520 line       497                             i, j,
excute 13:51:32.162512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.166502 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0)]
excute 13:51:32.170492 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:32.176476 line       494                         if (i == j):
excute 13:51:32.180464 line       495                             continue
excute 13:51:32.183456 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:32.186449 line       494                         if (i == j):
excute 13:51:32.190437 line       496                         i_j_list.append((
excute 13:51:32.194427 line       497                             i, j,
excute 13:51:32.198417 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.205398 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:32.209387 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:32.213377 line       494                         if (i == j):
excute 13:51:32.216368 line       496                         i_j_list.append((
excute 13:51:32.220357 line       497                             i, j,
excute 13:51:32.223350 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.227339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:32.231335 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:32.234321 line       494                         if (i == j):
excute 13:51:32.238309 line       496                         i_j_list.append((
excute 13:51:32.242299 line       497                             i, j,
excute 13:51:32.245291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.249280 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:32.252273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:32.257272 line       494                         if (i == j):
excute 13:51:32.261250 line       496                         i_j_list.append((
excute 13:51:32.266237 line       497                             i, j,
excute 13:51:32.269227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.273217 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1)]
excute 13:51:32.277207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:32.281195 line       494                         if (i == j):
excute 13:51:32.285184 line       496                         i_j_list.append((
excute 13:51:32.288176 line       497                             i, j,
excute 13:51:32.292165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.296155 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0)]
excute 13:51:32.299147 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:32.303136 line       494                         if (i == j):
excute 13:51:32.308123 line       496                         i_j_list.append((
excute 13:51:32.311115 line       497                             i, j,
excute 13:51:32.314107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.318096 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:51:32.321088 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:32.326078 line       494                         if (i == j):
excute 13:51:32.336052 line       496                         i_j_list.append((
excute 13:51:32.340037 line       497                             i, j,
excute 13:51:32.343030 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.349016 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:51:32.352007 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:32.356992 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:32.359984 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:32.364971 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:32.367963 line       494                         if (i == j):
excute 13:51:32.371952 line       496                         i_j_list.append((
excute 13:51:32.375941 line       497                             i, j,
excute 13:51:32.380930 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.384917 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1)]
excute 13:51:32.388908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:32.391899 line       494                         if (i == j):
excute 13:51:32.395888 line       496                         i_j_list.append((
excute 13:51:32.399877 line       497                             i, j,
excute 13:51:32.402870 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.406859 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0)]
excute 13:51:32.409851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:32.413841 line       494                         if (i == j):
excute 13:51:32.417844 line       496                         i_j_list.append((
excute 13:51:32.421820 line       497                             i, j,
excute 13:51:32.424811 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.428801 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0)]
excute 13:51:32.431792 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:32.435783 line       494                         if (i == j):
excute 13:51:32.439772 line       495                             continue
excute 13:51:32.443761 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:32.446753 line       494                         if (i == j):
excute 13:51:32.451746 line       496                         i_j_list.append((
excute 13:51:32.455730 line       497                             i, j,
excute 13:51:32.458721 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.464706 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0)]
excute 13:51:32.469692 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:32.473681 line       494                         if (i == j):
excute 13:51:32.477671 line       496                         i_j_list.append((
excute 13:51:32.482657 line       497                             i, j,
excute 13:51:32.486646 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.489637 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0)]
excute 13:51:32.492632 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:32.497616 line       494                         if (i == j):
excute 13:51:32.501606 line       496                         i_j_list.append((
excute 13:51:32.504598 line       497                             i, j,
excute 13:51:32.508587 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.512609 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1)]
excute 13:51:32.515601 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:32.519590 line       494                         if (i == j):
excute 13:51:32.523579 line       496                         i_j_list.append((
excute 13:51:32.527568 line       497                             i, j,
excute 13:51:32.530561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.534552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0)]
excute 13:51:32.538520 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:32.542497 line       494                         if (i == j):
excute 13:51:32.546486 line       496                         i_j_list.append((
excute 13:51:32.549478 line       497                             i, j,
excute 13:51:32.553467 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.557457 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0)]
excute 13:51:32.560448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:32.564438 line       494                         if (i == j):
excute 13:51:32.568428 line       496                         i_j_list.append((
excute 13:51:32.571419 line       497                             i, j,
excute 13:51:32.575408 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.578403 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0)]
excute 13:51:32.582390 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:32.587377 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:32.590369 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:32.594358 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:32.598348 line       494                         if (i == j):
excute 13:51:32.601339 line       496                         i_j_list.append((
excute 13:51:32.605328 line       497                             i, j,
excute 13:51:32.609319 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.612310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1)]
excute 13:51:32.616299 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:32.620289 line       494                         if (i == j):
excute 13:51:32.624279 line       496                         i_j_list.append((
excute 13:51:32.627270 line       497                             i, j,
excute 13:51:32.631259 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.635249 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0)]
excute 13:51:32.638240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:32.642230 line       494                         if (i == j):
excute 13:51:32.646220 line       496                         i_j_list.append((
excute 13:51:32.650208 line       497                             i, j,
excute 13:51:32.653201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.657190 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:51:32.661182 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:32.665170 line       494                         if (i == j):
excute 13:51:32.669159 line       496                         i_j_list.append((
excute 13:51:32.672182 line       497                             i, j,
excute 13:51:32.676172 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.680129 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:51:32.684119 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:32.690102 line       494                         if (i == j):
excute 13:51:32.693094 line       495                             continue
excute 13:51:32.697083 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:32.701104 line       494                         if (i == j):
excute 13:51:32.705064 line       496                         i_j_list.append((
excute 13:51:32.708087 line       497                             i, j,
excute 13:51:32.712075 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.716033 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:51:32.719056 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:32.723015 line       494                         if (i == j):
excute 13:51:32.727035 line       496                         i_j_list.append((
excute 13:51:32.731025 line       497                             i, j,
excute 13:51:32.735014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.738973 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1)]
excute 13:51:32.742962 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:32.746951 line       494                         if (i == j):
excute 13:51:32.749981 line       496                         i_j_list.append((
excute 13:51:32.753964 line       497                             i, j,
excute 13:51:32.757955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.761915 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0)]
excute 13:51:32.765900 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:32.769890 line       494                         if (i == j):
excute 13:51:32.773888 line       496                         i_j_list.append((
excute 13:51:32.776901 line       497                             i, j,
excute 13:51:32.780894 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.783883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:51:32.787873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:32.793858 line       494                         if (i == j):
excute 13:51:32.797850 line       496                         i_j_list.append((
excute 13:51:32.800842 line       497                             i, j,
excute 13:51:32.804827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.807819 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:51:32.811809 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:32.815767 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:32.818790 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:32.823747 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:32.826769 line       494                         if (i == j):
excute 13:51:32.830727 line       496                         i_j_list.append((
excute 13:51:32.833718 line       497                             i, j,
excute 13:51:32.837707 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.841697 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1)]
excute 13:51:32.844689 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:32.848678 line       494                         if (i == j):
excute 13:51:32.852667 line       496                         i_j_list.append((
excute 13:51:32.856657 line       497                             i, j,
excute 13:51:32.860648 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.863640 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0)]
excute 13:51:32.867627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:32.871619 line       494                         if (i == j):
excute 13:51:32.876606 line       496                         i_j_list.append((
excute 13:51:32.880594 line       497                             i, j,
excute 13:51:32.884581 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.887574 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:51:32.891564 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:32.896551 line       494                         if (i == j):
excute 13:51:32.900541 line       496                         i_j_list.append((
excute 13:51:32.903563 line       497                             i, j,
excute 13:51:32.907553 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.910544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:32.914534 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:32.918492 line       494                         if (i == j):
excute 13:51:32.922481 line       496                         i_j_list.append((
excute 13:51:32.925507 line       497                             i, j,
excute 13:51:32.929494 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.932485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:32.936475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:32.940434 line       494                         if (i == j):
excute 13:51:32.944437 line       495                             continue
excute 13:51:32.948415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:32.952401 line       494                         if (i == j):
excute 13:51:32.956393 line       496                         i_j_list.append((
excute 13:51:32.960382 line       497                             i, j,
excute 13:51:32.964369 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.968360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1)]
excute 13:51:32.972348 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:32.976337 line       494                         if (i == j):
excute 13:51:32.980327 line       496                         i_j_list.append((
excute 13:51:32.983318 line       497                             i, j,
excute 13:51:32.987307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:32.990299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0)]
excute 13:51:32.994294 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:32.999277 line       494                         if (i == j):
excute 13:51:33.003264 line       496                         i_j_list.append((
excute 13:51:33.007254 line       497                             i, j,
excute 13:51:33.011243 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.014235 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:51:33.018226 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:33.022215 line       494                         if (i == j):
excute 13:51:33.026203 line       496                         i_j_list.append((
excute 13:51:33.029229 line       497                             i, j,
excute 13:51:33.033216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.036209 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:51:33.040198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:33.044157 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:33.047178 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:33.051168 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:33.057122 line       494                         if (i == j):
excute 13:51:33.062144 line       496                         i_j_list.append((
excute 13:51:33.066128 line       497                             i, j,
excute 13:51:33.070086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.074078 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1)]
excute 13:51:33.078064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:33.082054 line       494                         if (i == j):
excute 13:51:33.086043 line       496                         i_j_list.append((
excute 13:51:33.089035 line       497                             i, j,
excute 13:51:33.093024 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.097015 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0)]
excute 13:51:33.102999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:33.106989 line       494                         if (i == j):
excute 13:51:33.110986 line       496                         i_j_list.append((
excute 13:51:33.114000 line       497                             i, j,
excute 13:51:33.117958 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.121947 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:51:33.125937 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:33.129928 line       494                         if (i == j):
excute 13:51:33.138012 line       496                         i_j_list.append((
excute 13:51:33.141024 line       497                             i, j,
excute 13:51:33.145012 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.148003 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:51:33.151992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:33.155982 line       494                         if (i == j):
excute 13:51:33.160938 line       496                         i_j_list.append((
excute 13:51:33.164960 line       497                             i, j,
excute 13:51:33.168949 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.172905 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0)]
excute 13:51:33.176925 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:33.180918 line       494                         if (i == j):
excute 13:51:33.184872 line       496                         i_j_list.append((
excute 13:51:33.188862 line       497                             i, j,
excute 13:51:33.191854 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.195843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0)]
excute 13:51:33.199834 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:33.203854 line       494                         if (i == j):
excute 13:51:33.207843 line       495                             continue
excute 13:51:33.211832 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:33.214824 line       494                         if (i == j):
excute 13:51:33.218814 line       496                         i_j_list.append((
excute 13:51:33.223769 line       497                             i, j,
excute 13:51:33.227757 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.230750 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0)]
excute 13:51:33.234739 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:33.238741 line       494                         if (i == j):
excute 13:51:33.242733 line       496                         i_j_list.append((
excute 13:51:33.245741 line       497                             i, j,
excute 13:51:33.249733 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.252725 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0)]
excute 13:51:33.257685 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:33.262666 line       494                         if (i == j):
excute 13:51:33.267654 line       496                         i_j_list.append((
excute 13:51:33.271643 line       497                             i, j,
excute 13:51:33.274635 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.278624 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0)]
excute 13:51:33.282613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:33.286603 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:33.291590 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:33.296575 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:33.299568 line       494                         if (i == j):
excute 13:51:33.305586 line       496                         i_j_list.append((
excute 13:51:33.308577 line       497                             i, j,
excute 13:51:33.312563 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.316549 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1)]
excute 13:51:33.319546 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:33.324506 line       494                         if (i == j):
excute 13:51:33.333476 line       496                         i_j_list.append((
excute 13:51:33.338464 line       497                             i, j,
excute 13:51:33.342454 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.346441 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0)]
excute 13:51:33.351429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:33.355417 line       494                         if (i == j):
excute 13:51:33.359407 line       496                         i_j_list.append((
excute 13:51:33.363396 line       497                             i, j,
excute 13:51:33.366387 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.370377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:33.374366 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:33.377358 line       494                         if (i == j):
excute 13:51:33.382346 line       496                         i_j_list.append((
excute 13:51:33.386366 line       497                             i, j,
excute 13:51:33.389357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.393350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:33.397325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:33.401331 line       494                         if (i == j):
excute 13:51:33.405285 line       496                         i_j_list.append((
excute 13:51:33.409306 line       497                             i, j,
excute 13:51:33.413294 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.417253 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:33.422240 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:33.430217 line       494                         if (i == j):
excute 13:51:33.438197 line       496                         i_j_list.append((
excute 13:51:33.443183 line       497                             i, j,
excute 13:51:33.447209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.452159 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:33.455182 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:33.459171 line       494                         if (i == j):
excute 13:51:33.464128 line       496                         i_j_list.append((
excute 13:51:33.467149 line       497                             i, j,
excute 13:51:33.471139 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.474132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1)]
excute 13:51:33.478120 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:33.482110 line       494                         if (i == j):
excute 13:51:33.486099 line       495                             continue
excute 13:51:33.490089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:33.494078 line       494                         if (i == j):
excute 13:51:33.498037 line       496                         i_j_list.append((
excute 13:51:33.501059 line       497                             i, j,
excute 13:51:33.505051 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.510006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0)]
excute 13:51:33.512995 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:33.516984 line       494                         if (i == j):
excute 13:51:33.520974 line       496                         i_j_list.append((
excute 13:51:33.524964 line       497                             i, j,
excute 13:51:33.527955 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.531945 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:51:33.535935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:33.538926 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:33.542916 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:33.546906 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:33.550907 line       494                         if (i == j):
excute 13:51:33.554885 line       496                         i_j_list.append((
excute 13:51:33.558873 line       497                             i, j,
excute 13:51:33.561865 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.565855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1)]
excute 13:51:33.568846 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:33.572836 line       494                         if (i == j):
excute 13:51:33.576825 line       496                         i_j_list.append((
excute 13:51:33.580814 line       497                             i, j,
excute 13:51:33.584803 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.587795 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0)]
excute 13:51:33.591785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:33.595774 line       494                         if (i == j):
excute 13:51:33.599764 line       496                         i_j_list.append((
excute 13:51:33.602755 line       497                             i, j,
excute 13:51:33.606744 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.609737 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:51:33.614755 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:33.618744 line       494                         if (i == j):
excute 13:51:33.622734 line       496                         i_j_list.append((
excute 13:51:33.626723 line       497                             i, j,
excute 13:51:33.630681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.633705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:51:33.637664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:33.641660 line       494                         if (i == j):
excute 13:51:33.645644 line       496                         i_j_list.append((
excute 13:51:33.649632 line       497                             i, j,
excute 13:51:33.653621 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.657610 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:51:33.661600 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:33.666588 line       494                         if (i == j):
excute 13:51:33.670575 line       496                         i_j_list.append((
excute 13:51:33.674565 line       497                             i, j,
excute 13:51:33.678555 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.682544 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:51:33.685536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:33.690524 line       494                         if (i == j):
excute 13:51:33.694512 line       496                         i_j_list.append((
excute 13:51:33.699499 line       497                             i, j,
excute 13:51:33.702491 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.706480 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1)]
excute 13:51:33.710469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:33.715491 line       494                         if (i == j):
excute 13:51:33.719476 line       496                         i_j_list.append((
excute 13:51:33.723439 line       497                             i, j,
excute 13:51:33.727455 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.731446 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0)]
excute 13:51:33.734437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:33.738424 line       494                         if (i == j):
excute 13:51:33.743380 line       495                             continue
excute 13:51:33.746371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:33.750360 line       494                         if (i == j):
excute 13:51:33.754384 line       496                         i_j_list.append((
excute 13:51:33.758341 line       497                             i, j,
excute 13:51:33.762333 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.766319 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0)]
excute 13:51:33.770310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:33.776293 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:33.780283 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:33.785270 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:33.789259 line       494                         if (i == j):
excute 13:51:33.793248 line       496                         i_j_list.append((
excute 13:51:33.797237 line       497                             i, j,
excute 13:51:33.803238 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.806243 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1)]
excute 13:51:33.810233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:33.814192 line       494                         if (i == j):
excute 13:51:33.819187 line       496                         i_j_list.append((
excute 13:51:33.823198 line       497                             i, j,
excute 13:51:33.827191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.830179 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0)]
excute 13:51:33.834169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:33.838141 line       494                         if (i == j):
excute 13:51:33.842118 line       496                         i_j_list.append((
excute 13:51:33.845140 line       497                             i, j,
excute 13:51:33.849128 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.853087 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:51:33.857077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:33.861067 line       494                         if (i == j):
excute 13:51:33.865056 line       496                         i_j_list.append((
excute 13:51:33.868078 line       497                             i, j,
excute 13:51:33.872070 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.875062 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:33.879049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:33.883041 line       494                         if (i == j):
excute 13:51:33.886996 line       496                         i_j_list.append((
excute 13:51:33.890984 line       497                             i, j,
excute 13:51:33.893977 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.897966 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:33.901955 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:33.905945 line       494                         if (i == j):
excute 13:51:33.909935 line       496                         i_j_list.append((
excute 13:51:33.912926 line       497                             i, j,
excute 13:51:33.916915 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.920939 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:33.924932 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:33.928897 line       494                         if (i == j):
excute 13:51:33.932873 line       496                         i_j_list.append((
excute 13:51:33.936862 line       497                             i, j,
excute 13:51:33.939854 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.943858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1)]
excute 13:51:33.947852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:33.952820 line       494                         if (i == j):
excute 13:51:33.956811 line       496                         i_j_list.append((
excute 13:51:33.960800 line       497                             i, j,
excute 13:51:33.967780 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.971771 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0)]
excute 13:51:33.976757 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:33.980748 line       494                         if (i == j):
excute 13:51:33.985733 line       496                         i_j_list.append((
excute 13:51:33.989722 line       497                             i, j,
excute 13:51:33.993710 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:33.997703 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 1), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 1), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 1), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 1), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 1), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 1), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 5, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 1), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 1), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 1), (8, 7, -1, 0), (8, 9, -1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 1), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:51:34.000694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:34.005681 line       494                         if (i == j):
excute 13:51:34.009668 line       495                             continue
excute 13:51:34.013659 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:34.017651 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:34.021637 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 7, -1, 0), (8, 9, -1, 0), (8, 0, -1, 1), (8, 6, -1, 1), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (0, 6, 0, 1), (2, 0, 0, 1), (2, 6, 0, 1), (5, 0, 0, 1), (5, 6, 0, 1), (7, 0, 0, 1), (7, 6, 0, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (1, 0, 1, 1), (1, 6, 1, 1), (4, 0, 1, 1), (4, 6, 1, 1), (9, 0, 1, 1), (9, 6, 1, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (3, 0, 2, 1), (3, 6, 2, 1), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 0), (6, 5, 5, 0), (6, 7, 5, 0), (6, 8, 5, 0), (6, 9, 5, 0), (6, 0, 5, 1)]
excute 13:51:34.025657 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:34.029632 line       505                     if (self.RELOCATE):
excute 13:51:34.033636 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:34.037626 line       505                     if (self.RELOCATE):
excute 13:51:34.041584 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:34.044607 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:51:34.048595 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:34.052554 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:34.057577 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.061529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:51:34.064521 line       556                     i = i_j[0]
excute 13:51:34.068510 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:34.072499 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.076489 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:34.079481 line       556                     i = i_j[0]
excute 13:51:34.083471 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:34.087460 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.091449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:51:34.094441 line       556                     i = i_j[0]
excute 13:51:34.098430 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:34.102420 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.106446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:34.109433 line       556                     i = i_j[0]
excute 13:51:34.113422 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:34.117412 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.121384 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 0)
excute 13:51:34.126357 line       556                     i = i_j[0]
excute 13:51:34.130345 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:34.133337 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.137326 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:51:34.141315 line       556                     i = i_j[0]
excute 13:51:34.145305 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:34.148297 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.152286 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 1)
excute 13:51:34.156275 line       556                     i = i_j[0]
excute 13:51:34.160265 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:34.163257 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.167246 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 1)
excute 13:51:34.171235 line       556                     i = i_j[0]
excute 13:51:34.175225 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:34.178217 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.182206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:51:34.186195 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:34.190185 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:34.193177 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.197166 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:51:34.201155 line       556                     i = i_j[0]
excute 13:51:34.205145 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:34.208137 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.212126 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:51:34.216116 line       556                     i = i_j[0]
excute 13:51:34.220112 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:34.223097 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.229082 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:51:34.233071 line       556                     i = i_j[0]
excute 13:51:34.237061 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:34.240052 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.244041 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:51:34.248031 line       556                     i = i_j[0]
excute 13:51:34.252021 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:34.256009 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.259999 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:51:34.262991 line       556                     i = i_j[0]
excute 13:51:34.268975 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:34.271967 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.275955 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:51:34.279945 line       556                     i = i_j[0]
excute 13:51:34.283934 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:34.287924 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.291915 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:51:34.295903 line       556                     i = i_j[0]
excute 13:51:34.299893 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:34.302884 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.307873 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:34.310863 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:34.314851 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:34.318841 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.322830 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:34.328815 line       556                     i = i_j[0]
excute 13:51:34.342778 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:34.353749 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.359732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:34.364736 line       556                     i = i_j[0]
excute 13:51:34.370704 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:34.374692 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.378681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:34.383669 line       556                     i = i_j[0]
excute 13:51:34.388656 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:34.392645 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.397632 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:51:34.400623 line       556                     i = i_j[0]
excute 13:51:34.404612 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:34.408601 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.412591 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:34.416580 line       556                     i = i_j[0]
excute 13:51:34.420571 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:34.423561 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.427552 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:34.431540 line       556                     i = i_j[0]
excute 13:51:34.435530 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:34.440516 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.444505 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:34.450490 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:34.454480 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:34.459468 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.464458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:34.467476 line       556                     i = i_j[0]
excute 13:51:34.471465 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:34.475454 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.479416 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:34.483435 line       556                     i = i_j[0]
excute 13:51:34.487418 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:34.491383 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.495396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:34.508595 line       556                     i = i_j[0]
excute 13:51:34.513284 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:34.517307 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.521267 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:51:34.524289 line       556                     i = i_j[0]
excute 13:51:34.528278 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:34.532235 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.536224 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:34.540214 line       556                     i = i_j[0]
excute 13:51:34.545234 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:34.549222 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.553181 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:51:34.557200 line       556                     i = i_j[0]
excute 13:51:34.561158 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:34.565161 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.569140 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:34.572160 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:34.576150 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:34.580140 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.584129 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:34.588118 line       556                     i = i_j[0]
excute 13:51:34.592090 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:34.595100 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.599088 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:34.603079 line       556                     i = i_j[0]
excute 13:51:34.607067 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:34.611063 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.615016 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:34.622030 line       556                     i = i_j[0]
excute 13:51:34.626016 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:34.630006 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.633995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:34.637985 line       556                     i = i_j[0]
excute 13:51:34.641973 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:34.646931 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.650953 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:34.654939 line       556                     i = i_j[0]
excute 13:51:34.658930 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:34.661921 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.666881 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:34.669900 line       556                     i = i_j[0]
excute 13:51:34.673889 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:34.677878 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.681837 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 1)
excute 13:51:34.684859 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:34.688851 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:34.692838 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.696827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 1)
excute 13:51:34.700818 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:34.705772 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:34.709778 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.713764 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 1)
excute 13:51:34.716775 line       556                     i = i_j[0]
excute 13:51:34.720759 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:34.724722 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.728733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 1)
excute 13:51:34.732725 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:34.736692 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:34.740680 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.745668 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 1)
excute 13:51:34.750652 line       556                     i = i_j[0]
excute 13:51:34.754641 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:34.758632 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.763618 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 1)
excute 13:51:34.767637 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:34.771599 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:34.775587 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.779575 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 1)
excute 13:51:34.783564 line       556                     i = i_j[0]
excute 13:51:34.787553 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:34.790545 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.794534 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:34.798523 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:34.802513 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:34.806503 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.810492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:34.813516 line       556                     i = i_j[0]
excute 13:51:34.817505 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:34.821495 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.825451 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:34.829442 line       556                     i = i_j[0]
excute 13:51:34.833438 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:34.836454 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.840443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:34.844432 line       556                     i = i_j[0]
excute 13:51:34.848392 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:34.853411 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.857368 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:51:34.861370 line       556                     i = i_j[0]
excute 13:51:34.865380 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:34.868369 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.872358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:34.876347 line       556                     i = i_j[0]
excute 13:51:34.880306 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:34.883328 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.888284 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:34.891307 line       556                     i = i_j[0]
excute 13:51:34.895297 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:34.899286 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.903277 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:51:34.906273 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:34.910257 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:34.914247 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.918235 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:51:34.922225 line       556                     i = i_j[0]
excute 13:51:34.926183 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:34.930172 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.933195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:51:34.937185 line       556                     i = i_j[0]
excute 13:51:34.941145 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:34.945146 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.950120 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:51:34.954143 line       556                     i = i_j[0]
excute 13:51:34.958099 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:34.962089 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.967076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:51:34.970067 line       556                     i = i_j[0]
excute 13:51:34.975054 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:34.979043 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.984028 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:51:34.987022 line       556                     i = i_j[0]
excute 13:51:34.992009 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:34.995996 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:34.999985 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:51:35.003976 line       556                     i = i_j[0]
excute 13:51:35.008964 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:35.012968 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.016967 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:35.019963 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:35.023956 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:35.027910 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.031899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:35.035889 line       556                     i = i_j[0]
excute 13:51:35.039879 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:35.042902 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.046891 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:35.050880 line       556                     i = i_j[0]
excute 13:51:35.055838 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:35.059825 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.063814 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:35.066806 line       556                     i = i_j[0]
excute 13:51:35.070795 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:35.075814 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.079803 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:35.083795 line       556                     i = i_j[0]
excute 13:51:35.087752 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:35.091740 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.095732 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:51:35.099720 line       556                     i = i_j[0]
excute 13:51:35.103710 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:35.107699 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.111689 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:35.115678 line       556                     i = i_j[0]
excute 13:51:35.119668 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:35.123657 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.127662 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 1)
excute 13:51:35.131637 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:35.135625 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:35.139612 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.143617 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 1)
excute 13:51:35.147622 line       556                     i = i_j[0]
excute 13:51:35.151580 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:35.155602 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.160560 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 1)
excute 13:51:35.163579 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:35.168535 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:35.172524 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.175516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 1)
excute 13:51:35.179505 line       556                     i = i_j[0]
excute 13:51:35.183495 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:35.186486 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.191474 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 189
excute 13:51:35.194465 line       560                         if (t_tmp > self.TIME):
excute 13:51:35.198454 line       561                             time_over += 1
excute Modified var:.. time_over = 5
excute 13:51:35.202444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 1)
excute 13:51:35.206434 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:35.209425 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:35.213414 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.217403 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 1)
excute 13:51:35.221393 line       556                     i = i_j[0]
excute 13:51:35.225383 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:35.228374 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.232363 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 2, 0)
excute 13:51:35.236353 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:35.240343 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:35.243334 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.247323 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 2, 0)
excute 13:51:35.251313 line       556                     i = i_j[0]
excute 13:51:35.256300 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:35.260289 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.267272 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 2, 0)
excute 13:51:35.271260 line       556                     i = i_j[0]
excute 13:51:35.275250 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:35.278272 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.282262 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 2, 0)
excute 13:51:35.286252 line       556                     i = i_j[0]
excute 13:51:35.290210 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:35.294201 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.301180 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 2, 0)
excute 13:51:35.306167 line       556                     i = i_j[0]
excute 13:51:35.314145 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:35.321127 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.327118 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 2, 0)
excute 13:51:35.337085 line       556                     i = i_j[0]
excute 13:51:35.343071 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:35.347059 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.352044 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 2, 0)
excute 13:51:35.356065 line       556                     i = i_j[0]
excute 13:51:35.360054 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:35.364015 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.369005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 2, 1)
excute 13:51:35.373020 line       556                     i = i_j[0]
excute 13:51:35.376980 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:35.380967 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.384959 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 186
excute 13:51:35.389943 line       560                         if (t_tmp > self.TIME):
excute 13:51:35.393946 line       561                             time_over += 1
excute Modified var:.. time_over = 6
excute 13:51:35.397923 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 2, 1)
excute 13:51:35.401913 line       556                     i = i_j[0]
excute 13:51:35.406935 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:35.410887 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.417901 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:51:35.421857 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:35.427843 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:35.431867 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.435852 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:51:35.439842 line       556                     i = i_j[0]
excute 13:51:35.443801 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:35.447820 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.452775 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:51:35.456765 line       556                     i = i_j[0]
excute 13:51:35.460754 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:35.466739 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.472721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 0)
excute 13:51:35.476710 line       556                     i = i_j[0]
excute 13:51:35.480701 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:35.484689 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.488683 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:51:35.492699 line       556                     i = i_j[0]
excute 13:51:35.497666 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:35.500647 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.505634 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 0)
excute 13:51:35.508626 line       556                     i = i_j[0]
excute 13:51:35.513614 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:35.517603 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.521592 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:51:35.525582 line       556                     i = i_j[0]
excute 13:51:35.530570 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:35.534591 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.539544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 0)
excute 13:51:35.542566 line       556                     i = i_j[0]
excute 13:51:35.546556 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:35.550544 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.554504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 1)
excute 13:51:35.558494 line       556                     i = i_j[0]
excute 13:51:35.562482 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:35.565475 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:35.571459 line       555                 for i_j in i_j_list:
excute 13:51:35.575446 line       581             self.write_matrix(
excute 13:51:35.579436 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:35.582428 line       583                 result_file_path,
excute 13:51:35.586417 line       584                 mode='a'
excute 13:51:35.642662 line       488         for t in time_steps:
excute Modified var:.. t = 174
excute 13:51:35.649646 line       489             if (t != self.TIME + 1):
excute 13:51:35.655629 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:35.659617 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:35.666597 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:35.670588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:35.677575 line       494                         if (i == j):
excute 13:51:35.681595 line       495                             continue
excute 13:51:35.686543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:35.690566 line       494                         if (i == j):
excute 13:51:35.694522 line       496                         i_j_list.append((
excute 13:51:35.700537 line       497                             i, j,
excute 13:51:35.704497 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.708485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:51:35.714475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:35.719488 line       494                         if (i == j):
excute 13:51:35.724443 line       496                         i_j_list.append((
excute 13:51:35.727466 line       497                             i, j,
excute 13:51:35.732420 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.736411 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:51:35.740399 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:35.744390 line       494                         if (i == j):
excute 13:51:35.749376 line       496                         i_j_list.append((
excute 13:51:35.753366 line       497                             i, j,
excute 13:51:35.757355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.761350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:51:35.764338 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:35.768327 line       494                         if (i == j):
excute 13:51:35.773312 line       496                         i_j_list.append((
excute 13:51:35.778333 line       497                             i, j,
excute 13:51:35.782291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.785310 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1)]
excute 13:51:35.788302 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:35.792292 line       494                         if (i == j):
excute 13:51:35.796283 line       496                         i_j_list.append((
excute 13:51:35.800271 line       497                             i, j,
excute 13:51:35.803262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.806255 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0)]
excute 13:51:35.810246 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:35.814202 line       494                         if (i == j):
excute 13:51:35.817226 line       496                         i_j_list.append((
excute 13:51:35.821218 line       497                             i, j,
excute 13:51:35.824206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.828196 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:51:35.831187 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:35.835177 line       494                         if (i == j):
excute 13:51:35.839137 line       496                         i_j_list.append((
excute 13:51:35.842161 line       497                             i, j,
excute 13:51:35.846148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.849140 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1)]
excute 13:51:35.853133 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:35.857100 line       494                         if (i == j):
excute 13:51:35.863151 line       496                         i_j_list.append((
excute 13:51:35.867137 line       497                             i, j,
excute 13:51:35.875114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.879104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0)]
excute 13:51:35.882127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:35.886119 line       494                         if (i == j):
excute 13:51:35.890106 line       496                         i_j_list.append((
excute 13:51:35.894095 line       497                             i, j,
excute 13:51:35.897088 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.900079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2)]
excute 13:51:35.904071 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:35.908035 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:35.911049 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:35.915013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:35.918996 line       494                         if (i == j):
excute 13:51:35.922020 line       496                         i_j_list.append((
excute 13:51:35.926010 line       497                             i, j,
excute 13:51:35.929001 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.932959 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0)]
excute 13:51:35.935950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:35.939940 line       494                         if (i == j):
excute 13:51:35.942964 line       495                             continue
excute 13:51:35.946957 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:35.950942 line       494                         if (i == j):
excute 13:51:35.954935 line       496                         i_j_list.append((
excute 13:51:35.958922 line       497                             i, j,
excute 13:51:35.961882 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.965871 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:35.968863 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:35.972854 line       494                         if (i == j):
excute 13:51:35.976842 line       496                         i_j_list.append((
excute 13:51:35.980837 line       497                             i, j,
excute 13:51:35.985850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:35.988841 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:35.992799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:35.996789 line       494                         if (i == j):
excute 13:51:35.999814 line       496                         i_j_list.append((
excute 13:51:36.003802 line       497                             i, j,
excute 13:51:36.006794 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.010754 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1)]
excute 13:51:36.013777 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:36.017733 line       494                         if (i == j):
excute 13:51:36.021725 line       496                         i_j_list.append((
excute 13:51:36.024745 line       497                             i, j,
excute 13:51:36.028735 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.031695 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0)]
excute 13:51:36.034687 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:36.038676 line       494                         if (i == j):
excute 13:51:36.042665 line       496                         i_j_list.append((
excute 13:51:36.046655 line       497                             i, j,
excute 13:51:36.049647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.052639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:36.056628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:36.060617 line       494                         if (i == j):
excute 13:51:36.064607 line       496                         i_j_list.append((
excute 13:51:36.067599 line       497                             i, j,
excute 13:51:36.071588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.076578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1)]
excute 13:51:36.079567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:36.083557 line       494                         if (i == j):
excute 13:51:36.087581 line       496                         i_j_list.append((
excute 13:51:36.091567 line       497                             i, j,
excute 13:51:36.094559 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.098551 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0)]
excute 13:51:36.101540 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:36.105530 line       494                         if (i == j):
excute 13:51:36.109519 line       496                         i_j_list.append((
excute 13:51:36.113477 line       497                             i, j,
excute 13:51:36.116500 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.119495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2)]
excute 13:51:36.123481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:36.127452 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:36.130465 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:36.134421 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:36.138411 line       494                         if (i == j):
excute 13:51:36.142401 line       496                         i_j_list.append((
excute 13:51:36.146390 line       497                             i, j,
excute 13:51:36.150379 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.154368 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0)]
excute 13:51:36.158356 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:36.161349 line       494                         if (i == j):
excute 13:51:36.165337 line       496                         i_j_list.append((
excute 13:51:36.169327 line       497                             i, j,
excute 13:51:36.172319 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.176309 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:51:36.179300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:36.183290 line       494                         if (i == j):
excute 13:51:36.187280 line       495                             continue
excute 13:51:36.191303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:36.194295 line       494                         if (i == j):
excute 13:51:36.198282 line       496                         i_j_list.append((
excute 13:51:36.202273 line       497                             i, j,
excute 13:51:36.205262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.209233 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:36.212244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:36.216235 line       494                         if (i == j):
excute 13:51:36.220211 line       496                         i_j_list.append((
excute 13:51:36.223218 line       497                             i, j,
excute 13:51:36.226210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.230166 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1)]
excute 13:51:36.233158 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:36.238144 line       494                         if (i == j):
excute 13:51:36.242135 line       496                         i_j_list.append((
excute 13:51:36.245127 line       497                             i, j,
excute 13:51:36.249115 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.253105 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0)]
excute 13:51:36.257093 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:36.261086 line       494                         if (i == j):
excute 13:51:36.265073 line       496                         i_j_list.append((
excute 13:51:36.269093 line       497                             i, j,
excute 13:51:36.272085 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.276051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:36.279068 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:36.283025 line       494                         if (i == j):
excute 13:51:36.288013 line       496                         i_j_list.append((
excute 13:51:36.295990 line       497                             i, j,
excute 13:51:36.299979 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.303967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1)]
excute 13:51:36.307957 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:36.313975 line       494                         if (i == j):
excute 13:51:36.317965 line       496                         i_j_list.append((
excute 13:51:36.321954 line       497                             i, j,
excute 13:51:36.325910 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.333892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0)]
excute 13:51:36.337878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:36.342864 line       494                         if (i == j):
excute 13:51:36.346856 line       496                         i_j_list.append((
excute 13:51:36.350843 line       497                             i, j,
excute 13:51:36.354863 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.358820 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2)]
excute 13:51:36.361812 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:36.367798 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:36.372783 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:36.379769 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:36.385749 line       494                         if (i == j):
excute 13:51:36.391734 line       496                         i_j_list.append((
excute 13:51:36.399712 line       497                             i, j,
excute 13:51:36.405696 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.413676 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0)]
excute 13:51:36.418661 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:36.422650 line       494                         if (i == j):
excute 13:51:36.427638 line       496                         i_j_list.append((
excute 13:51:36.433623 line       497                             i, j,
excute 13:51:36.437611 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.442598 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0)]
excute 13:51:36.446587 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:36.455566 line       494                         if (i == j):
excute 13:51:36.464539 line       496                         i_j_list.append((
excute 13:51:36.474512 line       497                             i, j,
excute 13:51:36.478505 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.484485 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0)]
excute 13:51:36.489473 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:36.499447 line       494                         if (i == j):
excute 13:51:36.509418 line       495                             continue
excute 13:51:36.517398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:36.525376 line       494                         if (i == j):
excute 13:51:36.533355 line       496                         i_j_list.append((
excute 13:51:36.539338 line       497                             i, j,
excute 13:51:36.545323 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.550309 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1)]
excute 13:51:36.558288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:36.566267 line       494                         if (i == j):
excute 13:51:36.573248 line       496                         i_j_list.append((
excute 13:51:36.581227 line       497                             i, j,
excute 13:51:36.587211 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.595188 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0)]
excute 13:51:36.600175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:36.608154 line       494                         if (i == j):
excute 13:51:36.615136 line       496                         i_j_list.append((
excute 13:51:36.624112 line       497                             i, j,
excute 13:51:36.631094 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.640069 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0)]
excute 13:51:36.648049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:36.657028 line       494                         if (i == j):
excute 13:51:36.666000 line       496                         i_j_list.append((
excute 13:51:36.672982 line       497                             i, j,
excute 13:51:36.678964 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.684950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1)]
excute 13:51:36.691930 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:36.698912 line       494                         if (i == j):
excute 13:51:36.706892 line       496                         i_j_list.append((
excute 13:51:36.715866 line       497                             i, j,
excute 13:51:36.721850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.728831 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0)]
excute 13:51:36.736811 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:36.744791 line       494                         if (i == j):
excute 13:51:36.756759 line       496                         i_j_list.append((
excute 13:51:36.764738 line       497                             i, j,
excute 13:51:36.770719 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.777700 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2)]
excute 13:51:36.783687 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:36.789669 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:36.796650 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:36.804630 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:36.812609 line       494                         if (i == j):
excute 13:51:36.819589 line       496                         i_j_list.append((
excute 13:51:36.823579 line       497                             i, j,
excute 13:51:36.827567 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.831557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0)]
excute 13:51:36.835547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:36.838538 line       494                         if (i == j):
excute 13:51:36.842527 line       496                         i_j_list.append((
excute 13:51:36.846516 line       497                             i, j,
excute 13:51:36.849509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.853498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:51:36.857487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:36.860479 line       494                         if (i == j):
excute 13:51:36.864468 line       496                         i_j_list.append((
excute 13:51:36.868458 line       497                             i, j,
excute 13:51:36.871452 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.875439 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:51:36.878431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:36.882421 line       494                         if (i == j):
excute 13:51:36.886410 line       496                         i_j_list.append((
excute 13:51:36.889402 line       497                             i, j,
excute 13:51:36.893392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.896383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:51:36.900373 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:36.903364 line       494                         if (i == j):
excute 13:51:36.907354 line       495                             continue
excute 13:51:36.911343 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:36.914337 line       494                         if (i == j):
excute 13:51:36.919324 line       496                         i_j_list.append((
excute 13:51:36.923312 line       497                             i, j,
excute 13:51:36.926303 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.929295 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:51:36.933285 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:36.937307 line       494                         if (i == j):
excute 13:51:36.941299 line       496                         i_j_list.append((
excute 13:51:36.944290 line       497                             i, j,
excute 13:51:36.948245 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.953231 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:51:36.956223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:36.960212 line       494                         if (i == j):
excute 13:51:36.968194 line       496                         i_j_list.append((
excute 13:51:36.972213 line       497                             i, j,
excute 13:51:36.975204 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:36.979193 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1)]
excute 13:51:36.983151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:36.987144 line       494                         if (i == j):
excute 13:51:36.991131 line       496                         i_j_list.append((
excute 13:51:36.994154 line       497                             i, j,
excute 13:51:36.998143 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.002134 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0)]
excute 13:51:37.005127 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:37.010114 line       494                         if (i == j):
excute 13:51:37.014102 line       496                         i_j_list.append((
excute 13:51:37.018060 line       497                             i, j,
excute 13:51:37.022048 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.025072 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2)]
excute 13:51:37.029064 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:37.033021 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:37.036042 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:37.040034 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:37.044020 line       494                         if (i == j):
excute 13:51:37.048014 line       496                         i_j_list.append((
excute 13:51:37.051002 line       497                             i, j,
excute 13:51:37.054991 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.058982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0)]
excute 13:51:37.061941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:37.065930 line       494                         if (i == j):
excute 13:51:37.069920 line       496                         i_j_list.append((
excute 13:51:37.075930 line       497                             i, j,
excute 13:51:37.079894 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.082916 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:51:37.086875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:37.089898 line       494                         if (i == j):
excute 13:51:37.093887 line       496                         i_j_list.append((
excute 13:51:37.097877 line       497                             i, j,
excute 13:51:37.100872 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.104858 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:51:37.108816 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:37.111842 line       494                         if (i == j):
excute 13:51:37.115829 line       496                         i_j_list.append((
excute 13:51:37.120784 line       497                             i, j,
excute 13:51:37.123808 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.127766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:37.130789 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:37.134747 line       494                         if (i == j):
excute 13:51:37.138735 line       496                         i_j_list.append((
excute 13:51:37.142726 line       497                             i, j,
excute 13:51:37.145716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.148709 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1)]
excute 13:51:37.152698 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:37.156689 line       494                         if (i == j):
excute 13:51:37.160680 line       495                             continue
excute 13:51:37.163669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:37.167659 line       494                         if (i == j):
excute 13:51:37.171648 line       496                         i_j_list.append((
excute 13:51:37.174673 line       497                             i, j,
excute 13:51:37.177669 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.181652 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0)]
excute 13:51:37.185610 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:37.189601 line       494                         if (i == j):
excute 13:51:37.192623 line       496                         i_j_list.append((
excute 13:51:37.196616 line       497                             i, j,
excute 13:51:37.200572 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.203594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1)]
excute 13:51:37.206586 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:37.210575 line       494                         if (i == j):
excute 13:51:37.214565 line       496                         i_j_list.append((
excute 13:51:37.218523 line       497                             i, j,
excute 13:51:37.223551 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.226545 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0)]
excute 13:51:37.230534 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:37.234537 line       494                         if (i == j):
excute 13:51:37.238513 line       496                         i_j_list.append((
excute 13:51:37.241505 line       497                             i, j,
excute 13:51:37.245494 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.248487 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2)]
excute 13:51:37.251479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:37.256466 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:37.260456 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:37.264476 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:37.268471 line       494                         if (i == j):
excute 13:51:37.272424 line       496                         i_j_list.append((
excute 13:51:37.276414 line       497                             i, j,
excute 13:51:37.280402 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.283425 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0)]
excute 13:51:37.287394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:37.291373 line       494                         if (i == j):
excute 13:51:37.295361 line       496                         i_j_list.append((
excute 13:51:37.298353 line       497                             i, j,
excute 13:51:37.302343 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.305335 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0)]
excute 13:51:37.309324 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:37.312316 line       494                         if (i == j):
excute 13:51:37.316306 line       496                         i_j_list.append((
excute 13:51:37.320296 line       497                             i, j,
excute 13:51:37.324285 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.331267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0)]
excute 13:51:37.340245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:37.344233 line       494                         if (i == j):
excute 13:51:37.349219 line       496                         i_j_list.append((
excute 13:51:37.356199 line       497                             i, j,
excute 13:51:37.359190 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.367170 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0)]
excute 13:51:37.374151 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:37.378140 line       494                         if (i == j):
excute 13:51:37.383128 line       496                         i_j_list.append((
excute 13:51:37.387116 line       497                             i, j,
excute 13:51:37.390108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.394099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1)]
excute 13:51:37.397090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:37.401080 line       494                         if (i == j):
excute 13:51:37.405070 line       496                         i_j_list.append((
excute 13:51:37.409058 line       497                             i, j,
excute 13:51:37.413047 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.417037 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0)]
excute 13:51:37.420029 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:37.425021 line       494                         if (i == j):
excute 13:51:37.430007 line       495                             continue
excute 13:51:37.433992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:37.436982 line       494                         if (i == j):
excute 13:51:37.440972 line       496                         i_j_list.append((
excute 13:51:37.443964 line       497                             i, j,
excute 13:51:37.447954 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.452940 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1)]
excute 13:51:37.456931 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:37.460919 line       494                         if (i == j):
excute 13:51:37.464909 line       496                         i_j_list.append((
excute 13:51:37.468898 line       497                             i, j,
excute 13:51:37.471921 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.474914 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0)]
excute 13:51:37.478870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:37.482860 line       494                         if (i == j):
excute 13:51:37.486849 line       496                         i_j_list.append((
excute 13:51:37.489841 line       497                             i, j,
excute 13:51:37.493830 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.496823 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2)]
excute 13:51:37.500812 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:37.504801 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:37.507793 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:37.511782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:37.515772 line       494                         if (i == j):
excute 13:51:37.519763 line       496                         i_j_list.append((
excute 13:51:37.522753 line       497                             i, j,
excute 13:51:37.526744 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.530734 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0)]
excute 13:51:37.533724 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:37.537713 line       494                         if (i == j):
excute 13:51:37.541703 line       496                         i_j_list.append((
excute 13:51:37.545692 line       497                             i, j,
excute 13:51:37.548684 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.552674 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:51:37.556664 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:37.560654 line       494                         if (i == j):
excute 13:51:37.563644 line       496                         i_j_list.append((
excute 13:51:37.567634 line       497                             i, j,
excute 13:51:37.570625 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.574615 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:37.577607 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:37.581628 line       494                         if (i == j):
excute 13:51:37.585617 line       496                         i_j_list.append((
excute 13:51:37.589607 line       497                             i, j,
excute 13:51:37.592598 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.596589 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:37.599579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:37.603571 line       494                         if (i == j):
excute 13:51:37.607559 line       496                         i_j_list.append((
excute 13:51:37.611549 line       497                             i, j,
excute 13:51:37.614541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.618529 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1)]
excute 13:51:37.621521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:37.625510 line       494                         if (i == j):
excute 13:51:37.629501 line       496                         i_j_list.append((
excute 13:51:37.634458 line       497                             i, j,
excute 13:51:37.638446 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.642436 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0)]
excute 13:51:37.645428 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:37.650413 line       494                         if (i == j):
excute 13:51:37.654418 line       496                         i_j_list.append((
excute 13:51:37.658393 line       497                             i, j,
excute 13:51:37.661385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.665374 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:37.669363 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:37.673354 line       494                         if (i == j):
excute 13:51:37.677353 line       495                             continue
excute 13:51:37.681331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:37.685321 line       494                         if (i == j):
excute 13:51:37.689341 line       496                         i_j_list.append((
excute 13:51:37.692332 line       497                             i, j,
excute 13:51:37.696304 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.699314 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:51:37.703303 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:37.707272 line       494                         if (i == j):
excute 13:51:37.711250 line       496                         i_j_list.append((
excute 13:51:37.714273 line       497                             i, j,
excute 13:51:37.718263 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.721255 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2)]
excute 13:51:37.725243 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:37.729234 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:37.736184 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:37.740174 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:37.744163 line       494                         if (i == j):
excute 13:51:37.748152 line       496                         i_j_list.append((
excute 13:51:37.751174 line       497                             i, j,
excute 13:51:37.755166 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.759153 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0)]
excute 13:51:37.763113 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:37.767101 line       494                         if (i == j):
excute 13:51:37.771090 line       496                         i_j_list.append((
excute 13:51:37.774081 line       497                             i, j,
excute 13:51:37.778072 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.781064 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0)]
excute 13:51:37.784055 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:37.788044 line       494                         if (i == j):
excute 13:51:37.792033 line       496                         i_j_list.append((
excute 13:51:37.796022 line       497                             i, j,
excute 13:51:37.799015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.802007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0)]
excute 13:51:37.805996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:37.809986 line       494                         if (i == j):
excute 13:51:37.813977 line       496                         i_j_list.append((
excute 13:51:37.816967 line       497                             i, j,
excute 13:51:37.820957 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.823948 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:51:37.827937 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:37.831928 line       494                         if (i == j):
excute 13:51:37.835922 line       496                         i_j_list.append((
excute 13:51:37.839938 line       497                             i, j,
excute 13:51:37.843927 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.846918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1)]
excute 13:51:37.850910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:37.854902 line       494                         if (i == j):
excute 13:51:37.858888 line       496                         i_j_list.append((
excute 13:51:37.862877 line       497                             i, j,
excute 13:51:37.865869 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.869825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0)]
excute 13:51:37.872849 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:37.876808 line       494                         if (i == j):
excute 13:51:37.880798 line       496                         i_j_list.append((
excute 13:51:37.884787 line       497                             i, j,
excute 13:51:37.888776 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.892766 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:51:37.896755 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:37.900745 line       494                         if (i == j):
excute 13:51:37.904734 line       496                         i_j_list.append((
excute 13:51:37.908723 line       497                             i, j,
excute 13:51:37.912712 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.916702 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1)]
excute 13:51:37.920691 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:37.924682 line       494                         if (i == j):
excute 13:51:37.928671 line       495                             continue
excute 13:51:37.931662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:37.935650 line       494                         if (i == j):
excute 13:51:37.939640 line       496                         i_j_list.append((
excute 13:51:37.944641 line       497                             i, j,
excute 13:51:37.948617 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.952606 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2)]
excute 13:51:37.956595 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:37.960585 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:37.965570 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:37.968593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:37.972584 line       494                         if (i == j):
excute 13:51:37.976554 line       496                         i_j_list.append((
excute 13:51:37.980563 line       497                             i, j,
excute 13:51:37.983554 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:37.987543 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 1, 0)]
excute 13:51:37.990535 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:37.994526 line       494                         if (i == j):
excute 13:51:37.998513 line       496                         i_j_list.append((
excute 13:51:38.002505 line       497                             i, j,
excute 13:51:38.005496 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:38.009457 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:51:38.013474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:38.017433 line       494                         if (i == j):
excute 13:51:38.021422 line       496                         i_j_list.append((
excute 13:51:38.025410 line       497                             i, j,
excute 13:51:38.028433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:38.032391 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:51:38.035415 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:38.039373 line       494                         if (i == j):
excute 13:51:38.043366 line       496                         i_j_list.append((
excute 13:51:38.048379 line       497                             i, j,
excute 13:51:38.052370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:38.056359 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:38.060318 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:38.064309 line       494                         if (i == j):
excute 13:51:38.068296 line       496                         i_j_list.append((
excute 13:51:38.071287 line       497                             i, j,
excute 13:51:38.076275 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:38.080265 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1)]
excute 13:51:38.083257 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:38.087246 line       494                         if (i == j):
excute 13:51:38.091236 line       496                         i_j_list.append((
excute 13:51:38.095225 line       497                             i, j,
excute 13:51:38.099212 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:38.102206 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0)]
excute 13:51:38.106195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:38.111183 line       494                         if (i == j):
excute 13:51:38.115173 line       496                         i_j_list.append((
excute 13:51:38.118163 line       497                             i, j,
excute 13:51:38.122153 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:38.126142 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:51:38.130131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:38.135119 line       494                         if (i == j):
excute 13:51:38.139107 line       496                         i_j_list.append((
excute 13:51:38.143097 line       497                             i, j,
excute 13:51:38.149080 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:38.153070 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 1)]
excute 13:51:38.157058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:38.161047 line       494                         if (i == j):
excute 13:51:38.165038 line       496                         i_j_list.append((
excute 13:51:38.169026 line       497                             i, j,
excute 13:51:38.173016 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:38.178999 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 1), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 1), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 2), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 1), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 1), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 2), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 2), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 1), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 4, 5, 1), (6, 5, 5, 0), (6, 7, 5, 1), (6, 8, 5, 0), (6, 9, 5, 2), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 1), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 2), (8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 1), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 2), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 1), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 1), (9, 8, 1, 0)]
excute 13:51:38.182988 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:38.186979 line       494                         if (i == j):
excute 13:51:38.189969 line       495                             continue
excute 13:51:38.193959 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:38.196951 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:38.200940 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 1, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 4, -1, 1), (8, 7, -1, 1), (8, 9, -1, 2), (0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 8, 0, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 8, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 6, 0, 0), (5, 8, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (0, 4, 0, 1), (0, 7, 0, 1), (2, 4, 0, 1), (2, 7, 0, 1), (5, 4, 0, 1), (5, 7, 0, 1), (7, 4, 0, 1), (0, 9, 0, 2), (2, 9, 0, 2), (5, 9, 0, 2), (7, 9, 0, 2), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 8, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 8, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 8, 1, 0), (1, 4, 1, 1), (1, 7, 1, 1), (4, 7, 1, 1), (9, 4, 1, 1), (9, 7, 1, 1), (1, 9, 1, 2), (4, 9, 1, 2), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 8, 2, 0), (3, 4, 2, 1), (3, 7, 2, 1), (3, 9, 2, 2), (6, 0, 5, 0), (6, 1, 5, 0), (6, 2, 5, 0), (6, 3, 5, 0), (6, 5, 5, 0), (6, 8, 5, 0), (6, 4, 5, 1), (6, 7, 5, 1), (6, 9, 5, 2)]
excute 13:51:38.203932 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:38.207922 line       505                     if (self.RELOCATE):
excute 13:51:38.211911 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:38.215906 line       505                     if (self.RELOCATE):
excute 13:51:38.219899 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:38.222884 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:51:38.226873 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:38.231859 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:38.235848 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.239845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 0)
excute 13:51:38.242830 line       556                     i = i_j[0]
excute 13:51:38.247818 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:38.251806 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.256793 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:51:38.260783 line       556                     i = i_j[0]
excute 13:51:38.267763 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:38.274743 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.278733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:38.282721 line       556                     i = i_j[0]
excute 13:51:38.287710 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:38.291699 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.295689 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:38.299678 line       556                     i = i_j[0]
excute 13:51:38.304666 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:38.308654 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.313646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:51:38.316633 line       556                     i = i_j[0]
excute 13:51:38.321619 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:38.325609 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.334585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 1)
excute 13:51:38.339573 line       556                     i = i_j[0]
excute 13:51:38.343561 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:38.347548 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.352538 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 1)
excute 13:51:38.357523 line       556                     i = i_j[0]
excute 13:51:38.361512 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:38.365504 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.369500 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 2)
excute 13:51:38.373481 line       556                     i = i_j[0]
excute 13:51:38.377503 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:38.380493 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.385449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:51:38.389468 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:38.393467 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:38.397448 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.401406 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:51:38.404429 line       556                     i = i_j[0]
excute 13:51:38.408418 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:38.412408 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.416398 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:51:38.420354 line       556                     i = i_j[0]
excute 13:51:38.423377 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:38.427367 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.431357 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:51:38.435345 line       556                     i = i_j[0]
excute 13:51:38.439337 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:38.442327 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.447298 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:51:38.450306 line       556                     i = i_j[0]
excute 13:51:38.455261 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:38.459282 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.466240 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:51:38.471231 line       556                     i = i_j[0]
excute 13:51:38.475208 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:38.478199 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.482190 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:38.486177 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:38.490168 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:38.494157 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.498146 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:38.502135 line       556                     i = i_j[0]
excute 13:51:38.506125 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:38.510115 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.514104 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:38.518094 line       556                     i = i_j[0]
excute 13:51:38.522084 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:38.526073 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.530062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:38.534051 line       556                     i = i_j[0]
excute 13:51:38.538041 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:38.543028 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.547018 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:38.551004 line       556                     i = i_j[0]
excute 13:51:38.554996 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:38.558984 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.564004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:38.566995 line       556                     i = i_j[0]
excute 13:51:38.570984 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:38.574973 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.578962 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:38.581953 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:38.585944 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:38.590931 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.594920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:38.597919 line       556                     i = i_j[0]
excute 13:51:38.602867 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:38.606855 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.614845 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:38.618824 line       556                     i = i_j[0]
excute 13:51:38.625806 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:38.628830 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.632786 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:38.636809 line       556                     i = i_j[0]
excute 13:51:38.640766 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:38.643789 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.647778 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:51:38.651768 line       556                     i = i_j[0]
excute 13:51:38.655759 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:38.659747 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.664702 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:38.667726 line       556                     i = i_j[0]
excute 13:51:38.671716 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:38.675704 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.679693 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:38.682684 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:38.686674 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:38.690649 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.694622 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:38.698610 line       556                     i = i_j[0]
excute 13:51:38.702599 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:38.706589 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.710579 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:38.713570 line       556                     i = i_j[0]
excute 13:51:38.717559 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:38.720551 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.725538 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:38.729527 line       556                     i = i_j[0]
excute 13:51:38.733549 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:38.736509 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.741495 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:38.744487 line       556                     i = i_j[0]
excute 13:51:38.748476 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:38.751469 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.756455 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:38.759447 line       556                     i = i_j[0]
excute 13:51:38.764437 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:38.769454 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.773443 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:38.777433 line       556                     i = i_j[0]
excute 13:51:38.781420 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:38.785409 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.789400 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 1)
excute 13:51:38.792392 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:38.796380 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:38.800371 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.804327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 1)
excute 13:51:38.807319 line       556                     i = i_j[0]
excute 13:51:38.811308 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:38.815298 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.819287 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 1)
excute 13:51:38.822279 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:38.826268 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:38.830257 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.834247 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 181
excute 13:51:38.838237 line       560                         if (t_tmp > self.TIME):
excute 13:51:38.842226 line       561                             time_over += 1
excute Modified var:.. time_over = 7
excute 13:51:38.845218 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 1)
excute 13:51:38.849207 line       556                     i = i_j[0]
excute 13:51:38.853206 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:38.857186 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.862174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 1)
excute 13:51:38.865165 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:38.870153 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:38.875138 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.879128 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 1)
excute 13:51:38.883117 line       556                     i = i_j[0]
excute 13:51:38.891095 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:38.894087 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.898076 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 189
excute 13:51:38.902066 line       560                         if (t_tmp > self.TIME):
excute 13:51:38.905057 line       561                             time_over += 1
excute Modified var:.. time_over = 8
excute 13:51:38.909047 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 1)
excute 13:51:38.913037 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:38.917026 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:38.921026 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.925009 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 2)
excute 13:51:38.927997 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:38.931997 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:38.935977 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.939966 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 2)
excute 13:51:38.942957 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:38.946947 line       557                     j = i_j[1]
excute 13:51:38.951933 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.955923 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 2)
excute 13:51:38.958915 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:38.962905 line       557                     j = i_j[1]
excute 13:51:38.966892 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.970883 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 2)
excute 13:51:38.975869 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:38.979858 line       557                     j = i_j[1]
excute 13:51:38.983848 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:38.986839 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:38.990828 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:38.994833 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:38.998808 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.001799 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:39.005788 line       556                     i = i_j[0]
excute 13:51:39.009778 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:39.013800 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.017789 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:39.020784 line       556                     i = i_j[0]
excute 13:51:39.024738 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:39.028728 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.032717 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:39.035709 line       556                     i = i_j[0]
excute 13:51:39.039698 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:39.043688 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.047678 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:39.051666 line       556                     i = i_j[0]
excute 13:51:39.056653 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:39.060643 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.064632 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:39.068622 line       556                     i = i_j[0]
excute 13:51:39.072612 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:39.077599 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.082585 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:51:39.085577 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:39.089565 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:39.093556 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.098544 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:51:39.101535 line       556                     i = i_j[0]
excute 13:51:39.105524 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:39.109513 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.113503 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:51:39.117492 line       556                     i = i_j[0]
excute 13:51:39.121480 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:39.125470 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.129459 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:51:39.132451 line       556                     i = i_j[0]
excute 13:51:39.136444 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:39.140428 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.144419 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:51:39.147410 line       556                     i = i_j[0]
excute 13:51:39.151400 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:39.155389 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.159386 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:51:39.162370 line       556                     i = i_j[0]
excute 13:51:39.166359 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:39.170351 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.174340 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:51:39.178330 line       556                     i = i_j[0]
excute 13:51:39.182319 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:39.185341 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.189330 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:39.193323 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:39.197279 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:39.201268 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.205288 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:39.208279 line       556                     i = i_j[0]
excute 13:51:39.212268 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:39.216258 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.220217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:39.223207 line       556                     i = i_j[0]
excute 13:51:39.227197 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:39.230189 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.234178 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:39.238167 line       556                     i = i_j[0]
excute 13:51:39.242158 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:39.245181 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.249139 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:39.253129 line       556                     i = i_j[0]
excute 13:51:39.257118 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:39.265096 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.269085 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:51:39.273076 line       556                     i = i_j[0]
excute 13:51:39.277066 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:39.283079 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.287070 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:39.291059 line       556                     i = i_j[0]
excute 13:51:39.296027 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:39.299007 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.302996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 1)
excute 13:51:39.306985 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:39.310975 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:39.314962 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.318952 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 1)
excute 13:51:39.322955 line       556                     i = i_j[0]
excute 13:51:39.327931 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:39.336926 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.340894 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 1)
excute 13:51:39.343885 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:39.347875 line       557                     j = i_j[1]
excute 13:51:39.353858 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.357849 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 1)
excute 13:51:39.361837 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:39.366824 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:39.370813 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.374802 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 1)
excute 13:51:39.377794 line       556                     i = i_j[0]
excute 13:51:39.382817 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:39.387770 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.392755 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 2)
excute 13:51:39.395748 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:39.400734 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:39.404724 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.409719 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 2)
excute 13:51:39.413699 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:39.417695 line       557                     j = i_j[1]
excute 13:51:39.421677 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.424701 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 187
excute 13:51:39.428689 line       560                         if (t_tmp > self.TIME):
excute 13:51:39.432649 line       561                             time_over += 1
excute Modified var:.. time_over = 9
excute 13:51:39.435672 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 2, 0)
excute 13:51:39.439661 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:39.443650 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:39.448608 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.452596 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 2, 0)
excute 13:51:39.456586 line       556                     i = i_j[0]
excute 13:51:39.460575 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:39.464564 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.468553 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 2, 0)
excute 13:51:39.472543 line       556                     i = i_j[0]
excute 13:51:39.476532 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:39.481531 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.485509 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 2, 0)
excute 13:51:39.489497 line       556                     i = i_j[0]
excute 13:51:39.493486 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:39.497476 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.501466 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 2, 0)
excute 13:51:39.504456 line       556                     i = i_j[0]
excute 13:51:39.508446 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:39.513432 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.517423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 2, 0)
excute 13:51:39.520413 line       556                     i = i_j[0]
excute 13:51:39.524404 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:39.528393 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.532383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 2, 1)
excute 13:51:39.536372 line       556                     i = i_j[0]
excute 13:51:39.540361 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:39.544350 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.549338 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 2, 1)
excute 13:51:39.552329 line       556                     i = i_j[0]
excute 13:51:39.557317 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:39.560308 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.564297 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 2, 2)
excute 13:51:39.568287 line       556                     i = i_j[0]
excute 13:51:39.573275 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:39.577263 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.581253 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 182
excute 13:51:39.585257 line       560                         if (t_tmp > self.TIME):
excute 13:51:39.590231 line       561                             time_over += 1
excute Modified var:.. time_over = 10
excute 13:51:39.593218 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 5, 0)
excute 13:51:39.597207 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:39.601196 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:39.605186 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.610173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 5, 0)
excute 13:51:39.614162 line       556                     i = i_j[0]
excute 13:51:39.618154 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:39.622143 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.626132 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 5, 0)
excute 13:51:39.630121 line       556                     i = i_j[0]
excute 13:51:39.634111 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:39.638098 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.642089 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 5, 0)
excute 13:51:39.646079 line       556                     i = i_j[0]
excute 13:51:39.649069 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:39.653058 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.657049 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 5, 0)
excute 13:51:39.661039 line       556                     i = i_j[0]
excute 13:51:39.665030 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:39.669018 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.673006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 5, 0)
excute 13:51:39.676996 line       556                     i = i_j[0]
excute 13:51:39.680985 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:39.683978 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.688963 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 5, 1)
excute 13:51:39.693950 line       556                     i = i_j[0]
excute 13:51:39.697939 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:39.701928 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.705919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 5, 1)
excute 13:51:39.709913 line       556                     i = i_j[0]
excute 13:51:39.713898 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:39.716888 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.720886 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 5, 2)
excute 13:51:39.723869 line       556                     i = i_j[0]
excute 13:51:39.728858 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:39.732846 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:39.737835 line       555                 for i_j in i_j_list:
excute 13:51:39.741823 line       581             self.write_matrix(
excute 13:51:39.745812 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:39.749801 line       583                 result_file_path,
excute 13:51:39.753791 line       584                 mode='a'
excute 13:51:39.760772 line       488         for t in time_steps:
excute Modified var:.. t = 175
excute 13:51:39.764761 line       489             if (t != self.TIME + 1):
excute 13:51:39.771744 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:39.775732 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:39.779720 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:39.784707 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:39.788697 line       494                         if (i == j):
excute 13:51:39.792686 line       495                             continue
excute 13:51:39.798672 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:39.804653 line       494                         if (i == j):
excute 13:51:39.809641 line       496                         i_j_list.append((
excute 13:51:39.814627 line       497                             i, j,
excute 13:51:39.818617 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:39.827596 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1)]
excute 13:51:39.837564 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:39.844550 line       494                         if (i == j):
excute 13:51:39.848536 line       496                         i_j_list.append((
excute 13:51:39.852527 line       497                             i, j,
excute 13:51:39.857515 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:39.863495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0)]
excute 13:51:39.867488 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:39.874467 line       494                         if (i == j):
excute 13:51:39.880451 line       496                         i_j_list.append((
excute 13:51:39.885438 line       497                             i, j,
excute 13:51:39.890424 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:39.894415 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:51:39.901396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:39.905383 line       494                         if (i == j):
excute 13:51:39.909373 line       496                         i_j_list.append((
excute 13:51:39.913362 line       497                             i, j,
excute 13:51:39.918351 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:39.921341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:51:39.924333 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:39.928323 line       494                         if (i == j):
excute 13:51:39.932332 line       496                         i_j_list.append((
excute 13:51:39.936301 line       497                             i, j,
excute 13:51:39.939293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:39.942285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:51:39.954565 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:39.958554 line       494                         if (i == j):
excute 13:51:39.965535 line       496                         i_j_list.append((
excute 13:51:39.970523 line       497                             i, j,
excute 13:51:39.973513 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:39.976505 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:51:39.980494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:39.984486 line       494                         if (i == j):
excute 13:51:39.988474 line       496                         i_j_list.append((
excute 13:51:39.992464 line       497                             i, j,
excute 13:51:39.996453 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.000444 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1)]
excute 13:51:40.005429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:40.011414 line       494                         if (i == j):
excute 13:51:40.016401 line       496                         i_j_list.append((
excute 13:51:40.020388 line       497                             i, j,
excute 13:51:40.023381 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.027370 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0)]
excute 13:51:40.031360 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:40.035349 line       494                         if (i == j):
excute 13:51:40.039338 line       496                         i_j_list.append((
excute 13:51:40.043327 line       497                             i, j,
excute 13:51:40.048314 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.052302 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:51:40.057291 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:40.061281 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:40.064270 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:40.068259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:40.072248 line       494                         if (i == j):
excute 13:51:40.076238 line       496                         i_j_list.append((
excute 13:51:40.080229 line       497                             i, j,
excute 13:51:40.083221 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.087211 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0)]
excute 13:51:40.090203 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:40.095188 line       494                         if (i == j):
excute 13:51:40.098180 line       495                             continue
excute 13:51:40.102170 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:40.105161 line       494                         if (i == j):
excute 13:51:40.110151 line       496                         i_j_list.append((
excute 13:51:40.113139 line       497                             i, j,
excute 13:51:40.117129 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.120120 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:40.123112 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:40.127101 line       494                         if (i == j):
excute 13:51:40.131091 line       496                         i_j_list.append((
excute 13:51:40.135081 line       497                             i, j,
excute 13:51:40.138073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.142061 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:40.145053 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:40.149044 line       494                         if (i == j):
excute 13:51:40.153032 line       496                         i_j_list.append((
excute 13:51:40.157023 line       497                             i, j,
excute 13:51:40.160014 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.164005 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:40.167992 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:40.175972 line       494                         if (i == j):
excute 13:51:40.179961 line       496                         i_j_list.append((
excute 13:51:40.183952 line       497                             i, j,
excute 13:51:40.188938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.192929 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:40.196947 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:40.200908 line       494                         if (i == j):
excute 13:51:40.204927 line       496                         i_j_list.append((
excute 13:51:40.207918 line       497                             i, j,
excute 13:51:40.212873 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.215897 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:40.218888 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:40.222879 line       494                         if (i == j):
excute 13:51:40.226868 line       496                         i_j_list.append((
excute 13:51:40.230857 line       497                             i, j,
excute 13:51:40.233849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.237837 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1)]
excute 13:51:40.240829 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:40.244788 line       494                         if (i == j):
excute 13:51:40.248779 line       496                         i_j_list.append((
excute 13:51:40.251801 line       497                             i, j,
excute 13:51:40.255791 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.259748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0)]
excute 13:51:40.265732 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:40.272713 line       494                         if (i == j):
excute 13:51:40.280723 line       496                         i_j_list.append((
excute 13:51:40.284683 line       497                             i, j,
excute 13:51:40.288671 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.292662 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:51:40.296650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:40.300644 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:40.303661 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:40.307620 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:40.311609 line       494                         if (i == j):
excute 13:51:40.315634 line       496                         i_j_list.append((
excute 13:51:40.319619 line       497                             i, j,
excute 13:51:40.322610 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.326601 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0)]
excute 13:51:40.336543 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:40.343526 line       494                         if (i == j):
excute 13:51:40.347516 line       496                         i_j_list.append((
excute 13:51:40.352502 line       497                             i, j,
excute 13:51:40.356490 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.360479 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1)]
excute 13:51:40.364469 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:40.368459 line       494                         if (i == j):
excute 13:51:40.373446 line       495                             continue
excute 13:51:40.377434 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:40.380427 line       494                         if (i == j):
excute 13:51:40.386414 line       496                         i_j_list.append((
excute 13:51:40.389403 line       497                             i, j,
excute 13:51:40.393392 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.397382 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0)]
excute 13:51:40.401371 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:40.405358 line       494                         if (i == j):
excute 13:51:40.409348 line       496                         i_j_list.append((
excute 13:51:40.412342 line       497                             i, j,
excute 13:51:40.417328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.421350 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:40.424341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:40.428298 line       494                         if (i == j):
excute 13:51:40.432287 line       496                         i_j_list.append((
excute 13:51:40.435279 line       497                             i, j,
excute 13:51:40.439269 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.442260 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:40.446249 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:40.450240 line       494                         if (i == j):
excute 13:51:40.454227 line       496                         i_j_list.append((
excute 13:51:40.458218 line       497                             i, j,
excute 13:51:40.462208 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.466197 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:40.470186 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:40.475172 line       494                         if (i == j):
excute 13:51:40.479162 line       496                         i_j_list.append((
excute 13:51:40.483151 line       497                             i, j,
excute 13:51:40.486144 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.490133 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1)]
excute 13:51:40.493125 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:40.498111 line       494                         if (i == j):
excute 13:51:40.501103 line       496                         i_j_list.append((
excute 13:51:40.505093 line       497                             i, j,
excute 13:51:40.508084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.512074 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0)]
excute 13:51:40.515065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:40.520052 line       494                         if (i == j):
excute 13:51:40.524041 line       496                         i_j_list.append((
excute 13:51:40.527033 line       497                             i, j,
excute 13:51:40.531023 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.534015 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:51:40.538005 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:40.541994 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:40.545983 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:40.548975 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:40.552996 line       494                         if (i == j):
excute 13:51:40.556970 line       496                         i_j_list.append((
excute 13:51:40.559977 line       497                             i, j,
excute 13:51:40.563936 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.567925 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0)]
excute 13:51:40.571912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:40.575903 line       494                         if (i == j):
excute 13:51:40.578894 line       496                         i_j_list.append((
excute 13:51:40.582883 line       497                             i, j,
excute 13:51:40.585907 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.588900 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1)]
excute 13:51:40.592889 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:40.596847 line       494                         if (i == j):
excute 13:51:40.600869 line       496                         i_j_list.append((
excute 13:51:40.603859 line       497                             i, j,
excute 13:51:40.607849 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.610840 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0)]
excute 13:51:40.614798 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:40.618787 line       494                         if (i == j):
excute 13:51:40.622781 line       495                             continue
excute 13:51:40.629727 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:40.632721 line       494                         if (i == j):
excute 13:51:40.636711 line       496                         i_j_list.append((
excute 13:51:40.640699 line       497                             i, j,
excute 13:51:40.643691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.647680 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0)]
excute 13:51:40.650673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:40.654662 line       494                         if (i == j):
excute 13:51:40.658684 line       496                         i_j_list.append((
excute 13:51:40.662673 line       497                             i, j,
excute 13:51:40.665665 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.669653 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0)]
excute 13:51:40.672646 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:40.676638 line       494                         if (i == j):
excute 13:51:40.680624 line       496                         i_j_list.append((
excute 13:51:40.684582 line       497                             i, j,
excute 13:51:40.687609 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.690600 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0)]
excute 13:51:40.694588 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:40.698548 line       494                         if (i == j):
excute 13:51:40.702566 line       496                         i_j_list.append((
excute 13:51:40.706532 line       497                             i, j,
excute 13:51:40.709518 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.713506 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1)]
excute 13:51:40.717496 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:40.721500 line       494                         if (i == j):
excute 13:51:40.727468 line       496                         i_j_list.append((
excute 13:51:40.730491 line       497                             i, j,
excute 13:51:40.734481 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.737473 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0)]
excute 13:51:40.741463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:40.745419 line       494                         if (i == j):
excute 13:51:40.749409 line       496                         i_j_list.append((
excute 13:51:40.752401 line       497                             i, j,
excute 13:51:40.756390 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.759382 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0)]
excute 13:51:40.763372 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:40.767361 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:40.771350 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:40.775340 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:40.778331 line       494                         if (i == j):
excute 13:51:40.782322 line       496                         i_j_list.append((
excute 13:51:40.785313 line       497                             i, j,
excute 13:51:40.789302 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.792294 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0)]
excute 13:51:40.796284 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:40.800273 line       494                         if (i == j):
excute 13:51:40.803264 line       496                         i_j_list.append((
excute 13:51:40.807254 line       497                             i, j,
excute 13:51:40.810245 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.813238 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1)]
excute 13:51:40.817227 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:40.821217 line       494                         if (i == j):
excute 13:51:40.825207 line       496                         i_j_list.append((
excute 13:51:40.830194 line       497                             i, j,
excute 13:51:40.834184 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.838173 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0)]
excute 13:51:40.841165 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:40.846153 line       494                         if (i == j):
excute 13:51:40.850142 line       496                         i_j_list.append((
excute 13:51:40.854131 line       497                             i, j,
excute 13:51:40.857122 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.861112 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:51:40.865101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:40.869091 line       494                         if (i == j):
excute 13:51:40.873081 line       495                             continue
excute 13:51:40.877069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:40.880061 line       494                         if (i == j):
excute 13:51:40.885048 line       496                         i_j_list.append((
excute 13:51:40.888040 line       497                             i, j,
excute 13:51:40.892029 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.896017 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:51:40.899010 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:40.903998 line       494                         if (i == j):
excute 13:51:40.907987 line       496                         i_j_list.append((
excute 13:51:40.911976 line       497                             i, j,
excute 13:51:40.914968 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.918957 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:51:40.922946 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:40.926934 line       494                         if (i == j):
excute 13:51:40.931922 line       496                         i_j_list.append((
excute 13:51:40.934947 line       497                             i, j,
excute 13:51:40.938903 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.941896 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1)]
excute 13:51:40.945885 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:40.950870 line       494                         if (i == j):
excute 13:51:40.955893 line       496                         i_j_list.append((
excute 13:51:40.958884 line       497                             i, j,
excute 13:51:40.962870 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.965862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0)]
excute 13:51:40.969851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:40.973835 line       494                         if (i == j):
excute 13:51:40.977800 line       496                         i_j_list.append((
excute 13:51:40.980823 line       497                             i, j,
excute 13:51:40.983814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:40.987807 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:51:40.990798 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:40.994786 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:40.998758 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:41.001765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:41.005755 line       494                         if (i == j):
excute 13:51:41.009715 line       496                         i_j_list.append((
excute 13:51:41.013704 line       497                             i, j,
excute 13:51:41.017693 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.020685 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0)]
excute 13:51:41.024674 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:41.029662 line       494                         if (i == j):
excute 13:51:41.034647 line       496                         i_j_list.append((
excute 13:51:41.038638 line       497                             i, j,
excute 13:51:41.041629 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.045618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1)]
excute 13:51:41.049608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:41.054593 line       494                         if (i == j):
excute 13:51:41.058585 line       496                         i_j_list.append((
excute 13:51:41.061576 line       497                             i, j,
excute 13:51:41.065565 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.068557 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0)]
excute 13:51:41.072547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:41.076534 line       494                         if (i == j):
excute 13:51:41.080523 line       496                         i_j_list.append((
excute 13:51:41.085510 line       497                             i, j,
excute 13:51:41.089501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.096481 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:41.100471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:41.104461 line       494                         if (i == j):
excute 13:51:41.109447 line       496                         i_j_list.append((
excute 13:51:41.112470 line       497                             i, j,
excute 13:51:41.116427 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.119451 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:41.122443 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:41.126400 line       494                         if (i == j):
excute 13:51:41.130390 line       495                             continue
excute 13:51:41.134380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:41.141362 line       494                         if (i == j):
excute 13:51:41.145352 line       496                         i_j_list.append((
excute 13:51:41.149339 line       497                             i, j,
excute 13:51:41.152331 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.156320 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:51:41.159313 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:41.163302 line       494                         if (i == j):
excute 13:51:41.167291 line       496                         i_j_list.append((
excute 13:51:41.170284 line       497                             i, j,
excute 13:51:41.174272 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.177265 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1)]
excute 13:51:41.181254 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:41.185244 line       494                         if (i == j):
excute 13:51:41.189233 line       496                         i_j_list.append((
excute 13:51:41.193223 line       497                             i, j,
excute 13:51:41.196246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.200205 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0)]
excute 13:51:41.203230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:41.207186 line       494                         if (i == j):
excute 13:51:41.211176 line       496                         i_j_list.append((
excute 13:51:41.214201 line       497                             i, j,
excute 13:51:41.218190 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.221180 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:51:41.225169 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:41.229128 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:41.232151 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:41.236139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:41.241129 line       494                         if (i == j):
excute 13:51:41.245086 line       496                         i_j_list.append((
excute 13:51:41.249074 line       497                             i, j,
excute 13:51:41.253064 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.257051 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0)]
excute 13:51:41.262039 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:41.268054 line       494                         if (i == j):
excute 13:51:41.272045 line       496                         i_j_list.append((
excute 13:51:41.276003 line       497                             i, j,
excute 13:51:41.279026 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.282982 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1)]
excute 13:51:41.286009 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:41.289964 line       494                         if (i == j):
excute 13:51:41.294953 line       496                         i_j_list.append((
excute 13:51:41.298940 line       497                             i, j,
excute 13:51:41.301967 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.305953 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0)]
excute 13:51:41.309912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:41.315745 line       494                         if (i == j):
excute 13:51:41.319728 line       496                         i_j_list.append((
excute 13:51:41.322719 line       497                             i, j,
excute 13:51:41.326708 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.335660 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:51:41.340642 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:41.345629 line       494                         if (i == j):
excute 13:51:41.349615 line       496                         i_j_list.append((
excute 13:51:41.354636 line       497                             i, j,
excute 13:51:41.358623 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.361615 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:51:41.366571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:41.372558 line       494                         if (i == j):
excute 13:51:41.377541 line       496                         i_j_list.append((
excute 13:51:41.382528 line       497                             i, j,
excute 13:51:41.387515 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.394495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:51:41.398487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:41.405467 line       494                         if (i == j):
excute 13:51:41.410457 line       495                             continue
excute 13:51:41.415439 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:41.422421 line       494                         if (i == j):
excute 13:51:41.427408 line       496                         i_j_list.append((
excute 13:51:41.435386 line       497                             i, j,
excute 13:51:41.439377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.445360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1)]
excute 13:51:41.479271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:41.487248 line       494                         if (i == j):
excute 13:51:41.501223 line       496                         i_j_list.append((
excute 13:51:41.509190 line       497                             i, j,
excute 13:51:41.517168 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.525147 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0)]
excute 13:51:41.532128 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:41.539110 line       494                         if (i == j):
excute 13:51:41.545098 line       496                         i_j_list.append((
excute 13:51:41.552075 line       497                             i, j,
excute 13:51:41.558058 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.566037 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:51:41.574016 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:41.580997 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:41.588975 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:41.594960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:41.601942 line       494                         if (i == j):
excute 13:51:41.607926 line       496                         i_j_list.append((
excute 13:51:41.614907 line       497                             i, j,
excute 13:51:41.620892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.627871 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0)]
excute 13:51:41.634852 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:41.642832 line       494                         if (i == j):
excute 13:51:41.647821 line       496                         i_j_list.append((
excute 13:51:41.655798 line       497                             i, j,
excute 13:51:41.664774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.669760 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1)]
excute 13:51:41.675744 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:41.684720 line       494                         if (i == j):
excute 13:51:41.690704 line       496                         i_j_list.append((
excute 13:51:41.699680 line       497                             i, j,
excute 13:51:41.705663 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.713642 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0)]
excute 13:51:41.721621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:41.730597 line       494                         if (i == j):
excute 13:51:41.738577 line       496                         i_j_list.append((
excute 13:51:41.747552 line       497                             i, j,
excute 13:51:41.755531 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.764507 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:41.771489 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:41.778471 line       494                         if (i == j):
excute 13:51:41.784453 line       496                         i_j_list.append((
excute 13:51:41.789441 line       497                             i, j,
excute 13:51:41.795426 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.802405 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:41.808389 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:41.816369 line       494                         if (i == j):
excute 13:51:41.823350 line       496                         i_j_list.append((
excute 13:51:41.830332 line       497                             i, j,
excute 13:51:41.834322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.837311 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:41.841300 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:41.845290 line       494                         if (i == j):
excute 13:51:41.849279 line       496                         i_j_list.append((
excute 13:51:41.853269 line       497                             i, j,
excute 13:51:41.856261 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.861251 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:41.864239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:41.868229 line       494                         if (i == j):
excute 13:51:41.872219 line       495                             continue
excute 13:51:41.875210 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:41.879199 line       494                         if (i == j):
excute 13:51:41.883190 line       496                         i_j_list.append((
excute 13:51:41.887179 line       497                             i, j,
excute 13:51:41.890171 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.894160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:51:41.898149 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:41.902139 line       494                         if (i == j):
excute 13:51:41.906129 line       496                         i_j_list.append((
excute 13:51:41.909120 line       497                             i, j,
excute 13:51:41.913109 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.917098 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:51:41.921087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:41.925079 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:41.928071 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:41.932060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:41.937048 line       494                         if (i == j):
excute 13:51:41.941036 line       496                         i_j_list.append((
excute 13:51:41.945024 line       497                             i, j,
excute 13:51:41.949013 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.953003 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0)]
excute 13:51:41.956993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:41.961980 line       494                         if (i == j):
excute 13:51:41.966966 line       496                         i_j_list.append((
excute 13:51:41.970954 line       497                             i, j,
excute 13:51:41.973947 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:41.977937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1)]
excute 13:51:41.981926 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:41.989904 line       494                         if (i == j):
excute 13:51:41.993892 line       496                         i_j_list.append((
excute 13:51:41.997882 line       497                             i, j,
excute 13:51:42.000874 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.004863 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0)]
excute 13:51:42.007855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:42.012853 line       494                         if (i == j):
excute 13:51:42.016832 line       496                         i_j_list.append((
excute 13:51:42.019823 line       497                             i, j,
excute 13:51:42.023812 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.027818 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0)]
excute 13:51:42.030794 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:42.034783 line       494                         if (i == j):
excute 13:51:42.038773 line       496                         i_j_list.append((
excute 13:51:42.041765 line       497                             i, j,
excute 13:51:42.045754 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.048746 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0)]
excute 13:51:42.052735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:42.056726 line       494                         if (i == j):
excute 13:51:42.060714 line       496                         i_j_list.append((
excute 13:51:42.063706 line       497                             i, j,
excute 13:51:42.068692 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.071684 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0)]
excute 13:51:42.075676 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:42.080662 line       494                         if (i == j):
excute 13:51:42.084653 line       496                         i_j_list.append((
excute 13:51:42.087644 line       497                             i, j,
excute 13:51:42.091633 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.095623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0)]
excute 13:51:42.099617 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:42.103601 line       494                         if (i == j):
excute 13:51:42.107621 line       496                         i_j_list.append((
excute 13:51:42.110612 line       497                             i, j,
excute 13:51:42.114602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.117594 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1)]
excute 13:51:42.121583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:42.125543 line       494                         if (i == j):
excute 13:51:42.129536 line       495                             continue
excute 13:51:42.133520 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:42.136511 line       494                         if (i == j):
excute 13:51:42.140500 line       496                         i_j_list.append((
excute 13:51:42.144502 line       497                             i, j,
excute 13:51:42.147482 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.150474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0)]
excute 13:51:42.154463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:42.158455 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:42.162445 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:42.166433 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:42.172417 line       494                         if (i == j):
excute 13:51:42.175439 line       496                         i_j_list.append((
excute 13:51:42.179428 line       497                             i, j,
excute 13:51:42.182421 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.186410 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 1, 0)]
excute 13:51:42.189402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:42.194357 line       494                         if (i == j):
excute 13:51:42.197380 line       496                         i_j_list.append((
excute 13:51:42.201372 line       497                             i, j,
excute 13:51:42.204362 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.208353 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 1)]
excute 13:51:42.211343 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:42.215333 line       494                         if (i == j):
excute 13:51:42.219322 line       496                         i_j_list.append((
excute 13:51:42.223311 line       497                             i, j,
excute 13:51:42.226305 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.230293 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0)]
excute 13:51:42.234265 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:42.237274 line       494                         if (i == j):
excute 13:51:42.241265 line       496                         i_j_list.append((
excute 13:51:42.245252 line       497                             i, j,
excute 13:51:42.248244 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.252234 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:42.256225 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:42.260182 line       494                         if (i == j):
excute 13:51:42.264170 line       496                         i_j_list.append((
excute 13:51:42.268160 line       497                             i, j,
excute 13:51:42.272149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.277135 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:42.281126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:42.285117 line       494                         if (i == j):
excute 13:51:42.289106 line       496                         i_j_list.append((
excute 13:51:42.293095 line       497                             i, j,
excute 13:51:42.297084 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.301073 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:42.305062 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:42.310051 line       494                         if (i == j):
excute 13:51:42.314038 line       496                         i_j_list.append((
excute 13:51:42.318028 line       497                             i, j,
excute 13:51:42.321053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.325040 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:51:42.332987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:42.339968 line       494                         if (i == j):
excute 13:51:42.343958 line       496                         i_j_list.append((
excute 13:51:42.346949 line       497                             i, j,
excute 13:51:42.350939 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.355927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 1)]
excute 13:51:42.359916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:42.364901 line       494                         if (i == j):
excute 13:51:42.369890 line       496                         i_j_list.append((
excute 13:51:42.372911 line       497                             i, j,
excute 13:51:42.377868 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:42.381857 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, -1, 0), (8, 1, -1, 1), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 7, -1, 1), (8, 9, -1, 0), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 1), (9, 8, 1, 0)]
excute 13:51:42.386875 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:42.390833 line       494                         if (i == j):
excute 13:51:42.394830 line       495                             continue
excute 13:51:42.398811 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:42.402832 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:42.405823 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(8, 0, -1, 0), (8, 2, -1, 0), (8, 3, -1, 0), (8, 4, -1, 0), (8, 5, -1, 0), (8, 6, -1, 0), (8, 9, -1, 0), (8, 1, -1, 1), (8, 7, -1, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (2, 0, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (5, 0, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (7, 0, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (0, 1, 0, 1), (0, 7, 0, 1), (2, 1, 0, 1), (2, 7, 0, 1), (5, 1, 0, 1), (5, 7, 0, 1), (7, 1, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (4, 0, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (9, 0, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 8, 1, 0), (1, 7, 1, 1), (4, 1, 1, 1), (4, 7, 1, 1), (9, 1, 1, 1), (9, 7, 1, 1), (3, 0, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (3, 1, 2, 1), (3, 7, 2, 1), (6, 0, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (6, 1, 4, 1), (6, 7, 4, 1)]
excute 13:51:42.409812 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:42.413803 line       505                     if (self.RELOCATE):
excute 13:51:42.418790 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:42.421780 line       505                     if (self.RELOCATE):
excute 13:51:42.425770 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:42.429727 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, -1, 0)
excute 13:51:42.432719 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:42.437709 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:42.441696 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.444689 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, -1, 0)
excute 13:51:42.449677 line       556                     i = i_j[0]
excute 13:51:42.454662 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:42.458652 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.462643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, -1, 0)
excute 13:51:42.466631 line       556                     i = i_j[0]
excute 13:51:42.471616 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:42.474610 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.480594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, -1, 0)
excute 13:51:42.484612 line       556                     i = i_j[0]
excute 13:51:42.488570 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:42.492570 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.496550 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, -1, 0)
excute 13:51:42.499573 line       556                     i = i_j[0]
excute 13:51:42.503531 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:42.506554 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.511509 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, -1, 0)
excute 13:51:42.514501 line       556                     i = i_j[0]
excute 13:51:42.518490 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:42.522488 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.526502 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, -1, 0)
excute 13:51:42.529493 line       556                     i = i_j[0]
excute 13:51:42.533483 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:42.537441 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.542428 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, -1, 1)
excute 13:51:42.546418 line       556                     i = i_j[0]
excute 13:51:42.550407 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:42.554396 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.558415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, -1, 1)
excute 13:51:42.562404 line       556                     i = i_j[0]
excute 13:51:42.566363 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:42.569354 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.573343 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:51:42.577333 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:42.584316 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:42.592295 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.600274 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:51:42.604262 line       556                     i = i_j[0]
excute 13:51:42.610247 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:42.613269 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.617239 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:51:42.621217 line       556                     i = i_j[0]
excute 13:51:42.625220 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:42.628228 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.632221 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:51:42.636207 line       556                     i = i_j[0]
excute 13:51:42.640167 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:42.644156 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.649144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:51:42.652135 line       556                     i = i_j[0]
excute 13:51:42.657134 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:42.661111 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.665100 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:51:42.669090 line       556                     i = i_j[0]
excute 13:51:42.673079 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:42.678065 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.682053 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:51:42.686043 line       556                     i = i_j[0]
excute 13:51:42.693024 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:42.697015 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.701034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:42.705024 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:42.708990 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:42.712972 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.716961 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:42.719986 line       556                     i = i_j[0]
excute 13:51:42.723973 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:42.727930 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.731919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:42.735909 line       556                     i = i_j[0]
excute 13:51:42.739899 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:42.743888 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.747877 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:42.750869 line       556                     i = i_j[0]
excute 13:51:42.755863 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:42.761841 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.767835 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:42.771813 line       556                     i = i_j[0]
excute 13:51:42.775841 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:42.778826 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.782816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:42.786805 line       556                     i = i_j[0]
excute 13:51:42.791760 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:42.795749 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.799740 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:42.802730 line       556                     i = i_j[0]
excute 13:51:42.806720 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:42.809712 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.813708 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:42.816693 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:42.820682 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:42.824672 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.828661 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:42.832650 line       556                     i = i_j[0]
excute 13:51:42.836641 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:42.840630 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.844619 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:42.847610 line       556                     i = i_j[0]
excute 13:51:42.851600 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:42.856588 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.860577 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:42.863569 line       556                     i = i_j[0]
excute 13:51:42.867557 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:42.871547 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.875537 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:51:42.879533 line       556                     i = i_j[0]
excute 13:51:42.883514 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:42.887504 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.891494 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:42.895514 line       556                     i = i_j[0]
excute 13:51:42.899504 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:42.903493 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.907452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:51:42.910474 line       556                     i = i_j[0]
excute 13:51:42.915430 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:42.918424 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.922412 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:42.926402 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:42.929394 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:42.933383 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.938368 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:42.941361 line       556                     i = i_j[0]
excute 13:51:42.946348 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:42.950371 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.955326 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:42.958316 line       556                     i = i_j[0]
excute 13:51:42.965300 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:42.970283 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.974272 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:42.977264 line       556                     i = i_j[0]
excute 13:51:42.981253 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:42.985245 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:42.989234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:42.994219 line       556                     i = i_j[0]
excute 13:51:42.998242 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:43.002197 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.006186 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:43.010176 line       556                     i = i_j[0]
excute 13:51:43.015165 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:43.018157 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.023144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:43.026133 line       556                     i = i_j[0]
excute 13:51:43.030122 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:43.034112 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.038102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:43.041093 line       556                     i = i_j[0]
excute 13:51:43.045082 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:43.049072 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.052063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 1)
excute 13:51:43.056053 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:43.060042 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:43.064045 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.068022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 1)
excute 13:51:43.072011 line       556                     i = i_j[0]
excute 13:51:43.076000 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:43.079991 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.083979 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 1)
excute 13:51:43.087970 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:43.091969 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:43.096945 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.101933 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 1)
excute 13:51:43.105919 line       556                     i = i_j[0]
excute 13:51:43.109909 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:43.112933 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.116922 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 191
excute 13:51:43.120912 line       560                         if (t_tmp > self.TIME):
excute 13:51:43.124902 line       561                             time_over += 1
excute Modified var:.. time_over = 11
excute 13:51:43.127861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 1)
excute 13:51:43.131850 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:43.136837 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:43.140826 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.144816 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 1)
excute 13:51:43.147808 line       556                     i = i_j[0]
excute 13:51:43.151797 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:43.155787 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.159776 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 1)
excute 13:51:43.162768 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:43.166757 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:43.170747 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.174748 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:43.177728 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:43.181717 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:43.185706 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.189695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:43.193685 line       556                     i = i_j[0]
excute 13:51:43.196677 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:43.202668 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.205653 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:43.209642 line       556                     i = i_j[0]
excute 13:51:43.213632 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:43.216624 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.220613 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:43.224602 line       556                     i = i_j[0]
excute 13:51:43.228593 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:43.235894 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.240912 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:43.244892 line       556                     i = i_j[0]
excute 13:51:43.248879 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:43.252868 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.260848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:43.268825 line       556                     i = i_j[0]
excute 13:51:43.272816 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:43.276807 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.280795 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:43.284783 line       556                     i = i_j[0]
excute 13:51:43.288780 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:43.292761 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.296752 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:43.299743 line       556                     i = i_j[0]
excute 13:51:43.304731 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:43.308720 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.312712 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:51:43.315701 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:43.319691 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:43.323680 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.329664 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:51:43.339637 line       556                     i = i_j[0]
excute 13:51:43.344625 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:43.348613 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.353601 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:51:43.358586 line       556                     i = i_j[0]
excute 13:51:43.366564 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:43.370555 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.374543 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:51:43.378532 line       556                     i = i_j[0]
excute 13:51:43.382526 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:43.387509 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.391504 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:51:43.395487 line       556                     i = i_j[0]
excute 13:51:43.399478 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:43.404465 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.409450 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:51:43.413440 line       556                     i = i_j[0]
excute 13:51:43.417430 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:43.421419 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.424409 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:51:43.428399 line       556                     i = i_j[0]
excute 13:51:43.432390 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:43.435381 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.439402 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:43.443392 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:43.447353 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:43.452338 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.456327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:43.460316 line       556                     i = i_j[0]
excute 13:51:43.465304 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:43.469292 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.473280 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:43.477270 line       556                     i = i_j[0]
excute 13:51:43.481260 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:43.485249 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.489239 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:43.493228 line       556                     i = i_j[0]
excute 13:51:43.497217 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:43.501206 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.505195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:43.511179 line       556                     i = i_j[0]
excute 13:51:43.515168 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:43.518159 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.522148 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:51:43.525140 line       556                     i = i_j[0]
excute 13:51:43.529129 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:43.533120 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.536111 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:43.540100 line       556                     i = i_j[0]
excute 13:51:43.544090 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:43.547082 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.551071 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 1)
excute 13:51:43.555060 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:43.559050 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:43.563039 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.567028 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 1)
excute 13:51:43.572018 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:43.576007 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:43.578997 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.583984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 1)
excute 13:51:43.587008 line       556                     i = i_j[0]
excute 13:51:43.590997 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:43.594986 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.598945 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 1)
excute 13:51:43.601967 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:43.605956 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:43.609946 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.614933 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 1)
excute 13:51:43.618922 line       556                     i = i_j[0]
excute 13:51:43.622881 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:43.625903 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.629892 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 2, 0)
excute 13:51:43.633882 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:43.637871 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:43.641860 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.645851 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 2, 0)
excute 13:51:43.649840 line       556                     i = i_j[0]
excute 13:51:43.654797 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:43.658784 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.661807 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 2, 0)
excute 13:51:43.666762 line       556                     i = i_j[0]
excute 13:51:43.669785 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:43.673777 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.677734 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 2, 0)
excute 13:51:43.680757 line       556                     i = i_j[0]
excute 13:51:43.684745 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:43.688741 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.692694 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 2, 0)
excute 13:51:43.695717 line       556                     i = i_j[0]
excute 13:51:43.699675 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:43.703695 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.707654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 2, 0)
excute 13:51:43.711643 line       556                     i = i_j[0]
excute 13:51:43.715636 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:43.719620 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.723610 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 2, 0)
excute 13:51:43.727600 line       556                     i = i_j[0]
excute 13:51:43.731589 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:43.734581 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.738569 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 2, 1)
excute 13:51:43.742559 line       556                     i = i_j[0]
excute 13:51:43.747547 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:43.750538 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.754528 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 184
excute 13:51:43.759515 line       560                         if (t_tmp > self.TIME):
excute 13:51:43.765499 line       561                             time_over += 1
excute Modified var:.. time_over = 12
excute 13:51:43.769487 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 2, 1)
excute 13:51:43.785448 line       556                     i = i_j[0]
excute 13:51:43.791430 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:43.798438 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.805392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 0)
excute 13:51:43.808384 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:43.812374 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:43.818358 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.824341 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:51:43.827333 line       556                     i = i_j[0]
excute 13:51:43.831321 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:43.835311 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.839302 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:51:43.843292 line       556                     i = i_j[0]
excute 13:51:43.848280 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:43.851270 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.856256 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:51:43.860246 line       556                     i = i_j[0]
excute 13:51:43.864234 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:43.867228 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.871217 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:51:43.875206 line       556                     i = i_j[0]
excute 13:51:43.879196 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:43.883185 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.888173 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:51:43.892159 line       556                     i = i_j[0]
excute 13:51:43.896149 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:43.899141 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.903130 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 0)
excute 13:51:43.907119 line       556                     i = i_j[0]
excute 13:51:43.911109 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:43.914101 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.918090 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 1)
excute 13:51:43.923078 line       556                     i = i_j[0]
excute 13:51:43.927067 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:43.931057 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.935060 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 1)
excute 13:51:43.938037 line       556                     i = i_j[0]
excute 13:51:43.942027 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:43.946047 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:43.950005 line       555                 for i_j in i_j_list:
excute 13:51:43.954992 line       581             self.write_matrix(
excute 13:51:43.957983 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:43.961974 line       583                 result_file_path,
excute 13:51:43.964965 line       584                 mode='a'
excute 13:51:43.971533 line       488         for t in time_steps:
excute Modified var:.. t = 176
excute 13:51:43.975503 line       489             if (t != self.TIME + 1):
excute 13:51:43.980489 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:43.983481 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:43.989465 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:43.996447 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:44.002432 line       494                         if (i == j):
excute 13:51:44.009412 line       495                             continue
excute 13:51:44.015396 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:44.018388 line       494                         if (i == j):
excute 13:51:44.026368 line       496                         i_j_list.append((
excute 13:51:44.030357 line       497                             i, j,
excute 13:51:44.033348 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.043330 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:51:44.054292 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:44.060277 line       494                         if (i == j):
excute 13:51:44.064266 line       496                         i_j_list.append((
excute 13:51:44.068255 line       497                             i, j,
excute 13:51:44.074239 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.078228 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:51:44.084211 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:44.088202 line       494                         if (i == j):
excute 13:51:44.093190 line       496                         i_j_list.append((
excute 13:51:44.096181 line       497                             i, j,
excute 13:51:44.102165 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.107151 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:51:44.111143 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:44.118125 line       494                         if (i == j):
excute 13:51:44.123110 line       496                         i_j_list.append((
excute 13:51:44.127098 line       497                             i, j,
excute 13:51:44.131086 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.135076 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:51:44.139065 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:44.143055 line       494                         if (i == j):
excute 13:51:44.148043 line       496                         i_j_list.append((
excute 13:51:44.152031 line       497                             i, j,
excute 13:51:44.156020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.160010 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:51:44.163999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:44.167989 line       494                         if (i == j):
excute 13:51:44.171978 line       496                         i_j_list.append((
excute 13:51:44.174970 line       497                             i, j,
excute 13:51:44.177962 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.181951 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:51:44.185940 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:44.189950 line       494                         if (i == j):
excute 13:51:44.192921 line       496                         i_j_list.append((
excute 13:51:44.196911 line       497                             i, j,
excute 13:51:44.200907 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.203894 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:51:44.207883 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:44.211873 line       494                         if (i == j):
excute 13:51:44.215863 line       496                         i_j_list.append((
excute 13:51:44.218852 line       497                             i, j,
excute 13:51:44.221845 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.225835 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:51:44.229826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:44.233814 line       494                         if (i == j):
excute 13:51:44.237803 line       496                         i_j_list.append((
excute 13:51:44.241790 line       497                             i, j,
excute 13:51:44.244783 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.247775 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1)]
excute 13:51:44.251765 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:44.255755 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:44.258746 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:44.263735 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:44.268721 line       494                         if (i == j):
excute 13:51:44.275701 line       496                         i_j_list.append((
excute 13:51:44.279690 line       497                             i, j,
excute 13:51:44.283679 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.286670 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0)]
excute 13:51:44.289662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:44.294650 line       494                         if (i == j):
excute 13:51:44.298638 line       495                             continue
excute 13:51:44.301633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:44.305621 line       494                         if (i == j):
excute 13:51:44.309611 line       496                         i_j_list.append((
excute 13:51:44.313600 line       497                             i, j,
excute 13:51:44.317589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.321579 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:44.324571 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:44.335542 line       494                         if (i == j):
excute 13:51:44.342523 line       496                         i_j_list.append((
excute 13:51:44.346512 line       497                             i, j,
excute 13:51:44.350501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.355489 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:44.359477 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:44.363468 line       494                         if (i == j):
excute 13:51:44.367455 line       496                         i_j_list.append((
excute 13:51:44.370448 line       497                             i, j,
excute 13:51:44.374437 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.377429 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:44.381449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:44.386404 line       494                         if (i == j):
excute 13:51:44.390425 line       496                         i_j_list.append((
excute 13:51:44.394415 line       497                             i, j,
excute 13:51:44.397406 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.401383 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:44.404390 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:44.408347 line       494                         if (i == j):
excute 13:51:44.412340 line       496                         i_j_list.append((
excute 13:51:44.415358 line       497                             i, j,
excute 13:51:44.419347 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.422339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:44.426329 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:44.430289 line       494                         if (i == j):
excute 13:51:44.434278 line       496                         i_j_list.append((
excute 13:51:44.438267 line       497                             i, j,
excute 13:51:44.442256 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.446253 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:51:44.450233 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:44.455254 line       494                         if (i == j):
excute 13:51:44.459223 line       496                         i_j_list.append((
excute 13:51:44.462233 line       497                             i, j,
excute 13:51:44.469183 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.472174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:51:44.475167 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:44.479156 line       494                         if (i == j):
excute 13:51:44.483145 line       496                         i_j_list.append((
excute 13:51:44.487135 line       497                             i, j,
excute 13:51:44.491124 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.495113 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1)]
excute 13:51:44.498105 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:44.502094 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:44.506084 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:44.510074 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:44.513065 line       494                         if (i == j):
excute 13:51:44.517054 line       496                         i_j_list.append((
excute 13:51:44.521044 line       497                             i, j,
excute 13:51:44.524069 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.527059 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0)]
excute 13:51:44.531049 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:44.535009 line       494                         if (i == j):
excute 13:51:44.538997 line       496                         i_j_list.append((
excute 13:51:44.542988 line       497                             i, j,
excute 13:51:44.548005 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.551974 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:51:44.555951 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:44.558974 line       494                         if (i == j):
excute 13:51:44.563931 line       495                             continue
excute 13:51:44.566953 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:44.570943 line       494                         if (i == j):
excute 13:51:44.574930 line       496                         i_j_list.append((
excute 13:51:44.577924 line       497                             i, j,
excute 13:51:44.580916 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.584907 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:44.587898 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:44.591887 line       494                         if (i == j):
excute 13:51:44.595845 line       496                         i_j_list.append((
excute 13:51:44.598836 line       497                             i, j,
excute 13:51:44.602825 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.605820 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:44.609808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:44.614794 line       494                         if (i == j):
excute 13:51:44.618783 line       496                         i_j_list.append((
excute 13:51:44.621775 line       497                             i, j,
excute 13:51:44.625764 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.628756 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:44.631748 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:44.636735 line       494                         if (i == j):
excute 13:51:44.640725 line       496                         i_j_list.append((
excute 13:51:44.643716 line       497                             i, j,
excute 13:51:44.647707 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.651728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:44.655685 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:44.658708 line       494                         if (i == j):
excute 13:51:44.662697 line       496                         i_j_list.append((
excute 13:51:44.666686 line       497                             i, j,
excute 13:51:44.670676 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.673669 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0)]
excute 13:51:44.677625 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:44.680651 line       494                         if (i == j):
excute 13:51:44.684639 line       496                         i_j_list.append((
excute 13:51:44.688630 line       497                             i, j,
excute 13:51:44.691588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.695577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:51:44.699570 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:44.704555 line       494                         if (i == j):
excute 13:51:44.709541 line       496                         i_j_list.append((
excute 13:51:44.712532 line       497                             i, j,
excute 13:51:44.716523 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.719514 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1)]
excute 13:51:44.723504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:44.727492 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:44.731482 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:44.734473 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:44.738463 line       494                         if (i == j):
excute 13:51:44.742456 line       496                         i_j_list.append((
excute 13:51:44.746444 line       497                             i, j,
excute 13:51:44.751428 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.754420 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0)]
excute 13:51:44.758409 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:44.763399 line       494                         if (i == j):
excute 13:51:44.768383 line       496                         i_j_list.append((
excute 13:51:44.771375 line       497                             i, j,
excute 13:51:44.775364 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.778356 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0)]
excute 13:51:44.782345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:44.785337 line       494                         if (i == j):
excute 13:51:44.790326 line       496                         i_j_list.append((
excute 13:51:44.794314 line       497                             i, j,
excute 13:51:44.797307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.805285 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0)]
excute 13:51:44.808276 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:44.812265 line       494                         if (i == j):
excute 13:51:44.816254 line       495                             continue
excute 13:51:44.820244 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:44.823236 line       494                         if (i == j):
excute 13:51:44.827226 line       496                         i_j_list.append((
excute 13:51:44.830218 line       497                             i, j,
excute 13:51:44.834206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.837199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0)]
excute 13:51:44.841188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:44.844180 line       494                         if (i == j):
excute 13:51:44.848169 line       496                         i_j_list.append((
excute 13:51:44.853156 line       497                             i, j,
excute 13:51:44.857146 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.860138 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0)]
excute 13:51:44.864128 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:44.868117 line       494                         if (i == j):
excute 13:51:44.872105 line       496                         i_j_list.append((
excute 13:51:44.875097 line       497                             i, j,
excute 13:51:44.879104 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.882079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0)]
excute 13:51:44.886069 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:44.889060 line       494                         if (i == j):
excute 13:51:44.893049 line       496                         i_j_list.append((
excute 13:51:44.897038 line       497                             i, j,
excute 13:51:44.900030 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.903023 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0)]
excute 13:51:44.907012 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:44.910004 line       494                         if (i == j):
excute 13:51:44.913993 line       496                         i_j_list.append((
excute 13:51:44.917982 line       497                             i, j,
excute 13:51:44.920975 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.924965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0)]
excute 13:51:44.927956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:44.931947 line       494                         if (i == j):
excute 13:51:44.934937 line       496                         i_j_list.append((
excute 13:51:44.938926 line       497                             i, j,
excute 13:51:44.941919 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.945921 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1)]
excute 13:51:44.950897 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:44.955882 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:44.959884 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:44.962862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:44.966852 line       494                         if (i == j):
excute 13:51:44.970842 line       496                         i_j_list.append((
excute 13:51:44.973833 line       497                             i, j,
excute 13:51:44.977828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:44.980815 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0)]
excute 13:51:44.984805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:44.988794 line       494                         if (i == j):
excute 13:51:44.991785 line       496                         i_j_list.append((
excute 13:51:44.995774 line       497                             i, j,
excute 13:51:44.998767 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.001759 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:51:45.005748 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:45.009750 line       494                         if (i == j):
excute 13:51:45.013727 line       496                         i_j_list.append((
excute 13:51:45.017716 line       497                             i, j,
excute 13:51:45.021705 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.024697 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:51:45.027690 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:45.031678 line       494                         if (i == j):
excute 13:51:45.035668 line       496                         i_j_list.append((
excute 13:51:45.039657 line       497                             i, j,
excute 13:51:45.042650 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.049631 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:51:45.053621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:45.059605 line       494                         if (i == j):
excute 13:51:45.063594 line       495                             continue
excute 13:51:45.067582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:45.070574 line       494                         if (i == j):
excute 13:51:45.074565 line       496                         i_j_list.append((
excute 13:51:45.078554 line       497                             i, j,
excute 13:51:45.082544 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.085536 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:51:45.089525 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:45.093514 line       494                         if (i == j):
excute 13:51:45.097504 line       496                         i_j_list.append((
excute 13:51:45.101493 line       497                             i, j,
excute 13:51:45.105482 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.109472 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:51:45.112494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:45.116454 line       494                         if (i == j):
excute 13:51:45.120444 line       496                         i_j_list.append((
excute 13:51:45.123465 line       497                             i, j,
excute 13:51:45.127456 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.130448 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:51:45.134437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:45.138395 line       494                         if (i == j):
excute 13:51:45.142416 line       496                         i_j_list.append((
excute 13:51:45.146406 line       497                             i, j,
excute 13:51:45.149395 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.153377 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:51:45.156377 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:45.161334 line       494                         if (i == j):
excute 13:51:45.165323 line       496                         i_j_list.append((
excute 13:51:45.169314 line       497                             i, j,
excute 13:51:45.172334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.175329 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1)]
excute 13:51:45.179316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:45.183274 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:45.186299 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:45.190287 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:45.194278 line       494                         if (i == j):
excute 13:51:45.198236 line       496                         i_j_list.append((
excute 13:51:45.201257 line       497                             i, j,
excute 13:51:45.205247 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.208239 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0)]
excute 13:51:45.212226 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:45.215222 line       494                         if (i == j):
excute 13:51:45.219210 line       496                         i_j_list.append((
excute 13:51:45.223201 line       497                             i, j,
excute 13:51:45.226192 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.230181 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:51:45.233171 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:45.237162 line       494                         if (i == j):
excute 13:51:45.241150 line       496                         i_j_list.append((
excute 13:51:45.245140 line       497                             i, j,
excute 13:51:45.248132 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.252122 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:51:45.256111 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:45.260070 line       494                         if (i == j):
excute 13:51:45.265057 line       496                         i_j_list.append((
excute 13:51:45.269047 line       497                             i, j,
excute 13:51:45.273036 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.276028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:45.280017 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:45.285004 line       494                         if (i == j):
excute 13:51:45.288994 line       496                         i_j_list.append((
excute 13:51:45.292982 line       497                             i, j,
excute 13:51:45.296971 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.300961 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:45.304948 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:45.308939 line       494                         if (i == j):
excute 13:51:45.312929 line       495                             continue
excute 13:51:45.316918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:45.320907 line       494                         if (i == j):
excute 13:51:45.325894 line       496                         i_j_list.append((
excute 13:51:45.333873 line       497                             i, j,
excute 13:51:45.339870 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.342881 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:51:45.346868 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:45.350828 line       494                         if (i == j):
excute 13:51:45.356810 line       496                         i_j_list.append((
excute 13:51:45.360799 line       497                             i, j,
excute 13:51:45.363791 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.368779 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:51:45.372799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:45.376763 line       494                         if (i == j):
excute 13:51:45.380747 line       496                         i_j_list.append((
excute 13:51:45.384767 line       497                             i, j,
excute 13:51:45.387759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.391748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:51:45.394740 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:45.413745 line       494                         if (i == j):
excute 13:51:45.418731 line       496                         i_j_list.append((
excute 13:51:45.421723 line       497                             i, j,
excute 13:51:45.425712 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.428704 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1)]
excute 13:51:45.432694 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:45.435686 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:45.439675 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:45.443671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:45.447656 line       494                         if (i == j):
excute 13:51:45.451647 line       496                         i_j_list.append((
excute 13:51:45.455635 line       497                             i, j,
excute 13:51:45.459623 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.463613 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0)]
excute 13:51:45.467602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:45.473585 line       494                         if (i == j):
excute 13:51:45.477574 line       496                         i_j_list.append((
excute 13:51:45.481565 line       497                             i, j,
excute 13:51:45.484555 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.487547 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0)]
excute 13:51:45.491536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:45.494528 line       494                         if (i == j):
excute 13:51:45.498517 line       496                         i_j_list.append((
excute 13:51:45.502507 line       497                             i, j,
excute 13:51:45.505499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.509522 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0)]
excute 13:51:45.512513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:45.517467 line       494                         if (i == j):
excute 13:51:45.521459 line       496                         i_j_list.append((
excute 13:51:45.527441 line       497                             i, j,
excute 13:51:45.531431 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.538411 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:51:45.542402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:45.547388 line       494                         if (i == j):
excute 13:51:45.551376 line       496                         i_j_list.append((
excute 13:51:45.555368 line       497                             i, j,
excute 13:51:45.559357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.562349 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:51:45.565341 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:45.569330 line       494                         if (i == j):
excute 13:51:45.575325 line       496                         i_j_list.append((
excute 13:51:45.578337 line       497                             i, j,
excute 13:51:45.582326 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.585318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:51:45.589277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:45.593266 line       494                         if (i == j):
excute 13:51:45.598251 line       495                             continue
excute 13:51:45.601245 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:45.605234 line       494                         if (i == j):
excute 13:51:45.609242 line       496                         i_j_list.append((
excute 13:51:45.612215 line       497                             i, j,
excute 13:51:45.616236 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.619231 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0)]
excute 13:51:45.623216 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:45.627175 line       494                         if (i == j):
excute 13:51:45.631197 line       496                         i_j_list.append((
excute 13:51:45.634187 line       497                             i, j,
excute 13:51:45.638182 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.641168 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0)]
excute 13:51:45.645157 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:45.649117 line       494                         if (i == j):
excute 13:51:45.653105 line       496                         i_j_list.append((
excute 13:51:45.657096 line       497                             i, j,
excute 13:51:45.661085 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.664077 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1)]
excute 13:51:45.668097 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:45.672085 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:45.677045 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:45.681030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:45.685021 line       494                         if (i == j):
excute 13:51:45.689010 line       496                         i_j_list.append((
excute 13:51:45.693000 line       497                             i, j,
excute 13:51:45.697020 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.700011 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0)]
excute 13:51:45.704000 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:45.707959 line       494                         if (i == j):
excute 13:51:45.711949 line       496                         i_j_list.append((
excute 13:51:45.714970 line       497                             i, j,
excute 13:51:45.718961 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.721952 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:51:45.725945 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:45.729901 line       494                         if (i == j):
excute 13:51:45.733890 line       496                         i_j_list.append((
excute 13:51:45.736913 line       497                             i, j,
excute 13:51:45.740901 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.744892 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:45.748867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:45.752840 line       494                         if (i == j):
excute 13:51:45.756862 line       496                         i_j_list.append((
excute 13:51:45.760820 line       497                             i, j,
excute 13:51:45.764807 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.768828 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:45.772785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:45.775811 line       494                         if (i == j):
excute 13:51:45.781761 line       496                         i_j_list.append((
excute 13:51:45.784753 line       497                             i, j,
excute 13:51:45.788742 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.791734 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:45.795726 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:45.799713 line       494                         if (i == j):
excute 13:51:45.802704 line       496                         i_j_list.append((
excute 13:51:45.806694 line       497                             i, j,
excute 13:51:45.809686 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.813675 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:45.816667 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:45.820658 line       494                         if (i == j):
excute 13:51:45.824646 line       496                         i_j_list.append((
excute 13:51:45.828645 line       497                             i, j,
excute 13:51:45.831627 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.834619 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:45.838608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:45.842598 line       494                         if (i == j):
excute 13:51:45.846587 line       495                             continue
excute 13:51:45.849579 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:45.853568 line       494                         if (i == j):
excute 13:51:45.857558 line       496                         i_j_list.append((
excute 13:51:45.860550 line       497                             i, j,
excute 13:51:45.864542 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.867531 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:51:45.870523 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:45.874512 line       494                         if (i == j):
excute 13:51:45.878502 line       496                         i_j_list.append((
excute 13:51:45.883522 line       497                             i, j,
excute 13:51:45.886512 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.890502 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1)]
excute 13:51:45.893494 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:45.897483 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:45.901473 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:45.905431 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:45.908455 line       494                         if (i == j):
excute 13:51:45.912443 line       496                         i_j_list.append((
excute 13:51:45.916432 line       497                             i, j,
excute 13:51:45.919425 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.923413 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0)]
excute 13:51:45.926406 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:45.930399 line       494                         if (i == j):
excute 13:51:45.934385 line       496                         i_j_list.append((
excute 13:51:45.938377 line       497                             i, j,
excute 13:51:45.941334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.945323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:51:45.949345 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:45.953303 line       494                         if (i == j):
excute 13:51:45.957291 line       496                         i_j_list.append((
excute 13:51:45.962286 line       497                             i, j,
excute 13:51:45.968262 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.972284 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:51:45.975275 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:45.980243 line       494                         if (i == j):
excute 13:51:45.985222 line       496                         i_j_list.append((
excute 13:51:45.989239 line       497                             i, j,
excute 13:51:45.993227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:45.996219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:51:46.000209 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:46.004167 line       494                         if (i == j):
excute 13:51:46.008156 line       496                         i_j_list.append((
excute 13:51:46.012177 line       497                             i, j,
excute 13:51:46.016134 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.019160 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:51:46.023148 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:46.027139 line       494                         if (i == j):
excute 13:51:46.031095 line       496                         i_j_list.append((
excute 13:51:46.034118 line       497                             i, j,
excute 13:51:46.038076 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.041099 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:51:46.045089 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:46.052289 line       494                         if (i == j):
excute 13:51:46.056281 line       496                         i_j_list.append((
excute 13:51:46.060270 line       497                             i, j,
excute 13:51:46.064260 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.067252 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:51:46.071242 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:46.075231 line       494                         if (i == j):
excute 13:51:46.079220 line       496                         i_j_list.append((
excute 13:51:46.082212 line       497                             i, j,
excute 13:51:46.087201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.091189 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:51:46.094182 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:46.099169 line       494                         if (i == j):
excute 13:51:46.103158 line       495                             continue
excute 13:51:46.107145 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:46.110137 line       494                         if (i == j):
excute 13:51:46.114126 line       496                         i_j_list.append((
excute 13:51:46.117119 line       497                             i, j,
excute 13:51:46.121108 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.124100 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1)]
excute 13:51:46.128090 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:46.132078 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:46.136102 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:46.140058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:46.143049 line       494                         if (i == j):
excute 13:51:46.147039 line       496                         i_j_list.append((
excute 13:51:46.151029 line       497                             i, j,
excute 13:51:46.155018 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.158009 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0)]
excute 13:51:46.161999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:46.165989 line       494                         if (i == j):
excute 13:51:46.169978 line       496                         i_j_list.append((
excute 13:51:46.172969 line       497                             i, j,
excute 13:51:46.176959 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.179950 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:51:46.183941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:46.187932 line       494                         if (i == j):
excute 13:51:46.192949 line       496                         i_j_list.append((
excute 13:51:46.195942 line       497                             i, j,
excute 13:51:46.199931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.202922 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:51:46.206911 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:46.210870 line       494                         if (i == j):
excute 13:51:46.214859 line       496                         i_j_list.append((
excute 13:51:46.217881 line       497                             i, j,
excute 13:51:46.221871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.224862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:46.228855 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:46.232816 line       494                         if (i == j):
excute 13:51:46.237796 line       496                         i_j_list.append((
excute 13:51:46.240790 line       497                             i, j,
excute 13:51:46.244779 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.248768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:46.252758 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:46.257746 line       494                         if (i == j):
excute 13:51:46.261736 line       496                         i_j_list.append((
excute 13:51:46.265726 line       497                             i, j,
excute 13:51:46.269742 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.273701 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:46.276726 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:46.280684 line       494                         if (i == j):
excute 13:51:46.285669 line       496                         i_j_list.append((
excute 13:51:46.289662 line       497                             i, j,
excute 13:51:46.294647 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.298635 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:51:46.301628 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:46.306615 line       494                         if (i == j):
excute 13:51:46.310601 line       496                         i_j_list.append((
excute 13:51:46.313625 line       497                             i, j,
excute 13:51:46.317614 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.320606 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:51:46.324598 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:46.331547 line       494                         if (i == j):
excute 13:51:46.341520 line       496                         i_j_list.append((
excute 13:51:46.346507 line       497                             i, j,
excute 13:51:46.350495 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:46.355483 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:51:46.359504 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:46.363461 line       494                         if (i == j):
excute 13:51:46.373434 line       495                             continue
excute 13:51:46.380419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:46.386433 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:46.391389 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (0, 9, 0, 1), (2, 9, 0, 1), (5, 9, 0, 1), (7, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (1, 9, 1, 1), (4, 9, 1, 1), (8, 9, 1, 1), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 1), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 1)]
excute 13:51:46.400364 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:46.405348 line       505                     if (self.RELOCATE):
excute 13:51:46.411353 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:46.417317 line       505                     if (self.RELOCATE):
excute 13:51:46.421306 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:46.426294 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:51:46.433275 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:46.441254 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:46.450229 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.459206 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:51:46.466188 line       556                     i = i_j[0]
excute 13:51:46.472174 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:46.476159 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.484138 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:51:46.488128 line       556                     i = i_j[0]
excute 13:51:46.497104 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:46.507076 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.515056 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:51:46.524032 line       556                     i = i_j[0]
excute 13:51:46.534005 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:46.541983 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.549963 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:51:46.555946 line       556                     i = i_j[0]
excute 13:51:46.564921 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:46.573898 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.582876 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:51:46.590853 line       556                     i = i_j[0]
excute 13:51:46.595841 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:46.603819 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.610800 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:51:46.618778 line       556                     i = i_j[0]
excute 13:51:46.624762 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:46.631744 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.638726 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:51:46.646704 line       556                     i = i_j[0]
excute 13:51:46.654683 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:46.661663 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.668646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:46.674628 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:46.682608 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:46.691585 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.699563 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:46.706543 line       556                     i = i_j[0]
excute 13:51:46.715520 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:46.720505 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.728485 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:46.734469 line       556                     i = i_j[0]
excute 13:51:46.743445 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:46.750426 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.757407 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:46.766383 line       556                     i = i_j[0]
excute 13:51:46.774362 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:46.781343 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.787327 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:46.795307 line       556                     i = i_j[0]
excute 13:51:46.802288 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:46.808272 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.816251 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:46.824230 line       556                     i = i_j[0]
excute 13:51:46.828217 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:46.832207 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.836197 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:51:46.839188 line       556                     i = i_j[0]
excute 13:51:46.844176 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:46.847167 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.851156 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:46.855145 line       556                     i = i_j[0]
excute 13:51:46.859135 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:46.863125 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.867115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:46.870106 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:46.875094 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:46.879088 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.883073 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:46.887061 line       556                     i = i_j[0]
excute 13:51:46.891051 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:46.894042 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.898031 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:46.902021 line       556                     i = i_j[0]
excute 13:51:46.906010 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:46.909999 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.915984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:46.918975 line       556                     i = i_j[0]
excute 13:51:46.922964 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:46.926955 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.929947 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:46.933936 line       556                     i = i_j[0]
excute 13:51:46.937926 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:46.940917 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.944907 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:51:46.949894 line       556                     i = i_j[0]
excute 13:51:46.953881 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:46.957872 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.961861 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:51:46.964853 line       556                     i = i_j[0]
excute 13:51:46.968873 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:46.972863 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.976853 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:46.980841 line       556                     i = i_j[0]
excute 13:51:46.984835 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:46.987823 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:46.991784 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:46.995802 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:46.999764 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:47.003755 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.007739 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:47.011730 line       556                     i = i_j[0]
excute 13:51:47.015751 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:47.019739 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.023701 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:47.027685 line       556                     i = i_j[0]
excute 13:51:47.030709 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:47.034700 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.038658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:47.042645 line       556                     i = i_j[0]
excute 13:51:47.045670 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:47.049658 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.053618 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:47.057636 line       556                     i = i_j[0]
excute 13:51:47.061595 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:47.064618 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.068607 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:47.074593 line       556                     i = i_j[0]
excute 13:51:47.078549 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:47.081540 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.085529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:47.089519 line       556                     i = i_j[0]
excute 13:51:47.093508 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:47.096500 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.100489 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:47.104478 line       556                     i = i_j[0]
excute 13:51:47.108470 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:47.111492 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.115481 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 1)
excute 13:51:47.120468 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:47.124461 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:47.128449 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.132438 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 1)
excute 13:51:47.136396 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:47.140384 line       557                     j = i_j[1]
excute 13:51:47.144372 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.148364 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 1)
excute 13:51:47.152353 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:47.157339 line       557                     j = i_j[1]
excute 13:51:47.161329 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.165318 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 1)
excute 13:51:47.169307 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:47.173298 line       557                     j = i_j[1]
excute 13:51:47.177286 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.181275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:47.185265 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:47.190252 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:47.194242 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.198229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:47.202218 line       556                     i = i_j[0]
excute 13:51:47.205209 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:47.209199 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.213189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:47.216180 line       556                     i = i_j[0]
excute 13:51:47.222168 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:47.225158 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.229147 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:47.234133 line       556                     i = i_j[0]
excute 13:51:47.238124 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:47.241115 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.246103 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:47.250092 line       556                     i = i_j[0]
excute 13:51:47.255128 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:47.258068 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.265062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:47.270044 line       556                     i = i_j[0]
excute 13:51:47.274027 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:47.277019 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.281010 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:51:47.284998 line       556                     i = i_j[0]
excute 13:51:47.287989 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:47.292978 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.296966 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:47.300955 line       556                     i = i_j[0]
excute 13:51:47.304945 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:47.308933 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.312923 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:51:47.316913 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:47.320902 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:47.328881 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.336860 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:51:47.343840 line       556                     i = i_j[0]
excute 13:51:47.347831 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:47.350822 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.357802 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:51:47.360794 line       556                     i = i_j[0]
excute 13:51:47.364785 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:47.368785 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.372762 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:51:47.376751 line       556                     i = i_j[0]
excute 13:51:47.380741 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:47.383733 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.388720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:51:47.391711 line       556                     i = i_j[0]
excute 13:51:47.395700 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:47.398693 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.402682 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:51:47.406671 line       556                     i = i_j[0]
excute 13:51:47.410694 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:47.413684 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.418654 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:51:47.422630 line       556                     i = i_j[0]
excute 13:51:47.427617 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:47.432611 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.436594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:51:47.439585 line       556                     i = i_j[0]
excute 13:51:47.444572 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:47.448560 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.453554 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:51:47.457537 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:47.463521 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:47.470503 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.474492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:51:47.478481 line       556                     i = i_j[0]
excute 13:51:47.485468 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:47.493441 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.497430 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:51:47.501420 line       556                     i = i_j[0]
excute 13:51:47.505407 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:47.509398 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.513386 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:51:47.516412 line       556                     i = i_j[0]
excute 13:51:47.520401 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:47.524392 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.528349 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:51:47.532337 line       556                     i = i_j[0]
excute 13:51:47.536338 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:47.540315 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.544306 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:51:47.548295 line       556                     i = i_j[0]
excute 13:51:47.552282 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:47.556305 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.560295 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:51:47.563284 line       556                     i = i_j[0]
excute 13:51:47.567242 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:47.572228 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.576219 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:51:47.580209 line       556                     i = i_j[0]
excute 13:51:47.584199 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:47.587220 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.591209 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:47.595199 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:47.599158 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:47.603147 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.607137 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:47.610159 line       556                     i = i_j[0]
excute 13:51:47.614149 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:47.618137 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.622098 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:47.625121 line       556                     i = i_j[0]
excute 13:51:47.629109 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:47.634064 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.638052 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:47.642042 line       556                     i = i_j[0]
excute 13:51:47.646032 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:47.649057 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.653026 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:47.657036 line       556                     i = i_j[0]
excute 13:51:47.660992 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:47.665016 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.668971 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:47.672961 line       556                     i = i_j[0]
excute 13:51:47.677949 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:47.680972 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.684962 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:51:47.688951 line       556                     i = i_j[0]
excute 13:51:47.692919 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:47.695931 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.699889 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:51:47.703908 line       556                     i = i_j[0]
excute 13:51:47.707868 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:47.710890 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.714879 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:47.718869 line       556                     i = i_j[0]
excute 13:51:47.722827 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:47.725850 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.730805 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 1)
excute 13:51:47.733798 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:47.739781 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:47.743770 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.747759 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 1)
excute 13:51:47.751748 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:47.755738 line       557                     j = i_j[1]
excute 13:51:47.760761 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.764718 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 1)
excute 13:51:47.768707 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:47.772694 line       557                     j = i_j[1]
excute 13:51:47.776683 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.779707 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 2, 0)
excute 13:51:47.783675 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:47.786688 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:47.791643 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.794634 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 2, 0)
excute 13:51:47.798623 line       556                     i = i_j[0]
excute 13:51:47.802617 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:47.805605 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.809594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 2, 0)
excute 13:51:47.813583 line       556                     i = i_j[0]
excute 13:51:47.817573 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:47.820597 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.824588 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 2, 0)
excute 13:51:47.828575 line       556                     i = i_j[0]
excute 13:51:47.832534 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:47.835558 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.841512 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 2, 0)
excute 13:51:47.845500 line       556                     i = i_j[0]
excute 13:51:47.850487 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:47.854476 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.858464 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 2, 0)
excute 13:51:47.862453 line       556                     i = i_j[0]
excute 13:51:47.866444 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:47.869434 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.873423 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 2, 0)
excute 13:51:47.877412 line       556                     i = i_j[0]
excute 13:51:47.881403 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:47.884394 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.888383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 2, 0)
excute 13:51:47.892372 line       556                     i = i_j[0]
excute 13:51:47.896362 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:47.899354 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.903343 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 2, 1)
excute 13:51:47.907333 line       556                     i = i_j[0]
excute 13:51:47.910325 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:47.914314 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.918304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 0)
excute 13:51:47.922294 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:47.926282 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:47.931270 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.935259 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:51:47.939250 line       556                     i = i_j[0]
excute 13:51:47.947228 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:47.951248 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.955241 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:51:47.959226 line       556                     i = i_j[0]
excute 13:51:47.963218 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:47.967181 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.971198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:51:47.974185 line       556                     i = i_j[0]
excute 13:51:47.978176 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:47.982135 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:47.986124 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:51:47.990113 line       556                     i = i_j[0]
excute 13:51:47.994104 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:47.998090 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:48.002082 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:51:48.005104 line       556                     i = i_j[0]
excute 13:51:48.009064 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:48.013082 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:48.017042 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 0)
excute 13:51:48.020064 line       556                     i = i_j[0]
excute 13:51:48.024055 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:48.028042 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:48.032002 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:51:48.035026 line       556                     i = i_j[0]
excute 13:51:48.039012 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:48.042973 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:48.047957 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 1)
excute 13:51:48.051946 line       556                     i = i_j[0]
excute 13:51:48.055935 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:48.059926 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:48.063916 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 187
excute 13:51:48.067905 line       560                         if (t_tmp > self.TIME):
excute 13:51:48.071896 line       561                             time_over += 1
excute Modified var:.. time_over = 13
excute 13:51:48.076911 line       555                 for i_j in i_j_list:
excute 13:51:48.080898 line       581             self.write_matrix(
excute 13:51:48.084890 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:48.087884 line       583                 result_file_path,
excute 13:51:48.091872 line       584                 mode='a'
excute 13:51:48.097824 line       488         for t in time_steps:
excute Modified var:.. t = 177
excute 13:51:48.102820 line       489             if (t != self.TIME + 1):
excute 13:51:48.107797 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:48.114780 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:48.121761 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:48.128742 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:48.133728 line       494                         if (i == j):
excute 13:51:48.138718 line       495                             continue
excute 13:51:48.142705 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:48.148690 line       494                         if (i == j):
excute 13:51:48.153676 line       496                         i_j_list.append((
excute 13:51:48.158663 line       497                             i, j,
excute 13:51:48.169646 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.176613 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1)]
excute 13:51:48.182602 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:48.186590 line       494                         if (i == j):
excute 13:51:48.192573 line       496                         i_j_list.append((
excute 13:51:48.195564 line       497                             i, j,
excute 13:51:48.200550 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.203543 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0)]
excute 13:51:48.207533 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:48.211523 line       494                         if (i == j):
excute 13:51:48.215511 line       496                         i_j_list.append((
excute 13:51:48.219505 line       497                             i, j,
excute 13:51:48.223488 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.230470 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:51:48.233463 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:48.239448 line       494                         if (i == j):
excute 13:51:48.243437 line       496                         i_j_list.append((
excute 13:51:48.247425 line       497                             i, j,
excute 13:51:48.251416 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.255404 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:51:48.259393 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:48.263382 line       494                         if (i == j):
excute 13:51:48.267371 line       496                         i_j_list.append((
excute 13:51:48.271362 line       497                             i, j,
excute 13:51:48.275350 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.279340 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:51:48.282331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:48.286320 line       494                         if (i == j):
excute 13:51:48.290310 line       496                         i_j_list.append((
excute 13:51:48.294299 line       497                             i, j,
excute 13:51:48.297291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.300283 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:51:48.304273 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:48.308263 line       494                         if (i == j):
excute 13:51:48.312250 line       496                         i_j_list.append((
excute 13:51:48.315243 line       497                             i, j,
excute 13:51:48.318235 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.322225 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:51:48.327213 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:48.335191 line       494                         if (i == j):
excute 13:51:48.340176 line       496                         i_j_list.append((
excute 13:51:48.343167 line       497                             i, j,
excute 13:51:48.347156 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.350149 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1)]
excute 13:51:48.356166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:48.360124 line       494                         if (i == j):
excute 13:51:48.364115 line       496                         i_j_list.append((
excute 13:51:48.367137 line       497                             i, j,
excute 13:51:48.371125 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.375116 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1)]
excute 13:51:48.378108 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:48.382096 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:48.387051 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:48.391042 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:48.395032 line       494                         if (i == j):
excute 13:51:48.399021 line       496                         i_j_list.append((
excute 13:51:48.402013 line       497                             i, j,
excute 13:51:48.406002 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.409992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0)]
excute 13:51:48.413980 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:48.417974 line       494                         if (i == j):
excute 13:51:48.421958 line       495                             continue
excute 13:51:48.425948 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:48.428939 line       494                         if (i == j):
excute 13:51:48.432928 line       496                         i_j_list.append((
excute 13:51:48.436918 line       497                             i, j,
excute 13:51:48.440909 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.443899 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:48.449884 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:48.453873 line       494                         if (i == j):
excute 13:51:48.459859 line       496                         i_j_list.append((
excute 13:51:48.463849 line       497                             i, j,
excute 13:51:48.467835 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.471855 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:48.475845 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:48.479805 line       494                         if (i == j):
excute 13:51:48.483793 line       496                         i_j_list.append((
excute 13:51:48.486818 line       497                             i, j,
excute 13:51:48.490806 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.493797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:48.497781 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:48.500778 line       494                         if (i == j):
excute 13:51:48.504767 line       496                         i_j_list.append((
excute 13:51:48.508760 line       497                             i, j,
excute 13:51:48.511750 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.515738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:48.518732 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:48.522720 line       494                         if (i == j):
excute 13:51:48.526679 line       496                         i_j_list.append((
excute 13:51:48.529703 line       497                             i, j,
excute 13:51:48.533690 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.536682 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:48.540673 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:48.544631 line       494                         if (i == j):
excute 13:51:48.548652 line       496                         i_j_list.append((
excute 13:51:48.551642 line       497                             i, j,
excute 13:51:48.555634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.559591 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:51:48.563611 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:48.567601 line       494                         if (i == j):
excute 13:51:48.571579 line       496                         i_j_list.append((
excute 13:51:48.574549 line       497                             i, j,
excute 13:51:48.577541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.581530 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1)]
excute 13:51:48.584522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:48.588511 line       494                         if (i == j):
excute 13:51:48.592501 line       496                         i_j_list.append((
excute 13:51:48.595493 line       497                             i, j,
excute 13:51:48.599482 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.602474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1)]
excute 13:51:48.606464 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:48.609490 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:48.613477 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:48.617436 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:48.620458 line       494                         if (i == j):
excute 13:51:48.624448 line       496                         i_j_list.append((
excute 13:51:48.628437 line       497                             i, j,
excute 13:51:48.631429 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.635421 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0)]
excute 13:51:48.638412 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:48.642399 line       494                         if (i == j):
excute 13:51:48.646392 line       496                         i_j_list.append((
excute 13:51:48.650347 line       497                             i, j,
excute 13:51:48.653370 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.657362 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1)]
excute 13:51:48.660351 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:48.665342 line       494                         if (i == j):
excute 13:51:48.670294 line       495                             continue
excute 13:51:48.673287 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:48.677276 line       494                         if (i == j):
excute 13:51:48.682281 line       496                         i_j_list.append((
excute 13:51:48.686285 line       497                             i, j,
excute 13:51:48.689276 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.693264 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0)]
excute 13:51:48.697223 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:48.701224 line       494                         if (i == j):
excute 13:51:48.704234 line       496                         i_j_list.append((
excute 13:51:48.708223 line       497                             i, j,
excute 13:51:48.711216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.715173 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:48.722156 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:48.726145 line       494                         if (i == j):
excute 13:51:48.730133 line       496                         i_j_list.append((
excute 13:51:48.734124 line       497                             i, j,
excute 13:51:48.737114 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.741104 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:48.744128 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:48.748117 line       494                         if (i == j):
excute 13:51:48.752075 line       496                         i_j_list.append((
excute 13:51:48.756095 line       497                             i, j,
excute 13:51:48.759088 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.764045 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:48.770026 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:48.774016 line       494                         if (i == j):
excute 13:51:48.778005 line       496                         i_j_list.append((
excute 13:51:48.781994 line       497                             i, j,
excute 13:51:48.784986 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.787979 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0)]
excute 13:51:48.791968 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:48.795957 line       494                         if (i == j):
excute 13:51:48.799946 line       496                         i_j_list.append((
excute 13:51:48.802938 line       497                             i, j,
excute 13:51:48.805931 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.809919 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1)]
excute 13:51:48.812912 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:48.816901 line       494                         if (i == j):
excute 13:51:48.820891 line       496                         i_j_list.append((
excute 13:51:48.823883 line       497                             i, j,
excute 13:51:48.827871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.831863 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1)]
excute 13:51:48.835850 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:48.839840 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:48.842832 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:48.846821 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:48.850810 line       494                         if (i == j):
excute 13:51:48.854800 line       496                         i_j_list.append((
excute 13:51:48.857792 line       497                             i, j,
excute 13:51:48.861781 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.864773 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0)]
excute 13:51:48.868763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:48.873784 line       494                         if (i == j):
excute 13:51:48.877774 line       496                         i_j_list.append((
excute 13:51:48.880764 line       497                             i, j,
excute 13:51:48.884720 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.887712 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1)]
excute 13:51:48.890704 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:48.894694 line       494                         if (i == j):
excute 13:51:48.898684 line       496                         i_j_list.append((
excute 13:51:48.901675 line       497                             i, j,
excute 13:51:48.905664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.908656 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0)]
excute 13:51:48.912646 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:48.916635 line       494                         if (i == j):
excute 13:51:48.920624 line       495                             continue
excute 13:51:48.923616 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:48.926608 line       494                         if (i == j):
excute 13:51:48.930598 line       496                         i_j_list.append((
excute 13:51:48.934620 line       497                             i, j,
excute 13:51:48.937610 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.941570 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0)]
excute 13:51:48.944594 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:48.950547 line       494                         if (i == j):
excute 13:51:48.954536 line       496                         i_j_list.append((
excute 13:51:48.958524 line       497                             i, j,
excute 13:51:48.964508 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.969494 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0)]
excute 13:51:48.973486 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:48.977505 line       494                         if (i == j):
excute 13:51:48.981495 line       496                         i_j_list.append((
excute 13:51:48.985482 line       497                             i, j,
excute 13:51:48.989443 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:48.993430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0)]
excute 13:51:48.996423 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:49.001409 line       494                         if (i == j):
excute 13:51:49.005400 line       496                         i_j_list.append((
excute 13:51:49.009388 line       497                             i, j,
excute 13:51:49.013377 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.017367 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0)]
excute 13:51:49.021356 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:49.025345 line       494                         if (i == j):
excute 13:51:49.029333 line       496                         i_j_list.append((
excute 13:51:49.033325 line       497                             i, j,
excute 13:51:49.037313 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.040306 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1)]
excute 13:51:49.044295 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:49.049283 line       494                         if (i == j):
excute 13:51:49.053280 line       496                         i_j_list.append((
excute 13:51:49.057292 line       497                             i, j,
excute 13:51:49.060281 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.064274 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1)]
excute 13:51:49.068230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:49.072255 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:49.077208 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:49.081195 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:49.085184 line       494                         if (i == j):
excute 13:51:49.089176 line       496                         i_j_list.append((
excute 13:51:49.092167 line       497                             i, j,
excute 13:51:49.096156 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.100144 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0)]
excute 13:51:49.103138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:49.107127 line       494                         if (i == j):
excute 13:51:49.112115 line       496                         i_j_list.append((
excute 13:51:49.115106 line       497                             i, j,
excute 13:51:49.119095 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.123084 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1)]
excute 13:51:49.126077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:49.131064 line       494                         if (i == j):
excute 13:51:49.135053 line       496                         i_j_list.append((
excute 13:51:49.139040 line       497                             i, j,
excute 13:51:49.142032 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.146021 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0)]
excute 13:51:49.149013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:49.153003 line       494                         if (i == j):
excute 13:51:49.156993 line       496                         i_j_list.append((
excute 13:51:49.159984 line       497                             i, j,
excute 13:51:49.163973 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.166965 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:51:49.170954 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:49.174944 line       494                         if (i == j):
excute 13:51:49.178950 line       495                             continue
excute 13:51:49.182924 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:49.186914 line       494                         if (i == j):
excute 13:51:49.190903 line       496                         i_j_list.append((
excute 13:51:49.194892 line       497                             i, j,
excute 13:51:49.198882 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.202871 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:51:49.205863 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:49.209852 line       494                         if (i == j):
excute 13:51:49.213841 line       496                         i_j_list.append((
excute 13:51:49.217831 line       497                             i, j,
excute 13:51:49.220823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.224812 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:51:49.228802 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:49.232791 line       494                         if (i == j):
excute 13:51:49.237779 line       496                         i_j_list.append((
excute 13:51:49.240770 line       497                             i, j,
excute 13:51:49.244759 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.248748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:51:49.252750 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:49.256728 line       494                         if (i == j):
excute 13:51:49.260719 line       496                         i_j_list.append((
excute 13:51:49.266698 line       497                             i, j,
excute 13:51:49.269691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.273680 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1)]
excute 13:51:49.277671 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:49.282658 line       494                         if (i == j):
excute 13:51:49.285649 line       496                         i_j_list.append((
excute 13:51:49.289639 line       497                             i, j,
excute 13:51:49.293628 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.296620 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1)]
excute 13:51:49.300609 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:49.304599 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:49.307621 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:49.311613 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:49.315600 line       494                         if (i == j):
excute 13:51:49.319562 line       496                         i_j_list.append((
excute 13:51:49.322581 line       497                             i, j,
excute 13:51:49.326542 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.334520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0)]
excute 13:51:49.341536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:49.346500 line       494                         if (i == j):
excute 13:51:49.351478 line       496                         i_j_list.append((
excute 13:51:49.356461 line       497                             i, j,
excute 13:51:49.360480 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.364472 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1)]
excute 13:51:49.367429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:49.371419 line       494                         if (i == j):
excute 13:51:49.376414 line       496                         i_j_list.append((
excute 13:51:49.379429 line       497                             i, j,
excute 13:51:49.384385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.388376 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0)]
excute 13:51:49.392365 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:49.396354 line       494                         if (i == j):
excute 13:51:49.400343 line       496                         i_j_list.append((
excute 13:51:49.404332 line       497                             i, j,
excute 13:51:49.408322 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.412312 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:49.416314 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:49.420312 line       494                         if (i == j):
excute 13:51:49.424279 line       496                         i_j_list.append((
excute 13:51:49.427271 line       497                             i, j,
excute 13:51:49.431260 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.435248 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:49.442230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:49.447218 line       494                         if (i == j):
excute 13:51:49.452203 line       495                             continue
excute 13:51:49.458197 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:49.461211 line       494                         if (i == j):
excute 13:51:49.465201 line       496                         i_j_list.append((
excute 13:51:49.469189 line       497                             i, j,
excute 13:51:49.473148 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.476172 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:51:49.480131 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:49.484118 line       494                         if (i == j):
excute 13:51:49.489138 line       496                         i_j_list.append((
excute 13:51:49.494886 line       497                             i, j,
excute 13:51:49.498901 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.501902 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:51:49.505870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:49.509848 line       494                         if (i == j):
excute 13:51:49.513837 line       496                         i_j_list.append((
excute 13:51:49.516829 line       497                             i, j,
excute 13:51:49.520823 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.523843 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1)]
excute 13:51:49.527801 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:49.535781 line       494                         if (i == j):
excute 13:51:49.539769 line       496                         i_j_list.append((
excute 13:51:49.542761 line       497                             i, j,
excute 13:51:49.546750 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.550740 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1)]
excute 13:51:49.554729 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:49.558733 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:49.562707 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:49.565730 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:49.569720 line       494                         if (i == j):
excute 13:51:49.573678 line       496                         i_j_list.append((
excute 13:51:49.577668 line       497                             i, j,
excute 13:51:49.580660 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.584649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0)]
excute 13:51:49.589668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:49.593657 line       494                         if (i == j):
excute 13:51:49.597647 line       496                         i_j_list.append((
excute 13:51:49.600637 line       497                             i, j,
excute 13:51:49.604626 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.607618 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1)]
excute 13:51:49.611608 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:49.618558 line       494                         if (i == j):
excute 13:51:49.622546 line       496                         i_j_list.append((
excute 13:51:49.625571 line       497                             i, j,
excute 13:51:49.629560 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.632552 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0)]
excute 13:51:49.636541 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:49.640499 line       494                         if (i == j):
excute 13:51:49.644489 line       496                         i_j_list.append((
excute 13:51:49.647514 line       497                             i, j,
excute 13:51:49.651501 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.655491 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:51:49.658481 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:49.662472 line       494                         if (i == j):
excute 13:51:49.667429 line       496                         i_j_list.append((
excute 13:51:49.670451 line       497                             i, j,
excute 13:51:49.674439 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.677431 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:51:49.681422 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:49.685380 line       494                         if (i == j):
excute 13:51:49.689371 line       496                         i_j_list.append((
excute 13:51:49.693389 line       497                             i, j,
excute 13:51:49.697378 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.701336 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:51:49.704361 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:49.708319 line       494                         if (i == j):
excute 13:51:49.712309 line       495                             continue
excute 13:51:49.715331 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:49.719322 line       494                         if (i == j):
excute 13:51:49.723280 line       496                         i_j_list.append((
excute 13:51:49.726300 line       497                             i, j,
excute 13:51:49.730293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.733283 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0)]
excute 13:51:49.737239 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:49.741232 line       494                         if (i == j):
excute 13:51:49.745218 line       496                         i_j_list.append((
excute 13:51:49.749207 line       497                             i, j,
excute 13:51:49.753230 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.756221 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1)]
excute 13:51:49.761207 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:49.767161 line       494                         if (i == j):
excute 13:51:49.770151 line       496                         i_j_list.append((
excute 13:51:49.774140 line       497                             i, j,
excute 13:51:49.777133 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.781122 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1)]
excute 13:51:49.784114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:49.788103 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:49.792094 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:49.797079 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:49.800072 line       494                         if (i == j):
excute 13:51:49.804061 line       496                         i_j_list.append((
excute 13:51:49.808052 line       497                             i, j,
excute 13:51:49.811042 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.814034 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0)]
excute 13:51:49.818023 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:49.822016 line       494                         if (i == j):
excute 13:51:49.826003 line       496                         i_j_list.append((
excute 13:51:49.829992 line       497                             i, j,
excute 13:51:49.832983 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.835976 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1)]
excute 13:51:49.839965 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:49.843955 line       494                         if (i == j):
excute 13:51:49.846947 line       496                         i_j_list.append((
excute 13:51:49.850935 line       497                             i, j,
excute 13:51:49.854925 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.857917 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0)]
excute 13:51:49.861907 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:49.864898 line       494                         if (i == j):
excute 13:51:49.868887 line       496                         i_j_list.append((
excute 13:51:49.872877 line       497                             i, j,
excute 13:51:49.875869 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.879864 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:49.883851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:49.887838 line       494                         if (i == j):
excute 13:51:49.890829 line       496                         i_j_list.append((
excute 13:51:49.894820 line       497                             i, j,
excute 13:51:49.898808 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.902797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:49.905789 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:49.909778 line       494                         if (i == j):
excute 13:51:49.913769 line       496                         i_j_list.append((
excute 13:51:49.917757 line       497                             i, j,
excute 13:51:49.920749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.924738 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:49.927731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:49.931720 line       494                         if (i == j):
excute 13:51:49.935710 line       496                         i_j_list.append((
excute 13:51:49.938701 line       497                             i, j,
excute 13:51:49.942691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.945683 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:49.950669 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:49.954659 line       494                         if (i == j):
excute 13:51:49.958649 line       495                             continue
excute 13:51:49.962638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:49.966627 line       494                         if (i == j):
excute 13:51:49.970617 line       496                         i_j_list.append((
excute 13:51:49.974606 line       497                             i, j,
excute 13:51:49.978596 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:49.981587 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1)]
excute 13:51:49.985578 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:49.989568 line       494                         if (i == j):
excute 13:51:49.993555 line       496                         i_j_list.append((
excute 13:51:49.997545 line       497                             i, j,
excute 13:51:50.001566 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.004525 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1)]
excute 13:51:50.008515 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:50.012503 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:50.016497 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:50.019485 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:50.023474 line       494                         if (i == j):
excute 13:51:50.027464 line       496                         i_j_list.append((
excute 13:51:50.030456 line       497                             i, j,
excute 13:51:50.034451 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.037437 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0)]
excute 13:51:50.040429 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:50.045417 line       494                         if (i == j):
excute 13:51:50.048408 line       496                         i_j_list.append((
excute 13:51:50.052397 line       497                             i, j,
excute 13:51:50.056386 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.060376 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1)]
excute 13:51:50.063368 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:50.067357 line       494                         if (i == j):
excute 13:51:50.071347 line       496                         i_j_list.append((
excute 13:51:50.075336 line       497                             i, j,
excute 13:51:50.078328 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.082318 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0)]
excute 13:51:50.085309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:50.089299 line       494                         if (i == j):
excute 13:51:50.093288 line       496                         i_j_list.append((
excute 13:51:50.096280 line       497                             i, j,
excute 13:51:50.100270 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.104259 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:51:50.108248 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:50.112237 line       494                         if (i == j):
excute 13:51:50.115229 line       496                         i_j_list.append((
excute 13:51:50.119219 line       497                             i, j,
excute 13:51:50.122211 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.126200 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:51:50.130190 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:50.134180 line       494                         if (i == j):
excute 13:51:50.138169 line       496                         i_j_list.append((
excute 13:51:50.141160 line       497                             i, j,
excute 13:51:50.145149 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.148141 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:51:50.152132 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:50.156120 line       494                         if (i == j):
excute 13:51:50.160110 line       496                         i_j_list.append((
excute 13:51:50.168088 line       497                             i, j,
excute 13:51:50.172078 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.175070 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:51:50.179060 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:50.183049 line       494                         if (i == j):
excute 13:51:50.187038 line       496                         i_j_list.append((
excute 13:51:50.190063 line       497                             i, j,
excute 13:51:50.194050 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.197042 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:51:50.201031 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:50.205989 line       494                         if (i == j):
excute 13:51:50.209977 line       495                             continue
excute 13:51:50.212999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:50.216992 line       494                         if (i == j):
excute 13:51:50.220980 line       496                         i_j_list.append((
excute 13:51:50.223970 line       497                             i, j,
excute 13:51:50.227960 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.231918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1)]
excute 13:51:50.234910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:50.238899 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:50.241891 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:50.245879 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:50.249869 line       494                         if (i == j):
excute 13:51:50.254857 line       496                         i_j_list.append((
excute 13:51:50.257847 line       497                             i, j,
excute 13:51:50.263832 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.267821 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0)]
excute 13:51:50.271810 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:50.275800 line       494                         if (i == j):
excute 13:51:50.279790 line       496                         i_j_list.append((
excute 13:51:50.282812 line       497                             i, j,
excute 13:51:50.286802 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.289796 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 1)]
excute 13:51:50.293783 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:50.298740 line       494                         if (i == j):
excute 13:51:50.302730 line       496                         i_j_list.append((
excute 13:51:50.307754 line       497                             i, j,
excute 13:51:50.311737 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.314728 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0)]
excute 13:51:50.318719 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:50.322708 line       494                         if (i == j):
excute 13:51:50.327663 line       496                         i_j_list.append((
excute 13:51:50.336638 line       497                             i, j,
excute 13:51:50.342624 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.345645 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:50.349635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:50.353624 line       494                         if (i == j):
excute 13:51:50.359576 line       496                         i_j_list.append((
excute 13:51:50.363566 line       497                             i, j,
excute 13:51:50.366590 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.370578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:50.374536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:50.378525 line       494                         if (i == j):
excute 13:51:50.382515 line       496                         i_j_list.append((
excute 13:51:50.386506 line       497                             i, j,
excute 13:51:50.391493 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.395482 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:50.399474 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:50.403462 line       494                         if (i == j):
excute 13:51:50.407450 line       496                         i_j_list.append((
excute 13:51:50.412463 line       497                             i, j,
excute 13:51:50.415460 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.419449 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:51:50.423406 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:50.427402 line       494                         if (i == j):
excute 13:51:50.431384 line       496                         i_j_list.append((
excute 13:51:50.434407 line       497                             i, j,
excute 13:51:50.438398 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.441389 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:51:50.445379 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:50.450336 line       494                         if (i == j):
excute 13:51:50.455324 line       496                         i_j_list.append((
excute 13:51:50.459311 line       497                             i, j,
excute 13:51:50.466292 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:50.470282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 1), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 1), (0, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (2, 0, 0, 0), (2, 1, 0, 1), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 1), (2, 9, 0, 1), (3, 0, 2, 0), (3, 1, 2, 1), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 1), (3, 9, 2, 1), (4, 0, 1, 0), (4, 1, 1, 1), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 1), (4, 9, 1, 1), (5, 0, 0, 0), (5, 1, 0, 1), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 1), (5, 9, 0, 1), (6, 0, 4, 0), (6, 1, 4, 1), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 1), (6, 9, 4, 1), (7, 0, 0, 0), (7, 1, 0, 1), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 1), (7, 9, 0, 1), (8, 0, 1, 0), (8, 1, 1, 1), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 1), (9, 0, 1, 0), (9, 1, 1, 1), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 1)]
excute 13:51:50.475268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:50.480256 line       494                         if (i == j):
excute 13:51:50.484252 line       495                             continue
excute 13:51:50.488234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:50.492253 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:50.495245 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (2, 0, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (5, 0, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (7, 0, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (0, 1, 0, 1), (0, 8, 0, 1), (0, 9, 0, 1), (2, 1, 0, 1), (2, 8, 0, 1), (2, 9, 0, 1), (5, 1, 0, 1), (5, 8, 0, 1), (5, 9, 0, 1), (7, 1, 0, 1), (7, 8, 0, 1), (7, 9, 0, 1), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (4, 0, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (8, 0, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (9, 0, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (1, 8, 1, 1), (1, 9, 1, 1), (4, 1, 1, 1), (4, 8, 1, 1), (4, 9, 1, 1), (8, 1, 1, 1), (8, 9, 1, 1), (9, 1, 1, 1), (9, 8, 1, 1), (3, 0, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 1, 2, 1), (3, 8, 2, 1), (3, 9, 2, 1), (6, 0, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 1, 4, 1), (6, 8, 4, 1), (6, 9, 4, 1)]
excute 13:51:50.499234 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:50.503224 line       505                     if (self.RELOCATE):
excute 13:51:50.507214 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:50.513168 line       505                     if (self.RELOCATE):
excute 13:51:50.517155 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:50.521144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:51:50.524168 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:50.528127 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:50.532114 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.536105 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:51:50.540116 line       556                     i = i_j[0]
excute 13:51:50.544085 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:50.548074 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.552063 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:51:50.556052 line       556                     i = i_j[0]
excute 13:51:50.561040 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:50.564032 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.569019 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:51:50.573008 line       556                     i = i_j[0]
excute 13:51:50.576997 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:50.580986 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.584976 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:51:50.587967 line       556                     i = i_j[0]
excute 13:51:50.591957 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:50.595946 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.600934 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:51:50.604922 line       556                     i = i_j[0]
excute 13:51:50.608912 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:50.612900 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.618885 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:50.621875 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:50.625865 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:50.629855 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.633844 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:50.637833 line       556                     i = i_j[0]
excute 13:51:50.641823 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:50.644815 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.648804 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:50.652793 line       556                     i = i_j[0]
excute 13:51:50.656783 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:50.660772 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.664762 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:50.667784 line       556                     i = i_j[0]
excute 13:51:50.671776 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:50.675763 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.679723 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:50.682744 line       556                     i = i_j[0]
excute 13:51:50.686733 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:50.690723 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.694681 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:51:50.698702 line       556                     i = i_j[0]
excute 13:51:50.702660 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:50.705682 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.709672 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:50.713662 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:50.717620 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:50.722606 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.726595 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:50.730584 line       556                     i = i_j[0]
excute 13:51:50.734573 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:50.737565 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.741554 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:50.745544 line       556                     i = i_j[0]
excute 13:51:50.749534 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:50.753523 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.757513 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:50.762499 line       556                     i = i_j[0]
excute 13:51:50.770510 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:50.775466 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.783444 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:51:50.787434 line       556                     i = i_j[0]
excute 13:51:50.791423 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:50.795419 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.799401 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:51:50.802424 line       556                     i = i_j[0]
excute 13:51:50.806381 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:50.809405 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.813396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:50.817385 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:50.822342 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:50.826361 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.830350 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:50.834339 line       556                     i = i_j[0]
excute 13:51:50.838299 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:50.841320 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.845310 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:50.849299 line       556                     i = i_j[0]
excute 13:51:50.871204 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:50.875194 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.879214 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:50.883203 line       556                     i = i_j[0]
excute 13:51:50.887162 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:50.890187 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.894174 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:50.898166 line       556                     i = i_j[0]
excute 13:51:50.902122 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:50.905144 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.909134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:50.913123 line       556                     i = i_j[0]
excute 13:51:50.917082 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:50.921076 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.925064 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 1)
excute 13:51:50.929080 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:50.933038 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:50.937027 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.941017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 1)
excute 13:51:50.944009 line       556                     i = i_j[0]
excute 13:51:50.949028 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:50.953017 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.957006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 1)
excute 13:51:50.960995 line       556                     i = i_j[0]
excute 13:51:50.964954 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:50.967977 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.972932 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 1)
excute 13:51:50.975955 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:50.979914 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:50.983918 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:50.987891 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 1)
excute 13:51:50.991881 line       556                     i = i_j[0]
excute 13:51:50.994873 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:50.998862 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.002851 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 1)
excute 13:51:51.005843 line       556                     i = i_j[0]
excute 13:51:51.010865 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:51.013853 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.017846 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 183
excute 13:51:51.021835 line       560                         if (t_tmp > self.TIME):
excute 13:51:51.025792 line       561                             time_over += 1
excute Modified var:.. time_over = 14
excute 13:51:51.029779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 1)
excute 13:51:51.033768 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:51.037757 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:51.041747 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.045736 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 1)
excute 13:51:51.049726 line       556                     i = i_j[0]
excute 13:51:51.053717 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:51.056707 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.060696 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 1)
excute 13:51:51.064686 line       556                     i = i_j[0]
excute 13:51:51.068676 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:51.071667 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.075656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 1)
excute 13:51:51.079646 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:51.082638 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:51.087625 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.091614 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 1)
excute 13:51:51.094606 line       556                     i = i_j[0]
excute 13:51:51.098595 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:51.102584 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.106575 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 1)
excute 13:51:51.109566 line       556                     i = i_j[0]
excute 13:51:51.113555 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:51.116547 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.120536 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:51.124526 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:51.128516 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:51.133534 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.137527 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:51.141481 line       556                     i = i_j[0]
excute 13:51:51.145471 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:51.148462 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.152452 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:51.156441 line       556                     i = i_j[0]
excute 13:51:51.160431 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:51.163422 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.167411 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:51.171401 line       556                     i = i_j[0]
excute 13:51:51.175391 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:51.179380 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.183369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:51.187359 line       556                     i = i_j[0]
excute 13:51:51.191349 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:51.195339 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.199328 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:51.203317 line       556                     i = i_j[0]
excute 13:51:51.207317 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:51.211296 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.215286 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:51:51.219274 line       556                     i = i_j[0]
excute 13:51:51.222267 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:51.226256 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.231243 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:51:51.236227 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:51.240217 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:51.243209 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.247198 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:51:51.251187 line       556                     i = i_j[0]
excute 13:51:51.255177 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:51.259167 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.264154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:51:51.268174 line       556                     i = i_j[0]
excute 13:51:51.272134 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:51.275156 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.279145 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:51:51.283134 line       556                     i = i_j[0]
excute 13:51:51.287092 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:51.291084 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.295070 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:51:51.299061 line       556                     i = i_j[0]
excute 13:51:51.303055 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:51.307040 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.311029 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:51:51.315019 line       556                     i = i_j[0]
excute 13:51:51.319006 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:51.322997 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.329982 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:51:51.337966 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:51.342944 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:51.346931 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.351933 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:51:51.355909 line       556                     i = i_j[0]
excute 13:51:51.360897 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:51.364887 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.370868 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:51:51.374858 line       556                     i = i_j[0]
excute 13:51:51.383851 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:51.387822 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.392810 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:51:51.395801 line       556                     i = i_j[0]
excute 13:51:51.402784 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:51.405774 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.410765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:51:51.415752 line       556                     i = i_j[0]
excute 13:51:51.420734 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:51.424724 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.429711 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:51:51.435697 line       556                     i = i_j[0]
excute 13:51:51.443675 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:51.448663 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.453650 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:51:51.457640 line       556                     i = i_j[0]
excute 13:51:51.462626 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:51.466614 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.471600 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:51.475591 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:51.484564 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:51.492543 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.500522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:51.507504 line       556                     i = i_j[0]
excute 13:51:51.517477 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:51.524459 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.532436 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:51.539417 line       556                     i = i_j[0]
excute 13:51:51.547396 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:51.553380 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.561359 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:51.566348 line       556                     i = i_j[0]
excute 13:51:51.572330 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:51.580309 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.586292 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:51.592276 line       556                     i = i_j[0]
excute 13:51:51.599257 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:51.607236 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.616213 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:51:51.624191 line       556                     i = i_j[0]
excute 13:51:51.632170 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:51.638154 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.646133 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:51:51.653114 line       556                     i = i_j[0]
excute 13:51:51.661093 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:51.669070 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.678046 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 1)
excute 13:51:51.685029 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:51.691013 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:51.698991 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.705973 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 186
excute 13:51:51.711956 line       560                         if (t_tmp > self.TIME):
excute 13:51:51.717943 line       561                             time_over += 1
excute Modified var:.. time_over = 15
excute 13:51:51.724922 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 1)
excute 13:51:51.730905 line       556                     i = i_j[0]
excute 13:51:51.739882 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:51.746863 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.757834 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 1)
excute 13:51:51.765812 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:51.771796 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:51.780772 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.786757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 1)
excute 13:51:51.792741 line       556                     i = i_j[0]
excute 13:51:51.797728 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:51.804710 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.809695 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 1)
excute 13:51:51.812686 line       556                     i = i_j[0]
excute 13:51:51.816676 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:51.820666 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.824655 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 1)
excute 13:51:51.827646 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:51.831635 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:51.835625 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.839615 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 1)
excute 13:51:51.843604 line       556                     i = i_j[0]
excute 13:51:51.847594 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:51.850585 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.855573 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 1)
excute 13:51:51.859562 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:51.863554 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:51.867540 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.871530 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 1)
excute 13:51:51.874521 line       556                     i = i_j[0]
excute 13:51:51.878511 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:51.882499 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.886490 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 2, 0)
excute 13:51:51.889481 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:51.893470 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:51.897459 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.901449 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 2, 0)
excute 13:51:51.904441 line       556                     i = i_j[0]
excute 13:51:51.908430 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:51.912419 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.916410 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 2, 0)
excute 13:51:51.919401 line       556                     i = i_j[0]
excute 13:51:51.923390 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:51.927379 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.931369 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 2, 0)
excute 13:51:51.934361 line       556                     i = i_j[0]
excute 13:51:51.938350 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:51.942340 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.946332 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 2, 0)
excute 13:51:51.950318 line       556                     i = i_j[0]
excute 13:51:51.954309 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:51.960294 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.967275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 2, 0)
excute 13:51:51.971262 line       556                     i = i_j[0]
excute 13:51:51.976250 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:51.980239 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:51.985226 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 2, 1)
excute 13:51:51.989216 line       556                     i = i_j[0]
excute 13:51:51.993204 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:51.997193 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.001182 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 2, 1)
excute 13:51:52.005172 line       556                     i = i_j[0]
excute 13:51:52.009163 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:52.013150 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.017146 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 2, 1)
excute 13:51:52.020132 line       556                     i = i_j[0]
excute 13:51:52.025119 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:52.028110 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.032102 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 0)
excute 13:51:52.035092 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:52.039081 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:52.043070 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.048058 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:51:52.051049 line       556                     i = i_j[0]
excute 13:51:52.055041 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:52.059045 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.064016 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:51:52.068018 line       556                     i = i_j[0]
excute 13:51:52.071995 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:52.074985 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.078975 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:51:52.082964 line       556                     i = i_j[0]
excute 13:51:52.086954 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:52.091939 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.095929 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:51:52.099918 line       556                     i = i_j[0]
excute 13:51:52.103908 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:52.107898 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.111920 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 0)
excute 13:51:52.114910 line       556                     i = i_j[0]
excute 13:51:52.118902 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:52.122889 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.126848 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 1)
excute 13:51:52.129870 line       556                     i = i_j[0]
excute 13:51:52.134826 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:52.137817 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.141806 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 188
excute 13:51:52.145806 line       560                         if (t_tmp > self.TIME):
excute 13:51:52.149786 line       561                             time_over += 1
excute Modified var:.. time_over = 16
excute 13:51:52.152777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 1)
excute 13:51:52.156766 line       556                     i = i_j[0]
excute 13:51:52.160756 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:52.164746 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.169734 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 1)
excute 13:51:52.172724 line       556                     i = i_j[0]
excute 13:51:52.176714 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:52.180703 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:52.184696 line       555                 for i_j in i_j_list:
excute 13:51:52.188693 line       581             self.write_matrix(
excute 13:51:52.191674 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:52.195663 line       583                 result_file_path,
excute 13:51:52.199653 line       584                 mode='a'
excute 13:51:52.205811 line       488         for t in time_steps:
excute Modified var:.. t = 178
excute 13:51:52.209799 line       489             if (t != self.TIME + 1):
excute 13:51:52.214785 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:52.219772 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:52.226754 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:52.230745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:52.234736 line       494                         if (i == j):
excute 13:51:52.238724 line       495                             continue
excute 13:51:52.242713 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:52.246701 line       494                         if (i == j):
excute 13:51:52.249694 line       496                         i_j_list.append((
excute 13:51:52.253683 line       497                             i, j,
excute 13:51:52.258668 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.278616 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:51:52.286593 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:52.293575 line       494                         if (i == j):
excute 13:51:52.297567 line       496                         i_j_list.append((
excute 13:51:52.301555 line       497                             i, j,
excute 13:51:52.305543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.309535 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:51:52.313522 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:52.318509 line       494                         if (i == j):
excute 13:51:52.324496 line       496                         i_j_list.append((
excute 13:51:52.337461 line       497                             i, j,
excute 13:51:52.347433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.354413 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:51:52.361394 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:52.365384 line       494                         if (i == j):
excute 13:51:52.369373 line       496                         i_j_list.append((
excute 13:51:52.372373 line       497                             i, j,
excute 13:51:52.377352 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.381340 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:51:52.386327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:52.390317 line       494                         if (i == j):
excute 13:51:52.395304 line       496                         i_j_list.append((
excute 13:51:52.398297 line       497                             i, j,
excute 13:51:52.402284 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.406274 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:51:52.410264 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:52.414269 line       494                         if (i == j):
excute 13:51:52.418242 line       496                         i_j_list.append((
excute 13:51:52.422231 line       497                             i, j,
excute 13:51:52.425224 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.429212 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:51:52.433202 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:52.437191 line       494                         if (i == j):
excute 13:51:52.441180 line       496                         i_j_list.append((
excute 13:51:52.445170 line       497                             i, j,
excute 13:51:52.450157 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.453150 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:51:52.458137 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:52.462125 line       494                         if (i == j):
excute 13:51:52.466115 line       496                         i_j_list.append((
excute 13:51:52.470104 line       497                             i, j,
excute 13:51:52.474093 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.479079 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:51:52.483070 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:52.487060 line       494                         if (i == j):
excute 13:51:52.492045 line       496                         i_j_list.append((
excute 13:51:52.500023 line       497                             i, j,
excute 13:51:52.503015 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.507006 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:51:52.510996 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:52.514985 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:52.517977 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:52.522964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:52.525955 line       494                         if (i == j):
excute 13:51:52.530941 line       496                         i_j_list.append((
excute 13:51:52.533934 line       497                             i, j,
excute 13:51:52.537924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.540915 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0)]
excute 13:51:52.544905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:52.548894 line       494                         if (i == j):
excute 13:51:52.553882 line       495                             continue
excute 13:51:52.556871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:52.560862 line       494                         if (i == j):
excute 13:51:52.563853 line       496                         i_j_list.append((
excute 13:51:52.567843 line       497                             i, j,
excute 13:51:52.570835 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.574825 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:51:52.577815 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:52.582803 line       494                         if (i == j):
excute 13:51:52.586793 line       496                         i_j_list.append((
excute 13:51:52.589785 line       497                             i, j,
excute 13:51:52.593774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.597763 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:52.600755 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:52.604745 line       494                         if (i == j):
excute 13:51:52.608734 line       496                         i_j_list.append((
excute 13:51:52.611725 line       497                             i, j,
excute 13:51:52.615715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.619705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:52.622696 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:52.626687 line       494                         if (i == j):
excute 13:51:52.630676 line       496                         i_j_list.append((
excute 13:51:52.633666 line       497                             i, j,
excute 13:51:52.637656 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.640648 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:52.644638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:52.648626 line       494                         if (i == j):
excute 13:51:52.651619 line       496                         i_j_list.append((
excute 13:51:52.655609 line       497                             i, j,
excute 13:51:52.658630 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.662620 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:52.666578 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:52.670568 line       494                         if (i == j):
excute 13:51:52.674589 line       496                         i_j_list.append((
excute 13:51:52.677582 line       497                             i, j,
excute 13:51:52.681538 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.685531 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:51:52.689516 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:52.692540 line       494                         if (i == j):
excute 13:51:52.697498 line       496                         i_j_list.append((
excute 13:51:52.700489 line       497                             i, j,
excute 13:51:52.704478 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.708467 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:51:52.711459 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:52.715449 line       494                         if (i == j):
excute 13:51:52.719438 line       496                         i_j_list.append((
excute 13:51:52.723427 line       497                             i, j,
excute 13:51:52.727416 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.731406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:51:52.735395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:52.739385 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:52.743374 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:52.747364 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:52.751353 line       494                         if (i == j):
excute 13:51:52.756338 line       496                         i_j_list.append((
excute 13:51:52.759330 line       497                             i, j,
excute 13:51:52.763321 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.766312 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0)]
excute 13:51:52.769304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:52.773294 line       494                         if (i == j):
excute 13:51:52.780274 line       496                         i_j_list.append((
excute 13:51:52.784263 line       497                             i, j,
excute 13:51:52.789252 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.792242 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:51:52.796232 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:52.799224 line       494                         if (i == j):
excute 13:51:52.803214 line       495                             continue
excute 13:51:52.807234 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:52.810225 line       494                         if (i == j):
excute 13:51:52.814185 line       496                         i_j_list.append((
excute 13:51:52.817206 line       497                             i, j,
excute 13:51:52.821198 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.824190 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:52.828168 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:52.831170 line       494                         if (i == j):
excute 13:51:52.835158 line       496                         i_j_list.append((
excute 13:51:52.839151 line       497                             i, j,
excute 13:51:52.843138 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.846130 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:52.850119 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:52.854079 line       494                         if (i == j):
excute 13:51:52.858068 line       496                         i_j_list.append((
excute 13:51:52.861091 line       497                             i, j,
excute 13:51:52.865079 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.868038 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:52.876018 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:52.880008 line       494                         if (i == j):
excute 13:51:52.883997 line       496                         i_j_list.append((
excute 13:51:52.887985 line       497                             i, j,
excute 13:51:52.895964 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.899954 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:52.902978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:52.906967 line       494                         if (i == j):
excute 13:51:52.910957 line       496                         i_j_list.append((
excute 13:51:52.914946 line       497                             i, j,
excute 13:51:52.918936 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.921926 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0)]
excute 13:51:52.925916 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:52.929876 line       494                         if (i == j):
excute 13:51:52.933864 line       496                         i_j_list.append((
excute 13:51:52.937884 line       497                             i, j,
excute 13:51:52.940878 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.944867 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:51:52.948826 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:52.953811 line       494                         if (i == j):
excute 13:51:52.957801 line       496                         i_j_list.append((
excute 13:51:52.960822 line       497                             i, j,
excute 13:51:52.964814 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:52.967772 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:51:52.973756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:52.977778 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:52.981767 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:52.985726 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:52.988751 line       494                         if (i == j):
excute 13:51:52.994702 line       496                         i_j_list.append((
excute 13:51:52.998691 line       497                             i, j,
excute 13:51:53.002681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.005673 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0)]
excute 13:51:53.009662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:53.013652 line       494                         if (i == j):
excute 13:51:53.018636 line       496                         i_j_list.append((
excute 13:51:53.021630 line       497                             i, j,
excute 13:51:53.025619 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.029608 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0)]
excute 13:51:53.033598 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:53.037587 line       494                         if (i == j):
excute 13:51:53.041576 line       496                         i_j_list.append((
excute 13:51:53.045596 line       497                             i, j,
excute 13:51:53.049554 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.052579 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0)]
excute 13:51:53.056567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:53.060525 line       494                         if (i == j):
excute 13:51:53.064516 line       495                             continue
excute 13:51:53.067507 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:53.071497 line       494                         if (i == j):
excute 13:51:53.076483 line       496                         i_j_list.append((
excute 13:51:53.079475 line       497                             i, j,
excute 13:51:53.083465 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.087453 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0)]
excute 13:51:53.092473 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:53.097427 line       494                         if (i == j):
excute 13:51:53.101427 line       496                         i_j_list.append((
excute 13:51:53.105407 line       497                             i, j,
excute 13:51:53.108399 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.112388 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0)]
excute 13:51:53.115380 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:53.119368 line       494                         if (i == j):
excute 13:51:53.123358 line       496                         i_j_list.append((
excute 13:51:53.127347 line       497                             i, j,
excute 13:51:53.131337 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.135326 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0)]
excute 13:51:53.139315 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:53.143304 line       494                         if (i == j):
excute 13:51:53.147294 line       496                         i_j_list.append((
excute 13:51:53.151283 line       497                             i, j,
excute 13:51:53.155273 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.158264 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0)]
excute 13:51:53.161256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:53.165245 line       494                         if (i == j):
excute 13:51:53.169235 line       496                         i_j_list.append((
excute 13:51:53.173225 line       497                             i, j,
excute 13:51:53.176216 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.179208 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0)]
excute 13:51:53.183198 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:53.187200 line       494                         if (i == j):
excute 13:51:53.191175 line       496                         i_j_list.append((
excute 13:51:53.194168 line       497                             i, j,
excute 13:51:53.199191 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.203174 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0)]
excute 13:51:53.207166 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:53.211123 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:53.214146 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:53.218114 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:53.221126 line       494                         if (i == j):
excute 13:51:53.225116 line       496                         i_j_list.append((
excute 13:51:53.229105 line       497                             i, j,
excute 13:51:53.232098 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.236089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0)]
excute 13:51:53.239081 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:53.243069 line       494                         if (i == j):
excute 13:51:53.247026 line       496                         i_j_list.append((
excute 13:51:53.251017 line       497                             i, j,
excute 13:51:53.255007 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.258996 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:51:53.263017 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:53.266982 line       494                         if (i == j):
excute 13:51:53.270997 line       496                         i_j_list.append((
excute 13:51:53.273985 line       497                             i, j,
excute 13:51:53.279974 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.283927 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:51:53.287918 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:53.291908 line       494                         if (i == j):
excute 13:51:53.296895 line       496                         i_j_list.append((
excute 13:51:53.299887 line       497                             i, j,
excute 13:51:53.304873 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.308862 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:51:53.312851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:53.316841 line       494                         if (i == j):
excute 13:51:53.320831 line       495                             continue
excute 13:51:53.324820 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:53.331800 line       494                         if (i == j):
excute 13:51:53.339780 line       496                         i_j_list.append((
excute 13:51:53.343769 line       497                             i, j,
excute 13:51:53.347758 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.351748 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:51:53.356745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:53.360723 line       494                         if (i == j):
excute 13:51:53.364713 line       496                         i_j_list.append((
excute 13:51:53.367734 line       497                             i, j,
excute 13:51:53.371726 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.375718 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:51:53.378706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:53.382697 line       494                         if (i == j):
excute 13:51:53.387651 line       496                         i_j_list.append((
excute 13:51:53.390676 line       497                             i, j,
excute 13:51:53.394664 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.397655 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:51:53.401645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:53.407598 line       494                         if (i == j):
excute 13:51:53.410590 line       496                         i_j_list.append((
excute 13:51:53.414579 line       497                             i, j,
excute 13:51:53.418599 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.422590 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:51:53.425580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:53.429548 line       494                         if (i == j):
excute 13:51:53.433529 line       496                         i_j_list.append((
excute 13:51:53.436551 line       497                             i, j,
excute 13:51:53.440541 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.443534 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:51:53.448520 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:53.452479 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:53.456467 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:53.462451 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:53.467439 line       494                         if (i == j):
excute 13:51:53.472426 line       496                         i_j_list.append((
excute 13:51:53.476414 line       497                             i, j,
excute 13:51:53.479438 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.483432 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0)]
excute 13:51:53.486419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:53.491376 line       494                         if (i == j):
excute 13:51:53.495362 line       496                         i_j_list.append((
excute 13:51:53.498356 line       497                             i, j,
excute 13:51:53.502346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.505337 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:51:53.511320 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:53.514313 line       494                         if (i == j):
excute 13:51:53.518302 line       496                         i_j_list.append((
excute 13:51:53.522291 line       497                             i, j,
excute 13:51:53.525284 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.531164 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:51:53.535191 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:53.539178 line       494                         if (i == j):
excute 13:51:53.543136 line       496                         i_j_list.append((
excute 13:51:53.547126 line       497                             i, j,
excute 13:51:53.550118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.554107 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:53.558096 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:53.562086 line       494                         if (i == j):
excute 13:51:53.566075 line       496                         i_j_list.append((
excute 13:51:53.570064 line       497                             i, j,
excute 13:51:53.574053 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.577046 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:53.581035 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:53.586182 line       494                         if (i == j):
excute 13:51:53.590174 line       495                             continue
excute 13:51:53.594163 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:53.597186 line       494                         if (i == j):
excute 13:51:53.601157 line       496                         i_j_list.append((
excute 13:51:53.605134 line       497                             i, j,
excute 13:51:53.608157 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.613113 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:51:53.616136 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:53.620096 line       494                         if (i == j):
excute 13:51:53.624084 line       496                         i_j_list.append((
excute 13:51:53.627106 line       497                             i, j,
excute 13:51:53.631098 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.634089 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:51:53.638077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:53.642036 line       494                         if (i == j):
excute 13:51:53.646026 line       496                         i_j_list.append((
excute 13:51:53.649047 line       497                             i, j,
excute 13:51:53.653038 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.656994 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:51:53.659987 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:53.664009 line       494                         if (i == j):
excute 13:51:53.668963 line       496                         i_j_list.append((
excute 13:51:53.671986 line       497                             i, j,
excute 13:51:53.675976 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.678970 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:51:53.682958 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:53.686917 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:53.689939 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:53.693928 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:53.697919 line       494                         if (i == j):
excute 13:51:53.701876 line       496                         i_j_list.append((
excute 13:51:53.704898 line       497                             i, j,
excute 13:51:53.708888 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.711880 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0)]
excute 13:51:53.716867 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:53.720857 line       494                         if (i == j):
excute 13:51:53.724815 line       496                         i_j_list.append((
excute 13:51:53.727838 line       497                             i, j,
excute 13:51:53.731826 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.735786 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0)]
excute 13:51:53.738777 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:53.742767 line       494                         if (i == j):
excute 13:51:53.747752 line       496                         i_j_list.append((
excute 13:51:53.753737 line       497                             i, j,
excute 13:51:53.757727 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.762715 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0)]
excute 13:51:53.765706 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:53.770694 line       494                         if (i == j):
excute 13:51:53.775680 line       496                         i_j_list.append((
excute 13:51:53.779669 line       497                             i, j,
excute 13:51:53.782661 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.786650 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:51:53.791635 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:53.797620 line       494                         if (i == j):
excute 13:51:53.801609 line       496                         i_j_list.append((
excute 13:51:53.805600 line       497                             i, j,
excute 13:51:53.809589 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.813578 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:51:53.819560 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:53.823550 line       494                         if (i == j):
excute 13:51:53.827539 line       496                         i_j_list.append((
excute 13:51:53.831529 line       497                             i, j,
excute 13:51:53.838510 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.842499 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:51:53.850479 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:53.854467 line       494                         if (i == j):
excute 13:51:53.858456 line       495                             continue
excute 13:51:53.861448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:53.864440 line       494                         if (i == j):
excute 13:51:53.868429 line       496                         i_j_list.append((
excute 13:51:53.872436 line       497                             i, j,
excute 13:51:53.875442 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.879433 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0)]
excute 13:51:53.882425 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:53.887412 line       494                         if (i == j):
excute 13:51:53.891375 line       496                         i_j_list.append((
excute 13:51:53.894394 line       497                             i, j,
excute 13:51:53.897385 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.901341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0)]
excute 13:51:53.904334 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:53.908323 line       494                         if (i == j):
excute 13:51:53.912313 line       496                         i_j_list.append((
excute 13:51:53.916301 line       497                             i, j,
excute 13:51:53.920293 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.924281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:51:53.927304 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:53.931262 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:53.934287 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:53.938276 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:53.942271 line       494                         if (i == j):
excute 13:51:53.946224 line       496                         i_j_list.append((
excute 13:51:53.950246 line       497                             i, j,
excute 13:51:53.954201 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.958191 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0)]
excute 13:51:53.961214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:53.965203 line       494                         if (i == j):
excute 13:51:53.969193 line       496                         i_j_list.append((
excute 13:51:53.973182 line       497                             i, j,
excute 13:51:53.977141 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:53.981131 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:51:53.984122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:53.988112 line       494                         if (i == j):
excute 13:51:53.992101 line       496                         i_j_list.append((
excute 13:51:53.996090 line       497                             i, j,
excute 13:51:54.000079 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.004068 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:54.008058 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:54.013044 line       494                         if (i == j):
excute 13:51:54.017033 line       496                         i_j_list.append((
excute 13:51:54.020026 line       497                             i, j,
excute 13:51:54.026040 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.030032 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:54.033022 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:54.037012 line       494                         if (i == j):
excute 13:51:54.041002 line       496                         i_j_list.append((
excute 13:51:54.044992 line       497                             i, j,
excute 13:51:54.047981 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.051971 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:54.055960 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:54.059920 line       494                         if (i == j):
excute 13:51:54.063909 line       496                         i_j_list.append((
excute 13:51:54.067898 line       497                             i, j,
excute 13:51:54.071886 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.074878 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:54.077870 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:54.081859 line       494                         if (i == j):
excute 13:51:54.085849 line       496                         i_j_list.append((
excute 13:51:54.088841 line       497                             i, j,
excute 13:51:54.092829 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.095822 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:54.099811 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:54.103801 line       494                         if (i == j):
excute 13:51:54.107789 line       495                             continue
excute 13:51:54.111779 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:54.114771 line       494                         if (i == j):
excute 13:51:54.118760 line       496                         i_j_list.append((
excute 13:51:54.122752 line       497                             i, j,
excute 13:51:54.127760 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.130731 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:51:54.134719 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:54.139707 line       494                         if (i == j):
excute 13:51:54.143697 line       496                         i_j_list.append((
excute 13:51:54.147683 line       497                             i, j,
excute 13:51:54.151672 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.155663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:51:54.159651 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:54.163640 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:54.166633 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:54.170621 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:54.174612 line       494                         if (i == j):
excute 13:51:54.177603 line       496                         i_j_list.append((
excute 13:51:54.181592 line       497                             i, j,
excute 13:51:54.184584 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.187577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0)]
excute 13:51:54.191565 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:54.195555 line       494                         if (i == j):
excute 13:51:54.199545 line       496                         i_j_list.append((
excute 13:51:54.202536 line       497                             i, j,
excute 13:51:54.206526 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.209517 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:51:54.212510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:54.216499 line       494                         if (i == j):
excute 13:51:54.220503 line       496                         i_j_list.append((
excute 13:51:54.224511 line       497                             i, j,
excute 13:51:54.227502 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.232490 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:51:54.235480 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:54.239470 line       494                         if (i == j):
excute 13:51:54.243460 line       496                         i_j_list.append((
excute 13:51:54.247448 line       497                             i, j,
excute 13:51:54.250441 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.254430 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:51:54.258388 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:54.262379 line       494                         if (i == j):
excute 13:51:54.266368 line       496                         i_j_list.append((
excute 13:51:54.270357 line       497                             i, j,
excute 13:51:54.274346 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.277338 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:51:54.281327 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:54.286315 line       494                         if (i == j):
excute 13:51:54.291301 line       496                         i_j_list.append((
excute 13:51:54.298284 line       497                             i, j,
excute 13:51:54.301275 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.305264 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:51:54.308256 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:54.312245 line       494                         if (i == j):
excute 13:51:54.316234 line       496                         i_j_list.append((
excute 13:51:54.320223 line       497                             i, j,
excute 13:51:54.324213 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.331194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:51:54.338175 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:54.344159 line       494                         if (i == j):
excute 13:51:54.348147 line       496                         i_j_list.append((
excute 13:51:54.351139 line       497                             i, j,
excute 13:51:54.355130 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.359119 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:51:54.363107 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:54.367097 line       494                         if (i == j):
excute 13:51:54.371086 line       495                             continue
excute 13:51:54.375077 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:54.379066 line       494                         if (i == j):
excute 13:51:54.383057 line       496                         i_j_list.append((
excute 13:51:54.387045 line       497                             i, j,
excute 13:51:54.392037 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.395024 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:51:54.399013 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:54.403999 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:54.406992 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:54.411978 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:54.414970 line       494                         if (i == j):
excute 13:51:54.419959 line       496                         i_j_list.append((
excute 13:51:54.422950 line       497                             i, j,
excute 13:51:54.426938 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.430928 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0)]
excute 13:51:54.435914 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:54.439903 line       494                         if (i == j):
excute 13:51:54.443892 line       496                         i_j_list.append((
excute 13:51:54.447881 line       497                             i, j,
excute 13:51:54.451871 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.455861 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:51:54.459851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:54.463841 line       494                         if (i == j):
excute 13:51:54.467829 line       496                         i_j_list.append((
excute 13:51:54.471819 line       497                             i, j,
excute 13:51:54.475809 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.479798 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:51:54.482787 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:54.486793 line       494                         if (i == j):
excute 13:51:54.490766 line       496                         i_j_list.append((
excute 13:51:54.493758 line       497                             i, j,
excute 13:51:54.497748 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.500739 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:54.504728 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:54.508718 line       494                         if (i == j):
excute 13:51:54.512716 line       496                         i_j_list.append((
excute 13:51:54.516699 line       497                             i, j,
excute 13:51:54.519690 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.523679 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:54.527668 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:54.531659 line       494                         if (i == j):
excute 13:51:54.535648 line       496                         i_j_list.append((
excute 13:51:54.539637 line       497                             i, j,
excute 13:51:54.543658 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.546649 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:54.550638 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:54.554598 line       494                         if (i == j):
excute 13:51:54.558615 line       496                         i_j_list.append((
excute 13:51:54.562576 line       497                             i, j,
excute 13:51:54.565598 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.569555 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:51:54.572580 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:54.576569 line       494                         if (i == j):
excute 13:51:54.580559 line       496                         i_j_list.append((
excute 13:51:54.584547 line       497                             i, j,
excute 13:51:54.587538 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.591530 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:51:54.594521 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:54.598510 line       494                         if (i == j):
excute 13:51:54.602499 line       496                         i_j_list.append((
excute 13:51:54.606456 line       497                             i, j,
excute 13:51:54.609449 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:54.613438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:51:54.616430 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:54.620419 line       494                         if (i == j):
excute 13:51:54.624408 line       495                             continue
excute 13:51:54.628398 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:54.631390 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:54.635380 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:51:54.639370 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:54.643375 line       505                     if (self.RELOCATE):
excute 13:51:54.647380 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:54.651369 line       505                     if (self.RELOCATE):
excute 13:51:54.655362 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:54.659347 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:51:54.663306 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:54.667297 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:54.671290 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.675275 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:51:54.679264 line       556                     i = i_j[0]
excute 13:51:54.683254 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:54.687243 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.691232 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:51:54.695221 line       556                     i = i_j[0]
excute 13:51:54.699241 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:54.703231 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.707189 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:51:54.710211 line       556                     i = i_j[0]
excute 13:51:54.714201 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:54.718189 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.722149 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:51:54.725173 line       556                     i = i_j[0]
excute 13:51:54.729161 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:54.733149 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.737122 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:51:54.741097 line       556                     i = i_j[0]
excute 13:51:54.746085 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:54.750105 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.754096 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:51:54.757086 line       556                     i = i_j[0]
excute 13:51:54.762042 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:54.765033 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.769022 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:51:54.773044 line       556                     i = i_j[0]
excute 13:51:54.777002 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:54.780026 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.783984 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:51:54.787973 line       556                     i = i_j[0]
excute 13:51:54.791962 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:54.795983 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.799940 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:51:54.802963 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:54.810911 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:54.814907 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.818891 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:54.821913 line       556                     i = i_j[0]
excute 13:51:54.826871 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:54.829859 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.833849 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:54.836872 line       556                     i = i_j[0]
excute 13:51:54.840862 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:54.844852 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.849838 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:54.853828 line       556                     i = i_j[0]
excute 13:51:54.857816 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:54.861807 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.865765 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:54.868788 line       556                     i = i_j[0]
excute 13:51:54.872776 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:54.876766 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.880757 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:54.883749 line       556                     i = i_j[0]
excute 13:51:54.887737 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:54.891728 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.895685 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:51:54.898708 line       556                     i = i_j[0]
excute 13:51:54.902702 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:54.906686 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.910643 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:54.913636 line       556                     i = i_j[0]
excute 13:51:54.917625 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:54.921614 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.925604 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:54.928595 line       556                     i = i_j[0]
excute 13:51:54.932585 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:54.936575 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.939566 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:51:54.960514 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:54.967492 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:54.972479 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.976500 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:54.980489 line       556                     i = i_j[0]
excute 13:51:54.984446 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:54.988437 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:54.992426 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:54.996449 line       556                     i = i_j[0]
excute 13:51:55.000405 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:55.004395 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.008415 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:55.011407 line       556                     i = i_j[0]
excute 13:51:55.015395 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:55.019386 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.023344 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:55.026365 line       556                     i = i_j[0]
excute 13:51:55.030357 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:55.034346 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.038304 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:51:55.041326 line       556                     i = i_j[0]
excute 13:51:55.045315 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:55.049304 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.055291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:51:55.058281 line       556                     i = i_j[0]
excute 13:51:55.062271 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:55.066261 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.070252 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:55.074208 line       556                     i = i_j[0]
excute 13:51:55.078198 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:55.082187 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.086177 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:51:55.089168 line       556                     i = i_j[0]
excute 13:51:55.094154 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:55.097147 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.102134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:51:55.106121 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:55.110110 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:55.114100 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.118089 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:55.121081 line       556                     i = i_j[0]
excute 13:51:55.125074 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:55.129083 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.133050 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:55.136073 line       556                     i = i_j[0]
excute 13:51:55.140062 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:55.144052 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.148011 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:55.152030 line       556                     i = i_j[0]
excute 13:51:55.156988 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:55.160976 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.164964 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:55.168955 line       556                     i = i_j[0]
excute 13:51:55.172942 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:55.175936 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.179925 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:55.184911 line       556                     i = i_j[0]
excute 13:51:55.188901 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:55.191923 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.195899 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:55.199870 line       556                     i = i_j[0]
excute 13:51:55.203861 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:55.206852 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.214856 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:55.222810 line       556                     i = i_j[0]
excute 13:51:55.226800 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:55.230789 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.234779 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:55.238805 line       556                     i = i_j[0]
excute 13:51:55.242757 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:55.245780 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.249738 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:51:55.252760 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:55.258724 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:55.262702 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.266691 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:55.269684 line       556                     i = i_j[0]
excute 13:51:55.273673 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:55.277662 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.281652 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:55.284644 line       556                     i = i_j[0]
excute 13:51:55.288633 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:55.292622 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.296644 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:55.300633 line       556                     i = i_j[0]
excute 13:51:55.304592 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:55.308580 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.313569 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:55.317555 line       556                     i = i_j[0]
excute 13:51:55.321579 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:55.324570 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.334512 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:55.340495 line       556                     i = i_j[0]
excute 13:51:55.346514 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:55.349503 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.354458 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:51:55.359449 line       556                     i = i_j[0]
excute 13:51:55.363435 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:55.366457 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.370448 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:55.374435 line       556                     i = i_j[0]
excute 13:51:55.378393 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:55.382382 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.387404 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:55.390393 line       556                     i = i_j[0]
excute 13:51:55.394384 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:55.398372 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.402331 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:51:55.405354 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:55.409342 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:55.413333 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.418322 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:51:55.421311 line       556                     i = i_j[0]
excute 13:51:55.425267 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:55.429286 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.433267 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:51:55.436270 line       556                     i = i_j[0]
excute 13:51:55.440256 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:55.444217 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.448210 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:51:55.452197 line       556                     i = i_j[0]
excute 13:51:55.456187 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:55.460175 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.465163 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:51:55.470150 line       556                     i = i_j[0]
excute 13:51:55.474146 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:55.478128 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.482115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:51:55.486105 line       556                     i = i_j[0]
excute 13:51:55.490095 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:55.493087 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.497076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:51:55.500068 line       556                     i = i_j[0]
excute 13:51:55.505055 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:55.508046 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.512035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:51:55.516025 line       556                     i = i_j[0]
excute 13:51:55.520021 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:55.523007 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.526996 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:51:55.529988 line       556                     i = i_j[0]
excute 13:51:55.533977 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:55.537966 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.541956 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:51:55.544950 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:55.549937 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:55.553926 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.558913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:51:55.561904 line       556                     i = i_j[0]
excute 13:51:55.567887 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:55.570910 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.575867 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:51:55.578859 line       556                     i = i_j[0]
excute 13:51:55.582848 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:55.586837 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.590827 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:51:55.594816 line       556                     i = i_j[0]
excute 13:51:55.598805 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:55.603792 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.607781 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:51:55.610774 line       556                     i = i_j[0]
excute 13:51:55.614763 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:55.618752 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.622742 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:51:55.626731 line       556                     i = i_j[0]
excute 13:51:55.630719 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:55.634740 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.638697 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:51:55.641722 line       556                     i = i_j[0]
excute 13:51:55.645710 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:55.649701 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.653658 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:51:55.657680 line       556                     i = i_j[0]
excute 13:51:55.661669 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:55.664628 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.670612 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:51:55.673604 line       556                     i = i_j[0]
excute 13:51:55.678591 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:55.681582 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.685572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:51:55.688564 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:55.692553 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:55.696542 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.701529 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:55.704521 line       556                     i = i_j[0]
excute 13:51:55.708510 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:55.712499 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.717489 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:55.721493 line       556                     i = i_j[0]
excute 13:51:55.725472 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:55.728489 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.732480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:55.736465 line       556                     i = i_j[0]
excute 13:51:55.740426 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:55.743449 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.747439 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:55.751428 line       556                     i = i_j[0]
excute 13:51:55.755419 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:55.759407 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.763370 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:55.767354 line       556                     i = i_j[0]
excute 13:51:55.772343 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:55.775334 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.780320 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:51:55.784308 line       556                     i = i_j[0]
excute 13:51:55.788308 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:55.792294 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.795280 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:51:55.799269 line       556                     i = i_j[0]
excute 13:51:55.803260 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:55.807278 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.814229 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:55.818249 line       556                     i = i_j[0]
excute 13:51:55.822207 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:55.826196 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.829220 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 2, 0)
excute 13:51:55.833210 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:51:55.837168 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:55.841157 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.845147 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 2, 0)
excute 13:51:55.848169 line       556                     i = i_j[0]
excute 13:51:55.852160 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:55.857114 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.861105 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 2, 0)
excute 13:51:55.865094 line       556                     i = i_j[0]
excute 13:51:55.869082 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:55.874069 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.879057 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 2, 0)
excute 13:51:55.882048 line       556                     i = i_j[0]
excute 13:51:55.887033 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:55.891024 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.894017 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 2, 0)
excute 13:51:55.898005 line       556                     i = i_j[0]
excute 13:51:55.901997 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:55.905984 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.909980 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 2, 0)
excute 13:51:55.912966 line       556                     i = i_j[0]
excute 13:51:55.917953 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:55.920945 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.924933 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 2, 0)
excute 13:51:55.928923 line       556                     i = i_j[0]
excute 13:51:55.933910 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:55.937898 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.941889 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 2, 0)
excute 13:51:55.944881 line       556                     i = i_j[0]
excute 13:51:55.950864 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:55.953886 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.958843 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 2, 0)
excute 13:51:55.961865 line       556                     i = i_j[0]
excute 13:51:55.965833 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:55.969812 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.973801 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 0)
excute 13:51:55.977792 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:51:55.981780 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:55.985770 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:55.989759 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:51:55.992751 line       556                     i = i_j[0]
excute 13:51:55.996740 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:56.000734 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:56.003721 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:51:56.007710 line       556                     i = i_j[0]
excute 13:51:56.011700 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:56.015689 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:56.019679 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:51:56.022671 line       556                     i = i_j[0]
excute 13:51:56.026660 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:56.030649 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:56.034640 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:51:56.037631 line       556                     i = i_j[0]
excute 13:51:56.041620 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:56.044612 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:56.048601 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:51:56.052590 line       556                     i = i_j[0]
excute 13:51:56.056580 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:56.060571 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:56.065570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 0)
excute 13:51:56.068550 line       556                     i = i_j[0]
excute 13:51:56.073550 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:56.077525 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:56.081547 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:51:56.085539 line       556                     i = i_j[0]
excute 13:51:56.089493 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:56.092516 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:56.096506 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 0)
excute 13:51:56.100464 line       556                     i = i_j[0]
excute 13:51:56.106449 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:56.110436 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:56.118415 line       555                 for i_j in i_j_list:
excute 13:51:56.121406 line       581             self.write_matrix(
excute 13:51:56.125396 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:51:56.129387 line       583                 result_file_path,
excute 13:51:56.132409 line       584                 mode='a'
excute 13:51:56.142381 line       488         for t in time_steps:
excute Modified var:.. t = 179
excute 13:51:56.149394 line       489             if (t != self.TIME + 1):
excute 13:51:56.155347 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:51:56.160368 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:51:56.164322 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:51:56.168311 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:56.172300 line       494                         if (i == j):
excute 13:51:56.177290 line       495                             continue
excute 13:51:56.180279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:56.186264 line       494                         if (i == j):
excute 13:51:56.190254 line       496                         i_j_list.append((
excute 13:51:56.194275 line       497                             i, j,
excute 13:51:56.199230 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.211201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:51:56.218178 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:56.227154 line       494                         if (i == j):
excute 13:51:56.234135 line       496                         i_j_list.append((
excute 13:51:56.240124 line       497                             i, j,
excute 13:51:56.246104 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.250095 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:51:56.255080 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:56.259069 line       494                         if (i == j):
excute 13:51:56.263057 line       496                         i_j_list.append((
excute 13:51:56.267047 line       497                             i, j,
excute 13:51:56.273066 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.280016 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:51:56.284001 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:56.289987 line       494                         if (i == j):
excute 13:51:56.294972 line       496                         i_j_list.append((
excute 13:51:56.298962 line       497                             i, j,
excute 13:51:56.301953 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.307937 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:51:56.313922 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:56.321903 line       494                         if (i == j):
excute 13:51:56.327886 line       496                         i_j_list.append((
excute 13:51:56.335865 line       497                             i, j,
excute 13:51:56.340850 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.345836 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:51:56.349827 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:56.353816 line       494                         if (i == j):
excute 13:51:56.358803 line       496                         i_j_list.append((
excute 13:51:56.362792 line       497                             i, j,
excute 13:51:56.366783 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.371767 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:51:56.377752 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:56.385731 line       494                         if (i == j):
excute 13:51:56.391714 line       496                         i_j_list.append((
excute 13:51:56.395703 line       497                             i, j,
excute 13:51:56.399694 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.405677 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1)]
excute 13:51:56.409666 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:56.413657 line       494                         if (i == j):
excute 13:51:56.418643 line       496                         i_j_list.append((
excute 13:51:56.422631 line       497                             i, j,
excute 13:51:56.427619 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.435598 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0)]
excute 13:51:56.441582 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:56.445570 line       494                         if (i == j):
excute 13:51:56.451555 line       496                         i_j_list.append((
excute 13:51:56.455544 line       497                             i, j,
excute 13:51:56.459533 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.468509 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:51:56.473498 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:56.478483 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:51:56.483470 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:56.491449 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:56.500424 line       494                         if (i == j):
excute 13:51:56.507406 line       496                         i_j_list.append((
excute 13:51:56.515383 line       497                             i, j,
excute 13:51:56.525357 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.531341 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1)]
excute 13:51:56.537325 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:56.543309 line       494                         if (i == j):
excute 13:51:56.549295 line       495                             continue
excute 13:51:56.557282 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:56.562258 line       494                         if (i == j):
excute 13:51:56.569240 line       496                         i_j_list.append((
excute 13:51:56.575224 line       497                             i, j,
excute 13:51:56.580210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.586194 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0)]
excute 13:51:56.592179 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:56.599161 line       494                         if (i == j):
excute 13:51:56.608136 line       496                         i_j_list.append((
excute 13:51:56.613124 line       497                             i, j,
excute 13:51:56.619107 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.625090 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:51:56.631075 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:56.637060 line       494                         if (i == j):
excute 13:51:56.643043 line       496                         i_j_list.append((
excute 13:51:56.651020 line       497                             i, j,
excute 13:51:56.658003 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.663986 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:51:56.671964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:56.677949 line       494                         if (i == j):
excute 13:51:56.684930 line       496                         i_j_list.append((
excute 13:51:56.690914 line       497                             i, j,
excute 13:51:56.696899 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.703881 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:51:56.711860 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:56.718839 line       494                         if (i == j):
excute 13:51:56.725821 line       496                         i_j_list.append((
excute 13:51:56.732802 line       497                             i, j,
excute 13:51:56.738787 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.744771 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:51:56.750754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:56.757737 line       494                         if (i == j):
excute 13:51:56.766712 line       496                         i_j_list.append((
excute 13:51:56.772697 line       497                             i, j,
excute 13:51:56.778680 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.784663 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1)]
excute 13:51:56.791645 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:56.797630 line       494                         if (i == j):
excute 13:51:56.806606 line       496                         i_j_list.append((
excute 13:51:56.812591 line       497                             i, j,
excute 13:51:56.816579 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.819570 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0)]
excute 13:51:56.826552 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:56.831539 line       494                         if (i == j):
excute 13:51:56.835527 line       496                         i_j_list.append((
excute 13:51:56.838519 line       497                             i, j,
excute 13:51:56.842509 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.845500 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:51:56.849490 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:56.853481 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:51:56.856471 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:56.861460 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:56.866445 line       494                         if (i == j):
excute 13:51:56.870434 line       496                         i_j_list.append((
excute 13:51:56.875422 line       497                             i, j,
excute 13:51:56.880407 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.884398 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1)]
excute 13:51:56.888386 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:56.893373 line       494                         if (i == j):
excute 13:51:56.898361 line       496                         i_j_list.append((
excute 13:51:56.903347 line       497                             i, j,
excute 13:51:56.908334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.912322 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0)]
excute 13:51:56.917309 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:56.921308 line       494                         if (i == j):
excute 13:51:56.926286 line       495                             continue
excute 13:51:56.929277 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:56.933266 line       494                         if (i == j):
excute 13:51:56.938253 line       496                         i_j_list.append((
excute 13:51:56.942242 line       497                             i, j,
excute 13:51:56.947229 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.951219 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:51:56.955208 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:56.960195 line       494                         if (i == j):
excute 13:51:56.964184 line       496                         i_j_list.append((
excute 13:51:56.968174 line       497                             i, j,
excute 13:51:56.971164 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.975155 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:51:56.979145 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:56.983134 line       494                         if (i == j):
excute 13:51:56.987123 line       496                         i_j_list.append((
excute 13:51:56.991113 line       497                             i, j,
excute 13:51:56.995103 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:56.999091 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:51:57.002082 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:57.006071 line       494                         if (i == j):
excute 13:51:57.011058 line       496                         i_j_list.append((
excute 13:51:57.015049 line       497                             i, j,
excute 13:51:57.019039 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.023028 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:51:57.026019 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:57.031005 line       494                         if (i == j):
excute 13:51:57.034996 line       496                         i_j_list.append((
excute 13:51:57.037987 line       497                             i, j,
excute 13:51:57.041978 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.045967 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1)]
excute 13:51:57.049955 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:57.053947 line       494                         if (i == j):
excute 13:51:57.057935 line       496                         i_j_list.append((
excute 13:51:57.060925 line       497                             i, j,
excute 13:51:57.064916 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.067906 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0)]
excute 13:51:57.071908 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:57.075887 line       494                         if (i == j):
excute 13:51:57.079885 line       496                         i_j_list.append((
excute 13:51:57.082867 line       497                             i, j,
excute 13:51:57.086858 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.089849 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:51:57.093838 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:57.097828 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:51:57.100819 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:57.105805 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:57.108829 line       494                         if (i == j):
excute 13:51:57.113785 line       496                         i_j_list.append((
excute 13:51:57.117774 line       497                             i, j,
excute 13:51:57.121764 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.124755 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1)]
excute 13:51:57.128745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:57.132734 line       494                         if (i == j):
excute 13:51:57.136724 line       496                         i_j_list.append((
excute 13:51:57.140713 line       497                             i, j,
excute 13:51:57.144702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.148692 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0)]
excute 13:51:57.152681 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:57.157667 line       494                         if (i == j):
excute 13:51:57.160660 line       496                         i_j_list.append((
excute 13:51:57.165646 line       497                             i, j,
excute 13:51:57.169634 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.172626 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0)]
excute 13:51:57.176617 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:57.180605 line       494                         if (i == j):
excute 13:51:57.184594 line       495                             continue
excute 13:51:57.188584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:57.191576 line       494                         if (i == j):
excute 13:51:57.195568 line       496                         i_j_list.append((
excute 13:51:57.198557 line       497                             i, j,
excute 13:51:57.202547 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.205539 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0)]
excute 13:51:57.209529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:57.213518 line       494                         if (i == j):
excute 13:51:57.218505 line       496                         i_j_list.append((
excute 13:51:57.221497 line       497                             i, j,
excute 13:51:57.225487 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.229476 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0)]
excute 13:51:57.233465 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:57.237454 line       494                         if (i == j):
excute 13:51:57.241444 line       496                         i_j_list.append((
excute 13:51:57.245433 line       497                             i, j,
excute 13:51:57.249423 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.253412 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0)]
excute 13:51:57.257402 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:57.261389 line       494                         if (i == j):
excute 13:51:57.265378 line       496                         i_j_list.append((
excute 13:51:57.269368 line       497                             i, j,
excute 13:51:57.272361 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.277348 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1)]
excute 13:51:57.281336 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:57.285325 line       494                         if (i == j):
excute 13:51:57.289316 line       496                         i_j_list.append((
excute 13:51:57.294302 line       497                             i, j,
excute 13:51:57.298291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.302281 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0)]
excute 13:51:57.306271 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:57.310258 line       494                         if (i == j):
excute 13:51:57.314250 line       496                         i_j_list.append((
excute 13:51:57.319236 line       497                             i, j,
excute 13:51:57.323227 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.329208 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0)]
excute 13:51:57.336189 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:57.341179 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:51:57.345166 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:57.350152 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:57.354143 line       494                         if (i == j):
excute 13:51:57.358130 line       496                         i_j_list.append((
excute 13:51:57.362120 line       497                             i, j,
excute 13:51:57.366118 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.369100 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1)]
excute 13:51:57.373091 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:57.377083 line       494                         if (i == j):
excute 13:51:57.381070 line       496                         i_j_list.append((
excute 13:51:57.385059 line       497                             i, j,
excute 13:51:57.389049 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.392040 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0)]
excute 13:51:57.396030 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:57.400019 line       494                         if (i == j):
excute 13:51:57.403011 line       496                         i_j_list.append((
excute 13:51:57.407001 line       497                             i, j,
excute 13:51:57.409992 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.414017 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:51:57.417972 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:57.422957 line       494                         if (i == j):
excute 13:51:57.427944 line       496                         i_j_list.append((
excute 13:51:57.431935 line       497                             i, j,
excute 13:51:57.435924 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.438915 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:51:57.442905 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:57.446895 line       494                         if (i == j):
excute 13:51:57.451882 line       495                             continue
excute 13:51:57.455871 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:57.459860 line       494                         if (i == j):
excute 13:51:57.463850 line       496                         i_j_list.append((
excute 13:51:57.467838 line       497                             i, j,
excute 13:51:57.471827 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.475816 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:51:57.479806 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:57.483796 line       494                         if (i == j):
excute 13:51:57.488782 line       496                         i_j_list.append((
excute 13:51:57.491775 line       497                             i, j,
excute 13:51:57.495764 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.498756 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:51:57.502745 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:57.506734 line       494                         if (i == j):
excute 13:51:57.511722 line       496                         i_j_list.append((
excute 13:51:57.514713 line       497                             i, j,
excute 13:51:57.518702 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.523689 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1)]
excute 13:51:57.526680 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:57.530670 line       494                         if (i == j):
excute 13:51:57.534661 line       496                         i_j_list.append((
excute 13:51:57.537651 line       497                             i, j,
excute 13:51:57.541641 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.544632 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0)]
excute 13:51:57.548622 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:57.552613 line       494                         if (i == j):
excute 13:51:57.556601 line       496                         i_j_list.append((
excute 13:51:57.560589 line       497                             i, j,
excute 13:51:57.566576 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.570562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:51:57.576547 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:57.581533 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:51:57.585523 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:57.591508 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:57.595527 line       494                         if (i == j):
excute 13:51:57.599517 line       496                         i_j_list.append((
excute 13:51:57.603506 line       497                             i, j,
excute 13:51:57.609459 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.613450 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1)]
excute 13:51:57.618440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:57.624423 line       494                         if (i == j):
excute 13:51:57.629406 line       496                         i_j_list.append((
excute 13:51:57.635390 line       497                             i, j,
excute 13:51:57.639380 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.643369 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0)]
excute 13:51:57.647359 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:57.651379 line       494                         if (i == j):
excute 13:51:57.655368 line       496                         i_j_list.append((
excute 13:51:57.659356 line       497                             i, j,
excute 13:51:57.662348 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.666339 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:51:57.670328 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:57.674286 line       494                         if (i == j):
excute 13:51:57.678278 line       496                         i_j_list.append((
excute 13:51:57.682263 line       497                             i, j,
excute 13:51:57.685291 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.688279 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:51:57.692268 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:57.696227 line       494                         if (i == j):
excute 13:51:57.700248 line       496                         i_j_list.append((
excute 13:51:57.704206 line       497                             i, j,
excute 13:51:57.708196 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.712185 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:51:57.716172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:57.720164 line       494                         if (i == j):
excute 13:51:57.725150 line       495                             continue
excute 13:51:57.729139 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:57.733129 line       494                         if (i == j):
excute 13:51:57.738115 line       496                         i_j_list.append((
excute 13:51:57.742104 line       497                             i, j,
excute 13:51:57.745096 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.749085 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:51:57.757099 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:57.762053 line       494                         if (i == j):
excute 13:51:57.768035 line       496                         i_j_list.append((
excute 13:51:57.772025 line       497                             i, j,
excute 13:51:57.775018 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.779007 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1)]
excute 13:51:57.781999 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:57.786984 line       494                         if (i == j):
excute 13:51:57.790975 line       496                         i_j_list.append((
excute 13:51:57.794964 line       497                             i, j,
excute 13:51:57.798954 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.801945 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0)]
excute 13:51:57.805935 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:57.809925 line       494                         if (i == j):
excute 13:51:57.813912 line       496                         i_j_list.append((
excute 13:51:57.816906 line       497                             i, j,
excute 13:51:57.820894 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.828872 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:51:57.834858 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:57.838846 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:51:57.842836 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:57.847822 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:57.850814 line       494                         if (i == j):
excute 13:51:57.855802 line       496                         i_j_list.append((
excute 13:51:57.858792 line       497                             i, j,
excute 13:51:57.862781 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.865774 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1)]
excute 13:51:57.869763 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:57.873754 line       494                         if (i == j):
excute 13:51:57.877742 line       496                         i_j_list.append((
excute 13:51:57.880734 line       497                             i, j,
excute 13:51:57.885720 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.889710 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0)]
excute 13:51:57.893699 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:57.898687 line       494                         if (i == j):
excute 13:51:57.905667 line       496                         i_j_list.append((
excute 13:51:57.910654 line       497                             i, j,
excute 13:51:57.915641 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.920631 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0)]
excute 13:51:57.924637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:57.930603 line       494                         if (i == j):
excute 13:51:57.937582 line       496                         i_j_list.append((
excute 13:51:57.942570 line       497                             i, j,
excute 13:51:57.947557 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.951548 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:51:57.957529 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:57.964513 line       494                         if (i == j):
excute 13:51:57.969496 line       496                         i_j_list.append((
excute 13:51:57.973486 line       497                             i, j,
excute 13:51:57.978472 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:57.981464 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:51:57.985453 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:57.989442 line       494                         if (i == j):
excute 13:51:57.993435 line       496                         i_j_list.append((
excute 13:51:57.996425 line       497                             i, j,
excute 13:51:58.000415 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.003406 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:51:58.007395 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:58.012382 line       494                         if (i == j):
excute 13:51:58.015374 line       495                             continue
excute 13:51:58.019363 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:58.023352 line       494                         if (i == j):
excute 13:51:58.027343 line       496                         i_j_list.append((
excute 13:51:58.031332 line       497                             i, j,
excute 13:51:58.034324 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.039311 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1)]
excute 13:51:58.043330 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:58.047289 line       494                         if (i == j):
excute 13:51:58.051279 line       496                         i_j_list.append((
excute 13:51:58.054300 line       497                             i, j,
excute 13:51:58.058290 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.061282 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0)]
excute 13:51:58.065274 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:58.069232 line       494                         if (i == j):
excute 13:51:58.073219 line       496                         i_j_list.append((
excute 13:51:58.077208 line       497                             i, j,
excute 13:51:58.080231 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.083223 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:51:58.087214 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:58.091172 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:51:58.094194 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:58.098183 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:58.102173 line       494                         if (i == j):
excute 13:51:58.108126 line       496                         i_j_list.append((
excute 13:51:58.112116 line       497                             i, j,
excute 13:51:58.115109 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.119097 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1)]
excute 13:51:58.123087 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:58.127075 line       494                         if (i == j):
excute 13:51:58.131065 line       496                         i_j_list.append((
excute 13:51:58.135055 line       497                             i, j,
excute 13:51:58.139044 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.144060 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0)]
excute 13:51:58.148054 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:58.152009 line       494                         if (i == j):
excute 13:51:58.155998 line       496                         i_j_list.append((
excute 13:51:58.159020 line       497                             i, j,
excute 13:51:58.163010 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.166968 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:51:58.169991 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:58.173949 line       494                         if (i == j):
excute 13:51:58.177943 line       496                         i_j_list.append((
excute 13:51:58.180961 line       497                             i, j,
excute 13:51:58.184953 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.187947 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:51:58.191933 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:58.195892 line       494                         if (i == j):
excute 13:51:58.199882 line       496                         i_j_list.append((
excute 13:51:58.203904 line       497                             i, j,
excute 13:51:58.206893 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.210882 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:51:58.213874 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:58.217863 line       494                         if (i == j):
excute 13:51:58.221854 line       496                         i_j_list.append((
excute 13:51:58.225843 line       497                             i, j,
excute 13:51:58.229800 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.232826 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:51:58.236782 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:58.239805 line       494                         if (i == j):
excute 13:51:58.245758 line       496                         i_j_list.append((
excute 13:51:58.248751 line       497                             i, j,
excute 13:51:58.252740 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.256729 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:51:58.260719 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:58.264709 line       494                         if (i == j):
excute 13:51:58.268697 line       495                             continue
excute 13:51:58.271720 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:58.275713 line       494                         if (i == j):
excute 13:51:58.279668 line       496                         i_j_list.append((
excute 13:51:58.282690 line       497                             i, j,
excute 13:51:58.286679 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.290639 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:51:58.294627 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:58.298617 line       494                         if (i == j):
excute 13:51:58.302606 line       496                         i_j_list.append((
excute 13:51:58.305599 line       497                             i, j,
excute 13:51:58.309588 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.313577 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:51:58.317567 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:58.322553 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:51:58.327540 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:58.337513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:58.343499 line       494                         if (i == j):
excute 13:51:58.349513 line       496                         i_j_list.append((
excute 13:51:58.353506 line       497                             i, j,
excute 13:51:58.357491 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.361479 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1)]
excute 13:51:58.364471 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:58.369428 line       494                         if (i == j):
excute 13:51:58.372450 line       496                         i_j_list.append((
excute 13:51:58.376443 line       497                             i, j,
excute 13:51:58.380428 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.384386 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0)]
excute 13:51:58.388376 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:58.392371 line       494                         if (i == j):
excute 13:51:58.396355 line       496                         i_j_list.append((
excute 13:51:58.399379 line       497                             i, j,
excute 13:51:58.403336 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.406360 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:51:58.410318 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:58.413340 line       494                         if (i == j):
excute 13:51:58.418296 line       496                         i_j_list.append((
excute 13:51:58.421319 line       497                             i, j,
excute 13:51:58.425309 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.429267 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:51:58.433258 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:58.437248 line       494                         if (i == j):
excute 13:51:58.441236 line       496                         i_j_list.append((
excute 13:51:58.445225 line       497                             i, j,
excute 13:51:58.451210 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.455230 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:51:58.459222 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:58.463176 line       494                         if (i == j):
excute 13:51:58.467167 line       496                         i_j_list.append((
excute 13:51:58.470189 line       497                             i, j,
excute 13:51:58.474178 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.478137 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:51:58.482126 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:58.486129 line       494                         if (i == j):
excute 13:51:58.489138 line       496                         i_j_list.append((
excute 13:51:58.493127 line       497                             i, j,
excute 13:51:58.496121 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.500109 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:51:58.503101 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:58.507094 line       494                         if (i == j):
excute 13:51:58.512048 line       496                         i_j_list.append((
excute 13:51:58.516035 line       497                             i, j,
excute 13:51:58.519028 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.523017 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1)]
excute 13:51:58.527007 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:58.530996 line       494                         if (i == j):
excute 13:51:58.535983 line       495                             continue
excute 13:51:58.539008 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:58.542995 line       494                         if (i == j):
excute 13:51:58.546989 line       496                         i_j_list.append((
excute 13:51:58.549975 line       497                             i, j,
excute 13:51:58.553935 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.558922 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0)]
excute 13:51:58.562923 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:58.566909 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:51:58.570889 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:51:58.574878 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:51:58.577869 line       494                         if (i == j):
excute 13:51:58.582857 line       496                         i_j_list.append((
excute 13:51:58.585850 line       497                             i, j,
excute 13:51:58.589839 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.593828 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 1)]
excute 13:51:58.596821 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:51:58.601808 line       494                         if (i == j):
excute 13:51:58.605795 line       496                         i_j_list.append((
excute 13:51:58.609786 line       497                             i, j,
excute 13:51:58.613774 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.616767 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 1), (9, 1, 1, 0)]
excute 13:51:58.620756 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:51:58.625742 line       494                         if (i == j):
excute 13:51:58.629731 line       496                         i_j_list.append((
excute 13:51:58.632724 line       497                             i, j,
excute 13:51:58.636714 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.640703 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:51:58.644692 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:51:58.648681 line       494                         if (i == j):
excute 13:51:58.653670 line       496                         i_j_list.append((
excute 13:51:58.658653 line       497                             i, j,
excute 13:51:58.661681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.665666 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:51:58.669624 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:51:58.677607 line       494                         if (i == j):
excute 13:51:58.682589 line       496                         i_j_list.append((
excute 13:51:58.686578 line       497                             i, j,
excute 13:51:58.694558 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.698583 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:51:58.702536 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:51:58.705559 line       494                         if (i == j):
excute 13:51:58.709548 line       496                         i_j_list.append((
excute 13:51:58.713538 line       497                             i, j,
excute 13:51:58.717497 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.720519 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:51:58.724510 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:51:58.728498 line       494                         if (i == j):
excute 13:51:58.732491 line       496                         i_j_list.append((
excute 13:51:58.736477 line       497                             i, j,
excute 13:51:58.739470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.743461 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:51:58.747417 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:51:58.751406 line       494                         if (i == j):
excute 13:51:58.755397 line       496                         i_j_list.append((
excute 13:51:58.760381 line       497                             i, j,
excute 13:51:58.764373 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.768361 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 1)]
excute 13:51:58.771352 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:51:58.776340 line       494                         if (i == j):
excute 13:51:58.780328 line       496                         i_j_list.append((
excute 13:51:58.784319 line       497                             i, j,
excute 13:51:58.788306 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:51:58.791300 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 1), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 1), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 1), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 1), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 1), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 1), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 1), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 1), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 1), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 1), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 1), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 1), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 1), (8, 9, 1, 0), (9, 0, 1, 1), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 1), (9, 8, 1, 0)]
excute 13:51:58.795289 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:51:58.800277 line       494                         if (i == j):
excute 13:51:58.804264 line       495                             continue
excute 13:51:58.807290 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:51:58.811249 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:51:58.814269 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (0, 7, 0, 1), (2, 0, 0, 1), (2, 7, 0, 1), (5, 0, 0, 1), (5, 7, 0, 1), (7, 0, 0, 1), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 9, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 8, 1, 0), (1, 0, 1, 1), (1, 7, 1, 1), (4, 0, 1, 1), (4, 7, 1, 1), (8, 0, 1, 1), (8, 7, 1, 1), (9, 0, 1, 1), (9, 7, 1, 1), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (3, 0, 2, 1), (3, 7, 2, 1), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (6, 0, 4, 1), (6, 7, 4, 1)]
excute 13:51:58.818227 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:51:58.822219 line       505                     if (self.RELOCATE):
excute 13:51:58.830196 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:51:58.833189 line       505                     if (self.RELOCATE):
excute 13:51:58.838182 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:51:58.841167 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:51:58.845156 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:58.850148 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:58.854132 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:58.858155 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:51:58.863107 line       556                     i = i_j[0]
excute 13:51:58.867097 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:58.870090 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:58.874080 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:51:58.878068 line       556                     i = i_j[0]
excute 13:51:58.883054 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:58.886047 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:58.891034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:51:58.894026 line       556                     i = i_j[0]
excute 13:51:58.899013 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:58.903001 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:58.907006 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:51:58.910013 line       556                     i = i_j[0]
excute 13:51:58.914006 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:58.917992 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:58.921952 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:51:58.924974 line       556                     i = i_j[0]
excute 13:51:58.928962 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:58.932952 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:58.936918 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:51:58.939934 line       556                     i = i_j[0]
excute 13:51:58.943923 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:58.947915 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:58.952868 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:51:58.956858 line       556                     i = i_j[0]
excute 13:51:58.960879 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:58.966831 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:58.970823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:51:58.973811 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:58.978798 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:58.982789 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:58.987774 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:51:58.990799 line       556                     i = i_j[0]
excute 13:51:58.994786 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:58.998779 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.002735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:51:59.005756 line       556                     i = i_j[0]
excute 13:51:59.010713 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:59.013735 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.017729 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:51:59.021714 line       556                     i = i_j[0]
excute 13:51:59.025673 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:59.028696 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.033652 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:51:59.037672 line       556                     i = i_j[0]
excute 13:51:59.041632 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:59.045651 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.049609 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:51:59.052633 line       556                     i = i_j[0]
excute 13:51:59.057588 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:59.060610 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.064600 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:51:59.069587 line       556                     i = i_j[0]
excute 13:51:59.074543 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:59.077536 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.082521 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:51:59.085514 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:59.090501 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:59.094488 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.098480 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:51:59.102468 line       556                     i = i_j[0]
excute 13:51:59.106456 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:59.110447 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.114437 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:51:59.118425 line       556                     i = i_j[0]
excute 13:51:59.122415 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:59.126404 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.130392 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:51:59.134383 line       556                     i = i_j[0]
excute 13:51:59.139370 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:59.142393 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.147350 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:51:59.150373 line       556                     i = i_j[0]
excute 13:51:59.154361 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:59.158351 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.162307 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:51:59.166324 line       556                     i = i_j[0]
excute 13:51:59.171286 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:59.174277 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.178266 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:51:59.182256 line       556                     i = i_j[0]
excute 13:51:59.186245 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:59.190234 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.195222 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:51:59.198211 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:59.202202 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:59.206192 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.210180 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:51:59.214170 line       556                     i = i_j[0]
excute 13:51:59.219157 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:59.223146 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.227134 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:51:59.231124 line       556                     i = i_j[0]
excute 13:51:59.235114 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:59.239103 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.244091 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:51:59.247082 line       556                     i = i_j[0]
excute 13:51:59.252069 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:59.256089 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.260048 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:51:59.263069 line       556                     i = i_j[0]
excute 13:51:59.267059 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:59.272014 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.276005 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:51:59.280026 line       556                     i = i_j[0]
excute 13:51:59.284013 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:59.287975 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.290995 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:51:59.295982 line       556                     i = i_j[0]
excute 13:51:59.299941 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:59.302963 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.307919 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:51:59.310941 line       556                     i = i_j[0]
excute 13:51:59.314930 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:59.318920 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.322878 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 1)
excute 13:51:59.328863 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:51:59.337839 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:59.343823 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.348809 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute Modified var:.. t_tmp = 193
excute 13:51:59.352798 line       560                         if (t_tmp > self.TIME):
excute 13:51:59.358781 line       561                             time_over += 1
excute Modified var:.. time_over = 17
excute 13:51:59.366248 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 1)
excute 13:51:59.370273 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:51:59.377223 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:59.382210 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.386199 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 1)
excute 13:51:59.390188 line       556                     i = i_j[0]
excute 13:51:59.394178 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:59.397170 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.401159 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 1)
excute 13:51:59.405148 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:51:59.409138 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:59.413127 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.416119 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 1)
excute 13:51:59.420108 line       556                     i = i_j[0]
excute 13:51:59.424097 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:59.428087 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.432076 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 1)
excute 13:51:59.435068 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:51:59.439058 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:59.443047 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.447037 line       559                         t_tmp = t + self.S_traveltimes[i][j]
excute 13:51:59.451027 line       560                         if (t_tmp > self.TIME):
excute 13:51:59.455015 line       561                             time_over += 1
excute Modified var:.. time_over = 18
excute 13:51:59.459004 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:51:59.464989 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:59.469976 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:59.473965 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.480947 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:51:59.483937 line       556                     i = i_j[0]
excute 13:51:59.487927 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:59.491918 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.495909 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:51:59.499896 line       556                     i = i_j[0]
excute 13:51:59.503885 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:59.506876 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.511864 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:51:59.514855 line       556                     i = i_j[0]
excute 13:51:59.518845 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:59.522835 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.526824 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:51:59.529815 line       556                     i = i_j[0]
excute 13:51:59.533805 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:59.537794 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.541785 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:51:59.544808 line       556                     i = i_j[0]
excute 13:51:59.548801 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:59.552756 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.557741 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:51:59.561730 line       556                     i = i_j[0]
excute 13:51:59.569711 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:59.576689 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.584669 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:51:59.587662 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:59.591650 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:59.595639 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.599631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:51:59.603649 line       556                     i = i_j[0]
excute 13:51:59.607641 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:59.610632 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.617615 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:51:59.621601 line       556                     i = i_j[0]
excute 13:51:59.625560 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:59.628583 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.633572 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:51:59.636561 line       556                     i = i_j[0]
excute 13:51:59.640550 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:59.644545 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.648498 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:51:59.651521 line       556                     i = i_j[0]
excute 13:51:59.656480 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:59.659469 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.666453 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:51:59.671461 line       556                     i = i_j[0]
excute 13:51:59.675458 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:59.679415 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.684405 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:51:59.688392 line       556                     i = i_j[0]
excute 13:51:59.691414 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:59.695404 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.699395 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:51:59.703383 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:59.707341 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:59.711331 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.715351 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:51:59.719341 line       556                     i = i_j[0]
excute 13:51:59.723299 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:59.726322 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.731291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:51:59.734301 line       556                     i = i_j[0]
excute 13:51:59.738259 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:59.742248 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.746240 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:51:59.749229 line       556                     i = i_j[0]
excute 13:51:59.753217 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:59.757208 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.762195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:51:59.765186 line       556                     i = i_j[0]
excute 13:51:59.769175 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:59.773164 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.777154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:51:59.780146 line       556                     i = i_j[0]
excute 13:51:59.784135 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:59.788157 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.793112 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:51:59.796135 line       556                     i = i_j[0]
excute 13:51:59.800125 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:51:59.804119 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.808072 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:51:59.811095 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:51:59.815084 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:51:59.819074 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.823034 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:51:59.828019 line       556                     i = i_j[0]
excute 13:51:59.832007 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:51:59.834998 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.838988 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:51:59.841981 line       556                     i = i_j[0]
excute 13:51:59.845970 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:51:59.849959 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.853950 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:51:59.857937 line       556                     i = i_j[0]
excute 13:51:59.861927 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:51:59.865916 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.869913 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:51:59.872898 line       556                     i = i_j[0]
excute 13:51:59.876924 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:51:59.880911 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.884897 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:51:59.889856 line       556                     i = i_j[0]
excute 13:51:59.893842 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:51:59.896834 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.900823 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:51:59.904812 line       556                     i = i_j[0]
excute 13:51:59.908802 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:51:59.911794 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.915783 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 1)
excute 13:51:59.919772 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:51:59.923779 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:59.927752 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.930743 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 1)
excute 13:51:59.934732 line       556                     i = i_j[0]
excute 13:51:59.938722 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:59.941714 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.945703 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 1)
excute 13:51:59.950722 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:51:59.955680 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:59.959666 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.963656 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 1)
excute 13:51:59.966647 line       556                     i = i_j[0]
excute 13:51:59.970636 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:51:59.974625 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.978616 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 1)
excute 13:51:59.982606 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:51:59.985628 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:51:59.989618 line       558                     if (i != j and demands[t][i][j]):
excute 13:51:59.995570 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 1)
excute 13:51:59.998562 line       556                     i = i_j[0]
excute 13:52:00.005546 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:00.012525 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.018509 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 1)
excute 13:52:00.022501 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:52:00.028482 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:00.032472 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.036461 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 1)
excute 13:52:00.040450 line       556                     i = i_j[0]
excute 13:52:00.044441 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:00.047431 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.051420 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 2, 0)
excute 13:52:00.055411 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:52:00.059400 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:00.063389 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.067389 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 2, 0)
excute 13:52:00.071368 line       556                     i = i_j[0]
excute 13:52:00.075365 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:00.078380 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.082372 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 2, 0)
excute 13:52:00.086328 line       556                     i = i_j[0]
excute 13:52:00.090318 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:00.094316 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.098296 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 2, 0)
excute 13:52:00.102286 line       556                     i = i_j[0]
excute 13:52:00.107283 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:00.110263 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.114265 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 2, 0)
excute 13:52:00.117245 line       556                     i = i_j[0]
excute 13:52:00.121234 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:52:00.125223 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.129214 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 2, 0)
excute 13:52:00.134202 line       556                     i = i_j[0]
excute 13:52:00.142178 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:00.146167 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.151154 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 2, 0)
excute 13:52:00.155146 line       556                     i = i_j[0]
excute 13:52:00.159133 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:00.162125 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.166113 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 2, 1)
excute 13:52:00.170103 line       556                     i = i_j[0]
excute 13:52:00.174092 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:00.177085 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.181074 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 2, 1)
excute 13:52:00.185063 line       556                     i = i_j[0]
excute 13:52:00.189067 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:00.192045 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.197032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:52:00.201020 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:52:00.205011 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:00.208002 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.211991 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:52:00.215980 line       556                     i = i_j[0]
excute 13:52:00.219973 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:00.222962 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.226951 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:52:00.230942 line       556                     i = i_j[0]
excute 13:52:00.238921 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:52:00.242910 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.245900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:52:00.249890 line       556                     i = i_j[0]
excute 13:52:00.253880 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:00.257870 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.261859 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:52:00.264850 line       556                     i = i_j[0]
excute 13:52:00.268840 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:00.272829 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.276819 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:52:00.279810 line       556                     i = i_j[0]
excute 13:52:00.283800 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:00.287789 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.292776 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 0)
excute 13:52:00.295767 line       556                     i = i_j[0]
excute 13:52:00.300757 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:00.304743 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.308733 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 1)
excute 13:52:00.311725 line       556                     i = i_j[0]
excute 13:52:00.315714 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:00.318706 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.323726 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 1)
excute 13:52:00.333667 line       556                     i = i_j[0]
excute 13:52:00.337655 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:00.341644 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:00.346632 line       555                 for i_j in i_j_list:
excute 13:52:00.350620 line       581             self.write_matrix(
excute 13:52:00.354610 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:52:00.358606 line       583                 result_file_path,
excute 13:52:00.362591 line       584                 mode='a'
excute 13:52:00.369017 line       488         for t in time_steps:
excute Modified var:.. t = 180
excute 13:52:00.374003 line       489             if (t != self.TIME + 1):
excute 13:52:00.379988 line       490                 i_j_list = []
excute Modified var:.. i_j_list = []
excute 13:52:00.382979 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 0
excute 13:52:00.388964 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute Modified var:.. available_vhecles_for_show = [[1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 3, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 6, ...1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]]
excute 13:52:00.397939 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:52:00.404921 line       494                         if (i == j):
excute 13:52:00.410904 line       495                             continue
excute 13:52:00.414894 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:52:00.418884 line       494                         if (i == j):
excute 13:52:00.422873 line       496                         i_j_list.append((
excute 13:52:00.428857 line       497                             i, j,
excute 13:52:00.438837 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.444814 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0)]
excute 13:52:00.452795 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:52:00.457780 line       494                         if (i == j):
excute 13:52:00.462769 line       496                         i_j_list.append((
excute 13:52:00.465759 line       497                             i, j,
excute 13:52:00.469749 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.472741 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0)]
excute 13:52:00.476731 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:52:00.481716 line       494                         if (i == j):
excute 13:52:00.485705 line       496                         i_j_list.append((
excute 13:52:00.490692 line       497                             i, j,
excute 13:52:00.496676 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.501694 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0)]
excute 13:52:00.506650 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:52:00.512667 line       494                         if (i == j):
excute 13:52:00.516624 line       496                         i_j_list.append((
excute 13:52:00.520613 line       497                             i, j,
excute 13:52:00.524602 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.528623 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0)]
excute 13:52:00.531583 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:52:00.535572 line       494                         if (i == j):
excute 13:52:00.539562 line       496                         i_j_list.append((
excute 13:52:00.543551 line       497                             i, j,
excute 13:52:00.547539 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.550532 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0)]
excute 13:52:00.554520 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:52:00.558512 line       494                         if (i == j):
excute 13:52:00.562500 line       496                         i_j_list.append((
excute 13:52:00.565492 line       497                             i, j,
excute 13:52:00.568484 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.572474 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0)]
excute 13:52:00.575465 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:52:00.579455 line       494                         if (i == j):
excute 13:52:00.583443 line       496                         i_j_list.append((
excute 13:52:00.587433 line       497                             i, j,
excute 13:52:00.590424 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.593417 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0)]
excute 13:52:00.597405 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:52:00.601397 line       494                         if (i == j):
excute 13:52:00.605385 line       496                         i_j_list.append((
excute 13:52:00.609410 line       497                             i, j,
excute 13:52:00.612397 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.616386 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0)]
excute 13:52:00.619378 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:52:00.623337 line       494                         if (i == j):
excute 13:52:00.627326 line       496                         i_j_list.append((
excute 13:52:00.630318 line       497                             i, j,
excute 13:52:00.634307 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.637299 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0)]
excute 13:52:00.641288 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:52:00.644280 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 1
excute 13:52:00.648269 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:52:00.651262 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:52:00.656249 line       494                         if (i == j):
excute 13:52:00.662235 line       496                         i_j_list.append((
excute 13:52:00.666253 line       497                             i, j,
excute 13:52:00.670246 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.673238 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0)]
excute 13:52:00.677226 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:52:00.681214 line       494                         if (i == j):
excute 13:52:00.685172 line       495                             continue
excute 13:52:00.688196 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:52:00.691188 line       494                         if (i == j):
excute 13:52:00.696143 line       496                         i_j_list.append((
excute 13:52:00.699134 line       497                             i, j,
excute 13:52:00.702126 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.706115 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0)]
excute 13:52:00.710106 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:52:00.715092 line       494                         if (i == j):
excute 13:52:00.718117 line       496                         i_j_list.append((
excute 13:52:00.722105 line       497                             i, j,
excute 13:52:00.725065 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.729053 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0)]
excute 13:52:00.732046 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:52:00.736035 line       494                         if (i == j):
excute 13:52:00.740025 line       496                         i_j_list.append((
excute 13:52:00.744045 line       497                             i, j,
excute 13:52:00.748035 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.751026 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0)]
excute 13:52:00.755016 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:52:00.758974 line       494                         if (i == j):
excute 13:52:00.762998 line       496                         i_j_list.append((
excute 13:52:00.766984 line       497                             i, j,
excute 13:52:00.769976 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.773968 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0)]
excute 13:52:00.776956 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:52:00.780916 line       494                         if (i == j):
excute 13:52:00.784906 line       496                         i_j_list.append((
excute 13:52:00.787928 line       497                             i, j,
excute 13:52:00.791918 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.794909 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0)]
excute 13:52:00.798899 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:52:00.802857 line       494                         if (i == j):
excute 13:52:00.805882 line       496                         i_j_list.append((
excute 13:52:00.809870 line       497                             i, j,
excute 13:52:00.813828 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.816819 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0)]
excute 13:52:00.820808 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:52:00.826793 line       494                         if (i == j):
excute 13:52:00.834772 line       496                         i_j_list.append((
excute 13:52:00.840758 line       497                             i, j,
excute 13:52:00.843779 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.847768 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0)]
excute 13:52:00.850760 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:52:00.855717 line       494                         if (i == j):
excute 13:52:00.858707 line       496                         i_j_list.append((
excute 13:52:00.862696 line       497                             i, j,
excute 13:52:00.865688 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.869678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0)]
excute 13:52:00.872670 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:52:00.876659 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 2
excute 13:52:00.879651 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:52:00.883641 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:52:00.887630 line       494                         if (i == j):
excute 13:52:00.891620 line       496                         i_j_list.append((
excute 13:52:00.894611 line       497                             i, j,
excute 13:52:00.897603 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.900595 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0)]
excute 13:52:00.904584 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:52:00.908574 line       494                         if (i == j):
excute 13:52:00.912563 line       496                         i_j_list.append((
excute 13:52:00.917585 line       497                             i, j,
excute 13:52:00.920577 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.924564 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0)]
excute 13:52:00.927555 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:52:00.931512 line       494                         if (i == j):
excute 13:52:00.937497 line       495                             continue
excute 13:52:00.943482 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:52:00.948469 line       494                         if (i == j):
excute 13:52:00.952456 line       496                         i_j_list.append((
excute 13:52:00.958450 line       497                             i, j,
excute 13:52:00.963430 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.967450 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0)]
excute 13:52:00.972403 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:52:00.976392 line       494                         if (i == j):
excute 13:52:00.980381 line       496                         i_j_list.append((
excute 13:52:00.984371 line       497                             i, j,
excute 13:52:00.987364 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:00.991352 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0)]
excute 13:52:00.995344 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:52:01.000334 line       494                         if (i == j):
excute 13:52:01.004320 line       496                         i_j_list.append((
excute 13:52:01.007312 line       497                             i, j,
excute 13:52:01.012297 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.015321 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0)]
excute 13:52:01.019279 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:52:01.024302 line       494                         if (i == j):
excute 13:52:01.028255 line       496                         i_j_list.append((
excute 13:52:01.031278 line       497                             i, j,
excute 13:52:01.034270 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.038259 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0)]
excute 13:52:01.042217 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:52:01.046207 line       494                         if (i == j):
excute 13:52:01.049199 line       496                         i_j_list.append((
excute 13:52:01.053189 line       497                             i, j,
excute 13:52:01.057209 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.060202 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0)]
excute 13:52:01.064194 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:52:01.068149 line       494                         if (i == j):
excute 13:52:01.072168 line       496                         i_j_list.append((
excute 13:52:01.075128 line       497                             i, j,
excute 13:52:01.079117 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.082110 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0)]
excute 13:52:01.085102 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:52:01.089091 line       494                         if (i == j):
excute 13:52:01.093080 line       496                         i_j_list.append((
excute 13:52:01.097076 line       497                             i, j,
excute 13:52:01.100062 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.104052 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0)]
excute 13:52:01.107043 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:52:01.111032 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 3
excute 13:52:01.114025 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:52:01.118027 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:52:01.124000 line       494                         if (i == j):
excute 13:52:01.127021 line       496                         i_j_list.append((
excute 13:52:01.131011 line       497                             i, j,
excute 13:52:01.134970 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.137992 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0)]
excute 13:52:01.141950 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:52:01.144973 line       494                         if (i == j):
excute 13:52:01.148966 line       496                         i_j_list.append((
excute 13:52:01.152953 line       497                             i, j,
excute 13:52:01.156944 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.159938 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0)]
excute 13:52:01.163903 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:52:01.167882 line       494                         if (i == j):
excute 13:52:01.171903 line       496                         i_j_list.append((
excute 13:52:01.174893 line       497                             i, j,
excute 13:52:01.178852 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.181875 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0)]
excute 13:52:01.185843 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:52:01.188824 line       494                         if (i == j):
excute 13:52:01.192814 line       495                             continue
excute 13:52:01.196803 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:52:01.200793 line       494                         if (i == j):
excute 13:52:01.203785 line       496                         i_j_list.append((
excute 13:52:01.207774 line       497                             i, j,
excute 13:52:01.210766 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.214755 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0)]
excute 13:52:01.217747 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:52:01.221737 line       494                         if (i == j):
excute 13:52:01.226727 line       496                         i_j_list.append((
excute 13:52:01.230714 line       497                             i, j,
excute 13:52:01.233736 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.237694 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0)]
excute 13:52:01.240717 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:52:01.244676 line       494                         if (i == j):
excute 13:52:01.248666 line       496                         i_j_list.append((
excute 13:52:01.251689 line       497                             i, j,
excute 13:52:01.255677 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.259642 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0)]
excute 13:52:01.262659 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:52:01.266617 line       494                         if (i == j):
excute 13:52:01.270607 line       496                         i_j_list.append((
excute 13:52:01.273630 line       497                             i, j,
excute 13:52:01.277620 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.280611 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0)]
excute 13:52:01.284604 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:52:01.288560 line       494                         if (i == j):
excute 13:52:01.292549 line       496                         i_j_list.append((
excute 13:52:01.296548 line       497                             i, j,
excute 13:52:01.299561 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.303524 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0)]
excute 13:52:01.306542 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:52:01.310500 line       494                         if (i == j):
excute 13:52:01.314504 line       496                         i_j_list.append((
excute 13:52:01.317512 line       497                             i, j,
excute 13:52:01.321503 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.324498 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0)]
excute 13:52:01.334437 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:52:01.343415 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 4
excute 13:52:01.348433 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:52:01.352419 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:52:01.357375 line       494                         if (i == j):
excute 13:52:01.361396 line       496                         i_j_list.append((
excute 13:52:01.364358 line       497                             i, j,
excute 13:52:01.369355 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.375327 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0)]
excute 13:52:01.380316 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:52:01.388292 line       494                         if (i == j):
excute 13:52:01.392282 line       496                         i_j_list.append((
excute 13:52:01.396272 line       497                             i, j,
excute 13:52:01.400260 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.407242 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0)]
excute 13:52:01.411230 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:52:01.415220 line       494                         if (i == j):
excute 13:52:01.420210 line       496                         i_j_list.append((
excute 13:52:01.426192 line       497                             i, j,
excute 13:52:01.432177 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.436167 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0)]
excute 13:52:01.440155 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:52:01.450127 line       494                         if (i == j):
excute 13:52:01.455114 line       496                         i_j_list.append((
excute 13:52:01.465089 line       497                             i, j,
excute 13:52:01.469079 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.477055 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0)]
excute 13:52:01.482041 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:52:01.491018 line       494                         if (i == j):
excute 13:52:01.501989 line       495                             continue
excute 13:52:01.510964 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:52:01.516948 line       494                         if (i == j):
excute 13:52:01.523929 line       496                         i_j_list.append((
excute 13:52:01.531909 line       497                             i, j,
excute 13:52:01.537892 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.543876 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0)]
excute 13:52:01.548862 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:52:01.556842 line       494                         if (i == j):
excute 13:52:01.565818 line       496                         i_j_list.append((
excute 13:52:01.571802 line       497                             i, j,
excute 13:52:01.576788 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.582772 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0)]
excute 13:52:01.589753 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:52:01.595739 line       494                         if (i == j):
excute 13:52:01.601722 line       496                         i_j_list.append((
excute 13:52:01.606708 line       497                             i, j,
excute 13:52:01.612691 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.617678 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0)]
excute 13:52:01.625657 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:52:01.632642 line       494                         if (i == j):
excute 13:52:01.640617 line       496                         i_j_list.append((
excute 13:52:01.647598 line       497                             i, j,
excute 13:52:01.656575 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.661562 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0)]
excute 13:52:01.667545 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:52:01.675525 line       494                         if (i == j):
excute 13:52:01.681508 line       496                         i_j_list.append((
excute 13:52:01.688489 line       497                             i, j,
excute 13:52:01.693476 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.701455 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0)]
excute 13:52:01.707440 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:52:01.716415 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 5
excute 13:52:01.723397 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:52:01.731375 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:52:01.739355 line       494                         if (i == j):
excute 13:52:01.748329 line       496                         i_j_list.append((
excute 13:52:01.758302 line       497                             i, j,
excute 13:52:01.766282 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.774261 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0)]
excute 13:52:01.783236 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:52:01.790218 line       494                         if (i == j):
excute 13:52:01.797199 line       496                         i_j_list.append((
excute 13:52:01.803184 line       497                             i, j,
excute 13:52:01.809167 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.814154 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0)]
excute 13:52:01.820138 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:52:01.824126 line       494                         if (i == j):
excute 13:52:01.828115 line       496                         i_j_list.append((
excute 13:52:01.832105 line       497                             i, j,
excute 13:52:01.836095 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.839087 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0)]
excute 13:52:01.845072 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:52:01.850059 line       494                         if (i == j):
excute 13:52:01.854047 line       496                         i_j_list.append((
excute 13:52:01.858036 line       497                             i, j,
excute 13:52:01.862025 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.866015 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0)]
excute 13:52:01.870004 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:52:01.874990 line       494                         if (i == j):
excute 13:52:01.878981 line       496                         i_j_list.append((
excute 13:52:01.882970 line       497                             i, j,
excute 13:52:01.886959 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.889951 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0)]
excute 13:52:01.893941 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:52:01.897930 line       494                         if (i == j):
excute 13:52:01.901919 line       495                             continue
excute 13:52:01.905910 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:52:01.909899 line       494                         if (i == j):
excute 13:52:01.913887 line       496                         i_j_list.append((
excute 13:52:01.917877 line       497                             i, j,
excute 13:52:01.920869 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.924859 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0)]
excute 13:52:01.927851 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:52:01.932836 line       494                         if (i == j):
excute 13:52:01.936825 line       496                         i_j_list.append((
excute 13:52:01.940815 line       497                             i, j,
excute 13:52:01.944805 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.950788 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0)]
excute 13:52:01.953780 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:52:01.957770 line       494                         if (i == j):
excute 13:52:01.961761 line       496                         i_j_list.append((
excute 13:52:01.965749 line       497                             i, j,
excute 13:52:01.968741 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.972730 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0)]
excute 13:52:01.975722 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:52:01.980708 line       494                         if (i == j):
excute 13:52:01.984698 line       496                         i_j_list.append((
excute 13:52:01.987689 line       497                             i, j,
excute 13:52:01.990681 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:01.994672 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0)]
excute 13:52:01.997662 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:52:02.001651 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 6
excute 13:52:02.005641 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:52:02.009634 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:52:02.013620 line       494                         if (i == j):
excute 13:52:02.017642 line       496                         i_j_list.append((
excute 13:52:02.020634 line       497                             i, j,
excute 13:52:02.024616 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.027584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0)]
excute 13:52:02.031573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:52:02.035563 line       494                         if (i == j):
excute 13:52:02.040550 line       496                         i_j_list.append((
excute 13:52:02.044539 line       497                             i, j,
excute 13:52:02.048543 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.052547 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0)]
excute 13:52:02.056537 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:52:02.060494 line       494                         if (i == j):
excute 13:52:02.064485 line       496                         i_j_list.append((
excute 13:52:02.067507 line       497                             i, j,
excute 13:52:02.071499 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.074457 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0)]
excute 13:52:02.080475 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:52:02.084463 line       494                         if (i == j):
excute 13:52:02.088421 line       496                         i_j_list.append((
excute 13:52:02.091443 line       497                             i, j,
excute 13:52:02.095433 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.098427 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0)]
excute 13:52:02.102414 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:52:02.106372 line       494                         if (i == j):
excute 13:52:02.110363 line       496                         i_j_list.append((
excute 13:52:02.113385 line       497                             i, j,
excute 13:52:02.117378 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.121332 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0)]
excute 13:52:02.125321 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:52:02.129310 line       494                         if (i == j):
excute 13:52:02.134299 line       496                         i_j_list.append((
excute 13:52:02.137289 line       497                             i, j,
excute 13:52:02.140281 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.144270 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0)]
excute 13:52:02.148259 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:52:02.152282 line       494                         if (i == j):
excute 13:52:02.157237 line       495                             continue
excute 13:52:02.160260 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:52:02.164249 line       494                         if (i == j):
excute 13:52:02.168206 line       496                         i_j_list.append((
excute 13:52:02.171199 line       497                             i, j,
excute 13:52:02.175187 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.178180 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0)]
excute 13:52:02.181172 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:52:02.185161 line       494                         if (i == j):
excute 13:52:02.189151 line       496                         i_j_list.append((
excute 13:52:02.193139 line       497                             i, j,
excute 13:52:02.196132 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.200121 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0)]
excute 13:52:02.203113 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:52:02.207102 line       494                         if (i == j):
excute 13:52:02.211092 line       496                         i_j_list.append((
excute 13:52:02.214084 line       497                             i, j,
excute 13:52:02.218073 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.221065 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:52:02.224057 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:52:02.228046 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 7
excute 13:52:02.232035 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:52:02.236025 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:52:02.239017 line       494                         if (i == j):
excute 13:52:02.243006 line       496                         i_j_list.append((
excute 13:52:02.245998 line       497                             i, j,
excute 13:52:02.249987 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.253980 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0)]
excute 13:52:02.257966 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:52:02.261956 line       494                         if (i == j):
excute 13:52:02.265945 line       496                         i_j_list.append((
excute 13:52:02.268937 line       497                             i, j,
excute 13:52:02.272926 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.275918 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0)]
excute 13:52:02.279907 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:52:02.282900 line       494                         if (i == j):
excute 13:52:02.286889 line       496                         i_j_list.append((
excute 13:52:02.290878 line       497                             i, j,
excute 13:52:02.294870 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.298859 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0)]
excute 13:52:02.302848 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:52:02.306837 line       494                         if (i == j):
excute 13:52:02.311823 line       496                         i_j_list.append((
excute 13:52:02.314815 line       497                             i, j,
excute 13:52:02.317807 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.321797 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0)]
excute 13:52:02.325785 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:52:02.334763 line       494                         if (i == j):
excute 13:52:02.341744 line       496                         i_j_list.append((
excute 13:52:02.347728 line       497                             i, j,
excute 13:52:02.351716 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.355707 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0)]
excute 13:52:02.359695 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:52:02.364681 line       494                         if (i == j):
excute 13:52:02.368672 line       496                         i_j_list.append((
excute 13:52:02.371662 line       497                             i, j,
excute 13:52:02.374654 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.378645 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0)]
excute 13:52:02.382633 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:52:02.386622 line       494                         if (i == j):
excute 13:52:02.390612 line       496                         i_j_list.append((
excute 13:52:02.394601 line       497                             i, j,
excute 13:52:02.397593 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.400585 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0)]
excute 13:52:02.404574 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:52:02.408564 line       494                         if (i == j):
excute 13:52:02.412553 line       495                             continue
excute 13:52:02.415545 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:52:02.419535 line       494                         if (i == j):
excute 13:52:02.423524 line       496                         i_j_list.append((
excute 13:52:02.426516 line       497                             i, j,
excute 13:52:02.430507 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.434495 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0)]
excute 13:52:02.437487 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:52:02.441476 line       494                         if (i == j):
excute 13:52:02.445466 line       496                         i_j_list.append((
excute 13:52:02.449454 line       497                             i, j,
excute 13:52:02.453445 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.457438 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0)]
excute 13:52:02.463418 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:52:02.471396 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 8
excute 13:52:02.475386 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:52:02.480374 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:52:02.483364 line       494                         if (i == j):
excute 13:52:02.488352 line       496                         i_j_list.append((
excute 13:52:02.491343 line       497                             i, j,
excute 13:52:02.495332 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.499326 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0)]
excute 13:52:02.503312 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:52:02.507301 line       494                         if (i == j):
excute 13:52:02.511289 line       496                         i_j_list.append((
excute 13:52:02.515278 line       497                             i, j,
excute 13:52:02.518270 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.522259 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0)]
excute 13:52:02.525252 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:52:02.529241 line       494                         if (i == j):
excute 13:52:02.533230 line       496                         i_j_list.append((
excute 13:52:02.537220 line       497                             i, j,
excute 13:52:02.540212 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.544201 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0)]
excute 13:52:02.547193 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:52:02.551183 line       494                         if (i == j):
excute 13:52:02.555172 line       496                         i_j_list.append((
excute 13:52:02.562155 line       497                             i, j,
excute 13:52:02.566143 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.570132 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0)]
excute 13:52:02.574122 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:52:02.579109 line       494                         if (i == j):
excute 13:52:02.583097 line       496                         i_j_list.append((
excute 13:52:02.587087 line       497                             i, j,
excute 13:52:02.593070 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.597061 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0)]
excute 13:52:02.600052 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:52:02.604041 line       494                         if (i == j):
excute 13:52:02.608030 line       496                         i_j_list.append((
excute 13:52:02.612020 line       497                             i, j,
excute 13:52:02.615011 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.618004 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0)]
excute 13:52:02.621993 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:52:02.625990 line       494                         if (i == j):
excute 13:52:02.629972 line       496                         i_j_list.append((
excute 13:52:02.632964 line       497                             i, j,
excute 13:52:02.636953 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.639945 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0)]
excute 13:52:02.643934 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:52:02.647924 line       494                         if (i == j):
excute 13:52:02.651913 line       496                         i_j_list.append((
excute 13:52:02.654905 line       497                             i, j,
excute 13:52:02.658895 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.663883 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0)]
excute 13:52:02.667873 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:52:02.671860 line       494                         if (i == j):
excute 13:52:02.675850 line       495                             continue
excute 13:52:02.678841 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:52:02.681833 line       494                         if (i == j):
excute 13:52:02.685822 line       496                         i_j_list.append((
excute 13:52:02.689812 line       497                             i, j,
excute 13:52:02.692804 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.696793 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0)]
excute 13:52:02.700799 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:52:02.704772 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. i = 9
excute 13:52:02.707764 line       492                     available_vhecles_for_show[i][t] = available_vhecles[i][t]
excute 13:52:02.711754 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 0
excute 13:52:02.714745 line       494                         if (i == j):
excute 13:52:02.718734 line       496                         i_j_list.append((
excute 13:52:02.722724 line       497                             i, j,
excute 13:52:02.725715 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.729705 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0)]
excute 13:52:02.732697 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 1
excute 13:52:02.736687 line       494                         if (i == j):
excute 13:52:02.740676 line       496                         i_j_list.append((
excute 13:52:02.744666 line       497                             i, j,
excute 13:52:02.748655 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.751647 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0)]
excute 13:52:02.755637 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 2
excute 13:52:02.760623 line       494                         if (i == j):
excute 13:52:02.764614 line       496                         i_j_list.append((
excute 13:52:02.768602 line       497                             i, j,
excute 13:52:02.772592 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.775584 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0)]
excute 13:52:02.779573 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 3
excute 13:52:02.783563 line       494                         if (i == j):
excute 13:52:02.788549 line       496                         i_j_list.append((
excute 13:52:02.791542 line       497                             i, j,
excute 13:52:02.795531 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.799520 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0)]
excute 13:52:02.802513 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 4
excute 13:52:02.807500 line       494                         if (i == j):
excute 13:52:02.811489 line       496                         i_j_list.append((
excute 13:52:02.815478 line       497                             i, j,
excute 13:52:02.818470 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.822459 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0)]
excute 13:52:02.826448 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 5
excute 13:52:02.830438 line       494                         if (i == j):
excute 13:52:02.835424 line       496                         i_j_list.append((
excute 13:52:02.838417 line       497                             i, j,
excute 13:52:02.842406 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.849385 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0)]
excute 13:52:02.853407 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 6
excute 13:52:02.857395 line       494                         if (i == j):
excute 13:52:02.862362 line       496                         i_j_list.append((
excute 13:52:02.865376 line       497                             i, j,
excute 13:52:02.869334 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.873323 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0)]
excute 13:52:02.877310 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 7
excute 13:52:02.881300 line       494                         if (i == j):
excute 13:52:02.885292 line       496                         i_j_list.append((
excute 13:52:02.888284 line       497                             i, j,
excute 13:52:02.892273 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.895265 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0)]
excute 13:52:02.899253 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 8
excute 13:52:02.904241 line       494                         if (i == j):
excute 13:52:02.908228 line       496                         i_j_list.append((
excute 13:52:02.912217 line       497                             i, j,
excute 13:52:02.916206 line       498                             self.S_capacities[i] - available_vhecles[i][t],
excute 13:52:02.919199 line       499                             sum([row[j] for row in demands[t]]),
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0)]
excute 13:52:02.923188 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute Modified var:.. j = 9
excute 13:52:02.927179 line       494                         if (i == j):
excute 13:52:02.930169 line       495                             continue
excute 13:52:02.934158 line       493                     for j in range(self.NUMBER_OF_STATIONS):
excute 13:52:02.937151 line       491                 for i in range(self.NUMBER_OF_STATIONS):
excute 13:52:02.941140 line       501                 i_j_list = sorted(i_j_list, key=lambda x: (x[2], x[3]))
excute Modified var:.. i_j_list = [(0, 1, 0, 0), (0, 2, 0, 0), (0, 3, 0, 0), (0, 4, 0, 0), (0, 5, 0, 0), (0, 6, 0, 0), (0, 7, 0, 0), (0, 8, 0, 0), (0, 9, 0, 0), (2, 0, 0, 0), (2, 1, 0, 0), (2, 3, 0, 0), (2, 4, 0, 0), (2, 5, 0, 0), (2, 6, 0, 0), (2, 7, 0, 0), (2, 8, 0, 0), (2, 9, 0, 0), (5, 0, 0, 0), (5, 1, 0, 0), (5, 2, 0, 0), (5, 3, 0, 0), (5, 4, 0, 0), (5, 6, 0, 0), (5, 7, 0, 0), (5, 8, 0, 0), (5, 9, 0, 0), (7, 0, 0, 0), (7, 1, 0, 0), (7, 2, 0, 0), (7, 3, 0, 0), (7, 4, 0, 0), (7, 5, 0, 0), (7, 6, 0, 0), (7, 8, 0, 0), (7, 9, 0, 0), (1, 0, 1, 0), (1, 2, 1, 0), (1, 3, 1, 0), (1, 4, 1, 0), (1, 5, 1, 0), (1, 6, 1, 0), (1, 7, 1, 0), (1, 8, 1, 0), (1, 9, 1, 0), (4, 0, 1, 0), (4, 1, 1, 0), (4, 2, 1, 0), (4, 3, 1, 0), (4, 5, 1, 0), (4, 6, 1, 0), (4, 7, 1, 0), (4, 8, 1, 0), (4, 9, 1, 0), (8, 0, 1, 0), (8, 1, 1, 0), (8, 2, 1, 0), (8, 3, 1, 0), (8, 4, 1, 0), (8, 5, 1, 0), (8, 6, 1, 0), (8, 7, 1, 0), (8, 9, 1, 0), (9, 0, 1, 0), (9, 1, 1, 0), (9, 2, 1, 0), (9, 3, 1, 0), (9, 4, 1, 0), (9, 5, 1, 0), (9, 6, 1, 0), (9, 7, 1, 0), (9, 8, 1, 0), (3, 0, 2, 0), (3, 1, 2, 0), (3, 2, 2, 0), (3, 4, 2, 0), (3, 5, 2, 0), (3, 6, 2, 0), (3, 7, 2, 0), (3, 8, 2, 0), (3, 9, 2, 0), (6, 0, 4, 0), (6, 1, 4, 0), (6, 2, 4, 0), (6, 3, 4, 0), (6, 4, 4, 0), (6, 5, 4, 0), (6, 7, 4, 0), (6, 8, 4, 0), (6, 9, 4, 0)]
excute 13:52:02.944132 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 0
excute 13:52:02.949120 line       505                     if (self.RELOCATE):
excute 13:52:02.953110 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute Modified var:.. e = 1
excute 13:52:02.957129 line       505                     if (self.RELOCATE):
excute 13:52:02.961093 line       504                 for e in range(self.NUMBER_OF_EMPLOYEES):
excute 13:52:02.965108 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 1, 0, 0)
excute 13:52:02.968068 line       556                     i = i_j[0]
excute Modified var:.. i = 0
excute 13:52:02.974054 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:02.979041 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:02.983060 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 2, 0, 0)
excute 13:52:02.987053 line       556                     i = i_j[0]
excute 13:52:02.991008 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:02.994997 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:02.998986 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 3, 0, 0)
excute 13:52:03.002009 line       556                     i = i_j[0]
excute 13:52:03.005966 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:52:03.009964 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.013947 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 4, 0, 0)
excute 13:52:03.016972 line       556                     i = i_j[0]
excute 13:52:03.020959 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:03.024948 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.028907 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 5, 0, 0)
excute 13:52:03.031933 line       556                     i = i_j[0]
excute 13:52:03.035919 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:03.039911 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.043865 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 6, 0, 0)
excute 13:52:03.046857 line       556                     i = i_j[0]
excute 13:52:03.050846 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:52:03.054836 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.058825 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 7, 0, 0)
excute 13:52:03.061818 line       556                     i = i_j[0]
excute 13:52:03.065806 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:03.069796 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.073790 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 8, 0, 0)
excute 13:52:03.078774 line       556                     i = i_j[0]
excute 13:52:03.082763 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:03.086752 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.091738 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (0, 9, 0, 0)
excute 13:52:03.094731 line       556                     i = i_j[0]
excute 13:52:03.099719 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:03.103707 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.107698 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 0, 0, 0)
excute 13:52:03.111686 line       556                     i = i_j[0]
excute Modified var:.. i = 2
excute 13:52:03.115674 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:03.119699 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.125648 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 1, 0, 0)
excute 13:52:03.129668 line       556                     i = i_j[0]
excute 13:52:03.133627 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:03.137647 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.141631 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 3, 0, 0)
excute 13:52:03.144627 line       556                     i = i_j[0]
excute 13:52:03.148618 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:52:03.152606 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.157562 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 4, 0, 0)
excute 13:52:03.160585 line       556                     i = i_j[0]
excute 13:52:03.164544 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:03.168560 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.172522 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 5, 0, 0)
excute 13:52:03.175548 line       556                     i = i_j[0]
excute 13:52:03.181498 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:03.184521 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.188499 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 6, 0, 0)
excute 13:52:03.192498 line       556                     i = i_j[0]
excute 13:52:03.196471 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:52:03.199485 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.203446 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 7, 0, 0)
excute 13:52:03.207429 line       556                     i = i_j[0]
excute 13:52:03.211418 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:03.214412 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.219396 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 8, 0, 0)
excute 13:52:03.222390 line       556                     i = i_j[0]
excute 13:52:03.227375 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:03.231365 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.234358 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (2, 9, 0, 0)
excute 13:52:03.238347 line       556                     i = i_j[0]
excute 13:52:03.243335 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:03.247323 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.251314 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 0, 0, 0)
excute 13:52:03.255302 line       556                     i = i_j[0]
excute Modified var:.. i = 5
excute 13:52:03.260287 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:03.264278 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.268266 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 1, 0, 0)
excute 13:52:03.271257 line       556                     i = i_j[0]
excute 13:52:03.275246 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:03.279237 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.285221 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 2, 0, 0)
excute 13:52:03.288245 line       556                     i = i_j[0]
excute 13:52:03.293203 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:03.296222 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.300212 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 3, 0, 0)
excute 13:52:03.304202 line       556                     i = i_j[0]
excute 13:52:03.308160 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:52:03.312180 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.316141 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 4, 0, 0)
excute 13:52:03.319164 line       556                     i = i_j[0]
excute 13:52:03.324119 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:03.332096 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.337115 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 6, 0, 0)
excute 13:52:03.341072 line       556                     i = i_j[0]
excute 13:52:03.348054 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:52:03.352044 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.356035 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 7, 0, 0)
excute 13:52:03.361020 line       556                     i = i_j[0]
excute 13:52:03.365015 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:03.368997 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.372987 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 8, 0, 0)
excute 13:52:03.376010 line       556                     i = i_j[0]
excute 13:52:03.380998 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:03.385989 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.389942 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (5, 9, 0, 0)
excute 13:52:03.393931 line       556                     i = i_j[0]
excute 13:52:03.397920 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:03.401910 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.405900 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 0, 0, 0)
excute 13:52:03.409889 line       556                     i = i_j[0]
excute Modified var:.. i = 7
excute 13:52:03.413878 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:03.418864 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.422854 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 1, 0, 0)
excute 13:52:03.426843 line       556                     i = i_j[0]
excute 13:52:03.431830 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:03.434823 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.439810 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 2, 0, 0)
excute 13:52:03.443809 line       556                     i = i_j[0]
excute 13:52:03.447789 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:03.451775 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.455767 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 3, 0, 0)
excute 13:52:03.459754 line       556                     i = i_j[0]
excute 13:52:03.464742 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:52:03.468730 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.472720 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 4, 0, 0)
excute 13:52:03.475743 line       556                     i = i_j[0]
excute 13:52:03.479733 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:03.483691 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.488683 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 5, 0, 0)
excute 13:52:03.492698 line       556                     i = i_j[0]
excute 13:52:03.496688 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:03.500646 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.504634 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 6, 0, 0)
excute 13:52:03.507626 line       556                     i = i_j[0]
excute 13:52:03.512613 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:52:03.515604 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.519594 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 8, 0, 0)
excute 13:52:03.522586 line       556                     i = i_j[0]
excute 13:52:03.526575 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:03.530565 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.533556 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (7, 9, 0, 0)
excute 13:52:03.537545 line       556                     i = i_j[0]
excute 13:52:03.541535 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:03.544527 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.548516 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 0, 1, 0)
excute 13:52:03.552505 line       556                     i = i_j[0]
excute Modified var:.. i = 1
excute 13:52:03.557493 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:03.560484 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.564473 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 2, 1, 0)
excute 13:52:03.568463 line       556                     i = i_j[0]
excute 13:52:03.572452 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:03.575444 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.579440 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 3, 1, 0)
excute 13:52:03.582426 line       556                     i = i_j[0]
excute 13:52:03.586415 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:52:03.591435 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.595391 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 4, 1, 0)
excute 13:52:03.599383 line       556                     i = i_j[0]
excute 13:52:03.603403 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:03.606396 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.610383 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 5, 1, 0)
excute 13:52:03.614374 line       556                     i = i_j[0]
excute 13:52:03.618335 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:03.621354 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.625342 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 6, 1, 0)
excute 13:52:03.629333 line       556                     i = i_j[0]
excute 13:52:03.633290 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:52:03.637311 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.641269 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 7, 1, 0)
excute 13:52:03.644292 line       556                     i = i_j[0]
excute 13:52:03.648282 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:03.652271 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.656261 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 8, 1, 0)
excute 13:52:03.660251 line       556                     i = i_j[0]
excute 13:52:03.664209 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:03.668197 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.671190 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (1, 9, 1, 0)
excute 13:52:03.675179 line       556                     i = i_j[0]
excute 13:52:03.680167 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:03.683159 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.688144 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 0, 1, 0)
excute 13:52:03.692135 line       556                     i = i_j[0]
excute Modified var:.. i = 4
excute 13:52:03.696123 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:03.700143 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.704133 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 1, 1, 0)
excute 13:52:03.708122 line       556                     i = i_j[0]
excute 13:52:03.712081 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:03.716101 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.720090 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 2, 1, 0)
excute 13:52:03.723082 line       556                     i = i_j[0]
excute 13:52:03.727071 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:03.731028 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.735018 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 3, 1, 0)
excute 13:52:03.738010 line       556                     i = i_j[0]
excute 13:52:03.742000 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:52:03.745989 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.749978 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 5, 1, 0)
excute 13:52:03.753967 line       556                     i = i_j[0]
excute 13:52:03.757956 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:03.761977 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.765969 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 6, 1, 0)
excute 13:52:03.769956 line       556                     i = i_j[0]
excute 13:52:03.773949 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:52:03.776941 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.780927 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 7, 1, 0)
excute 13:52:03.784920 line       556                     i = i_j[0]
excute 13:52:03.788887 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:03.792868 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.797852 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 8, 1, 0)
excute 13:52:03.801841 line       556                     i = i_j[0]
excute 13:52:03.805830 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:03.809820 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.813809 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (4, 9, 1, 0)
excute 13:52:03.817798 line       556                     i = i_j[0]
excute 13:52:03.822784 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:03.825778 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.830762 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 0, 1, 0)
excute 13:52:03.834752 line       556                     i = i_j[0]
excute Modified var:.. i = 8
excute 13:52:03.839738 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:03.846752 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.850741 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 1, 1, 0)
excute 13:52:03.854699 line       556                     i = i_j[0]
excute 13:52:03.858687 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:03.862677 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.866666 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 2, 1, 0)
excute 13:52:03.869660 line       556                     i = i_j[0]
excute 13:52:03.873649 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:03.877639 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.881627 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 3, 1, 0)
excute 13:52:03.885617 line       556                     i = i_j[0]
excute 13:52:03.889606 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:52:03.893595 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.898614 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 4, 1, 0)
excute 13:52:03.902602 line       556                     i = i_j[0]
excute 13:52:03.906593 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:03.909586 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.913573 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 5, 1, 0)
excute 13:52:03.917563 line       556                     i = i_j[0]
excute 13:52:03.921521 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:03.924543 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.928531 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 6, 1, 0)
excute 13:52:03.932521 line       556                     i = i_j[0]
excute 13:52:03.936494 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:52:03.939503 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.943492 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 7, 1, 0)
excute 13:52:03.948481 line       556                     i = i_j[0]
excute 13:52:03.952438 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:03.956441 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.960440 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (8, 9, 1, 0)
excute 13:52:03.966403 line       556                     i = i_j[0]
excute 13:52:03.970391 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:03.974379 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.979365 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 0, 1, 0)
excute 13:52:03.983355 line       556                     i = i_j[0]
excute Modified var:.. i = 9
excute 13:52:03.986346 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:03.991334 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:03.995329 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 1, 1, 0)
excute 13:52:04.000312 line       556                     i = i_j[0]
excute 13:52:04.004305 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:04.007292 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.013277 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 2, 1, 0)
excute 13:52:04.017265 line       556                     i = i_j[0]
excute 13:52:04.021259 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:04.024245 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.028234 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 3, 1, 0)
excute 13:52:04.032235 line       556                     i = i_j[0]
excute 13:52:04.036214 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:52:04.039204 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.043195 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 4, 1, 0)
excute 13:52:04.046186 line       556                     i = i_j[0]
excute 13:52:04.055162 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:04.058155 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.062143 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 5, 1, 0)
excute 13:52:04.066134 line       556                     i = i_j[0]
excute 13:52:04.070123 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:04.074111 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.078106 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 6, 1, 0)
excute 13:52:04.082091 line       556                     i = i_j[0]
excute 13:52:04.085116 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:52:04.089103 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.093062 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 7, 1, 0)
excute 13:52:04.096088 line       556                     i = i_j[0]
excute 13:52:04.101044 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:04.105030 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.110018 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (9, 8, 1, 0)
excute 13:52:04.114005 line       556                     i = i_j[0]
excute 13:52:04.117996 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:04.121986 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.125974 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 0, 2, 0)
excute 13:52:04.129964 line       556                     i = i_j[0]
excute Modified var:.. i = 3
excute 13:52:04.134949 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:04.138946 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.146032 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 1, 2, 0)
excute 13:52:04.150019 line       556                     i = i_j[0]
excute 13:52:04.155005 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:04.161986 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.167973 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 2, 2, 0)
excute 13:52:04.170962 line       556                     i = i_j[0]
excute 13:52:04.174951 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:04.178941 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.182930 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 4, 2, 0)
excute 13:52:04.185922 line       556                     i = i_j[0]
excute 13:52:04.189911 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:04.193900 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.197890 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 5, 2, 0)
excute 13:52:04.201880 line       556                     i = i_j[0]
excute 13:52:04.208861 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:04.214845 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.220829 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 6, 2, 0)
excute 13:52:04.226812 line       556                     i = i_j[0]
excute 13:52:04.232799 line       557                     j = i_j[1]
excute Modified var:.. j = 6
excute 13:52:04.236788 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.240777 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 7, 2, 0)
excute 13:52:04.244767 line       556                     i = i_j[0]
excute 13:52:04.248755 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:04.252745 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.256735 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 8, 2, 0)
excute 13:52:04.260724 line       556                     i = i_j[0]
excute 13:52:04.265712 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:04.269698 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.273690 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (3, 9, 2, 0)
excute 13:52:04.277678 line       556                     i = i_j[0]
excute 13:52:04.281669 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:04.284660 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.289646 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 0, 4, 0)
excute 13:52:04.293636 line       556                     i = i_j[0]
excute Modified var:.. i = 6
excute 13:52:04.297625 line       557                     j = i_j[1]
excute Modified var:.. j = 0
excute 13:52:04.301615 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.306602 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 1, 4, 0)
excute 13:52:04.310590 line       556                     i = i_j[0]
excute 13:52:04.314580 line       557                     j = i_j[1]
excute Modified var:.. j = 1
excute 13:52:04.318569 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.323557 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 2, 4, 0)
excute 13:52:04.328542 line       556                     i = i_j[0]
excute 13:52:04.338516 line       557                     j = i_j[1]
excute Modified var:.. j = 2
excute 13:52:04.346494 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.352479 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 3, 4, 0)
excute 13:52:04.356468 line       556                     i = i_j[0]
excute 13:52:04.361454 line       557                     j = i_j[1]
excute Modified var:.. j = 3
excute 13:52:04.365444 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.370431 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 4, 4, 0)
excute 13:52:04.377414 line       556                     i = i_j[0]
excute 13:52:04.382398 line       557                     j = i_j[1]
excute Modified var:.. j = 4
excute 13:52:04.388381 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.392371 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 5, 4, 0)
excute 13:52:04.396361 line       556                     i = i_j[0]
excute 13:52:04.400350 line       557                     j = i_j[1]
excute Modified var:.. j = 5
excute 13:52:04.404340 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.409325 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 7, 4, 0)
excute 13:52:04.413314 line       556                     i = i_j[0]
excute 13:52:04.417304 line       557                     j = i_j[1]
excute Modified var:.. j = 7
excute 13:52:04.420295 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.424291 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 8, 4, 0)
excute 13:52:04.428275 line       556                     i = i_j[0]
excute 13:52:04.432263 line       557                     j = i_j[1]
excute Modified var:.. j = 8
excute 13:52:04.435255 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.439245 line       555                 for i_j in i_j_list:
excute Modified var:.. i_j = (6, 9, 4, 0)
excute 13:52:04.443235 line       556                     i = i_j[0]
excute 13:52:04.447224 line       557                     j = i_j[1]
excute Modified var:.. j = 9
excute 13:52:04.451214 line       558                     if (i != j and demands[t][i][j]):
excute 13:52:04.455206 line       555                 for i_j in i_j_list:
excute 13:52:04.458196 line       581             self.write_matrix(
excute 13:52:04.463182 line       582                 [np.array(demands).sum(), rsf, rse, success, time_over, relocation_rsf_rse, relocation_rsf_avail, relocation_rse_release],
excute 13:52:04.466174 line       583                 result_file_path,
excute 13:52:04.470164 line       584                 mode='a'
excute 13:52:04.477145 line       488         for t in time_steps:
excute 13:52:04.481136 line       586         if (self.is_file_exist(self.sub_dir_path / ('available_vhecles.csv'))):
excute 13:52:04.505070 line       588         self.write_matrix(
excute 13:52:04.511054 line       589             available_vhecles_for_show,
excute 13:52:04.516040 line       590             self.sub_dir_path / 'available_vhecles.csv'
excute 13:52:04.538983 line       592         if (self.MAKE_RANDOM_DEMANDS):
excute 13:52:04.563912 line       593             for demand in demands:
excute New var:....... demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:04.568901 line       594                 self.write_matrix(
excute 13:52:04.574883 line       595                     demand,
excute 13:52:04.578873 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:04.583859 line       597                     mode='a'
excute 13:52:04.604810 line       599                 self.write_matrix(
excute 13:52:04.609790 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:04.619764 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:04.628740 line       602                     mode='a'
excute 13:52:04.671625 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]])
excute 13:52:04.678607 line       594                 self.write_matrix(
excute 13:52:04.684591 line       595                     demand,
excute 13:52:04.689577 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:04.693567 line       597                     mode='a'
excute 13:52:04.734466 line       599                 self.write_matrix(
excute 13:52:04.739444 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:04.744431 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:04.750413 line       602                     mode='a'
excute 13:52:04.803272 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:04.808259 line       594                 self.write_matrix(
excute 13:52:04.814245 line       595                     demand,
excute 13:52:04.818232 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:04.825215 line       597                     mode='a'
excute 13:52:04.867112 line       599                 self.write_matrix(
excute 13:52:04.873086 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:04.881064 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:04.889044 line       602                     mode='a'
excute 13:52:04.935101 line       593             for demand in demands:
excute 13:52:04.941118 line       594                 self.write_matrix(
excute 13:52:04.947074 line       595                     demand,
excute 13:52:04.954051 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:04.958041 line       597                     mode='a'
excute 13:52:05.001920 line       599                 self.write_matrix(
excute 13:52:05.005936 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:05.010935 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.015885 line       602                     mode='a'
excute 13:52:05.060767 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:05.067785 line       594                 self.write_matrix(
excute 13:52:05.072732 line       595                     demand,
excute 13:52:05.077719 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.084729 line       597                     mode='a'
excute 13:52:05.119613 line       599                 self.write_matrix(
excute 13:52:05.123626 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:05.128582 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.136560 line       602                     mode='a'
excute 13:52:05.178449 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 2],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:05.184432 line       594                 self.write_matrix(
excute 13:52:05.189421 line       595                     demand,
excute 13:52:05.193409 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.199391 line       597                     mode='a'
excute 13:52:05.235306 line       599                 self.write_matrix(
excute 13:52:05.241312 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:05.246317 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.254277 line       602                     mode='a'
excute 13:52:05.296135 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:05.303114 line       594                 self.write_matrix(
excute 13:52:05.308102 line       595                     demand,
excute 13:52:05.314094 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.319072 line       597                     mode='a'
excute 13:52:05.446731 line       599                 self.write_matrix(
excute 13:52:05.451718 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:05.456706 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.461692 line       602                     mode='a'
excute 13:52:05.499591 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:05.505574 line       594                 self.write_matrix(
excute 13:52:05.510568 line       595                     demand,
excute 13:52:05.515547 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.520534 line       597                     mode='a'
excute 13:52:05.563421 line       599                 self.write_matrix(
excute 13:52:05.572395 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:05.579377 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.584365 line       602                     mode='a'
excute 13:52:05.623262 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]])
excute 13:52:05.626281 line       594                 self.write_matrix(
excute 13:52:05.634261 line       595                     demand,
excute 13:52:05.641243 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.647196 line       597                     mode='a'
excute 13:52:05.689084 line       599                 self.write_matrix(
excute 13:52:05.694070 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:05.700053 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.707035 line       602                     mode='a'
excute 13:52:05.753913 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:05.760924 line       594                 self.write_matrix(
excute 13:52:05.766876 line       595                     demand,
excute 13:52:05.770865 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.774854 line       597                     mode='a'
excute 13:52:05.808765 line       599                 self.write_matrix(
excute 13:52:05.814747 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:05.819735 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.824751 line       602                     mode='a'
excute 13:52:05.867609 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:05.872592 line       594                 self.write_matrix(
excute 13:52:05.876614 line       595                     demand,
excute 13:52:05.882566 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.888580 line       597                     mode='a'
excute 13:52:05.936425 line       599                 self.write_matrix(
excute 13:52:05.941408 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:05.945397 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:05.955373 line       602                     mode='a'
excute 13:52:05.999256 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:06.005237 line       594                 self.write_matrix(
excute 13:52:06.010226 line       595                     demand,
excute 13:52:06.018235 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:06.022192 line       597                     mode='a'
excute 13:52:06.061089 line       599                 self.write_matrix(
excute 13:52:06.070065 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:06.074053 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:06.081044 line       602                     mode='a'
excute 13:52:06.119932 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:06.125917 line       594                 self.write_matrix(
excute 13:52:06.131902 line       595                     demand,
excute 13:52:06.136886 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:06.143869 line       597                     mode='a'
excute 13:52:06.181766 line       599                 self.write_matrix(
excute 13:52:06.187760 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:06.191770 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:06.197741 line       602                     mode='a'
excute 13:52:06.249585 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 1, 1],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:06.255570 line       594                 self.write_matrix(
excute 13:52:06.260588 line       595                     demand,
excute 13:52:06.266541 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:06.271533 line       597                     mode='a'
excute 13:52:06.313414 line       599                 self.write_matrix(
excute 13:52:06.319397 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:06.323389 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:06.337352 line       602                     mode='a'
excute 13:52:06.459025 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 2, 0, 0, 0],       [0, 1, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:06.477985 line       594                 self.write_matrix(
excute 13:52:06.486952 line       595                     demand,
excute 13:52:06.498919 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:06.512881 line       597                     mode='a'
excute 13:52:06.835020 line       599                 self.write_matrix(
excute 13:52:06.846987 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:06.857959 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:06.870940 line       602                     mode='a'
excute 13:52:06.987612 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:07.000577 line       594                 self.write_matrix(
excute 13:52:07.011548 line       595                     demand,
excute 13:52:07.019527 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.026508 line       597                     mode='a'
excute 13:52:07.089340 line       599                 self.write_matrix(
excute 13:52:07.101307 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:07.110284 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.117266 line       602                     mode='a'
excute 13:52:07.233954 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:07.240936 line       594                 self.write_matrix(
excute 13:52:07.245923 line       595                     demand,
excute 13:52:07.253903 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.257888 line       597                     mode='a'
excute 13:52:07.303769 line       599                 self.write_matrix(
excute 13:52:07.307758 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:07.311745 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.319724 line       602                     mode='a'
excute 13:52:07.374787 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:07.385754 line       594                 self.write_matrix(
excute 13:52:07.399727 line       595                     demand,
excute 13:52:07.407695 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.412683 line       597                     mode='a'
excute 13:52:07.451578 line       599                 self.write_matrix(
excute 13:52:07.459555 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:07.466541 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.473521 line       602                     mode='a'
excute 13:52:07.517403 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:07.523388 line       594                 self.write_matrix(
excute 13:52:07.535355 line       595                     demand,
excute 13:52:07.539344 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.545326 line       597                     mode='a'
excute 13:52:07.584229 line       599                 self.write_matrix(
excute 13:52:07.596208 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:07.604171 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.608160 line       602                     mode='a'
excute 13:52:07.651045 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:07.657027 line       594                 self.write_matrix(
excute 13:52:07.662026 line       595                     demand,
excute 13:52:07.668998 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.672985 line       597                     mode='a'
excute 13:52:07.712879 line       599                 self.write_matrix(
excute 13:52:07.718863 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:07.722853 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.726842 line       602                     mode='a'
excute 13:52:07.779702 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:07.786682 line       594                 self.write_matrix(
excute 13:52:07.792668 line       595                     demand,
excute 13:52:07.798650 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.805630 line       597                     mode='a'
excute 13:52:07.841540 line       599                 self.write_matrix(
excute 13:52:07.845523 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:07.851508 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.858499 line       602                     mode='a'
excute 13:52:07.945258 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:07.953236 line       594                 self.write_matrix(
excute 13:52:07.958226 line       595                     demand,
excute 13:52:07.962213 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:07.968200 line       597                     mode='a'
excute 13:52:08.005104 line       599                 self.write_matrix(
excute 13:52:08.012078 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:08.022052 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.028070 line       602                     mode='a'
excute 13:52:08.068802 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:08.074785 line       594                 self.write_matrix(
excute 13:52:08.080771 line       595                     demand,
excute 13:52:08.086784 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.091740 line       597                     mode='a'
excute 13:52:08.128647 line       599                 self.write_matrix(
excute 13:52:08.134661 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:08.139612 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.146592 line       602                     mode='a'
excute 13:52:08.267270 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 2, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:08.271258 line       594                 self.write_matrix(
excute 13:52:08.277242 line       595                     demand,
excute 13:52:08.282229 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.286221 line       597                     mode='a'
excute 13:52:08.317141 line       599                 self.write_matrix(
excute 13:52:08.322153 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:08.336085 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.344066 line       602                     mode='a'
excute 13:52:08.392952 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:08.399916 line       594                 self.write_matrix(
excute 13:52:08.407893 line       595                     demand,
excute 13:52:08.411882 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.415873 line       597                     mode='a'
excute 13:52:08.457188 line       599                 self.write_matrix(
excute 13:52:08.461212 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:08.469163 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.477138 line       602                     mode='a'
excute 13:52:08.521026 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:08.526007 line       594                 self.write_matrix(
excute 13:52:08.532988 line       595                     demand,
excute 13:52:08.536978 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.541965 line       597                     mode='a'
excute 13:52:08.578867 line       599                 self.write_matrix(
excute 13:52:08.585847 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:08.589836 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.593827 line       602                     mode='a'
excute 13:52:08.634731 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 1, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 2, 0, 0, 0, 0, 0, 0]])
excute 13:52:08.639706 line       594                 self.write_matrix(
excute 13:52:08.646685 line       595                     demand,
excute 13:52:08.655664 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.663639 line       597                     mode='a'
excute 13:52:08.697557 line       599                 self.write_matrix(
excute 13:52:08.702536 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:08.706528 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.710516 line       602                     mode='a'
excute 13:52:08.754408 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:08.759418 line       594                 self.write_matrix(
excute 13:52:08.767363 line       595                     demand,
excute 13:52:08.771354 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.775342 line       597                     mode='a'
excute 13:52:08.812242 line       599                 self.write_matrix(
excute 13:52:08.821220 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:08.826205 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.831196 line       602                     mode='a'
excute 13:52:08.878895 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 2, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:08.883880 line       594                 self.write_matrix(
excute 13:52:08.887868 line       595                     demand,
excute 13:52:08.891857 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.895847 line       597                     mode='a'
excute 13:52:08.935747 line       599                 self.write_matrix(
excute 13:52:08.940764 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:08.944748 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:08.951735 line       602                     mode='a'
excute 13:52:08.998576 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:09.003561 line       594                 self.write_matrix(
excute 13:52:09.008578 line       595                     demand,
excute 13:52:09.015536 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.020516 line       597                     mode='a'
excute 13:52:09.058416 line       599                 self.write_matrix(
excute 13:52:09.063399 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:09.074374 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.078360 line       602                     mode='a'
excute 13:52:09.123244 line       593             for demand in demands:
excute 13:52:09.129224 line       594                 self.write_matrix(
excute 13:52:09.137203 line       595                     demand,
excute 13:52:09.144184 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.150169 line       597                     mode='a'
excute 13:52:09.184996 line       599                 self.write_matrix(
excute 13:52:09.190980 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:09.194972 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.199960 line       602                     mode='a'
excute 13:52:09.322270 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:09.334238 line       594                 self.write_matrix(
excute 13:52:09.343214 line       595                     demand,
excute 13:52:09.350195 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.355182 line       597                     mode='a'
excute 13:52:09.390109 line       599                 self.write_matrix(
excute 13:52:09.394077 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:09.401058 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.408039 line       602                     mode='a'
excute 13:52:09.451923 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [2, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:09.457907 line       594                 self.write_matrix(
excute 13:52:09.463893 line       595                     demand,
excute 13:52:09.468878 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.475858 line       597                     mode='a'
excute 13:52:09.518746 line       599                 self.write_matrix(
excute 13:52:09.524729 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:09.529716 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.535701 line       602                     mode='a'
excute 13:52:09.582275 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:09.591249 line       594                 self.write_matrix(
excute 13:52:09.595237 line       595                     demand,
excute 13:52:09.602250 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.606207 line       597                     mode='a'
excute 13:52:09.641118 line       599                 self.write_matrix(
excute 13:52:09.646133 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:09.651087 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.657103 line       602                     mode='a'
excute 13:52:09.701953 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:09.706938 line       594                 self.write_matrix(
excute 13:52:09.712924 line       595                     demand,
excute 13:52:09.717912 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.727884 line       597                     mode='a'
excute 13:52:09.765784 line       599                 self.write_matrix(
excute 13:52:09.770767 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:09.775754 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.779743 line       602                     mode='a'
excute 13:52:09.819658 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:09.825622 line       594                 self.write_matrix(
excute 13:52:09.830609 line       595                     demand,
excute 13:52:09.838618 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.845569 line       597                     mode='a'
excute 13:52:09.888454 line       599                 self.write_matrix(
excute 13:52:09.895452 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:09.900423 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.905408 line       602                     mode='a'
excute 13:52:09.948295 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:09.954279 line       594                 self.write_matrix(
excute 13:52:09.959264 line       595                     demand,
excute 13:52:09.967243 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:09.974257 line       597                     mode='a'
excute 13:52:10.019104 line       599                 self.write_matrix(
excute 13:52:10.024095 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:10.029109 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.035093 line       602                     mode='a'
excute 13:52:10.082935 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 2, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:10.090912 line       594                 self.write_matrix(
excute 13:52:10.095900 line       595                     demand,
excute 13:52:10.102880 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.107868 line       597                     mode='a'
excute 13:52:10.194636 line       599                 self.write_matrix(
excute 13:52:10.200619 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:10.207600 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.211589 line       602                     mode='a'
excute 13:52:10.387122 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:10.393105 line       594                 self.write_matrix(
excute 13:52:10.403078 line       595                     demand,
excute 13:52:10.411058 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.419034 line       597                     mode='a'
excute 13:52:10.450950 line       599                 self.write_matrix(
excute 13:52:10.457932 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:10.461920 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.466908 line       602                     mode='a'
excute 13:52:10.563652 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [2, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:10.570631 line       594                 self.write_matrix(
excute 13:52:10.578608 line       595                     demand,
excute 13:52:10.585589 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.589579 line       597                     mode='a'
excute 13:52:10.627479 line       599                 self.write_matrix(
excute 13:52:10.633463 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:10.637450 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.642438 line       602                     mode='a'
excute 13:52:10.688317 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:10.693335 line       594                 self.write_matrix(
excute 13:52:10.698299 line       595                     demand,
excute 13:52:10.706266 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.713247 line       597                     mode='a'
excute 13:52:10.760124 line       599                 self.write_matrix(
excute 13:52:10.765111 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:10.770096 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.777077 line       602                     mode='a'
excute 13:52:10.815975 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:10.821960 line       594                 self.write_matrix(
excute 13:52:10.829969 line       595                     demand,
excute 13:52:10.836917 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.841905 line       597                     mode='a'
excute 13:52:10.875684 line       599                 self.write_matrix(
excute 13:52:10.881670 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:10.889646 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.896630 line       602                     mode='a'
excute 13:52:10.941508 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:10.947492 line       594                 self.write_matrix(
excute 13:52:10.954472 line       595                     demand,
excute 13:52:10.959458 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:10.963450 line       597                     mode='a'
excute 13:52:11.004349 line       599                 self.write_matrix(
excute 13:52:11.009325 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:11.014312 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.021293 line       602                     mode='a'
excute 13:52:11.067916 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:11.074897 line       594                 self.write_matrix(
excute 13:52:11.078919 line       595                     demand,
excute 13:52:11.085901 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.091854 line       597                     mode='a'
excute 13:52:11.152691 line       599                 self.write_matrix(
excute 13:52:11.158674 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:11.162660 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.168677 line       602                     mode='a'
excute 13:52:11.212530 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 3, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:11.218514 line       594                 self.write_matrix(
excute 13:52:11.223502 line       595                     demand,
excute 13:52:11.227487 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.231476 line       597                     mode='a'
excute 13:52:11.270384 line       599                 self.write_matrix(
excute 13:52:11.275361 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:11.280348 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.286334 line       602                     mode='a'
excute 13:52:11.410449 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:11.419425 line       594                 self.write_matrix(
excute 13:52:11.425411 line       595                     demand,
excute 13:52:11.434386 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.440368 line       597                     mode='a'
excute 13:52:11.489244 line       599                 self.write_matrix(
excute 13:52:11.495223 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:11.504198 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.513174 line       602                     mode='a'
excute 13:52:11.609925 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:11.620885 line       594                 self.write_matrix(
excute 13:52:11.630859 line       595                     demand,
excute 13:52:11.641829 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.651803 line       597                     mode='a'
excute 13:52:11.828332 line       599                 self.write_matrix(
excute 13:52:11.838306 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:11.845286 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.854263 line       602                     mode='a'
excute 13:52:11.900143 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:11.907120 line       594                 self.write_matrix(
excute 13:52:11.912109 line       595                     demand,
excute 13:52:11.917108 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.921083 line       597                     mode='a'
excute 13:52:11.957048 line       599                 self.write_matrix(
excute 13:52:11.961009 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:11.967958 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:11.972945 line       602                     mode='a'
excute 13:52:12.030796 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:12.039767 line       594                 self.write_matrix(
excute 13:52:12.047746 line       595                     demand,
excute 13:52:12.055725 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.059714 line       597                     mode='a'
excute 13:52:12.134514 line       599                 self.write_matrix(
excute 13:52:12.141494 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:12.150471 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.158449 line       602                     mode='a'
excute 13:52:12.214307 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:12.222279 line       594                 self.write_matrix(
excute 13:52:12.231254 line       595                     demand,
excute 13:52:12.242225 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.249206 line       597                     mode='a'
excute 13:52:12.301078 line       599                 self.write_matrix(
excute 13:52:12.312039 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:12.321015 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.328994 line       602                     mode='a'
excute 13:52:12.417764 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:12.426732 line       594                 self.write_matrix(
excute 13:52:12.433714 line       595                     demand,
excute 13:52:12.441692 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.447674 line       597                     mode='a'
excute 13:52:12.494551 line       599                 self.write_matrix(
excute 13:52:12.503527 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:12.510509 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.514496 line       602                     mode='a'
excute 13:52:12.561385 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [2, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:12.570349 line       594                 self.write_matrix(
excute 13:52:12.579324 line       595                     demand,
excute 13:52:12.585307 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.592322 line       597                     mode='a'
excute 13:52:12.695013 line       599                 self.write_matrix(
excute 13:52:12.700004 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:12.703991 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.707980 line       602                     mode='a'
excute 13:52:12.748876 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 2, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0]])
excute 13:52:12.753858 line       594                 self.write_matrix(
excute 13:52:12.760842 line       595                     demand,
excute 13:52:12.764829 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.772841 line       597                     mode='a'
excute 13:52:12.816699 line       599                 self.write_matrix(
excute 13:52:12.824669 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:12.831681 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.835641 line       602                     mode='a'
excute 13:52:12.931383 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 2, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:12.938364 line       594                 self.write_matrix(
excute 13:52:12.944347 line       595                     demand,
excute 13:52:12.951336 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:12.957344 line       597                     mode='a'
excute 13:52:12.992221 line       599                 self.write_matrix(
excute 13:52:13.003190 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:13.008176 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.013163 line       602                     mode='a'
excute 13:52:13.059048 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:13.063031 line       594                 self.write_matrix(
excute 13:52:13.071009 line       595                     demand,
excute 13:52:13.074997 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.078987 line       597                     mode='a'
excute 13:52:13.119880 line       599                 self.write_matrix(
excute 13:52:13.124864 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:13.128887 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.134840 line       602                     mode='a'
excute 13:52:13.181715 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:13.191689 line       594                 self.write_matrix(
excute 13:52:13.201659 line       595                     demand,
excute 13:52:13.209637 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.217617 line       597                     mode='a'
excute 13:52:13.256518 line       599                 self.write_matrix(
excute 13:52:13.261499 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:13.265488 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.271474 line       602                     mode='a'
excute 13:52:13.314359 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:13.320344 line       594                 self.write_matrix(
excute 13:52:13.326327 line       595                     demand,
excute 13:52:13.341296 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.347271 line       597                     mode='a'
excute 13:52:13.384175 line       599                 self.write_matrix(
excute 13:52:13.389160 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:13.393149 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.397138 line       602                     mode='a'
excute 13:52:13.440038 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:13.444013 line       594                 self.write_matrix(
excute 13:52:13.449002 line       595                     demand,
excute 13:52:13.454983 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.459973 line       597                     mode='a'
excute 13:52:13.499864 line       599                 self.write_matrix(
excute 13:52:13.507841 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:13.512830 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.519809 line       602                     mode='a'
excute 13:52:13.561708 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:13.568679 line       594                 self.write_matrix(
excute 13:52:13.574666 line       595                     demand,
excute 13:52:13.578653 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.583646 line       597                     mode='a'
excute 13:52:13.625535 line       599                 self.write_matrix(
excute 13:52:13.629515 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:13.636497 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.641484 line       602                     mode='a'
excute 13:52:13.687363 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:13.695373 line       594                 self.write_matrix(
excute 13:52:13.702322 line       595                     demand,
excute 13:52:13.707308 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.713296 line       597                     mode='a'
excute 13:52:13.829983 line       599                 self.write_matrix(
excute 13:52:13.836992 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:13.840950 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.845937 line       602                     mode='a'
excute 13:52:13.943676 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:13.951675 line       594                 self.write_matrix(
excute 13:52:13.956643 line       595                     demand,
excute 13:52:13.961628 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:13.968611 line       597                     mode='a'
excute 13:52:14.014487 line       599                 self.write_matrix(
excute 13:52:14.021499 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:14.027451 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.035432 line       602                     mode='a'
excute 13:52:14.075326 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:14.080310 line       594                 self.write_matrix(
excute 13:52:14.086296 line       595                     demand,
excute 13:52:14.090284 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.094273 line       597                     mode='a'
excute 13:52:14.135164 line       599                 self.write_matrix(
excute 13:52:14.140151 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:14.145139 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.150125 line       602                     mode='a'
excute 13:52:14.189025 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 2],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:14.194038 line       594                 self.write_matrix(
excute 13:52:14.199992 line       595                     demand,
excute 13:52:14.204978 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.211959 line       597                     mode='a'
excute 13:52:14.256841 line       599                 self.write_matrix(
excute 13:52:14.262823 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:14.267820 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.274824 line       602                     mode='a'
excute 13:52:14.317686 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 2, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:14.323662 line       594                 self.write_matrix(
excute 13:52:14.338621 line       595                     demand,
excute 13:52:14.346603 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.350588 line       597                     mode='a'
excute 13:52:14.392491 line       599                 self.write_matrix(
excute 13:52:14.397514 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:14.403478 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.410461 line       602                     mode='a'
excute 13:52:14.452321 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 2, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:14.458301 line       594                 self.write_matrix(
excute 13:52:14.464287 line       595                     demand,
excute 13:52:14.472294 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.476252 line       597                     mode='a'
excute 13:52:14.519142 line       599                 self.write_matrix(
excute 13:52:14.527118 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:14.535106 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.539084 line       602                     mode='a'
excute 13:52:14.579980 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [1, 0, 0, 2, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:14.586956 line       594                 self.write_matrix(
excute 13:52:14.593938 line       595                     demand,
excute 13:52:14.600950 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.607931 line       597                     mode='a'
excute 13:52:14.649802 line       599                 self.write_matrix(
excute 13:52:14.655773 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:14.659762 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.663750 line       602                     mode='a'
excute 13:52:14.707348 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:14.712325 line       594                 self.write_matrix(
excute 13:52:14.718320 line       595                     demand,
excute 13:52:14.723298 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.728284 line       597                     mode='a'
excute 13:52:14.775616 line       599                 self.write_matrix(
excute 13:52:14.785587 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:14.792567 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.796558 line       602                     mode='a'
excute 13:52:14.837450 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 2, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:14.843431 line       594                 self.write_matrix(
excute 13:52:14.847455 line       595                     demand,
excute 13:52:14.852407 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.858392 line       597                     mode='a'
excute 13:52:14.899283 line       599                 self.write_matrix(
excute 13:52:14.907261 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:14.911250 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:14.915243 line       602                     mode='a'
excute 13:52:15.012978 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:15.018966 line       594                 self.write_matrix(
excute 13:52:15.026949 line       595                     demand,
excute 13:52:15.033954 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.040934 line       597                     mode='a'
excute 13:52:15.083791 line       599                 self.write_matrix(
excute 13:52:15.090770 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:15.094759 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.099747 line       602                     mode='a'
excute 13:52:15.192500 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:15.202491 line       594                 self.write_matrix(
excute 13:52:15.207460 line       595                     demand,
excute 13:52:15.211448 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.216435 line       597                     mode='a'
excute 13:52:15.255338 line       599                 self.write_matrix(
excute 13:52:15.263309 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:15.272285 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.279265 line       602                     mode='a'
excute 13:52:15.319163 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 2, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 2, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:15.326141 line       594                 self.write_matrix(
excute 13:52:15.336114 line       595                     demand,
excute 13:52:15.345091 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.349081 line       597                     mode='a'
excute 13:52:15.436846 line       599                 self.write_matrix(
excute 13:52:15.444856 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:15.449809 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.456822 line       602                     mode='a'
excute 13:52:15.554546 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:15.561515 line       594                 self.write_matrix(
excute 13:52:15.565503 line       595                     demand,
excute 13:52:15.572512 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.576473 line       597                     mode='a'
excute 13:52:15.618365 line       599                 self.write_matrix(
excute 13:52:15.625340 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:15.629332 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.633320 line       602                     mode='a'
excute 13:52:15.678076 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 2, 0, 0, 1, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:15.686053 line       594                 self.write_matrix(
excute 13:52:15.691043 line       595                     demand,
excute 13:52:15.697023 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.702009 line       597                     mode='a'
excute 13:52:15.737920 line       599                 self.write_matrix(
excute 13:52:15.742900 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:15.747887 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.753886 line       602                     mode='a'
excute 13:52:15.808732 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:15.814709 line       594                 self.write_matrix(
excute 13:52:15.820694 line       595                     demand,
excute 13:52:15.826676 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.831664 line       597                     mode='a'
excute 13:52:15.868566 line       599                 self.write_matrix(
excute 13:52:15.877546 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:15.887515 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.894497 line       602                     mode='a'
excute 13:52:15.942377 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:15.952351 line       594                 self.write_matrix(
excute 13:52:15.959322 line       595                     demand,
excute 13:52:15.967303 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:15.974282 line       597                     mode='a'
excute 13:52:16.015175 line       599                 self.write_matrix(
excute 13:52:16.023152 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:16.030133 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.038113 line       602                     mode='a'
excute 13:52:16.077019 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 1, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:16.081994 line       594                 self.write_matrix(
excute 13:52:16.087980 line       595                     demand,
excute 13:52:16.091969 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.098950 line       597                     mode='a'
excute 13:52:16.211941 line       599                 self.write_matrix(
excute 13:52:16.218923 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:16.222912 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.225902 line       602                     mode='a'
excute 13:52:16.263334 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:16.270314 line       594                 self.write_matrix(
excute 13:52:16.276301 line       595                     demand,
excute 13:52:16.280288 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.285275 line       597                     mode='a'
excute 13:52:16.330154 line       599                 self.write_matrix(
excute 13:52:16.347108 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:16.356087 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.360073 line       602                     mode='a'
excute 13:52:16.416926 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]])
excute 13:52:16.426896 line       594                 self.write_matrix(
excute 13:52:16.433881 line       595                     demand,
excute 13:52:16.441857 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.450830 line       597                     mode='a'
excute 13:52:16.490725 line       599                 self.write_matrix(
excute 13:52:16.497705 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:16.505684 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.518651 line       602                     mode='a'
excute 13:52:16.604425 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:16.620380 line       594                 self.write_matrix(
excute 13:52:16.628356 line       595                     demand,
excute 13:52:16.637332 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.644320 line       597                     mode='a'
excute 13:52:16.796913 line       599                 self.write_matrix(
excute 13:52:16.807876 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:16.817849 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.826826 line       602                     mode='a'
excute 13:52:16.892649 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:16.897636 line       594                 self.write_matrix(
excute 13:52:16.903620 line       595                     demand,
excute 13:52:16.907609 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.914590 line       597                     mode='a'
excute 13:52:16.958484 line       599                 self.write_matrix(
excute 13:52:16.963462 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:16.970443 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:16.974431 line       602                     mode='a'
excute 13:52:17.021327 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 1, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 2, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:17.029284 line       594                 self.write_matrix(
excute 13:52:17.037263 line       595                     demand,
excute 13:52:17.041253 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.048233 line       597                     mode='a'
excute 13:52:17.083155 line       599                 self.write_matrix(
excute 13:52:17.088129 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:17.093116 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.100095 line       602                     mode='a'
excute 13:52:17.144977 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:17.150961 line       594                 self.write_matrix(
excute 13:52:17.156945 line       595                     demand,
excute 13:52:17.161931 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.166918 line       597                     mode='a'
excute 13:52:17.259671 line       599                 self.write_matrix(
excute 13:52:17.266649 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:17.274628 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.280613 line       602                     mode='a'
excute 13:52:17.326496 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:17.338459 line       594                 self.write_matrix(
excute 13:52:17.347438 line       595                     demand,
excute 13:52:17.356410 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.363392 line       597                     mode='a'
excute 13:52:17.472350 line       599                 self.write_matrix(
excute 13:52:17.479329 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:17.483318 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.490300 line       602                     mode='a'
excute 13:52:17.553146 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:17.562107 line       594                 self.write_matrix(
excute 13:52:17.571084 line       595                     demand,
excute 13:52:17.576070 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.584054 line       597                     mode='a'
excute 13:52:17.627934 line       599                 self.write_matrix(
excute 13:52:17.635919 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:17.643889 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.651867 line       602                     mode='a'
excute 13:52:17.717695 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:17.727667 line       594                 self.write_matrix(
excute 13:52:17.737639 line       595                     demand,
excute 13:52:17.745617 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.755590 line       597                     mode='a'
excute 13:52:17.817425 line       599                 self.write_matrix(
excute 13:52:17.825403 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:17.833383 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.842358 line       602                     mode='a'
excute 13:52:17.963040 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:17.976002 line       594                 self.write_matrix(
excute 13:52:17.983982 line       595                     demand,
excute 13:52:17.987971 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:17.992961 line       597                     mode='a'
excute 13:52:18.025873 line       599                 self.write_matrix(
excute 13:52:18.030858 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:18.034843 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.040827 line       602                     mode='a'
excute 13:52:18.088700 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:18.095680 line       594                 self.write_matrix(
excute 13:52:18.104660 line       595                     demand,
excute 13:52:18.108646 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.112637 line       597                     mode='a'
excute 13:52:18.147585 line       599                 self.write_matrix(
excute 13:52:18.154525 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:18.160509 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.168487 line       602                     mode='a'
excute 13:52:18.215363 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 2],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:18.221349 line       594                 self.write_matrix(
excute 13:52:18.225335 line       595                     demand,
excute 13:52:18.230321 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.234310 line       597                     mode='a'
excute 13:52:18.269217 line       599                 self.write_matrix(
excute 13:52:18.280221 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:18.289170 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.294151 line       602                     mode='a'
excute 13:52:18.399872 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:18.407846 line       594                 self.write_matrix(
excute 13:52:18.414852 line       595                     demand,
excute 13:52:18.418816 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.423837 line       597                     mode='a'
excute 13:52:18.460712 line       599                 self.write_matrix(
excute 13:52:18.464728 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:18.470678 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.474667 line       602                     mode='a'
excute 13:52:18.520547 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 2, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:18.526530 line       594                 self.write_matrix(
excute 13:52:18.532515 line       595                     demand,
excute 13:52:18.537504 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.541489 line       597                     mode='a'
excute 13:52:18.644177 line       599                 self.write_matrix(
excute 13:52:18.649194 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:18.654149 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.659137 line       602                     mode='a'
excute 13:52:18.701025 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:18.709005 line       594                 self.write_matrix(
excute 13:52:18.717978 line       595                     demand,
excute 13:52:18.723961 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.730942 line       597                     mode='a'
excute 13:52:18.822700 line       599                 self.write_matrix(
excute 13:52:18.828683 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:18.833670 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.839652 line       602                     mode='a'
excute 13:52:18.886528 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:18.893509 line       594                 self.write_matrix(
excute 13:52:18.901490 line       595                     demand,
excute 13:52:18.909466 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:18.913454 line       597                     mode='a'
excute 13:52:19.010201 line       599                 self.write_matrix(
excute 13:52:19.014217 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:19.019174 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.025188 line       602                     mode='a'
excute 13:52:19.067528 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:19.075505 line       594                 self.write_matrix(
excute 13:52:19.079496 line       595                     demand,
excute 13:52:19.087479 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.095452 line       597                     mode='a'
excute 13:52:19.135348 line       599                 self.write_matrix(
excute 13:52:19.143327 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:19.148311 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.153305 line       602                     mode='a'
excute 13:52:19.198082 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:19.202058 line       594                 self.write_matrix(
excute 13:52:19.208042 line       595                     demand,
excute 13:52:19.216020 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.220011 line       597                     mode='a'
excute 13:52:19.255919 line       599                 self.write_matrix(
excute 13:52:19.260934 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:19.264922 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.268881 line       602                     mode='a'
excute 13:52:19.322739 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 3, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:19.339691 line       594                 self.write_matrix(
excute 13:52:19.349664 line       595                     demand,
excute 13:52:19.359637 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.366618 line       597                     mode='a'
excute 13:52:19.414493 line       599                 self.write_matrix(
excute 13:52:19.422470 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:19.430448 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.438427 line       602                     mode='a'
excute 13:52:19.490290 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:19.496271 line       594                 self.write_matrix(
excute 13:52:19.500260 line       595                     demand,
excute 13:52:19.506246 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.512230 line       597                     mode='a'
excute 13:52:19.553122 line       599                 self.write_matrix(
excute 13:52:19.559104 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:19.566084 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.571082 line       602                     mode='a'
excute 13:52:19.611968 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0]])
excute 13:52:19.615954 line       594                 self.write_matrix(
excute 13:52:19.621939 line       595                     demand,
excute 13:52:19.629915 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.635899 line       597                     mode='a'
excute 13:52:19.672800 line       599                 self.write_matrix(
excute 13:52:19.678785 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:19.683773 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.688758 line       602                     mode='a'
excute 13:52:19.797606 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:19.801597 line       594                 self.write_matrix(
excute 13:52:19.806583 line       595                     demand,
excute 13:52:19.810572 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.814561 line       597                     mode='a'
excute 13:52:19.864427 line       599                 self.write_matrix(
excute 13:52:19.870423 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:19.876394 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.880384 line       602                     mode='a'
excute 13:52:19.971472 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:19.977448 line       594                 self.write_matrix(
excute 13:52:19.982437 line       595                     demand,
excute 13:52:19.988434 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:19.993408 line       597                     mode='a'
excute 13:52:20.035303 line       599                 self.write_matrix(
excute 13:52:20.042275 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:20.047263 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.051250 line       602                     mode='a'
excute 13:52:20.094141 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:20.099125 line       594                 self.write_matrix(
excute 13:52:20.106105 line       595                     demand,
excute 13:52:20.112119 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.120067 line       597                     mode='a'
excute 13:52:20.158964 line       599                 self.write_matrix(
excute 13:52:20.164948 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:20.169934 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.174922 line       602                     mode='a'
excute 13:52:20.215813 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:20.222827 line       594                 self.write_matrix(
excute 13:52:20.227781 line       595                     demand,
excute 13:52:20.231771 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.236755 line       597                     mode='a'
excute 13:52:20.277648 line       599                 self.write_matrix(
excute 13:52:20.281635 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:20.287629 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.292607 line       602                     mode='a'
excute 13:52:20.342473 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:20.351457 line       594                 self.write_matrix(
excute 13:52:20.359443 line       595                     demand,
excute 13:52:20.363417 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.368405 line       597                     mode='a'
excute 13:52:20.407299 line       599                 self.write_matrix(
excute 13:52:20.413284 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:20.417273 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.423259 line       602                     mode='a'
excute 13:52:20.474134 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 2, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:20.479139 line       594                 self.write_matrix(
excute 13:52:20.484107 line       595                     demand,
excute 13:52:20.490080 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.497059 line       597                     mode='a'
excute 13:52:20.537952 line       599                 self.write_matrix(
excute 13:52:20.543936 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:20.547923 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.552911 line       602                     mode='a'
excute 13:52:20.593804 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]])
excute 13:52:20.598786 line       594                 self.write_matrix(
excute 13:52:20.603775 line       595                     demand,
excute 13:52:20.608761 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.612751 line       597                     mode='a'
excute 13:52:20.651648 line       599                 self.write_matrix(
excute 13:52:20.657632 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:20.664614 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.668600 line       602                     mode='a'
excute 13:52:20.709498 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 2, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:20.715479 line       594                 self.write_matrix(
excute 13:52:20.724452 line       595                     demand,
excute 13:52:20.731436 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.739411 line       597                     mode='a'
excute 13:52:20.776326 line       599                 self.write_matrix(
excute 13:52:20.782296 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:20.788290 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.794265 line       602                     mode='a'
excute 13:52:20.901601 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:20.908686 line       594                 self.write_matrix(
excute 13:52:20.914670 line       595                     demand,
excute 13:52:20.918660 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.922648 line       597                     mode='a'
excute 13:52:20.974511 line       599                 self.write_matrix(
excute 13:52:20.979497 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:20.989471 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:20.996451 line       602                     mode='a'
excute 13:52:21.033357 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 2, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:21.039372 line       594                 self.write_matrix(
excute 13:52:21.046349 line       595                     demand,
excute 13:52:21.053301 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.060280 line       597                     mode='a'
excute 13:52:21.099182 line       599                 self.write_matrix(
excute 13:52:21.105184 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:21.109151 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.114137 line       602                     mode='a'
excute 13:52:21.203897 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:21.214867 line       594                 self.write_matrix(
excute 13:52:21.218856 line       595                     demand,
excute 13:52:21.224841 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.228831 line       597                     mode='a'
excute 13:52:21.261745 line       599                 self.write_matrix(
excute 13:52:21.265730 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:21.271740 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.279696 line       602                     mode='a'
excute 13:52:21.324576 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:21.342527 line       594                 self.write_matrix(
excute 13:52:21.350505 line       595                     demand,
excute 13:52:21.360478 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.367459 line       597                     mode='a'
excute 13:52:21.428298 line       599                 self.write_matrix(
excute 13:52:21.437274 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:21.446249 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.454228 line       602                     mode='a'
excute 13:52:21.527034 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:21.536010 line       594                 self.write_matrix(
excute 13:52:21.545982 line       595                     demand,
excute 13:52:21.553961 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.562938 line       597                     mode='a'
excute 13:52:21.628763 line       599                 self.write_matrix(
excute 13:52:21.636742 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:21.645716 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.652697 line       602                     mode='a'
excute 13:52:21.727500 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 2],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:21.739465 line       594                 self.write_matrix(
excute 13:52:21.748442 line       595                     demand,
excute 13:52:21.755422 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.765395 line       597                     mode='a'
excute 13:52:21.830228 line       599                 self.write_matrix(
excute 13:52:21.837204 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:21.846180 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.854159 line       602                     mode='a'
excute 13:52:21.902032 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:21.908016 line       594                 self.write_matrix(
excute 13:52:21.914997 line       595                     demand,
excute 13:52:21.922976 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.926964 line       597                     mode='a'
excute 13:52:21.962874 line       599                 self.write_matrix(
excute 13:52:21.972841 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:21.976830 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:21.981817 line       602                     mode='a'
excute 13:52:22.023712 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:22.029689 line       594                 self.write_matrix(
excute 13:52:22.036670 line       595                     demand,
excute 13:52:22.043652 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.047642 line       597                     mode='a'
excute 13:52:22.145379 line       599                 self.write_matrix(
excute 13:52:22.151365 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:22.157379 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.161336 line       602                     mode='a'
excute 13:52:22.199239 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:22.213197 line       594                 self.write_matrix(
excute 13:52:22.218218 line       595                     demand,
excute 13:52:22.224200 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.228158 line       597                     mode='a'
excute 13:52:22.263070 line       599                 self.write_matrix(
excute 13:52:22.269051 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:22.276030 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.284010 line       602                     mode='a'
excute 13:52:22.329889 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:22.344847 line       594                 self.write_matrix(
excute 13:52:22.352859 line       595                     demand,
excute 13:52:22.360838 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.365790 line       597                     mode='a'
excute 13:52:22.400702 line       599                 self.write_matrix(
excute 13:52:22.406681 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:22.413664 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.418650 line       602                     mode='a'
excute 13:52:22.470510 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:22.477523 line       594                 self.write_matrix(
excute 13:52:22.485471 line       595                     demand,
excute 13:52:22.490462 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.497469 line       597                     mode='a'
excute 13:52:22.532349 line       599                 self.write_matrix(
excute 13:52:22.539339 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:22.544314 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.548308 line       602                     mode='a'
excute 13:52:22.599182 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:22.603190 line       594                 self.write_matrix(
excute 13:52:22.609141 line       595                     demand,
excute 13:52:22.613129 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.617117 line       597                     mode='a'
excute 13:52:22.655018 line       599                 self.write_matrix(
excute 13:52:22.662030 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:22.665987 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.673967 line       602                     mode='a'
excute 13:52:22.717851 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:22.725829 line       594                 self.write_matrix(
excute 13:52:22.733807 line       595                     demand,
excute 13:52:22.739791 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.746807 line       597                     mode='a'
excute 13:52:22.783683 line       599                 self.write_matrix(
excute 13:52:22.789661 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:22.796670 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.800628 line       602                     mode='a'
excute 13:52:22.848500 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:22.853496 line       594                 self.write_matrix(
excute 13:52:22.858475 line       595                     demand,
excute 13:52:22.862464 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.867449 line       597                     mode='a'
excute 13:52:22.916321 line       599                 self.write_matrix(
excute 13:52:22.926292 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:22.938260 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:22.949231 line       602                     mode='a'
excute 13:52:23.009072 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 1, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:23.013060 line       594                 self.write_matrix(
excute 13:52:23.020041 line       595                     demand,
excute 13:52:23.031015 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.040986 line       597                     mode='a'
excute 13:52:23.092855 line       599                 self.write_matrix(
excute 13:52:23.100825 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:23.108804 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.117786 line       602                     mode='a'
excute 13:52:23.179618 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:23.186597 line       594                 self.write_matrix(
excute 13:52:23.196570 line       595                     demand,
excute 13:52:23.206543 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.215521 line       597                     mode='a'
excute 13:52:23.285333 line       599                 self.write_matrix(
excute 13:52:23.295305 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:23.301290 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.307273 line       602                     mode='a'
excute 13:52:23.365120 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:23.371109 line       594                 self.write_matrix(
excute 13:52:23.382076 line       595                     demand,
excute 13:52:23.387061 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.397033 line       597                     mode='a'
excute 13:52:23.503749 line       599                 self.write_matrix(
excute 13:52:23.510760 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:23.517745 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.522697 line       602                     mode='a'
excute 13:52:23.623432 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:23.630413 line       594                 self.write_matrix(
excute 13:52:23.636395 line       595                     demand,
excute 13:52:23.644373 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.651353 line       597                     mode='a'
excute 13:52:23.696234 line       599                 self.write_matrix(
excute 13:52:23.703215 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:23.708203 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.713194 line       602                     mode='a'
excute 13:52:23.754081 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 2, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:23.766050 line       594                 self.write_matrix(
excute 13:52:23.772032 line       595                     demand,
excute 13:52:23.781007 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.784996 line       597                     mode='a'
excute 13:52:23.823894 line       599                 self.write_matrix(
excute 13:52:23.830905 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:23.836860 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.844872 line       602                     mode='a'
excute 13:52:23.883750 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:23.891714 line       594                 self.write_matrix(
excute 13:52:23.896699 line       595                     demand,
excute 13:52:23.901686 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.905676 line       597                     mode='a'
excute 13:52:23.947562 line       599                 self.write_matrix(
excute 13:52:23.951586 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:23.957537 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:23.961524 line       602                     mode='a'
excute 13:52:24.007405 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:24.016380 line       594                 self.write_matrix(
excute 13:52:24.024357 line       595                     demand,
excute 13:52:24.028347 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.035359 line       597                     mode='a'
excute 13:52:24.070234 line       599                 self.write_matrix(
excute 13:52:24.078213 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:24.086191 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.094169 line       602                     mode='a'
excute 13:52:24.135067 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:24.142045 line       594                 self.write_matrix(
excute 13:52:24.149023 line       595                     demand,
excute 13:52:24.153013 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.157999 line       597                     mode='a'
excute 13:52:24.196925 line       599                 self.write_matrix(
excute 13:52:24.200917 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:24.206879 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.213901 line       602                     mode='a'
excute 13:52:24.258733 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:24.264713 line       594                 self.write_matrix(
excute 13:52:24.269734 line       595                     demand,
excute 13:52:24.276715 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.280671 line       597                     mode='a'
excute 13:52:24.325553 line       599                 self.write_matrix(
excute 13:52:24.342506 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:24.346495 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.354474 line       602                     mode='a'
excute 13:52:24.456115 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]])
excute 13:52:24.463103 line       594                 self.write_matrix(
excute 13:52:24.467085 line       595                     demand,
excute 13:52:24.471074 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.479085 line       597                     mode='a'
excute 13:52:24.514958 line       599                 self.write_matrix(
excute 13:52:24.520973 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:24.525929 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.529918 line       602                     mode='a'
excute 13:52:24.623667 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:24.630648 line       594                 self.write_matrix(
excute 13:52:24.639635 line       595                     demand,
excute 13:52:24.643614 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.651592 line       597                     mode='a'
excute 13:52:24.685508 line       599                 self.write_matrix(
excute 13:52:24.692484 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:24.696474 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.702457 line       602                     mode='a'
excute 13:52:24.755316 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:24.762330 line       594                 self.write_matrix(
excute 13:52:24.769308 line       595                     demand,
excute 13:52:24.775260 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.782273 line       597                     mode='a'
excute 13:52:24.815155 line       599                 self.write_matrix(
excute 13:52:24.822136 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:24.827123 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.831112 line       602                     mode='a'
excute 13:52:24.924864 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 3, 0, 0, 0, 0, 0, 0]])
excute 13:52:24.929849 line       594                 self.write_matrix(
excute 13:52:24.937858 line       595                     demand,
excute 13:52:24.942815 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:24.948797 line       597                     mode='a'
excute 13:52:24.983704 line       599                 self.write_matrix(
excute 13:52:24.990700 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:24.997689 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.001657 line       602                     mode='a'
excute 13:52:25.054514 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:25.060501 line       594                 self.write_matrix(
excute 13:52:25.065486 line       595                     demand,
excute 13:52:25.070471 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.074463 line       597                     mode='a'
excute 13:52:25.157241 line       599                 self.write_matrix(
excute 13:52:25.163224 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:25.167214 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.174194 line       602                     mode='a'
excute 13:52:25.220078 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:25.226058 line       594                 self.write_matrix(
excute 13:52:25.230047 line       595                     demand,
excute 13:52:25.234035 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.239021 line       597                     mode='a'
excute 13:52:25.279918 line       599                 self.write_matrix(
excute 13:52:25.284900 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:25.289895 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.296867 line       602                     mode='a'
excute 13:52:25.352718 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:25.363720 line       594                 self.write_matrix(
excute 13:52:25.367678 line       595                     demand,
excute 13:52:25.372665 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.378659 line       597                     mode='a'
excute 13:52:25.416564 line       599                 self.write_matrix(
excute 13:52:25.422533 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:25.427517 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.431508 line       602                     mode='a'
excute 13:52:25.473399 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 1, 0, 0, 0]])
excute 13:52:25.481374 line       594                 self.write_matrix(
excute 13:52:25.485363 line       595                     demand,
excute 13:52:25.491349 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.498367 line       597                     mode='a'
excute 13:52:25.533242 line       599                 self.write_matrix(
excute 13:52:25.538222 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:25.543208 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.548198 line       602                     mode='a'
excute 13:52:25.701753 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:25.709755 line       594                 self.write_matrix(
excute 13:52:25.715709 line       595                     demand,
excute 13:52:25.719698 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.726682 line       597                     mode='a'
excute 13:52:25.772557 line       599                 self.write_matrix(
excute 13:52:25.778541 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:25.782530 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.787517 line       602                     mode='a'
excute 13:52:25.873599 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 2, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:25.878587 line       594                 self.write_matrix(
excute 13:52:25.885567 line       595                     demand,
excute 13:52:25.890563 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.898541 line       597                     mode='a'
excute 13:52:25.935232 line       599                 self.write_matrix(
excute 13:52:25.941214 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:25.946201 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:25.953182 line       602                     mode='a'
excute 13:52:26.001053 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]])
excute 13:52:26.005075 line       594                 self.write_matrix(
excute 13:52:26.012025 line       595                     demand,
excute 13:52:26.019038 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:26.025987 line       597                     mode='a'
excute 13:52:26.060895 line       599                 self.write_matrix(
excute 13:52:26.066878 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:26.072862 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:26.077852 line       602                     mode='a'
excute 13:52:26.122729 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:26.130707 line       594                 self.write_matrix(
excute 13:52:26.136692 line       595                     demand,
excute 13:52:26.144669 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:26.152649 line       597                     mode='a'
excute 13:52:26.236425 line       599                 self.write_matrix(
excute 13:52:26.242410 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:26.247395 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:26.251384 line       602                     mode='a'
excute 13:52:26.289285 line       593             for demand in demands:
excute 13:52:26.297293 line       594                 self.write_matrix(
excute 13:52:26.304274 line       595                     demand,
excute 13:52:26.312226 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:26.317209 line       597                     mode='a'
excute 13:52:26.366094 line       599                 self.write_matrix(
excute 13:52:26.375055 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:26.382037 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:26.390015 line       602                     mode='a'
excute 13:52:26.448862 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:26.453843 line       594                 self.write_matrix(
excute 13:52:26.467807 line       595                     demand,
excute 13:52:26.475787 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:26.480773 line       597                     mode='a'
excute 13:52:26.557567 line       599                 self.write_matrix(
excute 13:52:26.567540 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:26.576516 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:26.584497 line       602                     mode='a'
excute 13:52:26.654309 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:26.662285 line       594                 self.write_matrix(
excute 13:52:26.670266 line       595                     demand,
excute 13:52:26.679240 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:26.689219 line       597                     mode='a'
excute 13:52:26.916977 line       599                 self.write_matrix(
excute 13:52:26.924034 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:26.933007 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:26.939988 line       602                     mode='a'
excute 13:52:26.990860 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:26.995839 line       594                 self.write_matrix(
excute 13:52:27.000827 line       595                     demand,
excute 13:52:27.005813 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.011797 line       597                     mode='a'
excute 13:52:27.054682 line       599                 self.write_matrix(
excute 13:52:27.067647 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:27.074651 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.082609 line       602                     mode='a'
excute 13:52:27.119708 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]])
excute 13:52:27.124704 line       594                 self.write_matrix(
excute 13:52:27.133672 line       595                     demand,
excute 13:52:27.140651 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.144639 line       597                     mode='a'
excute 13:52:27.185533 line       599                 self.write_matrix(
excute 13:52:27.191524 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:27.196502 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.203488 line       602                     mode='a'
excute 13:52:27.248444 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:27.253428 line       594                 self.write_matrix(
excute 13:52:27.259411 line       595                     demand,
excute 13:52:27.263401 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.267389 line       597                     mode='a'
excute 13:52:27.306394 line       599                 self.write_matrix(
excute 13:52:27.317365 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:27.322351 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.330329 line       602                     mode='a'
excute 13:52:27.380195 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:27.385196 line       594                 self.write_matrix(
excute 13:52:27.392166 line       595                     demand,
excute 13:52:27.397149 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.401138 line       597                     mode='a'
excute 13:52:27.435052 line       599                 self.write_matrix(
excute 13:52:27.439037 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:27.446020 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.451007 line       602                     mode='a'
excute 13:52:27.495903 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:27.500905 line       594                 self.write_matrix(
excute 13:52:27.505868 line       595                     demand,
excute 13:52:27.510846 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.514835 line       597                     mode='a'
excute 13:52:27.557723 line       599                 self.write_matrix(
excute 13:52:27.567693 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:27.574682 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.582655 line       602                     mode='a'
excute 13:52:27.673413 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:27.682387 line       594                 self.write_matrix(
excute 13:52:27.694355 line       595                     demand,
excute 13:52:27.699343 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.706326 line       597                     mode='a'
excute 13:52:27.746217 line       599                 self.write_matrix(
excute 13:52:27.752202 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:27.758204 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.764168 line       602                     mode='a'
excute 13:52:27.809056 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 2, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:27.814039 line       594                 self.write_matrix(
excute 13:52:27.820020 line       595                     demand,
excute 13:52:27.826006 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.833983 line       597                     mode='a'
excute 13:52:27.934713 line       599                 self.write_matrix(
excute 13:52:27.938703 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:27.943691 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:27.950672 line       602                     mode='a'
excute 13:52:28.042427 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0]])
excute 13:52:28.049406 line       594                 self.write_matrix(
excute 13:52:28.057390 line       595                     demand,
excute 13:52:28.062373 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:28.066373 line       597                     mode='a'
excute 13:52:28.108252 line       599                 self.write_matrix(
excute 13:52:28.112238 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:28.119219 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:28.126234 line       602                     mode='a'
excute 13:52:28.222856 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 2],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:28.230841 line       594                 self.write_matrix(
excute 13:52:28.237815 line       595                     demand,
excute 13:52:28.246789 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:28.254768 line       597                     mode='a'
excute 13:52:28.286682 line       599                 self.write_matrix(
excute 13:52:28.293665 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:28.298652 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:28.306630 line       602                     mode='a'
excute 13:52:28.459224 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:28.470191 line       594                 self.write_matrix(
excute 13:52:28.480166 line       595                     demand,
excute 13:52:28.488152 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:28.497120 line       597                     mode='a'
excute 13:52:28.547988 line       599                 self.write_matrix(
excute 13:52:28.556961 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:28.563941 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:28.571920 line       602                     mode='a'
excute 13:52:28.734487 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:28.740470 line       594                 self.write_matrix(
excute 13:52:28.747452 line       595                     demand,
excute 13:52:28.753435 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:28.760416 line       597                     mode='a'
excute 13:52:28.801309 line       599                 self.write_matrix(
excute 13:52:28.807292 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:28.814272 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:28.821253 line       602                     mode='a'
excute 13:52:28.977382 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 1, 0, 0, 1, 0, 0, 0, 0]])
excute 13:52:28.984366 line       594                 self.write_matrix(
excute 13:52:28.992359 line       595                     demand,
excute 13:52:28.996331 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.000320 line       597                     mode='a'
excute 13:52:29.052182 line       599                 self.write_matrix(
excute 13:52:29.057169 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:29.064180 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.069138 line       602                     mode='a'
excute 13:52:29.113020 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 2, 0, 0]])
excute 13:52:29.123014 line       594                 self.write_matrix(
excute 13:52:29.130971 line       595                     demand,
excute 13:52:29.136956 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.142960 line       597                     mode='a'
excute 13:52:29.186824 line       599                 self.write_matrix(
excute 13:52:29.193804 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:29.197793 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.201783 line       602                     mode='a'
excute 13:52:29.245678 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 2],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:29.250651 line       594                 self.write_matrix(
excute 13:52:29.255638 line       595                     demand,
excute 13:52:29.262622 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.266610 line       597                     mode='a'
excute 13:52:29.306503 line       599                 self.write_matrix(
excute 13:52:29.312486 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:29.319499 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.323456 line       602                     mode='a'
excute 13:52:29.376316 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:29.383329 line       594                 self.write_matrix(
excute 13:52:29.390279 line       595                     demand,
excute 13:52:29.397290 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.401248 line       597                     mode='a'
excute 13:52:29.439157 line       599                 self.write_matrix(
excute 13:52:29.446129 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:29.450118 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.454107 line       602                     mode='a'
excute 13:52:29.500987 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:29.505003 line       594                 self.write_matrix(
excute 13:52:29.511954 line       595                     demand,
excute 13:52:29.515944 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.519931 line       597                     mode='a'
excute 13:52:29.558833 line       599                 self.write_matrix(
excute 13:52:29.564813 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:29.569798 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.577776 line       602                     mode='a'
excute 13:52:29.624662 line       593             for demand in demands:
excute 13:52:29.629641 line       594                 self.write_matrix(
excute 13:52:29.633627 line       595                     demand,
excute 13:52:29.640640 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.648588 line       597                     mode='a'
excute 13:52:29.682502 line       599                 self.write_matrix(
excute 13:52:29.686517 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:29.690511 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.696461 line       602                     mode='a'
excute 13:52:29.739346 line       593             for demand in demands:
excute 13:52:29.745331 line       594                 self.write_matrix(
excute 13:52:29.752314 line       595                     demand,
excute 13:52:29.756299 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.763282 line       597                     mode='a'
excute 13:52:29.806169 line       599                 self.write_matrix(
excute 13:52:29.812151 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:29.817139 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.822124 line       602                     mode='a'
excute 13:52:29.868002 line       593             for demand in demands:
excute 13:52:29.872022 line       594                 self.write_matrix(
excute 13:52:29.877976 line       595                     demand,
excute 13:52:29.882964 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:29.887948 line       597                     mode='a'
excute 13:52:29.986686 line       599                 self.write_matrix(
excute 13:52:29.993700 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:30.000677 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.004635 line       602                     mode='a'
excute 13:52:30.108361 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]])
excute 13:52:30.114344 line       594                 self.write_matrix(
excute 13:52:30.122321 line       595                     demand,
excute 13:52:30.129338 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.133291 line       597                     mode='a'
excute 13:52:30.172188 line       599                 self.write_matrix(
excute 13:52:30.179201 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:30.183164 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.190174 line       602                     mode='a'
excute 13:52:30.227044 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:30.238013 line       594                 self.write_matrix(
excute 13:52:30.246988 line       595                     demand,
excute 13:52:30.253971 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.259956 line       597                     mode='a'
excute 13:52:30.348717 line       599                 self.write_matrix(
excute 13:52:30.355729 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:30.362678 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.369661 line       602                     mode='a'
excute 13:52:30.410552 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:30.416571 line       594                 self.write_matrix(
excute 13:52:30.421557 line       595                     demand,
excute 13:52:30.426520 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.433503 line       597                     mode='a'
excute 13:52:30.492333 line       599                 self.write_matrix(
excute 13:52:30.503304 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:30.512314 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.516267 line       602                     mode='a'
excute 13:52:30.556161 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:30.564141 line       594                 self.write_matrix(
excute 13:52:30.568139 line       595                     demand,
excute 13:52:30.572118 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.580096 line       597                     mode='a'
excute 13:52:30.614055 line       599                 self.write_matrix(
excute 13:52:30.619025 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:30.623014 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.628967 line       602                     mode='a'
excute 13:52:30.672850 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:30.681827 line       594                 self.write_matrix(
excute 13:52:30.686814 line       595                     demand,
excute 13:52:30.694791 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.699808 line       597                     mode='a'
excute 13:52:30.736702 line       599                 self.write_matrix(
excute 13:52:30.745655 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:30.750643 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.755628 line       602                     mode='a'
excute 13:52:30.796522 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 2, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:30.801506 line       594                 self.write_matrix(
excute 13:52:30.807492 line       595                     demand,
excute 13:52:30.814471 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.821453 line       597                     mode='a'
excute 13:52:30.862344 line       599                 self.write_matrix(
excute 13:52:30.867361 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:30.872316 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.877306 line       602                     mode='a'
excute 13:52:30.922642 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:30.928625 line       594                 self.write_matrix(
excute 13:52:30.935608 line       595                     demand,
excute 13:52:30.943595 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:30.948573 line       597                     mode='a'
excute 13:52:31.054303 line       599                 self.write_matrix(
excute 13:52:31.059280 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:31.063266 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.067257 line       602                     mode='a'
excute 13:52:31.172215 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:31.179191 line       594                 self.write_matrix(
excute 13:52:31.184178 line       595                     demand,
excute 13:52:31.192155 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.199136 line       597                     mode='a'
excute 13:52:31.238038 line       599                 self.write_matrix(
excute 13:52:31.244019 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:31.248005 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.254988 line       602                     mode='a'
excute 13:52:31.300864 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:31.310837 line       594                 self.write_matrix(
excute 13:52:31.315825 line       595                     demand,
excute 13:52:31.319813 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.324801 line       597                     mode='a'
excute 13:52:31.387632 line       599                 self.write_matrix(
excute 13:52:31.396617 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:31.404588 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.413562 line       602                     mode='a'
excute 13:52:31.465426 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:31.471408 line       594                 self.write_matrix(
excute 13:52:31.480384 line       595                     demand,
excute 13:52:31.488367 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.498337 line       597                     mode='a'
excute 13:52:31.561168 line       599                 self.write_matrix(
excute 13:52:31.570143 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:31.578122 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.586102 line       602                     mode='a'
excute 13:52:31.651935 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:31.660901 line       594                 self.write_matrix(
excute 13:52:31.668880 line       595                     demand,
excute 13:52:31.675861 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.684837 line       597                     mode='a'
excute 13:52:31.761632 line       599                 self.write_matrix(
excute 13:52:31.769610 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:31.777589 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.785568 line       602                     mode='a'
excute 13:52:31.877332 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:31.885302 line       594                 self.write_matrix(
excute 13:52:31.891287 line       595                     demand,
excute 13:52:31.896273 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.900261 line       597                     mode='a'
excute 13:52:31.937163 line       599                 self.write_matrix(
excute 13:52:31.941152 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:31.946140 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:31.950128 line       602                     mode='a'
excute 13:52:31.990024 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:31.996008 line       594                 self.write_matrix(
excute 13:52:32.003987 line       595                     demand,
excute 13:52:32.010977 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.015952 line       597                     mode='a'
excute 13:52:32.052859 line       599                 self.write_matrix(
excute 13:52:32.058837 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:32.065821 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.069815 line       602                     mode='a'
excute 13:52:32.110703 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:32.118705 line       594                 self.write_matrix(
excute 13:52:32.123666 line       595                     demand,
excute 13:52:32.129651 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.135634 line       597                     mode='a'
excute 13:52:32.173532 line       599                 self.write_matrix(
excute 13:52:32.180540 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:32.187493 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.194476 line       602                     mode='a'
excute 13:52:32.234370 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:32.240384 line       594                 self.write_matrix(
excute 13:52:32.246338 line       595                     demand,
excute 13:52:32.250326 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.254315 line       597                     mode='a'
excute 13:52:32.291217 line       599                 self.write_matrix(
excute 13:52:32.298200 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:32.305179 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.311162 line       602                     mode='a'
excute 13:52:32.430844 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:32.434833 line       594                 self.write_matrix(
excute 13:52:32.443810 line       595                     demand,
excute 13:52:32.449793 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.454781 line       597                     mode='a'
excute 13:52:32.492690 line       599                 self.write_matrix(
excute 13:52:32.497665 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:32.503650 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.511628 line       602                     mode='a'
excute 13:52:32.551533 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:32.556506 line       594                 self.write_matrix(
excute 13:52:32.562492 line       595                     demand,
excute 13:52:32.566480 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.570469 line       597                     mode='a'
excute 13:52:32.606375 line       599                 self.write_matrix(
excute 13:52:32.614354 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:32.618342 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.622330 line       602                     mode='a'
excute 13:52:32.667222 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 1, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:32.672200 line       594                 self.write_matrix(
excute 13:52:32.680191 line       595                     demand,
excute 13:52:32.687158 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.694140 line       597                     mode='a'
excute 13:52:32.734034 line       599                 self.write_matrix(
excute 13:52:32.739052 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:32.745004 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.750987 line       602                     mode='a'
excute 13:52:32.793875 line       593             for demand in demands:
excute Modified var:.. demand = array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
excute 13:52:32.801851 line       594                 self.write_matrix(
excute 13:52:32.806840 line       595                     demand,
excute 13:52:32.812825 line       596                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.816810 line       597                     mode='a'
excute 13:52:32.853831 line       599                 self.write_matrix(
excute 13:52:32.862799 line       600                     ['-' * (self.NUMBER_OF_STATIONS * 2)],
excute 13:52:32.866786 line       601                     self.sub_dir_path / 'demands.csv',
excute 13:52:32.871773 line       602                     mode='a'
excute 13:52:32.927632 line       593             for demand in demands:
excute 13:52:32.932610 return     593             for demand in demands:
excute Return value:.. None
